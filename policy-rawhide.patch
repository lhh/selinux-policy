diff --git a/Makefile b/Makefile
index 39a3d40..f69289d 100644
--- a/Makefile
+++ b/Makefile
@@ -61,6 +61,7 @@ SEMODULE ?= $(tc_usrsbindir)/semodule
 SEMOD_PKG ?= $(tc_usrbindir)/semodule_package
 SEMOD_LNK ?= $(tc_usrbindir)/semodule_link
 SEMOD_EXP ?= $(tc_usrbindir)/semodule_expand
+SEPOLGEN ?= $(tc_usrbindir)/sepolgen-ifgen
 LOADPOLICY ?= $(tc_usrsbindir)/load_policy
 SETFILES ?= $(tc_sbindir)/setfiles
 XMLLINT ?= $(BINDIR)/xmllint
@@ -249,7 +250,7 @@ seusers := $(appconf)/seusers
 appdir := $(contextpath)
 user_default_contexts := $(wildcard config/appconfig-$(TYPE)/*_default_contexts)
 user_default_contexts_names := $(addprefix $(contextpath)/users/,$(subst _default_contexts,,$(notdir $(user_default_contexts))))
-appfiles := $(addprefix $(appdir)/,default_contexts default_type initrc_context failsafe_context userhelper_context removable_context dbus_contexts sepgsql_contexts x_contexts customizable_types securetty_types virtual_domain_context virtual_image_context) $(contextpath)/files/media $(fcsubspath) $(user_default_contexts_names)
+appfiles := $(addprefix $(appdir)/,default_contexts default_type initrc_context failsafe_context userhelper_context removable_context dbus_contexts sepgsql_contexts x_contexts customizable_types securetty_types virtual_image_context virtual_domain_context lxc_contexts) $(contextpath)/files/media $(user_default_contexts_names)
 net_contexts := $(builddir)net_contexts
 
 all_layers := $(shell find $(wildcard $(moddir)/*) -maxdepth 0 -type d)
@@ -608,15 +609,17 @@ resetlabels:
 # Clean everything
 #
 bare: clean
-	rm -f $(polxml)
-	rm -f $(layerxml)
-	rm -f $(modxml)
-	rm -f $(tunxml)
-	rm -f $(boolxml)
-	rm -f $(mod_conf)
-	rm -f $(booleans)
-	rm -fR $(htmldir)
-	rm -f $(tags)
+	echo "hehe kde jsem asi tak"
+	pwd
+	#rm -f $(polxml)
+	#rm -f $(layerxml)
+	#rm -f $(modxml)
+	#rm -f $(tunxml)
+	#rm -f $(boolxml)
+	#rm -f $(mod_conf)
+	#rm -f $(booleans)
+	#rm -fR $(htmldir)
+	#rm -f $(tags)
 # don't remove these files if we're given a local root
 ifndef LOCAL_ROOT
 	rm -f $(fcsort)
diff --git a/Rules.modular b/Rules.modular
index 313d837..ef3c532 100644
--- a/Rules.modular
+++ b/Rules.modular
@@ -201,6 +201,7 @@ validate: $(base_pkg) $(mod_pkgs)
 	@echo "Validating policy linking."
 	$(verbose) $(SEMOD_LNK) -o $(tmpdir)/test.lnk $^
 	$(verbose) $(SEMOD_EXP) $(tmpdir)/test.lnk $(tmpdir)/policy.bin
+	$(verbose) $(SEPOLGEN) -p $(tmpdir)/policy.bin -i $(poldir) -o $(tmpdir)/output
 	@echo "Success."
 
 ########################################
diff --git a/man/man8/NetworkManager_selinux.8 b/man/man8/NetworkManager_selinux.8
new file mode 100644
index 0000000..74ab63c
--- /dev/null
+++ b/man/man8/NetworkManager_selinux.8
@@ -0,0 +1,169 @@
+.TH  "NetworkManager_selinux"  "8"  "NetworkManager" "dwalsh@redhat.com" "NetworkManager SELinux Policy documentation"
+.SH "NAME"
+NetworkManager_selinux \- Security Enhanced Linux Policy for the NetworkManager processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B NetworkManager
+(Manager for dynamically switching between networks)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux NetworkManager policy is very flexible allowing users to setup their NetworkManager processes in as secure a method as possible.
+.PP 
+The following file types are defined for NetworkManager:
+
+
+.EX
+.PP
+.B NetworkManager_etc_rw_t 
+.EE
+
+- Set files with the NetworkManager_etc_rw_t type, if you want to treat the files as NetworkManager etc read/write content.
+
+.br
+.TP 5
+Paths: 
+/etc/NetworkManager/system-connections(/.*)?, /etc/NetworkManager/NetworkManager\.conf
+
+.EX
+.PP
+.B NetworkManager_etc_t 
+.EE
+
+- Set files with the NetworkManager_etc_t type, if you want to store NetworkManager files in the /etc directories.
+
+
+.EX
+.PP
+.B NetworkManager_exec_t 
+.EE
+
+- Set files with the NetworkManager_exec_t type, if you want to transition an executable to the NetworkManager_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/s?bin/wpa_supplicant, /usr/sbin/wpa_supplicant, /sbin/wpa_supplicant, /usr/sbin/nm-system-settings, /usr/sbin/wicd, /usr/s?bin/NetworkManager, /usr/sbin/NetworkManagerDispatcher
+
+.EX
+.PP
+.B NetworkManager_initrc_exec_t 
+.EE
+
+- Set files with the NetworkManager_initrc_exec_t type, if you want to transition an executable to the NetworkManager_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/wicd, /etc/NetworkManager/dispatcher\.d(/.*)?, /usr/libexec/nm-dispatcher.action
+
+.EX
+.PP
+.B NetworkManager_log_t 
+.EE
+
+- Set files with the NetworkManager_log_t type, if you want to treat the data as NetworkManager log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/wpa_supplicant.*, /var/log/wicd.*
+
+.EX
+.PP
+.B NetworkManager_tmp_t 
+.EE
+
+- Set files with the NetworkManager_tmp_t type, if you want to store NetworkManager temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B NetworkManager_unit_file_t 
+.EE
+
+- Set files with the NetworkManager_unit_file_t type, if you want to treat the files as NetworkManager unit content.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/systemd/system/NetworkManager\.service, /lib/systemd/system/NetworkManager\.service
+
+.EX
+.PP
+.B NetworkManager_var_lib_t 
+.EE
+
+- Set files with the NetworkManager_var_lib_t type, if you want to store the NetworkManager files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/etc/wicd/wired-settings.conf, /var/lib/wicd(/.*)?, /etc/wicd/manager-settings.conf, /etc/wicd/wireless-settings.conf, /var/lib/NetworkManager(/.*)?
+
+.EX
+.PP
+.B NetworkManager_var_run_t 
+.EE
+
+- Set files with the NetworkManager_var_run_t type, if you want to store the NetworkManager files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/nm-dhclient.*, /var/run/wpa_supplicant(/.*)?, /var/run/NetworkManager\.pid, /var/run/wpa_supplicant-global, /var/run/nm-dns-dnsmasq\.conf, /var/run/NetworkManager(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux NetworkManager policy is very flexible allowing users to setup their NetworkManager processes in as secure a method as possible.
+.PP 
+The following process types are defined for NetworkManager:
+
+.EX
+.B NetworkManager_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), NetworkManager(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/abrt_selinux.8 b/man/man8/abrt_selinux.8
new file mode 100644
index 0000000..1acfb1b
--- /dev/null
+++ b/man/man8/abrt_selinux.8
@@ -0,0 +1,250 @@
+.TH  "abrt_selinux"  "8"  "abrt" "dwalsh@redhat.com" "abrt SELinux Policy documentation"
+.SH "NAME"
+abrt_selinux \- Security Enhanced Linux Policy for the abrt processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B abrt
+(ABRT - automated bug-reporting tool)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  abrt policy is extremely flexible and has several booleans that allow you to manipulate the policy and run abrt with the tightest access possible.
+
+
+.PP
+If you want to allow ABRT to run in abrt_handle_event_t domain to handle ABRT event script, you must turn on the abrt_handle_event boolean.
+
+.EX
+.B setsebool -P abrt_handle_event 1
+.EE
+
+.SH SHARING FILES
+If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
+.TP
+Allow abrt servers to read the /var/abrt directory by adding the public_content_t file type to the directory and by restoring the file type.
+.PP
+.B
+semanage fcontext -a -t public_content_t "/var/abrt(/.*)?"
+.br
+.B restorecon -F -R -v /var/abrt
+.pp
+.TP
+Allow abrt servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_abrt_anon_write boolean to be set.
+.PP
+.B
+semanage fcontext -a -t public_content_rw_t "/var/abrt/incoming(/.*)?"
+.br
+.B restorecon -F -R -v /var/abrt/incoming
+
+
+.PP
+If you want to allow ABRT to modify public files used for public file transfer services., you must turn on the abrt_anon_write boolean.
+
+.EX
+.B setsebool -P abrt_anon_write 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux abrt policy is very flexible allowing users to setup their abrt processes in as secure a method as possible.
+.PP 
+The following file types are defined for abrt:
+
+
+.EX
+.PP
+.B abrt_dump_oops_exec_t 
+.EE
+
+- Set files with the abrt_dump_oops_exec_t type, if you want to transition an executable to the abrt_dump_oops_t domain.
+
+
+.EX
+.PP
+.B abrt_etc_t 
+.EE
+
+- Set files with the abrt_etc_t type, if you want to store abrt files in the /etc directories.
+
+
+.EX
+.PP
+.B abrt_exec_t 
+.EE
+
+- Set files with the abrt_exec_t type, if you want to transition an executable to the abrt_t domain.
+
+
+.EX
+.PP
+.B abrt_handle_event_exec_t 
+.EE
+
+- Set files with the abrt_handle_event_exec_t type, if you want to transition an executable to the abrt_handle_event_t domain.
+
+
+.EX
+.PP
+.B abrt_helper_exec_t 
+.EE
+
+- Set files with the abrt_helper_exec_t type, if you want to transition an executable to the abrt_helper_t domain.
+
+
+.EX
+.PP
+.B abrt_initrc_exec_t 
+.EE
+
+- Set files with the abrt_initrc_exec_t type, if you want to transition an executable to the abrt_initrc_t domain.
+
+
+.EX
+.PP
+.B abrt_retrace_cache_t 
+.EE
+
+- Set files with the abrt_retrace_cache_t type, if you want to store the files under the /var/cache directory.
+
+.br
+.TP 5
+Paths: 
+/var/cache/retrace-server(/.*)?, /var/cache/abrt-retrace(/.*)?
+
+.EX
+.PP
+.B abrt_retrace_coredump_exec_t 
+.EE
+
+- Set files with the abrt_retrace_coredump_exec_t type, if you want to transition an executable to the abrt_retrace_coredump_t domain.
+
+
+.EX
+.PP
+.B abrt_retrace_spool_t 
+.EE
+
+- Set files with the abrt_retrace_spool_t type, if you want to store the abrt retrace files under the /var/spool directory.
+
+.br
+.TP 5
+Paths: 
+/var/spool/retrace-server(/.*)?, /var/spool/abrt-retrace(/.*)?
+
+.EX
+.PP
+.B abrt_retrace_worker_exec_t 
+.EE
+
+- Set files with the abrt_retrace_worker_exec_t type, if you want to transition an executable to the abrt_retrace_worker_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/retrace-server-worker, /usr/bin/abrt-retrace-worker
+
+.EX
+.PP
+.B abrt_tmp_t 
+.EE
+
+- Set files with the abrt_tmp_t type, if you want to store abrt temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B abrt_unit_file_t 
+.EE
+
+- Set files with the abrt_unit_file_t type, if you want to treat the files as abrt unit content.
+
+
+.EX
+.PP
+.B abrt_var_cache_t 
+.EE
+
+- Set files with the abrt_var_cache_t type, if you want to store the files under the /var/cache directory.
+
+.br
+.TP 5
+Paths: 
+/var/cache/abrt(/.*)?, /var/spool/abrt(/.*)?, /var/cache/abrt-di(/.*)?
+
+.EX
+.PP
+.B abrt_var_log_t 
+.EE
+
+- Set files with the abrt_var_log_t type, if you want to treat the data as abrt var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B abrt_var_run_t 
+.EE
+
+- Set files with the abrt_var_run_t type, if you want to store the abrt files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/abrtd?\.socket, /var/run/abrtd?\.lock, /var/run/abrt(/.*)?, /var/run/abrt\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux abrt policy is very flexible allowing users to setup their abrt processes in as secure a method as possible.
+.PP 
+The following process types are defined for abrt:
+
+.EX
+.B abrt_handle_event_t, abrt_helper_t, abrt_retrace_coredump_t, abrt_t, abrt_retrace_worker_t, abrt_dump_oops_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), abrt(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/accountsd_selinux.8 b/man/man8/accountsd_selinux.8
new file mode 100644
index 0000000..4fe880f
--- /dev/null
+++ b/man/man8/accountsd_selinux.8
@@ -0,0 +1,93 @@
+.TH  "accountsd_selinux"  "8"  "accountsd" "dwalsh@redhat.com" "accountsd SELinux Policy documentation"
+.SH "NAME"
+accountsd_selinux \- Security Enhanced Linux Policy for the accountsd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B accountsd
+(AccountsService and daemon for manipulating user account information via D-Bus)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux accountsd policy is very flexible allowing users to setup their accountsd processes in as secure a method as possible.
+.PP 
+The following file types are defined for accountsd:
+
+
+.EX
+.PP
+.B accountsd_exec_t 
+.EE
+
+- Set files with the accountsd_exec_t type, if you want to transition an executable to the accountsd_t domain.
+
+
+.EX
+.PP
+.B accountsd_unit_file_t 
+.EE
+
+- Set files with the accountsd_unit_file_t type, if you want to treat the files as accountsd unit content.
+
+
+.EX
+.PP
+.B accountsd_var_lib_t 
+.EE
+
+- Set files with the accountsd_var_lib_t type, if you want to store the accountsd files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux accountsd policy is very flexible allowing users to setup their accountsd processes in as secure a method as possible.
+.PP 
+The following process types are defined for accountsd:
+
+.EX
+.B accountsd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), accountsd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/acct_selinux.8 b/man/man8/acct_selinux.8
new file mode 100644
index 0000000..323cee4
--- /dev/null
+++ b/man/man8/acct_selinux.8
@@ -0,0 +1,93 @@
+.TH  "acct_selinux"  "8"  "acct" "dwalsh@redhat.com" "acct SELinux Policy documentation"
+.SH "NAME"
+acct_selinux \- Security Enhanced Linux Policy for the acct processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B acct
+(Berkeley process accounting)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux acct policy is very flexible allowing users to setup their acct processes in as secure a method as possible.
+.PP 
+The following file types are defined for acct:
+
+
+.EX
+.PP
+.B acct_data_t 
+.EE
+
+- Set files with the acct_data_t type, if you want to treat the files as acct content.
+
+.br
+.TP 5
+Paths: 
+/var/log/account(/.*)?, /var/account(/.*)?
+
+.EX
+.PP
+.B acct_exec_t 
+.EE
+
+- Set files with the acct_exec_t type, if you want to transition an executable to the acct_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/accton, /sbin/accton, /etc/cron\.(daily|monthly)/acct
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux acct policy is very flexible allowing users to setup their acct processes in as secure a method as possible.
+.PP 
+The following process types are defined for acct:
+
+.EX
+.B acct_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), acct(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/afs_selinux.8 b/man/man8/afs_selinux.8
new file mode 100644
index 0000000..7832fa4
--- /dev/null
+++ b/man/man8/afs_selinux.8
@@ -0,0 +1,294 @@
+.TH  "afs_selinux"  "8"  "afs" "dwalsh@redhat.com" "afs SELinux Policy documentation"
+.SH "NAME"
+afs_selinux \- Security Enhanced Linux Policy for the afs processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B afs
+(Andrew Filesystem server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux afs policy is very flexible allowing users to setup their afs processes in as secure a method as possible.
+.PP 
+The following file types are defined for afs:
+
+
+.EX
+.PP
+.B afs_bosserver_exec_t 
+.EE
+
+- Set files with the afs_bosserver_exec_t type, if you want to transition an executable to the afs_bosserver_t domain.
+
+
+.EX
+.PP
+.B afs_cache_t 
+.EE
+
+- Set files with the afs_cache_t type, if you want to store the files under the /var/cache directory.
+
+.br
+.TP 5
+Paths: 
+/var/cache/afs(/.*)?, /usr/vice/cache(/.*)?
+
+.EX
+.PP
+.B afs_config_t 
+.EE
+
+- Set files with the afs_config_t type, if you want to treat the files as afs configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/usr/afs/local(/.*)?, /usr/afs/etc(/.*)?
+
+.EX
+.PP
+.B afs_dbdir_t 
+.EE
+
+- Set files with the afs_dbdir_t type, if you want to treat the files as afs dbdir data.
+
+
+.EX
+.PP
+.B afs_exec_t 
+.EE
+
+- Set files with the afs_exec_t type, if you want to transition an executable to the afs_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/vice/etc/afsd, /usr/sbin/afsd
+
+.EX
+.PP
+.B afs_files_t 
+.EE
+
+- Set files with the afs_files_t type, if you want to treat the files as afs content.
+
+.br
+.TP 5
+Paths: 
+/vicepc, /vicepb, /vicepa
+
+.EX
+.PP
+.B afs_fsserver_exec_t 
+.EE
+
+- Set files with the afs_fsserver_exec_t type, if you want to transition an executable to the afs_fsserver_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/afs/bin/volserver, /usr/afs/bin/fileserver, /usr/afs/bin/salvager
+
+.EX
+.PP
+.B afs_initrc_exec_t 
+.EE
+
+- Set files with the afs_initrc_exec_t type, if you want to transition an executable to the afs_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/afs, /etc/rc\.d/init\.d/openafs-client
+
+.EX
+.PP
+.B afs_ka_db_t 
+.EE
+
+- Set files with the afs_ka_db_t type, if you want to treat the files as afs ka database content.
+
+
+.EX
+.PP
+.B afs_kaserver_exec_t 
+.EE
+
+- Set files with the afs_kaserver_exec_t type, if you want to transition an executable to the afs_kaserver_t domain.
+
+
+.EX
+.PP
+.B afs_logfile_t 
+.EE
+
+- Set files with the afs_logfile_t type, if you want to treat the files as afs logfile data.
+
+
+.EX
+.PP
+.B afs_pt_db_t 
+.EE
+
+- Set files with the afs_pt_db_t type, if you want to treat the files as afs pt database content.
+
+
+.EX
+.PP
+.B afs_ptserver_exec_t 
+.EE
+
+- Set files with the afs_ptserver_exec_t type, if you want to transition an executable to the afs_ptserver_t domain.
+
+
+.EX
+.PP
+.B afs_vl_db_t 
+.EE
+
+- Set files with the afs_vl_db_t type, if you want to treat the files as afs vl database content.
+
+
+.EX
+.PP
+.B afs_vlserver_exec_t 
+.EE
+
+- Set files with the afs_vlserver_exec_t type, if you want to transition an executable to the afs_vlserver_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux afs policy is very flexible allowing users to setup their afs processes in as secure a method as possible.
+.PP 
+The following port types are defined for afs:
+
+.EX
+.TP 5
+.B afs_bos_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B afs_client_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B afs_fs_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B afs_ka_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B afs_pt_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B afs_vl_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux afs policy is very flexible allowing users to setup their afs processes in as secure a method as possible.
+.PP 
+The following process types are defined for afs:
+
+.EX
+.B afs_kaserver_t, afs_t, afs_fsserver_t, afs_bosserver_t, afs_vlserver_t, afs_ptserver_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), afs(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/aiccu_selinux.8 b/man/man8/aiccu_selinux.8
new file mode 100644
index 0000000..efc06eb
--- /dev/null
+++ b/man/man8/aiccu_selinux.8
@@ -0,0 +1,101 @@
+.TH  "aiccu_selinux"  "8"  "aiccu" "dwalsh@redhat.com" "aiccu SELinux Policy documentation"
+.SH "NAME"
+aiccu_selinux \- Security Enhanced Linux Policy for the aiccu processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B aiccu
+(Automatic IPv6 Connectivity Client Utility)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux aiccu policy is very flexible allowing users to setup their aiccu processes in as secure a method as possible.
+.PP 
+The following file types are defined for aiccu:
+
+
+.EX
+.PP
+.B aiccu_etc_t 
+.EE
+
+- Set files with the aiccu_etc_t type, if you want to store aiccu files in the /etc directories.
+
+
+.EX
+.PP
+.B aiccu_exec_t 
+.EE
+
+- Set files with the aiccu_exec_t type, if you want to transition an executable to the aiccu_t domain.
+
+
+.EX
+.PP
+.B aiccu_initrc_exec_t 
+.EE
+
+- Set files with the aiccu_initrc_exec_t type, if you want to transition an executable to the aiccu_initrc_t domain.
+
+
+.EX
+.PP
+.B aiccu_var_run_t 
+.EE
+
+- Set files with the aiccu_var_run_t type, if you want to store the aiccu files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux aiccu policy is very flexible allowing users to setup their aiccu processes in as secure a method as possible.
+.PP 
+The following process types are defined for aiccu:
+
+.EX
+.B aiccu_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), aiccu(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/aide_selinux.8 b/man/man8/aide_selinux.8
new file mode 100644
index 0000000..0863697
--- /dev/null
+++ b/man/man8/aide_selinux.8
@@ -0,0 +1,97 @@
+.TH  "aide_selinux"  "8"  "aide" "dwalsh@redhat.com" "aide SELinux Policy documentation"
+.SH "NAME"
+aide_selinux \- Security Enhanced Linux Policy for the aide processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B aide
+(Aide filesystem integrity checker)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux aide policy is very flexible allowing users to setup their aide processes in as secure a method as possible.
+.PP 
+The following file types are defined for aide:
+
+
+.EX
+.PP
+.B aide_db_t 
+.EE
+
+- Set files with the aide_db_t type, if you want to treat the files as aide database content.
+
+
+.EX
+.PP
+.B aide_exec_t 
+.EE
+
+- Set files with the aide_exec_t type, if you want to transition an executable to the aide_t domain.
+
+
+.EX
+.PP
+.B aide_log_t 
+.EE
+
+- Set files with the aide_log_t type, if you want to treat the data as aide log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/aide\.log, /var/log/aide(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux aide policy is very flexible allowing users to setup their aide processes in as secure a method as possible.
+.PP 
+The following process types are defined for aide:
+
+.EX
+.B aide_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), aide(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/aisexec_selinux.8 b/man/man8/aisexec_selinux.8
new file mode 100644
index 0000000..8d4a539
--- /dev/null
+++ b/man/man8/aisexec_selinux.8
@@ -0,0 +1,125 @@
+.TH  "aisexec_selinux"  "8"  "aisexec" "dwalsh@redhat.com" "aisexec SELinux Policy documentation"
+.SH "NAME"
+aisexec_selinux \- Security Enhanced Linux Policy for the aisexec processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B aisexec
+(Aisexec Cluster Engine)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux aisexec policy is very flexible allowing users to setup their aisexec processes in as secure a method as possible.
+.PP 
+The following file types are defined for aisexec:
+
+
+.EX
+.PP
+.B aisexec_exec_t 
+.EE
+
+- Set files with the aisexec_exec_t type, if you want to transition an executable to the aisexec_t domain.
+
+
+.EX
+.PP
+.B aisexec_initrc_exec_t 
+.EE
+
+- Set files with the aisexec_initrc_exec_t type, if you want to transition an executable to the aisexec_initrc_t domain.
+
+
+.EX
+.PP
+.B aisexec_tmp_t 
+.EE
+
+- Set files with the aisexec_tmp_t type, if you want to store aisexec temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B aisexec_tmpfs_t 
+.EE
+
+- Set files with the aisexec_tmpfs_t type, if you want to store aisexec files on a tmpfs file system.
+
+
+.EX
+.PP
+.B aisexec_var_lib_t 
+.EE
+
+- Set files with the aisexec_var_lib_t type, if you want to store the aisexec files under the /var/lib directory.
+
+
+.EX
+.PP
+.B aisexec_var_log_t 
+.EE
+
+- Set files with the aisexec_var_log_t type, if you want to treat the data as aisexec var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B aisexec_var_run_t 
+.EE
+
+- Set files with the aisexec_var_run_t type, if you want to store the aisexec files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux aisexec policy is very flexible allowing users to setup their aisexec processes in as secure a method as possible.
+.PP 
+The following process types are defined for aisexec:
+
+.EX
+.B aisexec_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), aisexec(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/ajaxterm_selinux.8 b/man/man8/ajaxterm_selinux.8
new file mode 100644
index 0000000..3ff7f95
--- /dev/null
+++ b/man/man8/ajaxterm_selinux.8
@@ -0,0 +1,119 @@
+.TH  "ajaxterm_selinux"  "8"  "ajaxterm" "dwalsh@redhat.com" "ajaxterm SELinux Policy documentation"
+.SH "NAME"
+ajaxterm_selinux \- Security Enhanced Linux Policy for the ajaxterm processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B ajaxterm
+(policy for ajaxterm)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ajaxterm policy is very flexible allowing users to setup their ajaxterm processes in as secure a method as possible.
+.PP 
+The following file types are defined for ajaxterm:
+
+
+.EX
+.PP
+.B ajaxterm_exec_t 
+.EE
+
+- Set files with the ajaxterm_exec_t type, if you want to transition an executable to the ajaxterm_t domain.
+
+
+.EX
+.PP
+.B ajaxterm_initrc_exec_t 
+.EE
+
+- Set files with the ajaxterm_initrc_exec_t type, if you want to transition an executable to the ajaxterm_initrc_t domain.
+
+
+.EX
+.PP
+.B ajaxterm_var_run_t 
+.EE
+
+- Set files with the ajaxterm_var_run_t type, if you want to store the ajaxterm files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux ajaxterm policy is very flexible allowing users to setup their ajaxterm processes in as secure a method as possible.
+.PP 
+The following port types are defined for ajaxterm:
+
+.EX
+.TP 5
+.B ajaxterm_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ajaxterm policy is very flexible allowing users to setup their ajaxterm processes in as secure a method as possible.
+.PP 
+The following process types are defined for ajaxterm:
+
+.EX
+.B ajaxterm_ssh_t, ajaxterm_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ajaxterm(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/alsa_selinux.8 b/man/man8/alsa_selinux.8
new file mode 100644
index 0000000..9a8a29d
--- /dev/null
+++ b/man/man8/alsa_selinux.8
@@ -0,0 +1,125 @@
+.TH  "alsa_selinux"  "8"  "alsa" "dwalsh@redhat.com" "alsa SELinux Policy documentation"
+.SH "NAME"
+alsa_selinux \- Security Enhanced Linux Policy for the alsa processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B alsa
+(Ainit ALSA configuration tool)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux alsa policy is very flexible allowing users to setup their alsa processes in as secure a method as possible.
+.PP 
+The following file types are defined for alsa:
+
+
+.EX
+.PP
+.B alsa_etc_rw_t 
+.EE
+
+- Set files with the alsa_etc_rw_t type, if you want to treat the files as alsa etc read/write content.
+
+.br
+.TP 5
+Paths: 
+/etc/alsa/pcm(/.*)?, /etc/alsa/asound\.state, /usr/share/alsa/pcm(/.*)?, /etc/asound\.state, /etc/asound(/.*)?, /usr/share/alsa/alsa\.conf
+
+.EX
+.PP
+.B alsa_exec_t 
+.EE
+
+- Set files with the alsa_exec_t type, if you want to transition an executable to the alsa_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/salsa, /sbin/alsactl, /usr/bin/ainit, /usr/bin/alsaunmute, /sbin/salsa, /usr/sbin/alsactl, /bin/alsaunmute
+
+.EX
+.PP
+.B alsa_home_t 
+.EE
+
+- Set files with the alsa_home_t type, if you want to store alsa files in the users home directory.
+
+
+.EX
+.PP
+.B alsa_tmp_t 
+.EE
+
+- Set files with the alsa_tmp_t type, if you want to store alsa temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B alsa_unit_file_t 
+.EE
+
+- Set files with the alsa_unit_file_t type, if you want to treat the files as alsa unit content.
+
+
+.EX
+.PP
+.B alsa_var_lib_t 
+.EE
+
+- Set files with the alsa_var_lib_t type, if you want to store the alsa files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux alsa policy is very flexible allowing users to setup their alsa processes in as secure a method as possible.
+.PP 
+The following process types are defined for alsa:
+
+.EX
+.B alsa_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), alsa(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/amanda_selinux.8 b/man/man8/amanda_selinux.8
new file mode 100644
index 0000000..1ada188
--- /dev/null
+++ b/man/man8/amanda_selinux.8
@@ -0,0 +1,219 @@
+.TH  "amanda_selinux"  "8"  "amanda" "dwalsh@redhat.com" "amanda SELinux Policy documentation"
+.SH "NAME"
+amanda_selinux \- Security Enhanced Linux Policy for the amanda processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B amanda
+(Advanced Maryland Automatic Network Disk Archiver)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux amanda policy is very flexible allowing users to setup their amanda processes in as secure a method as possible.
+.PP 
+The following file types are defined for amanda:
+
+
+.EX
+.PP
+.B amanda_amandates_t 
+.EE
+
+- Set files with the amanda_amandates_t type, if you want to treat the files as amanda amandates data.
+
+
+.EX
+.PP
+.B amanda_config_t 
+.EE
+
+- Set files with the amanda_config_t type, if you want to treat the files as amanda configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/etc/amanda(/.*)?, /var/lib/amanda/\.amandahosts
+
+.EX
+.PP
+.B amanda_data_t 
+.EE
+
+- Set files with the amanda_data_t type, if you want to treat the files as amanda content.
+
+.br
+.TP 5
+Paths: 
+/var/lib/amanda/[^/]+(/.*)?, /etc/amanda/.*/tapelist(/.*)?, /etc/amanda/.*/index(/.*)?
+
+.EX
+.PP
+.B amanda_dumpdates_t 
+.EE
+
+- Set files with the amanda_dumpdates_t type, if you want to treat the files as amanda dumpdates data.
+
+
+.EX
+.PP
+.B amanda_exec_t 
+.EE
+
+- Set files with the amanda_exec_t type, if you want to transition an executable to the amanda_t domain.
+
+
+.EX
+.PP
+.B amanda_gnutarlists_t 
+.EE
+
+- Set files with the amanda_gnutarlists_t type, if you want to treat the files as amanda gnutarlists data.
+
+
+.EX
+.PP
+.B amanda_inetd_exec_t 
+.EE
+
+- Set files with the amanda_inetd_exec_t type, if you want to transition an executable to the amanda_inetd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/amanda/amindexd, /usr/lib/amanda/amidxtaped, /usr/lib/amanda/amandad
+
+.EX
+.PP
+.B amanda_log_t 
+.EE
+
+- Set files with the amanda_log_t type, if you want to treat the data as amanda log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/amanda(/.*)?, /var/lib/amanda/[^/]*/log(/.*)?
+
+.EX
+.PP
+.B amanda_recover_dir_t 
+.EE
+
+- Set files with the amanda_recover_dir_t type, if you want to treat the files as amanda recover dir data.
+
+
+.EX
+.PP
+.B amanda_recover_exec_t 
+.EE
+
+- Set files with the amanda_recover_exec_t type, if you want to transition an executable to the amanda_recover_t domain.
+
+
+.EX
+.PP
+.B amanda_tmp_t 
+.EE
+
+- Set files with the amanda_tmp_t type, if you want to store amanda temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B amanda_usr_lib_t 
+.EE
+
+- Set files with the amanda_usr_lib_t type, if you want to treat the files as amanda usr lib data.
+
+
+.EX
+.PP
+.B amanda_var_lib_t 
+.EE
+
+- Set files with the amanda_var_lib_t type, if you want to store the amanda files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/amanda, /var/lib/amanda/[^/]+/index(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux amanda policy is very flexible allowing users to setup their amanda processes in as secure a method as possible.
+.PP 
+The following port types are defined for amanda:
+
+.EX
+.TP 5
+.B amanda_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux amanda policy is very flexible allowing users to setup their amanda processes in as secure a method as possible.
+.PP 
+The following process types are defined for amanda:
+
+.EX
+.B amanda_t, amanda_recover_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), amanda(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/amavis_selinux.8 b/man/man8/amavis_selinux.8
new file mode 100644
index 0000000..52d2f0d
--- /dev/null
+++ b/man/man8/amavis_selinux.8
@@ -0,0 +1,193 @@
+.TH  "amavis_selinux"  "8"  "amavis" "dwalsh@redhat.com" "amavis SELinux Policy documentation"
+.SH "NAME"
+amavis_selinux \- Security Enhanced Linux Policy for the amavis processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B amavis
+(
+Daemon that interfaces mail transfer agents and content
+checkers, such as virus scanners.
+)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux amavis policy is very flexible allowing users to setup their amavis processes in as secure a method as possible.
+.PP 
+The following file types are defined for amavis:
+
+
+.EX
+.PP
+.B amavis_etc_t 
+.EE
+
+- Set files with the amavis_etc_t type, if you want to store amavis files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/amavis\.conf, /etc/amavisd(/.*)?
+
+.EX
+.PP
+.B amavis_exec_t 
+.EE
+
+- Set files with the amavis_exec_t type, if you want to transition an executable to the amavis_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/amavisd.*, /usr/lib/AntiVir/antivir
+
+.EX
+.PP
+.B amavis_initrc_exec_t 
+.EE
+
+- Set files with the amavis_initrc_exec_t type, if you want to transition an executable to the amavis_initrc_t domain.
+
+
+.EX
+.PP
+.B amavis_quarantine_t 
+.EE
+
+- Set files with the amavis_quarantine_t type, if you want to treat the files as amavis quarantine data.
+
+
+.EX
+.PP
+.B amavis_spool_t 
+.EE
+
+- Set files with the amavis_spool_t type, if you want to store the amavis files under the /var/spool directory.
+
+
+.EX
+.PP
+.B amavis_tmp_t 
+.EE
+
+- Set files with the amavis_tmp_t type, if you want to store amavis temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B amavis_var_lib_t 
+.EE
+
+- Set files with the amavis_var_lib_t type, if you want to store the amavis files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/amavis(/.*)?, /var/amavis(/.*)?
+
+.EX
+.PP
+.B amavis_var_log_t 
+.EE
+
+- Set files with the amavis_var_log_t type, if you want to treat the data as amavis var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B amavis_var_run_t 
+.EE
+
+- Set files with the amavis_var_run_t type, if you want to store the amavis files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux amavis policy is very flexible allowing users to setup their amavis processes in as secure a method as possible.
+.PP 
+The following port types are defined for amavis:
+
+.EX
+.TP 5
+.B amavisd_recv_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B amavisd_send_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux amavis policy is very flexible allowing users to setup their amavis processes in as secure a method as possible.
+.PP 
+The following process types are defined for amavis:
+
+.EX
+.B amavis_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), amavis(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/amtu_selinux.8 b/man/man8/amtu_selinux.8
new file mode 100644
index 0000000..511f260
--- /dev/null
+++ b/man/man8/amtu_selinux.8
@@ -0,0 +1,77 @@
+.TH  "amtu_selinux"  "8"  "amtu" "dwalsh@redhat.com" "amtu SELinux Policy documentation"
+.SH "NAME"
+amtu_selinux \- Security Enhanced Linux Policy for the amtu processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B amtu
+(Abstract Machine Test Utility)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux amtu policy is very flexible allowing users to setup their amtu processes in as secure a method as possible.
+.PP 
+The following file types are defined for amtu:
+
+
+.EX
+.PP
+.B amtu_exec_t 
+.EE
+
+- Set files with the amtu_exec_t type, if you want to transition an executable to the amtu_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux amtu policy is very flexible allowing users to setup their amtu processes in as secure a method as possible.
+.PP 
+The following process types are defined for amtu:
+
+.EX
+.B amtu_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), amtu(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/apcupsd_selinux.8 b/man/man8/apcupsd_selinux.8
new file mode 100644
index 0000000..dab6c6a
--- /dev/null
+++ b/man/man8/apcupsd_selinux.8
@@ -0,0 +1,159 @@
+.TH  "apcupsd_selinux"  "8"  "apcupsd" "dwalsh@redhat.com" "apcupsd SELinux Policy documentation"
+.SH "NAME"
+apcupsd_selinux \- Security Enhanced Linux Policy for the apcupsd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B apcupsd
+(APC UPS monitoring daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux apcupsd policy is very flexible allowing users to setup their apcupsd processes in as secure a method as possible.
+.PP 
+The following file types are defined for apcupsd:
+
+
+.EX
+.PP
+.B apcupsd_exec_t 
+.EE
+
+- Set files with the apcupsd_exec_t type, if you want to transition an executable to the apcupsd_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/apcupsd, /usr/sbin/apcupsd
+
+.EX
+.PP
+.B apcupsd_initrc_exec_t 
+.EE
+
+- Set files with the apcupsd_initrc_exec_t type, if you want to transition an executable to the apcupsd_initrc_t domain.
+
+
+.EX
+.PP
+.B apcupsd_lock_t 
+.EE
+
+- Set files with the apcupsd_lock_t type, if you want to treat the files as apcupsd lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B apcupsd_log_t 
+.EE
+
+- Set files with the apcupsd_log_t type, if you want to treat the data as apcupsd log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/apcupsd\.status.*, /var/log/apcupsd\.events.*
+
+.EX
+.PP
+.B apcupsd_tmp_t 
+.EE
+
+- Set files with the apcupsd_tmp_t type, if you want to store apcupsd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B apcupsd_unit_file_t 
+.EE
+
+- Set files with the apcupsd_unit_file_t type, if you want to treat the files as apcupsd unit content.
+
+
+.EX
+.PP
+.B apcupsd_var_run_t 
+.EE
+
+- Set files with the apcupsd_var_run_t type, if you want to store the apcupsd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux apcupsd policy is very flexible allowing users to setup their apcupsd processes in as secure a method as possible.
+.PP 
+The following port types are defined for apcupsd:
+
+.EX
+.TP 5
+.B apcupsd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux apcupsd policy is very flexible allowing users to setup their apcupsd processes in as secure a method as possible.
+.PP 
+The following process types are defined for apcupsd:
+
+.EX
+.B apcupsd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), apcupsd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/apm_selinux.8 b/man/man8/apm_selinux.8
new file mode 100644
index 0000000..1c6243c
--- /dev/null
+++ b/man/man8/apm_selinux.8
@@ -0,0 +1,133 @@
+.TH  "apm_selinux"  "8"  "apm" "dwalsh@redhat.com" "apm SELinux Policy documentation"
+.SH "NAME"
+apm_selinux \- Security Enhanced Linux Policy for the apm processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B apm
+(Advanced power management daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux apm policy is very flexible allowing users to setup their apm processes in as secure a method as possible.
+.PP 
+The following file types are defined for apm:
+
+
+.EX
+.PP
+.B apm_exec_t 
+.EE
+
+- Set files with the apm_exec_t type, if you want to transition an executable to the apm_t domain.
+
+
+.EX
+.PP
+.B apmd_exec_t 
+.EE
+
+- Set files with the apmd_exec_t type, if you want to transition an executable to the apmd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/powersaved, /usr/sbin/acpid, /usr/sbin/apmd
+
+.EX
+.PP
+.B apmd_lock_t 
+.EE
+
+- Set files with the apmd_lock_t type, if you want to treat the files as apmd lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B apmd_log_t 
+.EE
+
+- Set files with the apmd_log_t type, if you want to treat the data as apmd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B apmd_tmp_t 
+.EE
+
+- Set files with the apmd_tmp_t type, if you want to store apmd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B apmd_unit_file_t 
+.EE
+
+- Set files with the apmd_unit_file_t type, if you want to treat the files as apmd unit content.
+
+
+.EX
+.PP
+.B apmd_var_run_t 
+.EE
+
+- Set files with the apmd_var_run_t type, if you want to store the apmd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/\.?acpid\.socket, /var/run/apmd\.pid, /var/run/powersaved\.pid, /var/run/powersave_socket
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux apm policy is very flexible allowing users to setup their apm processes in as secure a method as possible.
+.PP 
+The following process types are defined for apm:
+
+.EX
+.B apm_t, apmd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), apm(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/apmd_selinux.8 b/man/man8/apmd_selinux.8
new file mode 100644
index 0000000..6449d94
--- /dev/null
+++ b/man/man8/apmd_selinux.8
@@ -0,0 +1,127 @@
+.TH  "apmd_selinux"  "8"  "apmd" "dwalsh@redhat.com" "apmd SELinux Policy documentation"
+.SH "NAME"
+apmd_selinux \- Security Enhanced Linux Policy for the apmd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux apmd policy is very flexible allowing users to setup their apmd processes in as secure a method as possible.
+.PP 
+The following file types are defined for apmd:
+
+
+.EX
+.PP
+.B apm_exec_t 
+.EE
+
+- Set files with the apm_exec_t type, if you want to transition an executable to the apm_t domain.
+
+
+.EX
+.PP
+.B apmd_exec_t 
+.EE
+
+- Set files with the apmd_exec_t type, if you want to transition an executable to the apmd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/powersaved, /usr/sbin/acpid, /usr/sbin/apmd
+
+.EX
+.PP
+.B apmd_lock_t 
+.EE
+
+- Set files with the apmd_lock_t type, if you want to treat the files as apmd lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B apmd_log_t 
+.EE
+
+- Set files with the apmd_log_t type, if you want to treat the data as apmd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B apmd_tmp_t 
+.EE
+
+- Set files with the apmd_tmp_t type, if you want to store apmd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B apmd_unit_file_t 
+.EE
+
+- Set files with the apmd_unit_file_t type, if you want to treat the files as apmd unit content.
+
+
+.EX
+.PP
+.B apmd_var_run_t 
+.EE
+
+- Set files with the apmd_var_run_t type, if you want to store the apmd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/\.?acpid\.socket, /var/run/apmd\.pid, /var/run/powersaved\.pid, /var/run/powersave_socket
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux apmd policy is very flexible allowing users to setup their apmd processes in as secure a method as possible.
+.PP 
+The following process types are defined for apmd:
+
+.EX
+.B apm_t, apmd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), apmd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/arpwatch_selinux.8 b/man/man8/arpwatch_selinux.8
new file mode 100644
index 0000000..8052609
--- /dev/null
+++ b/man/man8/arpwatch_selinux.8
@@ -0,0 +1,121 @@
+.TH  "arpwatch_selinux"  "8"  "arpwatch" "dwalsh@redhat.com" "arpwatch SELinux Policy documentation"
+.SH "NAME"
+arpwatch_selinux \- Security Enhanced Linux Policy for the arpwatch processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B arpwatch
+(Ethernet activity monitor)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux arpwatch policy is very flexible allowing users to setup their arpwatch processes in as secure a method as possible.
+.PP 
+The following file types are defined for arpwatch:
+
+
+.EX
+.PP
+.B arpwatch_data_t 
+.EE
+
+- Set files with the arpwatch_data_t type, if you want to treat the files as arpwatch content.
+
+.br
+.TP 5
+Paths: 
+/var/arpwatch(/.*)?, /var/lib/arpwatch(/.*)?
+
+.EX
+.PP
+.B arpwatch_exec_t 
+.EE
+
+- Set files with the arpwatch_exec_t type, if you want to transition an executable to the arpwatch_t domain.
+
+
+.EX
+.PP
+.B arpwatch_initrc_exec_t 
+.EE
+
+- Set files with the arpwatch_initrc_exec_t type, if you want to transition an executable to the arpwatch_initrc_t domain.
+
+
+.EX
+.PP
+.B arpwatch_tmp_t 
+.EE
+
+- Set files with the arpwatch_tmp_t type, if you want to store arpwatch temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B arpwatch_unit_file_t 
+.EE
+
+- Set files with the arpwatch_unit_file_t type, if you want to treat the files as arpwatch unit content.
+
+
+.EX
+.PP
+.B arpwatch_var_run_t 
+.EE
+
+- Set files with the arpwatch_var_run_t type, if you want to store the arpwatch files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux arpwatch policy is very flexible allowing users to setup their arpwatch processes in as secure a method as possible.
+.PP 
+The following process types are defined for arpwatch:
+
+.EX
+.B arpwatch_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), arpwatch(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/asterisk_selinux.8 b/man/man8/asterisk_selinux.8
new file mode 100644
index 0000000..c00565c
--- /dev/null
+++ b/man/man8/asterisk_selinux.8
@@ -0,0 +1,167 @@
+.TH  "asterisk_selinux"  "8"  "asterisk" "dwalsh@redhat.com" "asterisk SELinux Policy documentation"
+.SH "NAME"
+asterisk_selinux \- Security Enhanced Linux Policy for the asterisk processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B asterisk
+(Asterisk IP telephony server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux asterisk policy is very flexible allowing users to setup their asterisk processes in as secure a method as possible.
+.PP 
+The following file types are defined for asterisk:
+
+
+.EX
+.PP
+.B asterisk_etc_t 
+.EE
+
+- Set files with the asterisk_etc_t type, if you want to store asterisk files in the /etc directories.
+
+
+.EX
+.PP
+.B asterisk_exec_t 
+.EE
+
+- Set files with the asterisk_exec_t type, if you want to transition an executable to the asterisk_t domain.
+
+
+.EX
+.PP
+.B asterisk_initrc_exec_t 
+.EE
+
+- Set files with the asterisk_initrc_exec_t type, if you want to transition an executable to the asterisk_initrc_t domain.
+
+
+.EX
+.PP
+.B asterisk_log_t 
+.EE
+
+- Set files with the asterisk_log_t type, if you want to treat the data as asterisk log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B asterisk_spool_t 
+.EE
+
+- Set files with the asterisk_spool_t type, if you want to store the asterisk files under the /var/spool directory.
+
+
+.EX
+.PP
+.B asterisk_tmp_t 
+.EE
+
+- Set files with the asterisk_tmp_t type, if you want to store asterisk temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B asterisk_tmpfs_t 
+.EE
+
+- Set files with the asterisk_tmpfs_t type, if you want to store asterisk files on a tmpfs file system.
+
+
+.EX
+.PP
+.B asterisk_var_lib_t 
+.EE
+
+- Set files with the asterisk_var_lib_t type, if you want to store the asterisk files under the /var/lib directory.
+
+
+.EX
+.PP
+.B asterisk_var_run_t 
+.EE
+
+- Set files with the asterisk_var_run_t type, if you want to store the asterisk files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux asterisk policy is very flexible allowing users to setup their asterisk processes in as secure a method as possible.
+.PP 
+The following port types are defined for asterisk:
+
+.EX
+.TP 5
+.B asterisk_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux asterisk policy is very flexible allowing users to setup their asterisk processes in as secure a method as possible.
+.PP 
+The following process types are defined for asterisk:
+
+.EX
+.B asterisk_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), asterisk(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/audisp_selinux.8 b/man/man8/audisp_selinux.8
new file mode 100644
index 0000000..dc30264
--- /dev/null
+++ b/man/man8/audisp_selinux.8
@@ -0,0 +1,95 @@
+.TH  "audisp_selinux"  "8"  "audisp" "dwalsh@redhat.com" "audisp SELinux Policy documentation"
+.SH "NAME"
+audisp_selinux \- Security Enhanced Linux Policy for the audisp processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux audisp policy is very flexible allowing users to setup their audisp processes in as secure a method as possible.
+.PP 
+The following file types are defined for audisp:
+
+
+.EX
+.PP
+.B audisp_exec_t 
+.EE
+
+- Set files with the audisp_exec_t type, if you want to transition an executable to the audisp_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/audispd, /usr/sbin/audispd
+
+.EX
+.PP
+.B audisp_remote_exec_t 
+.EE
+
+- Set files with the audisp_remote_exec_t type, if you want to transition an executable to the audisp_remote_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/audisp-remote, /sbin/audisp-remote
+
+.EX
+.PP
+.B audisp_var_run_t 
+.EE
+
+- Set files with the audisp_var_run_t type, if you want to store the audisp files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux audisp policy is very flexible allowing users to setup their audisp processes in as secure a method as possible.
+.PP 
+The following process types are defined for audisp:
+
+.EX
+.B audisp_remote_t, audisp_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), audisp(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/auditadm_selinux.8 b/man/man8/auditadm_selinux.8
new file mode 100644
index 0000000..cba947e
--- /dev/null
+++ b/man/man8/auditadm_selinux.8
@@ -0,0 +1,65 @@
+.TH  "auditadm_selinux"  "8"  "auditadm" "mgrepl@redhat.com" "auditadm SELinux Policy documentation"
+.SH "NAME"
+auditadm_r \- \fBAudit administrator role\fP - Security Enhanced Linux Policy 
+
+.SH DESCRIPTION
+
+SELinux supports Roles Based Access Control, some Linux roles are login roles, while other roles need to be transition to. 
+
+Note: The examples in the man page will user the staff_u user.
+
+Non login roles are usually used for administrative tasks.
+
+Roles usually have default types assigned to them. 
+
+The default type for the auditadm_r role is auditadm_t.
+
+You can use the 
+.B newrole 
+program to transition directly to this role.
+
+.B newrole -r auditadm_r -t auditadm_t
+
+.B sudo 
+can also be setup to transition to this role using the visudo command.
+
+USERNAME ALL=(ALL) ROLE=auditadm_r TYPE=auditadm_t COMMAND
+.br
+sudo will run COMMAND as staff_u:auditadm_r:auditadm_t:LEVEL
+
+If you want to use a non login role, you need to make sure the SELinux user you are using can reach this role.
+
+You can see all of the assigned SELinux roles using the following
+
+.B semanage user -l
+
+If you wanted to add auditadm_r to the staff_u user, you would execute:
+
+.B $ semanage user -m -R 'staff_r auditadm_r' staff_u 
+
+
+
+SELinux policy also controls which roles can transition to a different role.  
+You can list these rules using the following command.
+
+.B sesearch --role_allow
+
+SELinux policy allows the sysadm_r, secadm_r, staff_r roles can transition to the auditadm_r role.
+
+
+.SH "COMMANDS"
+
+.B semanage login
+can also be used to manipulate the Linux User to SELinux User mappings
+
+.B semanage user
+can also be used to manipulate SELinux user definitions.
+
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genuserman.py.
+
+.SH "SEE ALSO"
+selinux(8), semanage(8).
diff --git a/man/man8/auditctl_selinux.8 b/man/man8/auditctl_selinux.8
new file mode 100644
index 0000000..96a49e6
--- /dev/null
+++ b/man/man8/auditctl_selinux.8
@@ -0,0 +1,75 @@
+.TH  "auditctl_selinux"  "8"  "auditctl" "dwalsh@redhat.com" "auditctl SELinux Policy documentation"
+.SH "NAME"
+auditctl_selinux \- Security Enhanced Linux Policy for the auditctl processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux auditctl policy is very flexible allowing users to setup their auditctl processes in as secure a method as possible.
+.PP 
+The following file types are defined for auditctl:
+
+
+.EX
+.PP
+.B auditctl_exec_t 
+.EE
+
+- Set files with the auditctl_exec_t type, if you want to transition an executable to the auditctl_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/auditctl, /usr/sbin/auditctl
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux auditctl policy is very flexible allowing users to setup their auditctl processes in as secure a method as possible.
+.PP 
+The following process types are defined for auditctl:
+
+.EX
+.B auditctl_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), auditctl(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/auditd_selinux.8 b/man/man8/auditd_selinux.8
new file mode 100644
index 0000000..50c15c2
--- /dev/null
+++ b/man/man8/auditd_selinux.8
@@ -0,0 +1,157 @@
+.TH  "auditd_selinux"  "8"  "auditd" "dwalsh@redhat.com" "auditd SELinux Policy documentation"
+.SH "NAME"
+auditd_selinux \- Security Enhanced Linux Policy for the auditd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux auditd policy is very flexible allowing users to setup their auditd processes in as secure a method as possible.
+.PP 
+The following file types are defined for auditd:
+
+
+.EX
+.PP
+.B audit_spool_t 
+.EE
+
+- Set files with the audit_spool_t type, if you want to store the audit files under the /var/spool directory.
+
+
+.EX
+.PP
+.B auditd_etc_t 
+.EE
+
+- Set files with the auditd_etc_t type, if you want to store auditd files in the /etc directories.
+
+
+.EX
+.PP
+.B auditd_exec_t 
+.EE
+
+- Set files with the auditd_exec_t type, if you want to transition an executable to the auditd_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/auditd, /usr/sbin/auditd
+
+.EX
+.PP
+.B auditd_initrc_exec_t 
+.EE
+
+- Set files with the auditd_initrc_exec_t type, if you want to transition an executable to the auditd_initrc_t domain.
+
+
+.EX
+.PP
+.B auditd_log_t 
+.EE
+
+- Set files with the auditd_log_t type, if you want to treat the data as auditd log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/audit(/.*)?, /var/log/audit\.log
+
+.EX
+.PP
+.B auditd_unit_file_t 
+.EE
+
+- Set files with the auditd_unit_file_t type, if you want to treat the files as auditd unit content.
+
+
+.EX
+.PP
+.B auditd_var_run_t 
+.EE
+
+- Set files with the auditd_var_run_t type, if you want to store the auditd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/audit_events, /var/run/auditd_sock, /var/run/auditd\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux auditd policy is very flexible allowing users to setup their auditd processes in as secure a method as possible.
+.PP 
+The following port types are defined for auditd:
+
+.EX
+.TP 5
+.B audit_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux auditd policy is very flexible allowing users to setup their auditd processes in as secure a method as possible.
+.PP 
+The following process types are defined for auditd:
+
+.EX
+.B auditadm_su_t, auditadm_seunshare_t, auditadm_dbusd_t, auditadm_t, auditadm_sudo_t, auditadm_wine_t, auditadm_screen_t, auditadm_gkeyringd_t, auditd_t, auditctl_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), auditd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/automount_selinux.8 b/man/man8/automount_selinux.8
new file mode 100644
index 0000000..ff75942
--- /dev/null
+++ b/man/man8/automount_selinux.8
@@ -0,0 +1,129 @@
+.TH  "automount_selinux"  "8"  "automount" "dwalsh@redhat.com" "automount SELinux Policy documentation"
+.SH "NAME"
+automount_selinux \- Security Enhanced Linux Policy for the automount processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B automount
+(Filesystem automounter service)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux automount policy is very flexible allowing users to setup their automount processes in as secure a method as possible.
+.PP 
+The following file types are defined for automount:
+
+
+.EX
+.PP
+.B automount_exec_t 
+.EE
+
+- Set files with the automount_exec_t type, if you want to transition an executable to the automount_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/automount, /etc/apm/event\.d/autofs
+
+.EX
+.PP
+.B automount_initrc_exec_t 
+.EE
+
+- Set files with the automount_initrc_exec_t type, if you want to transition an executable to the automount_initrc_t domain.
+
+
+.EX
+.PP
+.B automount_keytab_t 
+.EE
+
+- Set files with the automount_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B automount_lock_t 
+.EE
+
+- Set files with the automount_lock_t type, if you want to treat the files as automount lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B automount_tmp_t 
+.EE
+
+- Set files with the automount_tmp_t type, if you want to store automount temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B automount_unit_file_t 
+.EE
+
+- Set files with the automount_unit_file_t type, if you want to treat the files as automount unit content.
+
+
+.EX
+.PP
+.B automount_var_run_t 
+.EE
+
+- Set files with the automount_var_run_t type, if you want to store the automount files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux automount policy is very flexible allowing users to setup their automount processes in as secure a method as possible.
+.PP 
+The following process types are defined for automount:
+
+.EX
+.B automount_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), automount(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/avahi_selinux.8 b/man/man8/avahi_selinux.8
new file mode 100644
index 0000000..f489dad
--- /dev/null
+++ b/man/man8/avahi_selinux.8
@@ -0,0 +1,128 @@
+.TH  "avahi_selinux"  "8"  "avahi" "dwalsh@redhat.com" "avahi SELinux Policy documentation"
+.SH "NAME"
+avahi_selinux \- Security Enhanced Linux Policy for the avahi processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B avahi
+(mDNS/DNS-SD daemon implementing Apple ZeroConf architecture)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  avahi policy is extremely flexible and has several booleans that allow you to manipulate the policy and run avahi with the tightest access possible.
+
+
+.PP
+If you want to allow Apache to communicate with avahi service via dbu, you must turn on the httpd_dbus_avahi boolean.
+
+.EX
+.B setsebool -P httpd_dbus_avahi 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux avahi policy is very flexible allowing users to setup their avahi processes in as secure a method as possible.
+.PP 
+The following file types are defined for avahi:
+
+
+.EX
+.PP
+.B avahi_exec_t 
+.EE
+
+- Set files with the avahi_exec_t type, if you want to transition an executable to the avahi_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/avahi-dnsconfd, /usr/sbin/avahi-autoipd, /usr/sbin/avahi-daemon
+
+.EX
+.PP
+.B avahi_initrc_exec_t 
+.EE
+
+- Set files with the avahi_initrc_exec_t type, if you want to transition an executable to the avahi_initrc_t domain.
+
+
+.EX
+.PP
+.B avahi_unit_file_t 
+.EE
+
+- Set files with the avahi_unit_file_t type, if you want to treat the files as avahi unit content.
+
+
+.EX
+.PP
+.B avahi_var_lib_t 
+.EE
+
+- Set files with the avahi_var_lib_t type, if you want to store the avahi files under the /var/lib directory.
+
+
+.EX
+.PP
+.B avahi_var_run_t 
+.EE
+
+- Set files with the avahi_var_run_t type, if you want to store the avahi files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux avahi policy is very flexible allowing users to setup their avahi processes in as secure a method as possible.
+.PP 
+The following process types are defined for avahi:
+
+.EX
+.B avahi_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), avahi(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/awstats_selinux.8 b/man/man8/awstats_selinux.8
new file mode 100644
index 0000000..b76d620
--- /dev/null
+++ b/man/man8/awstats_selinux.8
@@ -0,0 +1,96 @@
+.TH  "awstats_selinux"  "8"  "awstats" "dwalsh@redhat.com" "awstats SELinux Policy documentation"
+.SH "NAME"
+awstats_selinux \- Security Enhanced Linux Policy for the awstats processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B awstats
+(
+AWStats is a free powerful and featureful tool that generates advanced
+web, streaming, ftp or mail server statistics, graphically.
+)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux awstats policy is very flexible allowing users to setup their awstats processes in as secure a method as possible.
+.PP 
+The following file types are defined for awstats:
+
+
+.EX
+.PP
+.B awstats_exec_t 
+.EE
+
+- Set files with the awstats_exec_t type, if you want to transition an executable to the awstats_t domain.
+
+
+.EX
+.PP
+.B awstats_tmp_t 
+.EE
+
+- Set files with the awstats_tmp_t type, if you want to store awstats temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B awstats_var_lib_t 
+.EE
+
+- Set files with the awstats_var_lib_t type, if you want to store the awstats files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux awstats policy is very flexible allowing users to setup their awstats processes in as secure a method as possible.
+.PP 
+The following process types are defined for awstats:
+
+.EX
+.B awstats_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), awstats(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/bcfg2_selinux.8 b/man/man8/bcfg2_selinux.8
new file mode 100644
index 0000000..fcb6393
--- /dev/null
+++ b/man/man8/bcfg2_selinux.8
@@ -0,0 +1,101 @@
+.TH  "bcfg2_selinux"  "8"  "bcfg2" "dwalsh@redhat.com" "bcfg2 SELinux Policy documentation"
+.SH "NAME"
+bcfg2_selinux \- Security Enhanced Linux Policy for the bcfg2 processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B bcfg2
+(policy for bcfg2)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux bcfg2 policy is very flexible allowing users to setup their bcfg2 processes in as secure a method as possible.
+.PP 
+The following file types are defined for bcfg2:
+
+
+.EX
+.PP
+.B bcfg2_exec_t 
+.EE
+
+- Set files with the bcfg2_exec_t type, if you want to transition an executable to the bcfg2_t domain.
+
+
+.EX
+.PP
+.B bcfg2_initrc_exec_t 
+.EE
+
+- Set files with the bcfg2_initrc_exec_t type, if you want to transition an executable to the bcfg2_initrc_t domain.
+
+
+.EX
+.PP
+.B bcfg2_unit_file_t 
+.EE
+
+- Set files with the bcfg2_unit_file_t type, if you want to treat the files as bcfg2 unit content.
+
+
+.EX
+.PP
+.B bcfg2_var_lib_t 
+.EE
+
+- Set files with the bcfg2_var_lib_t type, if you want to store the bcfg2 files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux bcfg2 policy is very flexible allowing users to setup their bcfg2 processes in as secure a method as possible.
+.PP 
+The following process types are defined for bcfg2:
+
+.EX
+.B bcfg2_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), bcfg2(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/bitlbee_selinux.8 b/man/man8/bitlbee_selinux.8
new file mode 100644
index 0000000..7c1b8b9
--- /dev/null
+++ b/man/man8/bitlbee_selinux.8
@@ -0,0 +1,133 @@
+.TH  "bitlbee_selinux"  "8"  "bitlbee" "dwalsh@redhat.com" "bitlbee SELinux Policy documentation"
+.SH "NAME"
+bitlbee_selinux \- Security Enhanced Linux Policy for the bitlbee processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B bitlbee
+(Bitlbee service)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux bitlbee policy is very flexible allowing users to setup their bitlbee processes in as secure a method as possible.
+.PP 
+The following file types are defined for bitlbee:
+
+
+.EX
+.PP
+.B bitlbee_conf_t 
+.EE
+
+- Set files with the bitlbee_conf_t type, if you want to treat the files as bitlbee configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B bitlbee_exec_t 
+.EE
+
+- Set files with the bitlbee_exec_t type, if you want to transition an executable to the bitlbee_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/bitlbee, /usr/bin/bip
+
+.EX
+.PP
+.B bitlbee_initrc_exec_t 
+.EE
+
+- Set files with the bitlbee_initrc_exec_t type, if you want to transition an executable to the bitlbee_initrc_t domain.
+
+
+.EX
+.PP
+.B bitlbee_log_t 
+.EE
+
+- Set files with the bitlbee_log_t type, if you want to treat the data as bitlbee log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B bitlbee_tmp_t 
+.EE
+
+- Set files with the bitlbee_tmp_t type, if you want to store bitlbee temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B bitlbee_var_run_t 
+.EE
+
+- Set files with the bitlbee_var_run_t type, if you want to store the bitlbee files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/bitlbee\.pid, /var/run/bip(/.*)?, /var/run/bitlbee\.sock
+
+.EX
+.PP
+.B bitlbee_var_t 
+.EE
+
+- Set files with the bitlbee_var_t type, if you want to store the bit files under the /var directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux bitlbee policy is very flexible allowing users to setup their bitlbee processes in as secure a method as possible.
+.PP 
+The following process types are defined for bitlbee:
+
+.EX
+.B bitlbee_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), bitlbee(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/blktap_selinux.8 b/man/man8/blktap_selinux.8
new file mode 100644
index 0000000..4a344b5
--- /dev/null
+++ b/man/man8/blktap_selinux.8
@@ -0,0 +1,98 @@
+.TH  "blktap_selinux"  "8"  "blktap" "dwalsh@redhat.com" "blktap SELinux Policy documentation"
+.SH "NAME"
+blktap_selinux \- Security Enhanced Linux Policy for the blktap processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  blktap policy is extremely flexible and has several booleans that allow you to manipulate the policy and run blktap with the tightest access possible.
+
+
+.PP
+If you want to allow xend to run blktapctrl/tapdisk. Not required if using dedicated logical volumes for disk images, you must turn on the xend_run_blktap boolean.
+
+.EX
+.B setsebool -P xend_run_blktap 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux blktap policy is very flexible allowing users to setup their blktap processes in as secure a method as possible.
+.PP 
+The following file types are defined for blktap:
+
+
+.EX
+.PP
+.B blktap_exec_t 
+.EE
+
+- Set files with the blktap_exec_t type, if you want to transition an executable to the blktap_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/blktapctrl, /usr/sbin/tapdisk
+
+.EX
+.PP
+.B blktap_var_run_t 
+.EE
+
+- Set files with the blktap_var_run_t type, if you want to store the blktap files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux blktap policy is very flexible allowing users to setup their blktap processes in as secure a method as possible.
+.PP 
+The following process types are defined for blktap:
+
+.EX
+.B blktap_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), blktap(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/blueman_selinux.8 b/man/man8/blueman_selinux.8
new file mode 100644
index 0000000..834703f
--- /dev/null
+++ b/man/man8/blueman_selinux.8
@@ -0,0 +1,77 @@
+.TH  "blueman_selinux"  "8"  "blueman" "dwalsh@redhat.com" "blueman SELinux Policy documentation"
+.SH "NAME"
+blueman_selinux \- Security Enhanced Linux Policy for the blueman processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B blueman
+(policy for blueman)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux blueman policy is very flexible allowing users to setup their blueman processes in as secure a method as possible.
+.PP 
+The following file types are defined for blueman:
+
+
+.EX
+.PP
+.B blueman_exec_t 
+.EE
+
+- Set files with the blueman_exec_t type, if you want to transition an executable to the blueman_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux blueman policy is very flexible allowing users to setup their blueman processes in as secure a method as possible.
+.PP 
+The following process types are defined for blueman:
+
+.EX
+.B blueman_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), blueman(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/bluetooth_selinux.8 b/man/man8/bluetooth_selinux.8
new file mode 100644
index 0000000..d344b7b
--- /dev/null
+++ b/man/man8/bluetooth_selinux.8
@@ -0,0 +1,184 @@
+.TH  "bluetooth_selinux"  "8"  "bluetooth" "dwalsh@redhat.com" "bluetooth SELinux Policy documentation"
+.SH "NAME"
+bluetooth_selinux \- Security Enhanced Linux Policy for the bluetooth processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B bluetooth
+(Bluetooth tools and system services)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  bluetooth policy is extremely flexible and has several booleans that allow you to manipulate the policy and run bluetooth with the tightest access possible.
+
+
+.PP
+If you want to allow xguest users to use blue tooth device, you must turn on the xguest_use_bluetooth boolean.
+
+.EX
+.B setsebool -P xguest_use_bluetooth 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux bluetooth policy is very flexible allowing users to setup their bluetooth processes in as secure a method as possible.
+.PP 
+The following file types are defined for bluetooth:
+
+
+.EX
+.PP
+.B bluetooth_conf_rw_t 
+.EE
+
+- Set files with the bluetooth_conf_rw_t type, if you want to treat the files as bluetooth conf read/write content.
+
+
+.EX
+.PP
+.B bluetooth_conf_t 
+.EE
+
+- Set files with the bluetooth_conf_t type, if you want to treat the files as bluetooth configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B bluetooth_exec_t 
+.EE
+
+- Set files with the bluetooth_exec_t type, if you want to transition an executable to the bluetooth_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/hcid, /usr/bin/rfcomm, /usr/sbin/sdpd, /usr/bin/hidd, /usr/sbin/bluetoothd, /usr/sbin/hid2hci, /usr/bin/dund, /usr/sbin/hciattach
+
+.EX
+.PP
+.B bluetooth_helper_exec_t 
+.EE
+
+- Set files with the bluetooth_helper_exec_t type, if you want to transition an executable to the bluetooth_helper_t domain.
+
+
+.EX
+.PP
+.B bluetooth_helper_tmp_t 
+.EE
+
+- Set files with the bluetooth_helper_tmp_t type, if you want to store bluetooth helper temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B bluetooth_helper_tmpfs_t 
+.EE
+
+- Set files with the bluetooth_helper_tmpfs_t type, if you want to store bluetooth helper files on a tmpfs file system.
+
+
+.EX
+.PP
+.B bluetooth_initrc_exec_t 
+.EE
+
+- Set files with the bluetooth_initrc_exec_t type, if you want to transition an executable to the bluetooth_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/dund, /etc/rc\.d/init\.d/bluetooth, /etc/rc\.d/init\.d/pand
+
+.EX
+.PP
+.B bluetooth_lock_t 
+.EE
+
+- Set files with the bluetooth_lock_t type, if you want to treat the files as bluetooth lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B bluetooth_unit_file_t 
+.EE
+
+- Set files with the bluetooth_unit_file_t type, if you want to treat the files as bluetooth unit content.
+
+
+.EX
+.PP
+.B bluetooth_var_lib_t 
+.EE
+
+- Set files with the bluetooth_var_lib_t type, if you want to store the bluetooth files under the /var/lib directory.
+
+
+.EX
+.PP
+.B bluetooth_var_run_t 
+.EE
+
+- Set files with the bluetooth_var_run_t type, if you want to store the bluetooth files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/bluetoothd_address, /var/run/sdp
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux bluetooth policy is very flexible allowing users to setup their bluetooth processes in as secure a method as possible.
+.PP 
+The following process types are defined for bluetooth:
+
+.EX
+.B bluetooth_helper_t, bluetooth_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), bluetooth(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/boinc_selinux.8 b/man/man8/boinc_selinux.8
new file mode 100644
index 0000000..ae842c8
--- /dev/null
+++ b/man/man8/boinc_selinux.8
@@ -0,0 +1,166 @@
+.TH  "boinc_selinux"  "8"  "boinc" "dwalsh@redhat.com" "boinc SELinux Policy documentation"
+.SH "NAME"
+boinc_selinux \- Security Enhanced Linux Policy for the boinc processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B boinc
+(policy for boinc)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux boinc policy is very flexible allowing users to setup their boinc processes in as secure a method as possible.
+.PP 
+The following file types are defined for boinc:
+
+
+.EX
+.PP
+.B boinc_exec_t 
+.EE
+
+- Set files with the boinc_exec_t type, if you want to transition an executable to the boinc_t domain.
+
+
+.EX
+.PP
+.B boinc_initrc_exec_t 
+.EE
+
+- Set files with the boinc_initrc_exec_t type, if you want to transition an executable to the boinc_initrc_t domain.
+
+
+.EX
+.PP
+.B boinc_project_tmp_t 
+.EE
+
+- Set files with the boinc_project_tmp_t type, if you want to store boinc project temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B boinc_project_var_lib_t 
+.EE
+
+- Set files with the boinc_project_var_lib_t type, if you want to store the boinc project files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/boinc/projects(/.*)?, /var/lib/boinc/slots(/.*)?
+
+.EX
+.PP
+.B boinc_tmp_t 
+.EE
+
+- Set files with the boinc_tmp_t type, if you want to store boinc temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B boinc_tmpfs_t 
+.EE
+
+- Set files with the boinc_tmpfs_t type, if you want to store boinc files on a tmpfs file system.
+
+
+.EX
+.PP
+.B boinc_var_lib_t 
+.EE
+
+- Set files with the boinc_var_lib_t type, if you want to store the boinc files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux boinc policy is very flexible allowing users to setup their boinc processes in as secure a method as possible.
+.PP 
+The following port types are defined for boinc:
+
+.EX
+.TP 5
+.B boinc_client_ctrl_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B boinc_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux boinc policy is very flexible allowing users to setup their boinc processes in as secure a method as possible.
+.PP 
+The following process types are defined for boinc:
+
+.EX
+.B boinc_t, boinc_project_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), boinc(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/bootloader_selinux.8 b/man/man8/bootloader_selinux.8
new file mode 100644
index 0000000..892a587
--- /dev/null
+++ b/man/man8/bootloader_selinux.8
@@ -0,0 +1,116 @@
+.TH  "bootloader_selinux"  "8"  "bootloader" "dwalsh@redhat.com" "bootloader SELinux Policy documentation"
+.SH "NAME"
+bootloader_selinux \- Security Enhanced Linux Policy for the bootloader processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B bootloader
+(Policy for the kernel modules, kernel image, and bootloader)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  bootloader policy is extremely flexible and has several booleans that allow you to manipulate the policy and run bootloader with the tightest access possible.
+
+
+.PP
+If you want to allow the graphical login program to execute bootloade, you must turn on the xdm_exec_bootloader boolean.
+
+.EX
+.B setsebool -P xdm_exec_bootloader 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux bootloader policy is very flexible allowing users to setup their bootloader processes in as secure a method as possible.
+.PP 
+The following file types are defined for bootloader:
+
+
+.EX
+.PP
+.B bootloader_etc_t 
+.EE
+
+- Set files with the bootloader_etc_t type, if you want to store bootloader files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/yaboot\.conf.*, /etc/default/grub, /etc/lilo\.conf.*
+
+.EX
+.PP
+.B bootloader_exec_t 
+.EE
+
+- Set files with the bootloader_exec_t type, if you want to transition an executable to the bootloader_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/ybin.*, /usr/sbin/grub.*, /sbin/lilo.*, /sbin/ybin.*, /usr/sbin/lilo.*, /sbin/grub.*
+
+.EX
+.PP
+.B bootloader_tmp_t 
+.EE
+
+- Set files with the bootloader_tmp_t type, if you want to store bootloader temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux bootloader policy is very flexible allowing users to setup their bootloader processes in as secure a method as possible.
+.PP 
+The following process types are defined for bootloader:
+
+.EX
+.B bootloader_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), bootloader(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/brctl_selinux.8 b/man/man8/brctl_selinux.8
new file mode 100644
index 0000000..664324c
--- /dev/null
+++ b/man/man8/brctl_selinux.8
@@ -0,0 +1,77 @@
+.TH  "brctl_selinux"  "8"  "brctl" "dwalsh@redhat.com" "brctl SELinux Policy documentation"
+.SH "NAME"
+brctl_selinux \- Security Enhanced Linux Policy for the brctl processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B brctl
+(Utilities for configuring the linux ethernet bridge)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux brctl policy is very flexible allowing users to setup their brctl processes in as secure a method as possible.
+.PP 
+The following file types are defined for brctl:
+
+
+.EX
+.PP
+.B brctl_exec_t 
+.EE
+
+- Set files with the brctl_exec_t type, if you want to transition an executable to the brctl_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux brctl policy is very flexible allowing users to setup their brctl processes in as secure a method as possible.
+.PP 
+The following process types are defined for brctl:
+
+.EX
+.B brctl_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), brctl(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/cachefilesd_selinux.8 b/man/man8/cachefilesd_selinux.8
new file mode 100644
index 0000000..03e5916
--- /dev/null
+++ b/man/man8/cachefilesd_selinux.8
@@ -0,0 +1,101 @@
+.TH  "cachefilesd_selinux"  "8"  "cachefilesd" "dwalsh@redhat.com" "cachefilesd SELinux Policy documentation"
+.SH "NAME"
+cachefilesd_selinux \- Security Enhanced Linux Policy for the cachefilesd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B cachefilesd
+(policy for cachefilesd)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cachefilesd policy is very flexible allowing users to setup their cachefilesd processes in as secure a method as possible.
+.PP 
+The following file types are defined for cachefilesd:
+
+
+.EX
+.PP
+.B cachefiles_var_t 
+.EE
+
+- Set files with the cachefiles_var_t type, if you want to store the cachef files under the /var directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/cachefilesd\.pid, /var/fscache(/.*)?, /var/cache/fscache(/.*)?
+
+.EX
+.PP
+.B cachefilesd_exec_t 
+.EE
+
+- Set files with the cachefilesd_exec_t type, if you want to transition an executable to the cachefilesd_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/cachefilesd, /usr/sbin/cachefilesd
+
+.EX
+.PP
+.B cachefilesd_var_run_t 
+.EE
+
+- Set files with the cachefilesd_var_run_t type, if you want to store the cachefilesd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cachefilesd policy is very flexible allowing users to setup their cachefilesd processes in as secure a method as possible.
+.PP 
+The following process types are defined for cachefilesd:
+
+.EX
+.B cachefilesd_t, cachefiles_kernel_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cachefilesd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/calamaris_selinux.8 b/man/man8/calamaris_selinux.8
new file mode 100644
index 0000000..831d1b4
--- /dev/null
+++ b/man/man8/calamaris_selinux.8
@@ -0,0 +1,93 @@
+.TH  "calamaris_selinux"  "8"  "calamaris" "dwalsh@redhat.com" "calamaris SELinux Policy documentation"
+.SH "NAME"
+calamaris_selinux \- Security Enhanced Linux Policy for the calamaris processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B calamaris
+(Squid log analysis)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux calamaris policy is very flexible allowing users to setup their calamaris processes in as secure a method as possible.
+.PP 
+The following file types are defined for calamaris:
+
+
+.EX
+.PP
+.B calamaris_exec_t 
+.EE
+
+- Set files with the calamaris_exec_t type, if you want to transition an executable to the calamaris_t domain.
+
+
+.EX
+.PP
+.B calamaris_log_t 
+.EE
+
+- Set files with the calamaris_log_t type, if you want to treat the data as calamaris log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B calamaris_www_t 
+.EE
+
+- Set files with the calamaris_www_t type, if you want to treat the files as calamaris www data.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux calamaris policy is very flexible allowing users to setup their calamaris processes in as secure a method as possible.
+.PP 
+The following process types are defined for calamaris:
+
+.EX
+.B calamaris_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), calamaris(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/callweaver_selinux.8 b/man/man8/callweaver_selinux.8
new file mode 100644
index 0000000..00210e6
--- /dev/null
+++ b/man/man8/callweaver_selinux.8
@@ -0,0 +1,117 @@
+.TH  "callweaver_selinux"  "8"  "callweaver" "dwalsh@redhat.com" "callweaver SELinux Policy documentation"
+.SH "NAME"
+callweaver_selinux \- Security Enhanced Linux Policy for the callweaver processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B callweaver
+(Open source PBX project)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux callweaver policy is very flexible allowing users to setup their callweaver processes in as secure a method as possible.
+.PP 
+The following file types are defined for callweaver:
+
+
+.EX
+.PP
+.B callweaver_exec_t 
+.EE
+
+- Set files with the callweaver_exec_t type, if you want to transition an executable to the callweaver_t domain.
+
+
+.EX
+.PP
+.B callweaver_initrc_exec_t 
+.EE
+
+- Set files with the callweaver_initrc_exec_t type, if you want to transition an executable to the callweaver_initrc_t domain.
+
+
+.EX
+.PP
+.B callweaver_log_t 
+.EE
+
+- Set files with the callweaver_log_t type, if you want to treat the data as callweaver log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B callweaver_spool_t 
+.EE
+
+- Set files with the callweaver_spool_t type, if you want to store the callweaver files under the /var/spool directory.
+
+
+.EX
+.PP
+.B callweaver_var_lib_t 
+.EE
+
+- Set files with the callweaver_var_lib_t type, if you want to store the callweaver files under the /var/lib directory.
+
+
+.EX
+.PP
+.B callweaver_var_run_t 
+.EE
+
+- Set files with the callweaver_var_run_t type, if you want to store the callweaver files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux callweaver policy is very flexible allowing users to setup their callweaver processes in as secure a method as possible.
+.PP 
+The following process types are defined for callweaver:
+
+.EX
+.B callweaver_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), callweaver(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/canna_selinux.8 b/man/man8/canna_selinux.8
new file mode 100644
index 0000000..f254edc
--- /dev/null
+++ b/man/man8/canna_selinux.8
@@ -0,0 +1,125 @@
+.TH  "canna_selinux"  "8"  "canna" "dwalsh@redhat.com" "canna SELinux Policy documentation"
+.SH "NAME"
+canna_selinux \- Security Enhanced Linux Policy for the canna processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B canna
+(Canna - kana-kanji conversion server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux canna policy is very flexible allowing users to setup their canna processes in as secure a method as possible.
+.PP 
+The following file types are defined for canna:
+
+
+.EX
+.PP
+.B canna_exec_t 
+.EE
+
+- Set files with the canna_exec_t type, if you want to transition an executable to the canna_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/catdic, /usr/bin/cannaping, /usr/sbin/jserver, /usr/sbin/cannaserver
+
+.EX
+.PP
+.B canna_initrc_exec_t 
+.EE
+
+- Set files with the canna_initrc_exec_t type, if you want to transition an executable to the canna_initrc_t domain.
+
+
+.EX
+.PP
+.B canna_log_t 
+.EE
+
+- Set files with the canna_log_t type, if you want to treat the data as canna log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/wnn(/.*)?, /var/log/canna(/.*)?
+
+.EX
+.PP
+.B canna_var_lib_t 
+.EE
+
+- Set files with the canna_var_lib_t type, if you want to store the canna files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/wnn/dic(/.*)?, /var/lib/canna/dic(/.*)?
+
+.EX
+.PP
+.B canna_var_run_t 
+.EE
+
+- Set files with the canna_var_run_t type, if you want to store the canna files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/\.iroha_unix/.*, /var/run/wnn-unix(/.*)?, /var/run/\.iroha_unix
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux canna policy is very flexible allowing users to setup their canna processes in as secure a method as possible.
+.PP 
+The following process types are defined for canna:
+
+.EX
+.B canna_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), canna(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/cardmgr_selinux.8 b/man/man8/cardmgr_selinux.8
new file mode 100644
index 0000000..a494bcb
--- /dev/null
+++ b/man/man8/cardmgr_selinux.8
@@ -0,0 +1,111 @@
+.TH  "cardmgr_selinux"  "8"  "cardmgr" "dwalsh@redhat.com" "cardmgr SELinux Policy documentation"
+.SH "NAME"
+cardmgr_selinux \- Security Enhanced Linux Policy for the cardmgr processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cardmgr policy is very flexible allowing users to setup their cardmgr processes in as secure a method as possible.
+.PP 
+The following file types are defined for cardmgr:
+
+
+.EX
+.PP
+.B cardmgr_dev_t 
+.EE
+
+- Set files with the cardmgr_dev_t type, if you want to treat the files as cardmgr dev data.
+
+
+.EX
+.PP
+.B cardmgr_exec_t 
+.EE
+
+- Set files with the cardmgr_exec_t type, if you want to transition an executable to the cardmgr_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/cardmgr, /etc/apm/event\.d/pcmcia, /usr/sbin/cardmgr
+
+.EX
+.PP
+.B cardmgr_lnk_t 
+.EE
+
+- Set files with the cardmgr_lnk_t type, if you want to treat the files as cardmgr lnk data.
+
+
+.EX
+.PP
+.B cardmgr_var_lib_t 
+.EE
+
+- Set files with the cardmgr_var_lib_t type, if you want to store the cardmgr files under the /var/lib directory.
+
+
+.EX
+.PP
+.B cardmgr_var_run_t 
+.EE
+
+- Set files with the cardmgr_var_run_t type, if you want to store the cardmgr files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/cardmgr\.pid, /var/run/stab, /var/lib/pcmcia(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cardmgr policy is very flexible allowing users to setup their cardmgr processes in as secure a method as possible.
+.PP 
+The following process types are defined for cardmgr:
+
+.EX
+.B cardmgr_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cardmgr(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/ccs_selinux.8 b/man/man8/ccs_selinux.8
new file mode 100644
index 0000000..d2d4fde
--- /dev/null
+++ b/man/man8/ccs_selinux.8
@@ -0,0 +1,125 @@
+.TH  "ccs_selinux"  "8"  "ccs" "dwalsh@redhat.com" "ccs SELinux Policy documentation"
+.SH "NAME"
+ccs_selinux \- Security Enhanced Linux Policy for the ccs processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B ccs
+(Cluster Configuration System)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ccs policy is very flexible allowing users to setup their ccs processes in as secure a method as possible.
+.PP 
+The following file types are defined for ccs:
+
+
+.EX
+.PP
+.B ccs_exec_t 
+.EE
+
+- Set files with the ccs_exec_t type, if you want to transition an executable to the ccs_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/ccsd, /sbin/ccsd
+
+.EX
+.PP
+.B ccs_tmp_t 
+.EE
+
+- Set files with the ccs_tmp_t type, if you want to store ccs temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B ccs_tmpfs_t 
+.EE
+
+- Set files with the ccs_tmpfs_t type, if you want to store ccs files on a tmpfs file system.
+
+
+.EX
+.PP
+.B ccs_var_lib_t 
+.EE
+
+- Set files with the ccs_var_lib_t type, if you want to store the ccs files under the /var/lib directory.
+
+
+.EX
+.PP
+.B ccs_var_log_t 
+.EE
+
+- Set files with the ccs_var_log_t type, if you want to treat the data as ccs var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B ccs_var_run_t 
+.EE
+
+- Set files with the ccs_var_run_t type, if you want to store the ccs files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/cluster/ccsd\.pid, /var/run/cluster/ccsd\.sock
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ccs policy is very flexible allowing users to setup their ccs processes in as secure a method as possible.
+.PP 
+The following process types are defined for ccs:
+
+.EX
+.B ccs_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ccs(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/cdcc_selinux.8 b/man/man8/cdcc_selinux.8
new file mode 100644
index 0000000..217f349
--- /dev/null
+++ b/man/man8/cdcc_selinux.8
@@ -0,0 +1,79 @@
+.TH  "cdcc_selinux"  "8"  "cdcc" "dwalsh@redhat.com" "cdcc SELinux Policy documentation"
+.SH "NAME"
+cdcc_selinux \- Security Enhanced Linux Policy for the cdcc processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cdcc policy is very flexible allowing users to setup their cdcc processes in as secure a method as possible.
+.PP 
+The following file types are defined for cdcc:
+
+
+.EX
+.PP
+.B cdcc_exec_t 
+.EE
+
+- Set files with the cdcc_exec_t type, if you want to transition an executable to the cdcc_t domain.
+
+
+.EX
+.PP
+.B cdcc_tmp_t 
+.EE
+
+- Set files with the cdcc_tmp_t type, if you want to store cdcc temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cdcc policy is very flexible allowing users to setup their cdcc processes in as secure a method as possible.
+.PP 
+The following process types are defined for cdcc:
+
+.EX
+.B cdcc_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cdcc(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/cdrecord_selinux.8 b/man/man8/cdrecord_selinux.8
new file mode 100644
index 0000000..db2a2e1
--- /dev/null
+++ b/man/man8/cdrecord_selinux.8
@@ -0,0 +1,96 @@
+.TH  "cdrecord_selinux"  "8"  "cdrecord" "dwalsh@redhat.com" "cdrecord SELinux Policy documentation"
+.SH "NAME"
+cdrecord_selinux \- Security Enhanced Linux Policy for the cdrecord processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B cdrecord
+(Policy for cdrecord)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  cdrecord policy is extremely flexible and has several booleans that allow you to manipulate the policy and run cdrecord with the tightest access possible.
+
+
+.PP
+If you want to allow cdrecord to read various content. nfs, samba, removable devices, user temp and untrusted content file, you must turn on the cdrecord_read_content boolean.
+
+.EX
+.B setsebool -P cdrecord_read_content 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cdrecord policy is very flexible allowing users to setup their cdrecord processes in as secure a method as possible.
+.PP 
+The following file types are defined for cdrecord:
+
+
+.EX
+.PP
+.B cdrecord_exec_t 
+.EE
+
+- Set files with the cdrecord_exec_t type, if you want to transition an executable to the cdrecord_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/cdrecord, /usr/bin/wodim, /usr/bin/growisofs
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cdrecord policy is very flexible allowing users to setup their cdrecord processes in as secure a method as possible.
+.PP 
+The following process types are defined for cdrecord:
+
+.EX
+.B cdrecord_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cdrecord(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/certmaster_selinux.8 b/man/man8/certmaster_selinux.8
new file mode 100644
index 0000000..bf4f6c4
--- /dev/null
+++ b/man/man8/certmaster_selinux.8
@@ -0,0 +1,143 @@
+.TH  "certmaster_selinux"  "8"  "certmaster" "dwalsh@redhat.com" "certmaster SELinux Policy documentation"
+.SH "NAME"
+certmaster_selinux \- Security Enhanced Linux Policy for the certmaster processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B certmaster
+(Certmaster SSL certificate distribution service)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux certmaster policy is very flexible allowing users to setup their certmaster processes in as secure a method as possible.
+.PP 
+The following file types are defined for certmaster:
+
+
+.EX
+.PP
+.B certmaster_etc_rw_t 
+.EE
+
+- Set files with the certmaster_etc_rw_t type, if you want to treat the files as certmaster etc read/write content.
+
+
+.EX
+.PP
+.B certmaster_exec_t 
+.EE
+
+- Set files with the certmaster_exec_t type, if you want to transition an executable to the certmaster_t domain.
+
+
+.EX
+.PP
+.B certmaster_initrc_exec_t 
+.EE
+
+- Set files with the certmaster_initrc_exec_t type, if you want to transition an executable to the certmaster_initrc_t domain.
+
+
+.EX
+.PP
+.B certmaster_var_lib_t 
+.EE
+
+- Set files with the certmaster_var_lib_t type, if you want to store the certmaster files under the /var/lib directory.
+
+
+.EX
+.PP
+.B certmaster_var_log_t 
+.EE
+
+- Set files with the certmaster_var_log_t type, if you want to treat the data as certmaster var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B certmaster_var_run_t 
+.EE
+
+- Set files with the certmaster_var_run_t type, if you want to store the certmaster files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux certmaster policy is very flexible allowing users to setup their certmaster processes in as secure a method as possible.
+.PP 
+The following port types are defined for certmaster:
+
+.EX
+.TP 5
+.B certmaster_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux certmaster policy is very flexible allowing users to setup their certmaster processes in as secure a method as possible.
+.PP 
+The following process types are defined for certmaster:
+
+.EX
+.B certmaster_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), certmaster(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/certmonger_selinux.8 b/man/man8/certmonger_selinux.8
new file mode 100644
index 0000000..2f01973
--- /dev/null
+++ b/man/man8/certmonger_selinux.8
@@ -0,0 +1,109 @@
+.TH  "certmonger_selinux"  "8"  "certmonger" "dwalsh@redhat.com" "certmonger SELinux Policy documentation"
+.SH "NAME"
+certmonger_selinux \- Security Enhanced Linux Policy for the certmonger processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B certmonger
+(Certificate status monitor and PKI enrollment client)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux certmonger policy is very flexible allowing users to setup their certmonger processes in as secure a method as possible.
+.PP 
+The following file types are defined for certmonger:
+
+
+.EX
+.PP
+.B certmonger_exec_t 
+.EE
+
+- Set files with the certmonger_exec_t type, if you want to transition an executable to the certmonger_t domain.
+
+
+.EX
+.PP
+.B certmonger_initrc_exec_t 
+.EE
+
+- Set files with the certmonger_initrc_exec_t type, if you want to transition an executable to the certmonger_initrc_t domain.
+
+
+.EX
+.PP
+.B certmonger_unconfined_exec_t 
+.EE
+
+- Set files with the certmonger_unconfined_exec_t type, if you want to transition an executable to the certmonger_unconfined_t domain.
+
+
+.EX
+.PP
+.B certmonger_var_lib_t 
+.EE
+
+- Set files with the certmonger_var_lib_t type, if you want to store the certmonger files under the /var/lib directory.
+
+
+.EX
+.PP
+.B certmonger_var_run_t 
+.EE
+
+- Set files with the certmonger_var_run_t type, if you want to store the certmonger files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux certmonger policy is very flexible allowing users to setup their certmonger processes in as secure a method as possible.
+.PP 
+The following process types are defined for certmonger:
+
+.EX
+.B certmonger_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), certmonger(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/certwatch_selinux.8 b/man/man8/certwatch_selinux.8
new file mode 100644
index 0000000..612259c
--- /dev/null
+++ b/man/man8/certwatch_selinux.8
@@ -0,0 +1,77 @@
+.TH  "certwatch_selinux"  "8"  "certwatch" "dwalsh@redhat.com" "certwatch SELinux Policy documentation"
+.SH "NAME"
+certwatch_selinux \- Security Enhanced Linux Policy for the certwatch processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B certwatch
+(Digital Certificate Tracking)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux certwatch policy is very flexible allowing users to setup their certwatch processes in as secure a method as possible.
+.PP 
+The following file types are defined for certwatch:
+
+
+.EX
+.PP
+.B certwatch_exec_t 
+.EE
+
+- Set files with the certwatch_exec_t type, if you want to transition an executable to the certwatch_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux certwatch policy is very flexible allowing users to setup their certwatch processes in as secure a method as possible.
+.PP 
+The following process types are defined for certwatch:
+
+.EX
+.B certwatch_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), certwatch(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/cfengine_selinux.8 b/man/man8/cfengine_selinux.8
new file mode 100644
index 0000000..0831deb
--- /dev/null
+++ b/man/man8/cfengine_selinux.8
@@ -0,0 +1,113 @@
+.TH  "cfengine_selinux"  "8"  "cfengine" "dwalsh@redhat.com" "cfengine SELinux Policy documentation"
+.SH "NAME"
+cfengine_selinux \- Security Enhanced Linux Policy for the cfengine processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B cfengine
+(policy for cfengine)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cfengine policy is very flexible allowing users to setup their cfengine processes in as secure a method as possible.
+.PP 
+The following file types are defined for cfengine:
+
+
+.EX
+.PP
+.B cfengine_execd_exec_t 
+.EE
+
+- Set files with the cfengine_execd_exec_t type, if you want to transition an executable to the cfengine_execd_t domain.
+
+
+.EX
+.PP
+.B cfengine_initrc_exec_t 
+.EE
+
+- Set files with the cfengine_initrc_exec_t type, if you want to transition an executable to the cfengine_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/cf-serverd, /etc/rc\.d/init\.d/cf-execd, /etc/rc\.d/init\.d/cf-monitord
+
+.EX
+.PP
+.B cfengine_monitord_exec_t 
+.EE
+
+- Set files with the cfengine_monitord_exec_t type, if you want to transition an executable to the cfengine_monitord_t domain.
+
+
+.EX
+.PP
+.B cfengine_serverd_exec_t 
+.EE
+
+- Set files with the cfengine_serverd_exec_t type, if you want to transition an executable to the cfengine_serverd_t domain.
+
+
+.EX
+.PP
+.B cfengine_var_lib_t 
+.EE
+
+- Set files with the cfengine_var_lib_t type, if you want to store the cfengine files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cfengine policy is very flexible allowing users to setup their cfengine processes in as secure a method as possible.
+.PP 
+The following process types are defined for cfengine:
+
+.EX
+.B cfengine_execd_t, cfengine_monitord_t, cfengine_serverd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cfengine(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/cgclear_selinux.8 b/man/man8/cgclear_selinux.8
new file mode 100644
index 0000000..8dc7a1f
--- /dev/null
+++ b/man/man8/cgclear_selinux.8
@@ -0,0 +1,75 @@
+.TH  "cgclear_selinux"  "8"  "cgclear" "dwalsh@redhat.com" "cgclear SELinux Policy documentation"
+.SH "NAME"
+cgclear_selinux \- Security Enhanced Linux Policy for the cgclear processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cgclear policy is very flexible allowing users to setup their cgclear processes in as secure a method as possible.
+.PP 
+The following file types are defined for cgclear:
+
+
+.EX
+.PP
+.B cgclear_exec_t 
+.EE
+
+- Set files with the cgclear_exec_t type, if you want to transition an executable to the cgclear_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/cgclear, /usr/sbin/cgclear
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cgclear policy is very flexible allowing users to setup their cgclear processes in as secure a method as possible.
+.PP 
+The following process types are defined for cgclear:
+
+.EX
+.B cgclear_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cgclear(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/cgconfig_selinux.8 b/man/man8/cgconfig_selinux.8
new file mode 100644
index 0000000..bf8323b
--- /dev/null
+++ b/man/man8/cgconfig_selinux.8
@@ -0,0 +1,95 @@
+.TH  "cgconfig_selinux"  "8"  "cgconfig" "dwalsh@redhat.com" "cgconfig SELinux Policy documentation"
+.SH "NAME"
+cgconfig_selinux \- Security Enhanced Linux Policy for the cgconfig processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cgconfig policy is very flexible allowing users to setup their cgconfig processes in as secure a method as possible.
+.PP 
+The following file types are defined for cgconfig:
+
+
+.EX
+.PP
+.B cgconfig_etc_t 
+.EE
+
+- Set files with the cgconfig_etc_t type, if you want to store cgconfig files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/sysconfig/cgconfig, /etc/cgconfig.conf
+
+.EX
+.PP
+.B cgconfig_exec_t 
+.EE
+
+- Set files with the cgconfig_exec_t type, if you want to transition an executable to the cgconfig_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/cgconfigparser, /sbin/cgconfigparser
+
+.EX
+.PP
+.B cgconfig_initrc_exec_t 
+.EE
+
+- Set files with the cgconfig_initrc_exec_t type, if you want to transition an executable to the cgconfig_initrc_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cgconfig policy is very flexible allowing users to setup their cgconfig processes in as secure a method as possible.
+.PP 
+The following process types are defined for cgconfig:
+
+.EX
+.B cgconfig_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cgconfig(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/cgred_selinux.8 b/man/man8/cgred_selinux.8
new file mode 100644
index 0000000..8cf1b40
--- /dev/null
+++ b/man/man8/cgred_selinux.8
@@ -0,0 +1,99 @@
+.TH  "cgred_selinux"  "8"  "cgred" "dwalsh@redhat.com" "cgred SELinux Policy documentation"
+.SH "NAME"
+cgred_selinux \- Security Enhanced Linux Policy for the cgred processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cgred policy is very flexible allowing users to setup their cgred processes in as secure a method as possible.
+.PP 
+The following file types are defined for cgred:
+
+
+.EX
+.PP
+.B cgred_exec_t 
+.EE
+
+- Set files with the cgred_exec_t type, if you want to transition an executable to the cgred_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/cgrulesengd, /usr/sbin/cgrulesengd
+
+.EX
+.PP
+.B cgred_initrc_exec_t 
+.EE
+
+- Set files with the cgred_initrc_exec_t type, if you want to transition an executable to the cgred_initrc_t domain.
+
+
+.EX
+.PP
+.B cgred_log_t 
+.EE
+
+- Set files with the cgred_log_t type, if you want to treat the data as cgred log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B cgred_var_run_t 
+.EE
+
+- Set files with the cgred_var_run_t type, if you want to store the cgred files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cgred policy is very flexible allowing users to setup their cgred processes in as secure a method as possible.
+.PP 
+The following process types are defined for cgred:
+
+.EX
+.B cgred_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cgred(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/checkpc_selinux.8 b/man/man8/checkpc_selinux.8
new file mode 100644
index 0000000..5c6fcde
--- /dev/null
+++ b/man/man8/checkpc_selinux.8
@@ -0,0 +1,79 @@
+.TH  "checkpc_selinux"  "8"  "checkpc" "dwalsh@redhat.com" "checkpc SELinux Policy documentation"
+.SH "NAME"
+checkpc_selinux \- Security Enhanced Linux Policy for the checkpc processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux checkpc policy is very flexible allowing users to setup their checkpc processes in as secure a method as possible.
+.PP 
+The following file types are defined for checkpc:
+
+
+.EX
+.PP
+.B checkpc_exec_t 
+.EE
+
+- Set files with the checkpc_exec_t type, if you want to transition an executable to the checkpc_t domain.
+
+
+.EX
+.PP
+.B checkpc_log_t 
+.EE
+
+- Set files with the checkpc_log_t type, if you want to treat the data as checkpc log data, usually stored under the /var/log directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux checkpc policy is very flexible allowing users to setup their checkpc processes in as secure a method as possible.
+.PP 
+The following process types are defined for checkpc:
+
+.EX
+.B checkpc_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), checkpc(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/checkpolicy_selinux.8 b/man/man8/checkpolicy_selinux.8
new file mode 100644
index 0000000..b67fcc4
--- /dev/null
+++ b/man/man8/checkpolicy_selinux.8
@@ -0,0 +1,71 @@
+.TH  "checkpolicy_selinux"  "8"  "checkpolicy" "dwalsh@redhat.com" "checkpolicy SELinux Policy documentation"
+.SH "NAME"
+checkpolicy_selinux \- Security Enhanced Linux Policy for the checkpolicy processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux checkpolicy policy is very flexible allowing users to setup their checkpolicy processes in as secure a method as possible.
+.PP 
+The following file types are defined for checkpolicy:
+
+
+.EX
+.PP
+.B checkpolicy_exec_t 
+.EE
+
+- Set files with the checkpolicy_exec_t type, if you want to transition an executable to the checkpolicy_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux checkpolicy policy is very flexible allowing users to setup their checkpolicy processes in as secure a method as possible.
+.PP 
+The following process types are defined for checkpolicy:
+
+.EX
+.B checkpolicy_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), checkpolicy(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/chfn_selinux.8 b/man/man8/chfn_selinux.8
new file mode 100644
index 0000000..c81760f
--- /dev/null
+++ b/man/man8/chfn_selinux.8
@@ -0,0 +1,75 @@
+.TH  "chfn_selinux"  "8"  "chfn" "dwalsh@redhat.com" "chfn SELinux Policy documentation"
+.SH "NAME"
+chfn_selinux \- Security Enhanced Linux Policy for the chfn processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux chfn policy is very flexible allowing users to setup their chfn processes in as secure a method as possible.
+.PP 
+The following file types are defined for chfn:
+
+
+.EX
+.PP
+.B chfn_exec_t 
+.EE
+
+- Set files with the chfn_exec_t type, if you want to transition an executable to the chfn_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/chfn, /usr/bin/chsh
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux chfn policy is very flexible allowing users to setup their chfn processes in as secure a method as possible.
+.PP 
+The following process types are defined for chfn:
+
+.EX
+.B chfn_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), chfn(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/chkpwd_selinux.8 b/man/man8/chkpwd_selinux.8
new file mode 100644
index 0000000..03d8e09
--- /dev/null
+++ b/man/man8/chkpwd_selinux.8
@@ -0,0 +1,75 @@
+.TH  "chkpwd_selinux"  "8"  "chkpwd" "dwalsh@redhat.com" "chkpwd SELinux Policy documentation"
+.SH "NAME"
+chkpwd_selinux \- Security Enhanced Linux Policy for the chkpwd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux chkpwd policy is very flexible allowing users to setup their chkpwd processes in as secure a method as possible.
+.PP 
+The following file types are defined for chkpwd:
+
+
+.EX
+.PP
+.B chkpwd_exec_t 
+.EE
+
+- Set files with the chkpwd_exec_t type, if you want to transition an executable to the chkpwd_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/unix_verify, /sbin/unix_chkpwd, /usr/sbin/unix_verify, /usr/sbin/validate, /usr/sbin/unix_chkpwd
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux chkpwd policy is very flexible allowing users to setup their chkpwd processes in as secure a method as possible.
+.PP 
+The following process types are defined for chkpwd:
+
+.EX
+.B chkpwd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), chkpwd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/chrome_selinux.8 b/man/man8/chrome_selinux.8
new file mode 100644
index 0000000..e83770b
--- /dev/null
+++ b/man/man8/chrome_selinux.8
@@ -0,0 +1,124 @@
+.TH  "chrome_selinux"  "8"  "chrome" "dwalsh@redhat.com" "chrome SELinux Policy documentation"
+.SH "NAME"
+chrome_selinux \- Security Enhanced Linux Policy for the chrome processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B chrome
+(policy for chrome)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  chrome policy is extremely flexible and has several booleans that allow you to manipulate the policy and run chrome with the tightest access possible.
+
+
+.PP
+If you want to allow unconfined users to transition to the chrome sandbox domains when running chrome-sandbo, you must turn on the unconfined_chrome_sandbox_transition boolean.
+
+.EX
+.B setsebool -P unconfined_chrome_sandbox_transition 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux chrome policy is very flexible allowing users to setup their chrome processes in as secure a method as possible.
+.PP 
+The following file types are defined for chrome:
+
+
+.EX
+.PP
+.B chrome_sandbox_exec_t 
+.EE
+
+- Set files with the chrome_sandbox_exec_t type, if you want to transition an executable to the chrome_sandbox_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/chromium-browser/chrome-sandbox, /opt/google/chrome/chrome-sandbox
+
+.EX
+.PP
+.B chrome_sandbox_nacl_exec_t 
+.EE
+
+- Set files with the chrome_sandbox_nacl_exec_t type, if you want to transition an executable to the chrome_sandbox_nacl_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/chromium-browser/nacl_helper_bootstrap, /opt/google/chrome/nacl_helper_bootstrap
+
+.EX
+.PP
+.B chrome_sandbox_tmp_t 
+.EE
+
+- Set files with the chrome_sandbox_tmp_t type, if you want to store chrome sandbox temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B chrome_sandbox_tmpfs_t 
+.EE
+
+- Set files with the chrome_sandbox_tmpfs_t type, if you want to store chrome sandbox files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux chrome policy is very flexible allowing users to setup their chrome processes in as secure a method as possible.
+.PP 
+The following process types are defined for chrome:
+
+.EX
+.B chrome_sandbox_t, chrome_sandbox_nacl_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), chrome(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/chronyd_selinux.8 b/man/man8/chronyd_selinux.8
new file mode 100644
index 0000000..b178fb9
--- /dev/null
+++ b/man/man8/chronyd_selinux.8
@@ -0,0 +1,167 @@
+.TH  "chronyd_selinux"  "8"  "chronyd" "dwalsh@redhat.com" "chronyd SELinux Policy documentation"
+.SH "NAME"
+chronyd_selinux \- Security Enhanced Linux Policy for the chronyd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B chronyd
+(Chrony NTP background daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux chronyd policy is very flexible allowing users to setup their chronyd processes in as secure a method as possible.
+.PP 
+The following file types are defined for chronyd:
+
+
+.EX
+.PP
+.B chronyd_exec_t 
+.EE
+
+- Set files with the chronyd_exec_t type, if you want to transition an executable to the chronyd_t domain.
+
+
+.EX
+.PP
+.B chronyd_initrc_exec_t 
+.EE
+
+- Set files with the chronyd_initrc_exec_t type, if you want to transition an executable to the chronyd_initrc_t domain.
+
+
+.EX
+.PP
+.B chronyd_keys_t 
+.EE
+
+- Set files with the chronyd_keys_t type, if you want to treat the files as chronyd keys data.
+
+
+.EX
+.PP
+.B chronyd_tmpfs_t 
+.EE
+
+- Set files with the chronyd_tmpfs_t type, if you want to store chronyd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B chronyd_unit_file_t 
+.EE
+
+- Set files with the chronyd_unit_file_t type, if you want to treat the files as chronyd unit content.
+
+.br
+.TP 5
+Paths: 
+/lib/systemd/system/chrony.*, /usr/lib/systemd/system/chronyd.*
+
+.EX
+.PP
+.B chronyd_var_lib_t 
+.EE
+
+- Set files with the chronyd_var_lib_t type, if you want to store the chronyd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B chronyd_var_log_t 
+.EE
+
+- Set files with the chronyd_var_log_t type, if you want to treat the data as chronyd var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B chronyd_var_run_t 
+.EE
+
+- Set files with the chronyd_var_run_t type, if you want to store the chronyd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/chronyd(/.*), /var/run/chronyd\.sock, /var/run/chronyd\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux chronyd policy is very flexible allowing users to setup their chronyd processes in as secure a method as possible.
+.PP 
+The following port types are defined for chronyd:
+
+.EX
+.TP 5
+.B chronyd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux chronyd policy is very flexible allowing users to setup their chronyd processes in as secure a method as possible.
+.PP 
+The following process types are defined for chronyd:
+
+.EX
+.B chronyd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), chronyd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/ciped_selinux.8 b/man/man8/ciped_selinux.8
new file mode 100644
index 0000000..e387cea
--- /dev/null
+++ b/man/man8/ciped_selinux.8
@@ -0,0 +1,71 @@
+.TH  "ciped_selinux"  "8"  "ciped" "dwalsh@redhat.com" "ciped SELinux Policy documentation"
+.SH "NAME"
+ciped_selinux \- Security Enhanced Linux Policy for the ciped processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ciped policy is very flexible allowing users to setup their ciped processes in as secure a method as possible.
+.PP 
+The following file types are defined for ciped:
+
+
+.EX
+.PP
+.B ciped_exec_t 
+.EE
+
+- Set files with the ciped_exec_t type, if you want to transition an executable to the ciped_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ciped policy is very flexible allowing users to setup their ciped processes in as secure a method as possible.
+.PP 
+The following process types are defined for ciped:
+
+.EX
+.B ciped_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ciped(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/clamd_selinux.8 b/man/man8/clamd_selinux.8
new file mode 100644
index 0000000..7ffdf73
--- /dev/null
+++ b/man/man8/clamd_selinux.8
@@ -0,0 +1,183 @@
+.TH  "clamd_selinux"  "8"  "clamd" "dwalsh@redhat.com" "clamd SELinux Policy documentation"
+.SH "NAME"
+clamd_selinux \- Security Enhanced Linux Policy for the clamd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  clamd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run clamd with the tightest access possible.
+
+
+.PP
+If you want to allow clamscan to read user conten, you must turn on the clamscan_read_user_content boolean.
+
+.EX
+.B setsebool -P clamscan_read_user_content 1
+.EE
+
+.PP
+If you want to allow clamd to use JIT compile, you must turn on the clamd_use_jit boolean.
+
+.EX
+.B setsebool -P clamd_use_jit 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux clamd policy is very flexible allowing users to setup their clamd processes in as secure a method as possible.
+.PP 
+The following file types are defined for clamd:
+
+
+.EX
+.PP
+.B clamd_etc_t 
+.EE
+
+- Set files with the clamd_etc_t type, if you want to store clamd files in the /etc directories.
+
+
+.EX
+.PP
+.B clamd_exec_t 
+.EE
+
+- Set files with the clamd_exec_t type, if you want to transition an executable to the clamd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/clamd, /usr/sbin/clamav-milter
+
+.EX
+.PP
+.B clamd_initrc_exec_t 
+.EE
+
+- Set files with the clamd_initrc_exec_t type, if you want to transition an executable to the clamd_initrc_t domain.
+
+
+.EX
+.PP
+.B clamd_tmp_t 
+.EE
+
+- Set files with the clamd_tmp_t type, if you want to store clamd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B clamd_var_lib_t 
+.EE
+
+- Set files with the clamd_var_lib_t type, if you want to store the clamd files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/clamd.*, /var/clamav(/.*)?, /var/lib/clamav(/.*)?
+
+.EX
+.PP
+.B clamd_var_log_t 
+.EE
+
+- Set files with the clamd_var_log_t type, if you want to treat the data as clamd var log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/clamav.*, /var/log/clamd.*
+
+.EX
+.PP
+.B clamd_var_run_t 
+.EE
+
+- Set files with the clamd_var_run_t type, if you want to store the clamd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/amavis(d)?/clamd\.pid, /var/run/clamd.*, /var/run/clamav.*, /var/spool/MailScanner(/.*)?, /var/spool/amavisd/clamd\.sock
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux clamd policy is very flexible allowing users to setup their clamd processes in as secure a method as possible.
+.PP 
+The following port types are defined for clamd:
+
+.EX
+.TP 5
+.B clamd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux clamd policy is very flexible allowing users to setup their clamd processes in as secure a method as possible.
+.PP 
+The following process types are defined for clamd:
+
+.EX
+.B clamd_t, clamscan_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), clamd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/clamscan_selinux.8 b/man/man8/clamscan_selinux.8
new file mode 100644
index 0000000..4b82f56
--- /dev/null
+++ b/man/man8/clamscan_selinux.8
@@ -0,0 +1,98 @@
+.TH  "clamscan_selinux"  "8"  "clamscan" "dwalsh@redhat.com" "clamscan SELinux Policy documentation"
+.SH "NAME"
+clamscan_selinux \- Security Enhanced Linux Policy for the clamscan processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  clamscan policy is extremely flexible and has several booleans that allow you to manipulate the policy and run clamscan with the tightest access possible.
+
+
+.PP
+If you want to allow clamscan to read user conten, you must turn on the clamscan_read_user_content boolean.
+
+.EX
+.B setsebool -P clamscan_read_user_content 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux clamscan policy is very flexible allowing users to setup their clamscan processes in as secure a method as possible.
+.PP 
+The following file types are defined for clamscan:
+
+
+.EX
+.PP
+.B clamscan_exec_t 
+.EE
+
+- Set files with the clamscan_exec_t type, if you want to transition an executable to the clamscan_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/clamdscan, /usr/bin/clamscan
+
+.EX
+.PP
+.B clamscan_tmp_t 
+.EE
+
+- Set files with the clamscan_tmp_t type, if you want to store clamscan temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux clamscan policy is very flexible allowing users to setup their clamscan processes in as secure a method as possible.
+.PP 
+The following process types are defined for clamscan:
+
+.EX
+.B clamscan_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), clamscan(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/clogd_selinux.8 b/man/man8/clogd_selinux.8
new file mode 100644
index 0000000..c68d541
--- /dev/null
+++ b/man/man8/clogd_selinux.8
@@ -0,0 +1,93 @@
+.TH  "clogd_selinux"  "8"  "clogd" "dwalsh@redhat.com" "clogd SELinux Policy documentation"
+.SH "NAME"
+clogd_selinux \- Security Enhanced Linux Policy for the clogd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B clogd
+(clogd - Clustered Mirror Log Server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux clogd policy is very flexible allowing users to setup their clogd processes in as secure a method as possible.
+.PP 
+The following file types are defined for clogd:
+
+
+.EX
+.PP
+.B clogd_exec_t 
+.EE
+
+- Set files with the clogd_exec_t type, if you want to transition an executable to the clogd_t domain.
+
+
+.EX
+.PP
+.B clogd_tmpfs_t 
+.EE
+
+- Set files with the clogd_tmpfs_t type, if you want to store clogd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B clogd_var_run_t 
+.EE
+
+- Set files with the clogd_var_run_t type, if you want to store the clogd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux clogd policy is very flexible allowing users to setup their clogd processes in as secure a method as possible.
+.PP 
+The following process types are defined for clogd:
+
+.EX
+.B clogd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), clogd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/clvmd_selinux.8 b/man/man8/clvmd_selinux.8
new file mode 100644
index 0000000..f25da6c
--- /dev/null
+++ b/man/man8/clvmd_selinux.8
@@ -0,0 +1,95 @@
+.TH  "clvmd_selinux"  "8"  "clvmd" "dwalsh@redhat.com" "clvmd SELinux Policy documentation"
+.SH "NAME"
+clvmd_selinux \- Security Enhanced Linux Policy for the clvmd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux clvmd policy is very flexible allowing users to setup their clvmd processes in as secure a method as possible.
+.PP 
+The following file types are defined for clvmd:
+
+
+.EX
+.PP
+.B clvmd_exec_t 
+.EE
+
+- Set files with the clvmd_exec_t type, if you want to transition an executable to the clvmd_t domain.
+
+
+.EX
+.PP
+.B clvmd_initrc_exec_t 
+.EE
+
+- Set files with the clvmd_initrc_exec_t type, if you want to transition an executable to the clvmd_initrc_t domain.
+
+
+.EX
+.PP
+.B clvmd_tmpfs_t 
+.EE
+
+- Set files with the clvmd_tmpfs_t type, if you want to store clvmd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B clvmd_var_run_t 
+.EE
+
+- Set files with the clvmd_var_run_t type, if you want to store the clvmd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux clvmd policy is very flexible allowing users to setup their clvmd processes in as secure a method as possible.
+.PP 
+The following process types are defined for clvmd:
+
+.EX
+.B clvmd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), clvmd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/cmirrord_selinux.8 b/man/man8/cmirrord_selinux.8
new file mode 100644
index 0000000..056abd4
--- /dev/null
+++ b/man/man8/cmirrord_selinux.8
@@ -0,0 +1,101 @@
+.TH  "cmirrord_selinux"  "8"  "cmirrord" "dwalsh@redhat.com" "cmirrord SELinux Policy documentation"
+.SH "NAME"
+cmirrord_selinux \- Security Enhanced Linux Policy for the cmirrord processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B cmirrord
+(Cluster mirror log daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cmirrord policy is very flexible allowing users to setup their cmirrord processes in as secure a method as possible.
+.PP 
+The following file types are defined for cmirrord:
+
+
+.EX
+.PP
+.B cmirrord_exec_t 
+.EE
+
+- Set files with the cmirrord_exec_t type, if you want to transition an executable to the cmirrord_t domain.
+
+
+.EX
+.PP
+.B cmirrord_initrc_exec_t 
+.EE
+
+- Set files with the cmirrord_initrc_exec_t type, if you want to transition an executable to the cmirrord_initrc_t domain.
+
+
+.EX
+.PP
+.B cmirrord_tmpfs_t 
+.EE
+
+- Set files with the cmirrord_tmpfs_t type, if you want to store cmirrord files on a tmpfs file system.
+
+
+.EX
+.PP
+.B cmirrord_var_run_t 
+.EE
+
+- Set files with the cmirrord_var_run_t type, if you want to store the cmirrord files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cmirrord policy is very flexible allowing users to setup their cmirrord processes in as secure a method as possible.
+.PP 
+The following process types are defined for cmirrord:
+
+.EX
+.B cmirrord_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cmirrord(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/cobblerd_selinux.8 b/man/man8/cobblerd_selinux.8
new file mode 100644
index 0000000..9a63029
--- /dev/null
+++ b/man/man8/cobblerd_selinux.8
@@ -0,0 +1,211 @@
+.TH  "cobblerd_selinux"  "8"  "cobblerd" "dwalsh@redhat.com" "cobblerd SELinux Policy documentation"
+.SH "NAME"
+cobblerd_selinux \- Security Enhanced Linux Policy for the cobblerd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  cobblerd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run cobblerd with the tightest access possible.
+
+
+.PP
+If you want to allow Cobbler to connect to the network using TCP, you must turn on the cobbler_can_network_connect boolean.
+
+.EX
+.B setsebool -P cobbler_can_network_connect 1
+.EE
+
+.PP
+If you want to allow Cobbler to access nfs file systems, you must turn on the cobbler_use_nfs boolean.
+
+.EX
+.B setsebool -P cobbler_use_nfs 1
+.EE
+
+.PP
+If you want to allow HTTPD scripts and modules to connect to cobbler over the network, you must turn on the httpd_can_network_connect_cobbler boolean.
+
+.EX
+.B setsebool -P httpd_can_network_connect_cobbler 1
+.EE
+
+.PP
+If you want to allow Cobbler to access cifs file systems, you must turn on the cobbler_use_cifs boolean.
+
+.EX
+.B setsebool -P cobbler_use_cifs 1
+.EE
+
+.SH SHARING FILES
+If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
+.TP
+Allow cobblerd servers to read the /var/cobblerd directory by adding the public_content_t file type to the directory and by restoring the file type.
+.PP
+.B
+semanage fcontext -a -t public_content_t "/var/cobblerd(/.*)?"
+.br
+.B restorecon -F -R -v /var/cobblerd
+.pp
+.TP
+Allow cobblerd servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_cobblerd_anon_write boolean to be set.
+.PP
+.B
+semanage fcontext -a -t public_content_rw_t "/var/cobblerd/incoming(/.*)?"
+.br
+.B restorecon -F -R -v /var/cobblerd/incoming
+
+
+.PP
+If you want to allow Cobbler to modify public files used for public file transfer services., you must turn on the cobbler_anon_write boolean.
+
+.EX
+.B setsebool -P cobbler_anon_write 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cobblerd policy is very flexible allowing users to setup their cobblerd processes in as secure a method as possible.
+.PP 
+The following file types are defined for cobblerd:
+
+
+.EX
+.PP
+.B cobbler_etc_t 
+.EE
+
+- Set files with the cobbler_etc_t type, if you want to store cobbler files in the /etc directories.
+
+
+.EX
+.PP
+.B cobbler_tmp_t 
+.EE
+
+- Set files with the cobbler_tmp_t type, if you want to store cobbler temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B cobbler_var_lib_t 
+.EE
+
+- Set files with the cobbler_var_lib_t type, if you want to store the cobbler files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/cobbler(/.*)?, /var/www/cobbler/images(/.*)?, /var/www/cobbler/repo_mirror(/.*)?, /var/lib/tftpboot/pxelinux\.cfg(/.*)?, /var/lib/tftpboot/memdisk, /var/lib/tftpboot/s390x(/.*)?, /var/www/cobbler/links(/.*)?, /var/lib/tftpboot/menu\.c32, /var/lib/tftpboot/yaboot, /var/www/cobbler/localmirror(/.*)?, /var/www/cobbler/ks_mirror(/.*)?, /var/lib/tftpboot/grub(/.*)?, /var/www/cobbler/pub(/.*)?, /var/lib/tftpboot/ppc(/.*)?, /var/lib/tftpboot/pxelinux\.0, /var/lib/tftpboot/images(/.*)?, /var/lib/tftpboot/etc(/.*)?, /var/www/cobbler/rendered(/.*)?
+
+.EX
+.PP
+.B cobbler_var_log_t 
+.EE
+
+- Set files with the cobbler_var_log_t type, if you want to treat the data as cobbler var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B cobblerd_exec_t 
+.EE
+
+- Set files with the cobblerd_exec_t type, if you want to transition an executable to the cobblerd_t domain.
+
+
+.EX
+.PP
+.B cobblerd_initrc_exec_t 
+.EE
+
+- Set files with the cobblerd_initrc_exec_t type, if you want to transition an executable to the cobblerd_initrc_t domain.
+
+
+.EX
+.PP
+.B cobblerd_unit_file_t 
+.EE
+
+- Set files with the cobblerd_unit_file_t type, if you want to treat the files as cobblerd unit content.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux cobblerd policy is very flexible allowing users to setup their cobblerd processes in as secure a method as possible.
+.PP 
+The following port types are defined for cobblerd:
+
+.EX
+.TP 5
+.B cobbler_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cobblerd policy is very flexible allowing users to setup their cobblerd processes in as secure a method as possible.
+.PP 
+The following process types are defined for cobblerd:
+
+.EX
+.B cobblerd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cobblerd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/collectd_selinux.8 b/man/man8/collectd_selinux.8
new file mode 100644
index 0000000..6210747
--- /dev/null
+++ b/man/man8/collectd_selinux.8
@@ -0,0 +1,124 @@
+.TH  "collectd_selinux"  "8"  "collectd" "dwalsh@redhat.com" "collectd SELinux Policy documentation"
+.SH "NAME"
+collectd_selinux \- Security Enhanced Linux Policy for the collectd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B collectd
+(policy for collectd)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  collectd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run collectd with the tightest access possible.
+
+
+.PP
+If you want to allow collectd to connect to the network using TCP, you must turn on the collectd_can_network_connect boolean.
+
+.EX
+.B setsebool -P collectd_can_network_connect 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux collectd policy is very flexible allowing users to setup their collectd processes in as secure a method as possible.
+.PP 
+The following file types are defined for collectd:
+
+
+.EX
+.PP
+.B collectd_exec_t 
+.EE
+
+- Set files with the collectd_exec_t type, if you want to transition an executable to the collectd_t domain.
+
+
+.EX
+.PP
+.B collectd_initrc_exec_t 
+.EE
+
+- Set files with the collectd_initrc_exec_t type, if you want to transition an executable to the collectd_initrc_t domain.
+
+
+.EX
+.PP
+.B collectd_unit_file_t 
+.EE
+
+- Set files with the collectd_unit_file_t type, if you want to treat the files as collectd unit content.
+
+
+.EX
+.PP
+.B collectd_var_lib_t 
+.EE
+
+- Set files with the collectd_var_lib_t type, if you want to store the collectd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B collectd_var_run_t 
+.EE
+
+- Set files with the collectd_var_run_t type, if you want to store the collectd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux collectd policy is very flexible allowing users to setup their collectd processes in as secure a method as possible.
+.PP 
+The following process types are defined for collectd:
+
+.EX
+.B collectd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), collectd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/colord_selinux.8 b/man/man8/colord_selinux.8
new file mode 100644
index 0000000..7ed4ac6
--- /dev/null
+++ b/man/man8/colord_selinux.8
@@ -0,0 +1,117 @@
+.TH  "colord_selinux"  "8"  "colord" "dwalsh@redhat.com" "colord SELinux Policy documentation"
+.SH "NAME"
+colord_selinux \- Security Enhanced Linux Policy for the colord processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B colord
+(GNOME color manager)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux colord policy is very flexible allowing users to setup their colord processes in as secure a method as possible.
+.PP 
+The following file types are defined for colord:
+
+
+.EX
+.PP
+.B colord_exec_t 
+.EE
+
+- Set files with the colord_exec_t type, if you want to transition an executable to the colord_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/libexec/colord-sane, /usr/libexec/colord
+
+.EX
+.PP
+.B colord_tmp_t 
+.EE
+
+- Set files with the colord_tmp_t type, if you want to store colord temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B colord_tmpfs_t 
+.EE
+
+- Set files with the colord_tmpfs_t type, if you want to store colord files on a tmpfs file system.
+
+
+.EX
+.PP
+.B colord_unit_file_t 
+.EE
+
+- Set files with the colord_unit_file_t type, if you want to treat the files as colord unit content.
+
+
+.EX
+.PP
+.B colord_var_lib_t 
+.EE
+
+- Set files with the colord_var_lib_t type, if you want to store the colord files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/color(/.*)?, /var/lib/colord(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux colord policy is very flexible allowing users to setup their colord processes in as secure a method as possible.
+.PP 
+The following process types are defined for colord:
+
+.EX
+.B colord_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), colord(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/comsat_selinux.8 b/man/man8/comsat_selinux.8
new file mode 100644
index 0000000..da3d8e9
--- /dev/null
+++ b/man/man8/comsat_selinux.8
@@ -0,0 +1,119 @@
+.TH  "comsat_selinux"  "8"  "comsat" "dwalsh@redhat.com" "comsat SELinux Policy documentation"
+.SH "NAME"
+comsat_selinux \- Security Enhanced Linux Policy for the comsat processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B comsat
+(Comsat, a biff server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux comsat policy is very flexible allowing users to setup their comsat processes in as secure a method as possible.
+.PP 
+The following file types are defined for comsat:
+
+
+.EX
+.PP
+.B comsat_exec_t 
+.EE
+
+- Set files with the comsat_exec_t type, if you want to transition an executable to the comsat_t domain.
+
+
+.EX
+.PP
+.B comsat_tmp_t 
+.EE
+
+- Set files with the comsat_tmp_t type, if you want to store comsat temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B comsat_var_run_t 
+.EE
+
+- Set files with the comsat_var_run_t type, if you want to store the comsat files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux comsat policy is very flexible allowing users to setup their comsat processes in as secure a method as possible.
+.PP 
+The following port types are defined for comsat:
+
+.EX
+.TP 5
+.B comsat_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux comsat policy is very flexible allowing users to setup their comsat processes in as secure a method as possible.
+.PP 
+The following process types are defined for comsat:
+
+.EX
+.B comsat_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), comsat(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/consolekit_selinux.8 b/man/man8/consolekit_selinux.8
new file mode 100644
index 0000000..cac5397
--- /dev/null
+++ b/man/man8/consolekit_selinux.8
@@ -0,0 +1,113 @@
+.TH  "consolekit_selinux"  "8"  "consolekit" "dwalsh@redhat.com" "consolekit SELinux Policy documentation"
+.SH "NAME"
+consolekit_selinux \- Security Enhanced Linux Policy for the consolekit processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B consolekit
+(Framework for facilitating multiple user sessions on desktops)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux consolekit policy is very flexible allowing users to setup their consolekit processes in as secure a method as possible.
+.PP 
+The following file types are defined for consolekit:
+
+
+.EX
+.PP
+.B consolekit_exec_t 
+.EE
+
+- Set files with the consolekit_exec_t type, if you want to transition an executable to the consolekit_t domain.
+
+
+.EX
+.PP
+.B consolekit_log_t 
+.EE
+
+- Set files with the consolekit_log_t type, if you want to treat the data as consolekit log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B consolekit_tmpfs_t 
+.EE
+
+- Set files with the consolekit_tmpfs_t type, if you want to store consolekit files on a tmpfs file system.
+
+
+.EX
+.PP
+.B consolekit_unit_file_t 
+.EE
+
+- Set files with the consolekit_unit_file_t type, if you want to treat the files as consolekit unit content.
+
+
+.EX
+.PP
+.B consolekit_var_run_t 
+.EE
+
+- Set files with the consolekit_var_run_t type, if you want to store the consolekit files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/console-kit-daemon\.pid, /var/run/ConsoleKit(/.*)?, /var/run/consolekit\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux consolekit policy is very flexible allowing users to setup their consolekit processes in as secure a method as possible.
+.PP 
+The following process types are defined for consolekit:
+
+.EX
+.B consolekit_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), consolekit(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/consoletype_selinux.8 b/man/man8/consoletype_selinux.8
new file mode 100644
index 0000000..931d27b
--- /dev/null
+++ b/man/man8/consoletype_selinux.8
@@ -0,0 +1,83 @@
+.TH  "consoletype_selinux"  "8"  "consoletype" "dwalsh@redhat.com" "consoletype SELinux Policy documentation"
+.SH "NAME"
+consoletype_selinux \- Security Enhanced Linux Policy for the consoletype processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B consoletype
+(
+Determine of the console connected to the controlling terminal.
+)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux consoletype policy is very flexible allowing users to setup their consoletype processes in as secure a method as possible.
+.PP 
+The following file types are defined for consoletype:
+
+
+.EX
+.PP
+.B consoletype_exec_t 
+.EE
+
+- Set files with the consoletype_exec_t type, if you want to transition an executable to the consoletype_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/consoletype, /sbin/consoletype
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux consoletype policy is very flexible allowing users to setup their consoletype processes in as secure a method as possible.
+.PP 
+The following process types are defined for consoletype:
+
+.EX
+.B consoletype_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), consoletype(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/corosync_selinux.8 b/man/man8/corosync_selinux.8
new file mode 100644
index 0000000..a20c704
--- /dev/null
+++ b/man/man8/corosync_selinux.8
@@ -0,0 +1,149 @@
+.TH  "corosync_selinux"  "8"  "corosync" "dwalsh@redhat.com" "corosync SELinux Policy documentation"
+.SH "NAME"
+corosync_selinux \- Security Enhanced Linux Policy for the corosync processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B corosync
+(Corosync Cluster Engine)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux corosync policy is very flexible allowing users to setup their corosync processes in as secure a method as possible.
+.PP 
+The following file types are defined for corosync:
+
+
+.EX
+.PP
+.B corosync_exec_t 
+.EE
+
+- Set files with the corosync_exec_t type, if you want to transition an executable to the corosync_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/ccs_tool, /usr/sbin/corosync, /usr/sbin/corosync-notifyd, /usr/lib(64)?/heartbeat/heartbeat, /usr/sbin/cman_tool
+
+.EX
+.PP
+.B corosync_initrc_exec_t 
+.EE
+
+- Set files with the corosync_initrc_exec_t type, if you want to transition an executable to the corosync_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/heartbeat, /etc/rc\.d/init\.d/corosync
+
+.EX
+.PP
+.B corosync_tmp_t 
+.EE
+
+- Set files with the corosync_tmp_t type, if you want to store corosync temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B corosync_tmpfs_t 
+.EE
+
+- Set files with the corosync_tmpfs_t type, if you want to store corosync files on a tmpfs file system.
+
+
+.EX
+.PP
+.B corosync_unit_file_t 
+.EE
+
+- Set files with the corosync_unit_file_t type, if you want to treat the files as corosync unit content.
+
+
+.EX
+.PP
+.B corosync_var_lib_t 
+.EE
+
+- Set files with the corosync_var_lib_t type, if you want to store the corosync files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/corosync(/.*)?, /usr/lib(64)?/heartbeat(/.*)?
+
+.EX
+.PP
+.B corosync_var_log_t 
+.EE
+
+- Set files with the corosync_var_log_t type, if you want to treat the data as corosync var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B corosync_var_run_t 
+.EE
+
+- Set files with the corosync_var_run_t type, if you want to store the corosync files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/hearbeat(/.*)?, /var/run/corosync\.pid, /var/run/cman_.*
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux corosync policy is very flexible allowing users to setup their corosync processes in as secure a method as possible.
+.PP 
+The following process types are defined for corosync:
+
+.EX
+.B corosync_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), corosync(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/couchdb_selinux.8 b/man/man8/couchdb_selinux.8
new file mode 100644
index 0000000..61ec71c
--- /dev/null
+++ b/man/man8/couchdb_selinux.8
@@ -0,0 +1,151 @@
+.TH  "couchdb_selinux"  "8"  "couchdb" "dwalsh@redhat.com" "couchdb SELinux Policy documentation"
+.SH "NAME"
+couchdb_selinux \- Security Enhanced Linux Policy for the couchdb processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B couchdb
+(policy for couchdb)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux couchdb policy is very flexible allowing users to setup their couchdb processes in as secure a method as possible.
+.PP 
+The following file types are defined for couchdb:
+
+
+.EX
+.PP
+.B couchdb_etc_t 
+.EE
+
+- Set files with the couchdb_etc_t type, if you want to store couchdb files in the /etc directories.
+
+
+.EX
+.PP
+.B couchdb_exec_t 
+.EE
+
+- Set files with the couchdb_exec_t type, if you want to transition an executable to the couchdb_t domain.
+
+
+.EX
+.PP
+.B couchdb_log_t 
+.EE
+
+- Set files with the couchdb_log_t type, if you want to treat the data as couchdb log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B couchdb_tmp_t 
+.EE
+
+- Set files with the couchdb_tmp_t type, if you want to store couchdb temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B couchdb_unit_file_t 
+.EE
+
+- Set files with the couchdb_unit_file_t type, if you want to treat the files as couchdb unit content.
+
+
+.EX
+.PP
+.B couchdb_var_lib_t 
+.EE
+
+- Set files with the couchdb_var_lib_t type, if you want to store the couchdb files under the /var/lib directory.
+
+
+.EX
+.PP
+.B couchdb_var_run_t 
+.EE
+
+- Set files with the couchdb_var_run_t type, if you want to store the couchdb files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux couchdb policy is very flexible allowing users to setup their couchdb processes in as secure a method as possible.
+.PP 
+The following port types are defined for couchdb:
+
+.EX
+.TP 5
+.B couchdb_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux couchdb policy is very flexible allowing users to setup their couchdb processes in as secure a method as possible.
+.PP 
+The following process types are defined for couchdb:
+
+.EX
+.B couchdb_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), couchdb(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/courier_selinux.8 b/man/man8/courier_selinux.8
new file mode 100644
index 0000000..3dc9d81
--- /dev/null
+++ b/man/man8/courier_selinux.8
@@ -0,0 +1,165 @@
+.TH  "courier_selinux"  "8"  "courier" "dwalsh@redhat.com" "courier SELinux Policy documentation"
+.SH "NAME"
+courier_selinux \- Security Enhanced Linux Policy for the courier processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B courier
+(Courier IMAP and POP3 email servers)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux courier policy is very flexible allowing users to setup their courier processes in as secure a method as possible.
+.PP 
+The following file types are defined for courier:
+
+
+.EX
+.PP
+.B courier_authdaemon_exec_t 
+.EE
+
+- Set files with the courier_authdaemon_exec_t type, if you want to transition an executable to the courier_authdaemon_t domain.
+
+
+.EX
+.PP
+.B courier_etc_t 
+.EE
+
+- Set files with the courier_etc_t type, if you want to store courier files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/courier/rootcerts(/.*)?, /etc/courier(/.*)?
+
+.EX
+.PP
+.B courier_exec_t 
+.EE
+
+- Set files with the courier_exec_t type, if you want to transition an executable to the courier_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/courierlogger, /usr/lib/courier/courier/.*, /usr/sbin/courierldapaliasd
+
+.EX
+.PP
+.B courier_pcp_exec_t 
+.EE
+
+- Set files with the courier_pcp_exec_t type, if you want to transition an executable to the courier_pcp_t domain.
+
+
+.EX
+.PP
+.B courier_pop_exec_t 
+.EE
+
+- Set files with the courier_pop_exec_t type, if you want to transition an executable to the courier_pop_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/courier/imapd, /usr/lib/courier/courier/courierpop.*, /usr/lib/courier/pop3d, /usr/lib/courier/courier/imaplogin, /usr/bin/imapd
+
+.EX
+.PP
+.B courier_spool_t 
+.EE
+
+- Set files with the courier_spool_t type, if you want to store the courier files under the /var/spool directory.
+
+.br
+.TP 5
+Paths: 
+/var/spool/authdaemon(/.*)?, /var/spool/courier(/.*)?
+
+.EX
+.PP
+.B courier_sqwebmail_exec_t 
+.EE
+
+- Set files with the courier_sqwebmail_exec_t type, if you want to transition an executable to the courier_sqwebmail_t domain.
+
+
+.EX
+.PP
+.B courier_tcpd_exec_t 
+.EE
+
+- Set files with the courier_tcpd_exec_t type, if you want to transition an executable to the courier_tcpd_t domain.
+
+
+.EX
+.PP
+.B courier_var_lib_t 
+.EE
+
+- Set files with the courier_var_lib_t type, if you want to store the courier files under the /var/lib directory.
+
+
+.EX
+.PP
+.B courier_var_run_t 
+.EE
+
+- Set files with the courier_var_run_t type, if you want to store the courier files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux courier policy is very flexible allowing users to setup their courier processes in as secure a method as possible.
+.PP 
+The following process types are defined for courier:
+
+.EX
+.B courier_sqwebmail_t, courier_tcpd_t, courier_authdaemon_t, courier_pcp_t, courier_pop_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), courier(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/cpucontrol_selinux.8 b/man/man8/cpucontrol_selinux.8
new file mode 100644
index 0000000..e50677e
--- /dev/null
+++ b/man/man8/cpucontrol_selinux.8
@@ -0,0 +1,89 @@
+.TH  "cpucontrol_selinux"  "8"  "cpucontrol" "dwalsh@redhat.com" "cpucontrol SELinux Policy documentation"
+.SH "NAME"
+cpucontrol_selinux \- Security Enhanced Linux Policy for the cpucontrol processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B cpucontrol
+(Services for loading CPU microcode and CPU frequency scaling)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cpucontrol policy is very flexible allowing users to setup their cpucontrol processes in as secure a method as possible.
+.PP 
+The following file types are defined for cpucontrol:
+
+
+.EX
+.PP
+.B cpucontrol_conf_t 
+.EE
+
+- Set files with the cpucontrol_conf_t type, if you want to treat the files as cpucontrol configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B cpucontrol_exec_t 
+.EE
+
+- Set files with the cpucontrol_exec_t type, if you want to transition an executable to the cpucontrol_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/microcode_ctl, /usr/sbin/microcode_ctl
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cpucontrol policy is very flexible allowing users to setup their cpucontrol processes in as secure a method as possible.
+.PP 
+The following process types are defined for cpucontrol:
+
+.EX
+.B cpucontrol_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cpucontrol(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/cpufreqselector_selinux.8 b/man/man8/cpufreqselector_selinux.8
new file mode 100644
index 0000000..e7b10a3
--- /dev/null
+++ b/man/man8/cpufreqselector_selinux.8
@@ -0,0 +1,77 @@
+.TH  "cpufreqselector_selinux"  "8"  "cpufreqselector" "dwalsh@redhat.com" "cpufreqselector SELinux Policy documentation"
+.SH "NAME"
+cpufreqselector_selinux \- Security Enhanced Linux Policy for the cpufreqselector processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B cpufreqselector
+(Command-line CPU frequency settings)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cpufreqselector policy is very flexible allowing users to setup their cpufreqselector processes in as secure a method as possible.
+.PP 
+The following file types are defined for cpufreqselector:
+
+
+.EX
+.PP
+.B cpufreqselector_exec_t 
+.EE
+
+- Set files with the cpufreqselector_exec_t type, if you want to transition an executable to the cpufreqselector_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cpufreqselector policy is very flexible allowing users to setup their cpufreqselector processes in as secure a method as possible.
+.PP 
+The following process types are defined for cpufreqselector:
+
+.EX
+.B cpufreqselector_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cpufreqselector(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/cpuspeed_selinux.8 b/man/man8/cpuspeed_selinux.8
new file mode 100644
index 0000000..8142e64
--- /dev/null
+++ b/man/man8/cpuspeed_selinux.8
@@ -0,0 +1,83 @@
+.TH  "cpuspeed_selinux"  "8"  "cpuspeed" "dwalsh@redhat.com" "cpuspeed SELinux Policy documentation"
+.SH "NAME"
+cpuspeed_selinux \- Security Enhanced Linux Policy for the cpuspeed processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cpuspeed policy is very flexible allowing users to setup their cpuspeed processes in as secure a method as possible.
+.PP 
+The following file types are defined for cpuspeed:
+
+
+.EX
+.PP
+.B cpuspeed_exec_t 
+.EE
+
+- Set files with the cpuspeed_exec_t type, if you want to transition an executable to the cpuspeed_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/cpuspeed, /usr/sbin/powernowd, /usr/sbin/cpufreqd
+
+.EX
+.PP
+.B cpuspeed_var_run_t 
+.EE
+
+- Set files with the cpuspeed_var_run_t type, if you want to store the cpuspeed files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cpuspeed policy is very flexible allowing users to setup their cpuspeed processes in as secure a method as possible.
+.PP 
+The following process types are defined for cpuspeed:
+
+.EX
+.B cpuspeed_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cpuspeed(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/crack_selinux.8 b/man/man8/crack_selinux.8
new file mode 100644
index 0000000..328fc4d
--- /dev/null
+++ b/man/man8/crack_selinux.8
@@ -0,0 +1,95 @@
+.TH  "crack_selinux"  "8"  "crack" "dwalsh@redhat.com" "crack SELinux Policy documentation"
+.SH "NAME"
+crack_selinux \- Security Enhanced Linux Policy for the crack processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux crack policy is very flexible allowing users to setup their crack processes in as secure a method as possible.
+.PP 
+The following file types are defined for crack:
+
+
+.EX
+.PP
+.B crack_db_t 
+.EE
+
+- Set files with the crack_db_t type, if you want to treat the files as crack database content.
+
+.br
+.TP 5
+Paths: 
+/var/cache/cracklib(/.*)?, /usr/share/cracklib(/.*)?, /usr/lib/cracklib_dict.*
+
+.EX
+.PP
+.B crack_exec_t 
+.EE
+
+- Set files with the crack_exec_t type, if you want to transition an executable to the crack_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/cracklib-[a-z]*, /usr/sbin/crack_[a-z]*
+
+.EX
+.PP
+.B crack_tmp_t 
+.EE
+
+- Set files with the crack_tmp_t type, if you want to store crack temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux crack policy is very flexible allowing users to setup their crack processes in as secure a method as possible.
+.PP 
+The following process types are defined for crack:
+
+.EX
+.B crack_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), crack(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/crond_selinux.8 b/man/man8/crond_selinux.8
new file mode 100644
index 0000000..b717fd8
--- /dev/null
+++ b/man/man8/crond_selinux.8
@@ -0,0 +1,173 @@
+.TH  "crond_selinux"  "8"  "crond" "dwalsh@redhat.com" "crond SELinux Policy documentation"
+.SH "NAME"
+crond_selinux \- Security Enhanced Linux Policy for the crond processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  crond policy is extremely flexible and has several booleans that allow you to manipulate the policy and run crond with the tightest access possible.
+
+
+.PP
+If you want to enable extra rules in the cron domain to support fcron, you must turn on the fcron_crond boolean.
+
+.EX
+.B setsebool -P fcron_crond 1
+.EE
+
+.PP
+If you want to allow system cron jobs to relabel filesystem for restoring file contexts, you must turn on the cron_can_relabel boolean.
+
+.EX
+.B setsebool -P cron_can_relabel 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux crond policy is very flexible allowing users to setup their crond processes in as secure a method as possible.
+.PP 
+The following file types are defined for crond:
+
+
+.EX
+.PP
+.B cron_log_t 
+.EE
+
+- Set files with the cron_log_t type, if you want to treat the data as cron log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B cron_spool_t 
+.EE
+
+- Set files with the cron_spool_t type, if you want to store the cron files under the /var/spool directory.
+
+.br
+.TP 5
+Paths: 
+/var/spool/fcron, /var/spool/cron/crontabs
+
+.EX
+.PP
+.B cron_var_lib_t 
+.EE
+
+- Set files with the cron_var_lib_t type, if you want to store the cron files under the /var/lib directory.
+
+
+.EX
+.PP
+.B cron_var_run_t 
+.EE
+
+- Set files with the cron_var_run_t type, if you want to store the cron files under the /run directory.
+
+
+.EX
+.PP
+.B crond_exec_t 
+.EE
+
+- Set files with the crond_exec_t type, if you want to transition an executable to the crond_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/atd, /usr/sbin/fcron, /usr/sbin/cron(d)?
+
+.EX
+.PP
+.B crond_initrc_exec_t 
+.EE
+
+- Set files with the crond_initrc_exec_t type, if you want to transition an executable to the crond_initrc_t domain.
+
+
+.EX
+.PP
+.B crond_tmp_t 
+.EE
+
+- Set files with the crond_tmp_t type, if you want to store crond temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B crond_unit_file_t 
+.EE
+
+- Set files with the crond_unit_file_t type, if you want to treat the files as crond unit content.
+
+.br
+.TP 5
+Paths: 
+/lib/systemd/system/atd\.service, /usr/lib/systemd/system/crond\.service, /lib/systemd/system/crond\.service
+
+.EX
+.PP
+.B crond_var_run_t 
+.EE
+
+- Set files with the crond_var_run_t type, if you want to store the crond files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/crond?\.pid, /var/run/.*cron.*, /var/run/fcron\.pid, /var/run/crond?\.reboot, /var/run/fcron\.fifo, /var/run/atd\.pid, /var/run/anacron\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux crond policy is very flexible allowing users to setup their crond processes in as secure a method as possible.
+.PP 
+The following process types are defined for crond:
+
+.EX
+.B crond_t, cronjob_t, crontab_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), crond(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/crontab_selinux.8 b/man/man8/crontab_selinux.8
new file mode 100644
index 0000000..3de534f
--- /dev/null
+++ b/man/man8/crontab_selinux.8
@@ -0,0 +1,83 @@
+.TH  "crontab_selinux"  "8"  "crontab" "dwalsh@redhat.com" "crontab SELinux Policy documentation"
+.SH "NAME"
+crontab_selinux \- Security Enhanced Linux Policy for the crontab processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux crontab policy is very flexible allowing users to setup their crontab processes in as secure a method as possible.
+.PP 
+The following file types are defined for crontab:
+
+
+.EX
+.PP
+.B crontab_exec_t 
+.EE
+
+- Set files with the crontab_exec_t type, if you want to transition an executable to the crontab_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/(f)?crontab, /usr/bin/at
+
+.EX
+.PP
+.B crontab_tmp_t 
+.EE
+
+- Set files with the crontab_tmp_t type, if you want to store crontab temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux crontab policy is very flexible allowing users to setup their crontab processes in as secure a method as possible.
+.PP 
+The following process types are defined for crontab:
+
+.EX
+.B crontab_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), crontab(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/ctdbd_selinux.8 b/man/man8/ctdbd_selinux.8
new file mode 100644
index 0000000..1da47eb
--- /dev/null
+++ b/man/man8/ctdbd_selinux.8
@@ -0,0 +1,155 @@
+.TH  "ctdbd_selinux"  "8"  "ctdbd" "dwalsh@redhat.com" "ctdbd SELinux Policy documentation"
+.SH "NAME"
+ctdbd_selinux \- Security Enhanced Linux Policy for the ctdbd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B ctdbd
+(policy for ctdbd)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ctdbd policy is very flexible allowing users to setup their ctdbd processes in as secure a method as possible.
+.PP 
+The following file types are defined for ctdbd:
+
+
+.EX
+.PP
+.B ctdbd_exec_t 
+.EE
+
+- Set files with the ctdbd_exec_t type, if you want to transition an executable to the ctdbd_t domain.
+
+
+.EX
+.PP
+.B ctdbd_initrc_exec_t 
+.EE
+
+- Set files with the ctdbd_initrc_exec_t type, if you want to transition an executable to the ctdbd_initrc_t domain.
+
+
+.EX
+.PP
+.B ctdbd_log_t 
+.EE
+
+- Set files with the ctdbd_log_t type, if you want to treat the data as ctdbd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B ctdbd_spool_t 
+.EE
+
+- Set files with the ctdbd_spool_t type, if you want to store the ctdbd files under the /var/spool directory.
+
+
+.EX
+.PP
+.B ctdbd_tmp_t 
+.EE
+
+- Set files with the ctdbd_tmp_t type, if you want to store ctdbd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B ctdbd_var_lib_t 
+.EE
+
+- Set files with the ctdbd_var_lib_t type, if you want to store the ctdbd files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/ctdb(/.*)?, /var/lib/ctdbd(/.*)?, /etc/ctdb(/.*)?, /var/ctdbd(/.*)?
+
+.EX
+.PP
+.B ctdbd_var_run_t 
+.EE
+
+- Set files with the ctdbd_var_run_t type, if you want to store the ctdbd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux ctdbd policy is very flexible allowing users to setup their ctdbd processes in as secure a method as possible.
+.PP 
+The following port types are defined for ctdbd:
+
+.EX
+.TP 5
+.B ctdb_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ctdbd policy is very flexible allowing users to setup their ctdbd processes in as secure a method as possible.
+.PP 
+The following process types are defined for ctdbd:
+
+.EX
+.B ctdbd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ctdbd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/cups_selinux.8 b/man/man8/cups_selinux.8
new file mode 100644
index 0000000..8bedca4
--- /dev/null
+++ b/man/man8/cups_selinux.8
@@ -0,0 +1,225 @@
+.TH  "cups_selinux"  "8"  "cups" "dwalsh@redhat.com" "cups SELinux Policy documentation"
+.SH "NAME"
+cups_selinux \- Security Enhanced Linux Policy for the cups processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B cups
+(Common UNIX printing system)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cups policy is very flexible allowing users to setup their cups processes in as secure a method as possible.
+.PP 
+The following file types are defined for cups:
+
+
+.EX
+.PP
+.B cups_pdf_exec_t 
+.EE
+
+- Set files with the cups_pdf_exec_t type, if you want to transition an executable to the cups_pdf_t domain.
+
+
+.EX
+.PP
+.B cups_pdf_tmp_t 
+.EE
+
+- Set files with the cups_pdf_tmp_t type, if you want to store cups pdf temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B cupsd_config_exec_t 
+.EE
+
+- Set files with the cupsd_config_exec_t type, if you want to transition an executable to the cupsd_config_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/printconf-backend, /usr/sbin/hal_lpadmin, /usr/lib/udev/udev-configure-printer, /usr/libexec/cups-pk-helper-mechanism, /usr/libexec/hal_lpadmin, /lib/udev/udev-configure-printer, /usr/bin/cups-config-daemon
+
+.EX
+.PP
+.B cupsd_config_var_run_t 
+.EE
+
+- Set files with the cupsd_config_var_run_t type, if you want to store the cupsd config files under the /run directory.
+
+
+.EX
+.PP
+.B cupsd_etc_t 
+.EE
+
+- Set files with the cupsd_etc_t type, if you want to store cupsd files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/usr/share/cups(/.*)?, /etc/cups(/.*)?
+
+.EX
+.PP
+.B cupsd_exec_t 
+.EE
+
+- Set files with the cupsd_exec_t type, if you want to transition an executable to the cupsd_t domain.
+
+
+.EX
+.PP
+.B cupsd_initrc_exec_t 
+.EE
+
+- Set files with the cupsd_initrc_exec_t type, if you want to transition an executable to the cupsd_initrc_t domain.
+
+
+.EX
+.PP
+.B cupsd_interface_t 
+.EE
+
+- Set files with the cupsd_interface_t type, if you want to treat the files as cupsd interface data.
+
+
+.EX
+.PP
+.B cupsd_lock_t 
+.EE
+
+- Set files with the cupsd_lock_t type, if you want to treat the files as cupsd lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B cupsd_log_t 
+.EE
+
+- Set files with the cupsd_log_t type, if you want to treat the data as cupsd log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/cups(/.*)?, /usr/local/Brother/fax/.*\.log, /var/log/turboprint.*
+
+.EX
+.PP
+.B cupsd_lpd_exec_t 
+.EE
+
+- Set files with the cupsd_lpd_exec_t type, if you want to transition an executable to the cupsd_lpd_t domain.
+
+
+.EX
+.PP
+.B cupsd_lpd_tmp_t 
+.EE
+
+- Set files with the cupsd_lpd_tmp_t type, if you want to store cupsd lpd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B cupsd_lpd_var_run_t 
+.EE
+
+- Set files with the cupsd_lpd_var_run_t type, if you want to store the cupsd lpd files under the /run directory.
+
+
+.EX
+.PP
+.B cupsd_rw_etc_t 
+.EE
+
+- Set files with the cupsd_rw_etc_t type, if you want to store cupsd rw files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/cups/lpoptions.*, /usr/local/linuxprinter/ppd(/.*)?, /etc/cups/subscriptions.*, /usr/local/Brother/(.*/)?inf(/.*)?, /etc/cups/classes\.conf.*, /usr/lib/bjlib(/.*)?, /etc/cups/ppd(/.*)?, /opt/gutenprint/ppds(/.*)?, /etc/printcap.*, /etc/alchemist/namespace/printconf(/.*)?, /usr/local/Printer/(.*/)?inf(/.*)?, /etc/cups/ppds\.dat, /etc/cups/certs, /etc/cups/certs/.*, /etc/cups/printers\.conf.*, /var/lib/cups/certs/.*, /var/lib/cups/certs, /var/cache/foomatic(/.*)?, /var/cache/alchemist/printconf.*, /etc/cups/cupsd\.conf.*, /var/cache/cups(/.*)?, /usr/share/foomatic/db/oldprinterids
+
+.EX
+.PP
+.B cupsd_tmp_t 
+.EE
+
+- Set files with the cupsd_tmp_t type, if you want to store cupsd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B cupsd_unit_file_t 
+.EE
+
+- Set files with the cupsd_unit_file_t type, if you want to treat the files as cupsd unit content.
+
+
+.EX
+.PP
+.B cupsd_var_run_t 
+.EE
+
+- Set files with the cupsd_var_run_t type, if you want to store the cupsd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/ccpd(/.*)?, /var/ekpd(/.*)?, /var/turboprint(/.*)?, /var/run/cups(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cups policy is very flexible allowing users to setup their cups processes in as secure a method as possible.
+.PP 
+The following process types are defined for cups:
+
+.EX
+.B cupsd_t, cupsd_config_t, cupsd_lpd_t, cups_pdf_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cups(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/cupsd_selinux.8 b/man/man8/cupsd_selinux.8
new file mode 100644
index 0000000..2ce03af
--- /dev/null
+++ b/man/man8/cupsd_selinux.8
@@ -0,0 +1,219 @@
+.TH  "cupsd_selinux"  "8"  "cupsd" "dwalsh@redhat.com" "cupsd SELinux Policy documentation"
+.SH "NAME"
+cupsd_selinux \- Security Enhanced Linux Policy for the cupsd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cupsd policy is very flexible allowing users to setup their cupsd processes in as secure a method as possible.
+.PP 
+The following file types are defined for cupsd:
+
+
+.EX
+.PP
+.B cups_pdf_exec_t 
+.EE
+
+- Set files with the cups_pdf_exec_t type, if you want to transition an executable to the cups_pdf_t domain.
+
+
+.EX
+.PP
+.B cups_pdf_tmp_t 
+.EE
+
+- Set files with the cups_pdf_tmp_t type, if you want to store cups pdf temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B cupsd_config_exec_t 
+.EE
+
+- Set files with the cupsd_config_exec_t type, if you want to transition an executable to the cupsd_config_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/printconf-backend, /usr/sbin/hal_lpadmin, /usr/lib/udev/udev-configure-printer, /usr/libexec/cups-pk-helper-mechanism, /usr/libexec/hal_lpadmin, /lib/udev/udev-configure-printer, /usr/bin/cups-config-daemon
+
+.EX
+.PP
+.B cupsd_config_var_run_t 
+.EE
+
+- Set files with the cupsd_config_var_run_t type, if you want to store the cupsd config files under the /run directory.
+
+
+.EX
+.PP
+.B cupsd_etc_t 
+.EE
+
+- Set files with the cupsd_etc_t type, if you want to store cupsd files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/usr/share/cups(/.*)?, /etc/cups(/.*)?
+
+.EX
+.PP
+.B cupsd_exec_t 
+.EE
+
+- Set files with the cupsd_exec_t type, if you want to transition an executable to the cupsd_t domain.
+
+
+.EX
+.PP
+.B cupsd_initrc_exec_t 
+.EE
+
+- Set files with the cupsd_initrc_exec_t type, if you want to transition an executable to the cupsd_initrc_t domain.
+
+
+.EX
+.PP
+.B cupsd_interface_t 
+.EE
+
+- Set files with the cupsd_interface_t type, if you want to treat the files as cupsd interface data.
+
+
+.EX
+.PP
+.B cupsd_lock_t 
+.EE
+
+- Set files with the cupsd_lock_t type, if you want to treat the files as cupsd lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B cupsd_log_t 
+.EE
+
+- Set files with the cupsd_log_t type, if you want to treat the data as cupsd log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/cups(/.*)?, /usr/local/Brother/fax/.*\.log, /var/log/turboprint.*
+
+.EX
+.PP
+.B cupsd_lpd_exec_t 
+.EE
+
+- Set files with the cupsd_lpd_exec_t type, if you want to transition an executable to the cupsd_lpd_t domain.
+
+
+.EX
+.PP
+.B cupsd_lpd_tmp_t 
+.EE
+
+- Set files with the cupsd_lpd_tmp_t type, if you want to store cupsd lpd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B cupsd_lpd_var_run_t 
+.EE
+
+- Set files with the cupsd_lpd_var_run_t type, if you want to store the cupsd lpd files under the /run directory.
+
+
+.EX
+.PP
+.B cupsd_rw_etc_t 
+.EE
+
+- Set files with the cupsd_rw_etc_t type, if you want to store cupsd rw files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/cups/lpoptions.*, /usr/local/linuxprinter/ppd(/.*)?, /etc/cups/subscriptions.*, /usr/local/Brother/(.*/)?inf(/.*)?, /etc/cups/classes\.conf.*, /usr/lib/bjlib(/.*)?, /etc/cups/ppd(/.*)?, /opt/gutenprint/ppds(/.*)?, /etc/printcap.*, /etc/alchemist/namespace/printconf(/.*)?, /usr/local/Printer/(.*/)?inf(/.*)?, /etc/cups/ppds\.dat, /etc/cups/certs, /etc/cups/certs/.*, /etc/cups/printers\.conf.*, /var/lib/cups/certs/.*, /var/lib/cups/certs, /var/cache/foomatic(/.*)?, /var/cache/alchemist/printconf.*, /etc/cups/cupsd\.conf.*, /var/cache/cups(/.*)?, /usr/share/foomatic/db/oldprinterids
+
+.EX
+.PP
+.B cupsd_tmp_t 
+.EE
+
+- Set files with the cupsd_tmp_t type, if you want to store cupsd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B cupsd_unit_file_t 
+.EE
+
+- Set files with the cupsd_unit_file_t type, if you want to treat the files as cupsd unit content.
+
+
+.EX
+.PP
+.B cupsd_var_run_t 
+.EE
+
+- Set files with the cupsd_var_run_t type, if you want to store the cupsd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/ccpd(/.*)?, /var/ekpd(/.*)?, /var/turboprint(/.*)?, /var/run/cups(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cupsd policy is very flexible allowing users to setup their cupsd processes in as secure a method as possible.
+.PP 
+The following process types are defined for cupsd:
+
+.EX
+.B cupsd_t, cupsd_config_t, cupsd_lpd_t, cups_pdf_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cupsd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/cvs_selinux.8 b/man/man8/cvs_selinux.8
new file mode 100644
index 0000000..5047556
--- /dev/null
+++ b/man/man8/cvs_selinux.8
@@ -0,0 +1,162 @@
+.TH  "cvs_selinux"  "8"  "cvs" "dwalsh@redhat.com" "cvs SELinux Policy documentation"
+.SH "NAME"
+cvs_selinux \- Security Enhanced Linux Policy for the cvs processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B cvs
+(Concurrent versions system)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  cvs policy is extremely flexible and has several booleans that allow you to manipulate the policy and run cvs with the tightest access possible.
+
+
+.PP
+If you want to allow cvs daemon to read shado, you must turn on the allow_cvs_read_shadow boolean.
+
+.EX
+.B setsebool -P allow_cvs_read_shadow 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cvs policy is very flexible allowing users to setup their cvs processes in as secure a method as possible.
+.PP 
+The following file types are defined for cvs:
+
+
+.EX
+.PP
+.B cvs_data_t 
+.EE
+
+- Set files with the cvs_data_t type, if you want to treat the files as cvs content.
+
+.br
+.TP 5
+Paths: 
+/opt/cvs(/.*)?, /var/cvs(/.*)?
+
+.EX
+.PP
+.B cvs_exec_t 
+.EE
+
+- Set files with the cvs_exec_t type, if you want to transition an executable to the cvs_t domain.
+
+
+.EX
+.PP
+.B cvs_initrc_exec_t 
+.EE
+
+- Set files with the cvs_initrc_exec_t type, if you want to transition an executable to the cvs_initrc_t domain.
+
+
+.EX
+.PP
+.B cvs_keytab_t 
+.EE
+
+- Set files with the cvs_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B cvs_tmp_t 
+.EE
+
+- Set files with the cvs_tmp_t type, if you want to store cvs temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B cvs_var_run_t 
+.EE
+
+- Set files with the cvs_var_run_t type, if you want to store the cvs files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux cvs policy is very flexible allowing users to setup their cvs processes in as secure a method as possible.
+.PP 
+The following port types are defined for cvs:
+
+.EX
+.TP 5
+.B cvs_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cvs policy is very flexible allowing users to setup their cvs processes in as secure a method as possible.
+.PP 
+The following process types are defined for cvs:
+
+.EX
+.B cvs_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cvs(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/cyphesis_selinux.8 b/man/man8/cyphesis_selinux.8
new file mode 100644
index 0000000..25cbcca
--- /dev/null
+++ b/man/man8/cyphesis_selinux.8
@@ -0,0 +1,127 @@
+.TH  "cyphesis_selinux"  "8"  "cyphesis" "dwalsh@redhat.com" "cyphesis SELinux Policy documentation"
+.SH "NAME"
+cyphesis_selinux \- Security Enhanced Linux Policy for the cyphesis processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B cyphesis
+(Cyphesis WorldForge game server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cyphesis policy is very flexible allowing users to setup their cyphesis processes in as secure a method as possible.
+.PP 
+The following file types are defined for cyphesis:
+
+
+.EX
+.PP
+.B cyphesis_exec_t 
+.EE
+
+- Set files with the cyphesis_exec_t type, if you want to transition an executable to the cyphesis_t domain.
+
+
+.EX
+.PP
+.B cyphesis_log_t 
+.EE
+
+- Set files with the cyphesis_log_t type, if you want to treat the data as cyphesis log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B cyphesis_tmp_t 
+.EE
+
+- Set files with the cyphesis_tmp_t type, if you want to store cyphesis temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B cyphesis_var_run_t 
+.EE
+
+- Set files with the cyphesis_var_run_t type, if you want to store the cyphesis files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux cyphesis policy is very flexible allowing users to setup their cyphesis processes in as secure a method as possible.
+.PP 
+The following port types are defined for cyphesis:
+
+.EX
+.TP 5
+.B cyphesis_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cyphesis policy is very flexible allowing users to setup their cyphesis processes in as secure a method as possible.
+.PP 
+The following process types are defined for cyphesis:
+
+.EX
+.B cyphesis_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cyphesis(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/cyrus_selinux.8 b/man/man8/cyrus_selinux.8
new file mode 100644
index 0000000..d9b68c2
--- /dev/null
+++ b/man/man8/cyrus_selinux.8
@@ -0,0 +1,125 @@
+.TH  "cyrus_selinux"  "8"  "cyrus" "dwalsh@redhat.com" "cyrus SELinux Policy documentation"
+.SH "NAME"
+cyrus_selinux \- Security Enhanced Linux Policy for the cyrus processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B cyrus
+(Cyrus is an IMAP service intended to be run on sealed servers)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux cyrus policy is very flexible allowing users to setup their cyrus processes in as secure a method as possible.
+.PP 
+The following file types are defined for cyrus:
+
+
+.EX
+.PP
+.B cyrus_exec_t 
+.EE
+
+- Set files with the cyrus_exec_t type, if you want to transition an executable to the cyrus_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/cyrus-imapd/cyrus-master, /usr/lib/cyrus/master
+
+.EX
+.PP
+.B cyrus_initrc_exec_t 
+.EE
+
+- Set files with the cyrus_initrc_exec_t type, if you want to transition an executable to the cyrus_initrc_t domain.
+
+
+.EX
+.PP
+.B cyrus_keytab_t 
+.EE
+
+- Set files with the cyrus_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B cyrus_tmp_t 
+.EE
+
+- Set files with the cyrus_tmp_t type, if you want to store cyrus temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B cyrus_var_lib_t 
+.EE
+
+- Set files with the cyrus_var_lib_t type, if you want to store the cyrus files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/imap(/.*)?, /var/lib/imap(/.*)?
+
+.EX
+.PP
+.B cyrus_var_run_t 
+.EE
+
+- Set files with the cyrus_var_run_t type, if you want to store the cyrus files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux cyrus policy is very flexible allowing users to setup their cyrus processes in as secure a method as possible.
+.PP 
+The following process types are defined for cyrus:
+
+.EX
+.B cyrus_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), cyrus(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/dbadm_selinux.8 b/man/man8/dbadm_selinux.8
new file mode 100644
index 0000000..4bbec80
--- /dev/null
+++ b/man/man8/dbadm_selinux.8
@@ -0,0 +1,65 @@
+.TH  "dbadm_selinux"  "8"  "dbadm" "mgrepl@redhat.com" "dbadm SELinux Policy documentation"
+.SH "NAME"
+dbadm_r \- \fBDatabase administrator role\fP - Security Enhanced Linux Policy 
+
+.SH DESCRIPTION
+
+SELinux supports Roles Based Access Control, some Linux roles are login roles, while other roles need to be transition to. 
+
+Note: The examples in the man page will user the staff_u user.
+
+Non login roles are usually used for administrative tasks.
+
+Roles usually have default types assigned to them. 
+
+The default type for the dbadm_r role is dbadm_t.
+
+You can use the 
+.B newrole 
+program to transition directly to this role.
+
+.B newrole -r dbadm_r -t dbadm_t
+
+.B sudo 
+can also be setup to transition to this role using the visudo command.
+
+USERNAME ALL=(ALL) ROLE=dbadm_r TYPE=dbadm_t COMMAND
+.br
+sudo will run COMMAND as staff_u:dbadm_r:dbadm_t:LEVEL
+
+If you want to use a non login role, you need to make sure the SELinux user you are using can reach this role.
+
+You can see all of the assigned SELinux roles using the following
+
+.B semanage user -l
+
+If you wanted to add dbadm_r to the staff_u user, you would execute:
+
+.B $ semanage user -m -R 'staff_r dbadm_r' staff_u 
+
+
+
+SELinux policy also controls which roles can transition to a different role.  
+You can list these rules using the following command.
+
+.B sesearch --role_allow
+
+SELinux policy allows the staff_r role can transition to the dbadm_r role.
+
+
+.SH "COMMANDS"
+
+.B semanage login
+can also be used to manipulate the Linux User to SELinux User mappings
+
+.B semanage user
+can also be used to manipulate SELinux user definitions.
+
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genuserman.py.
+
+.SH "SEE ALSO"
+selinux(8), semanage(8).
diff --git a/man/man8/dbskkd_selinux.8 b/man/man8/dbskkd_selinux.8
new file mode 100644
index 0000000..224a13a
--- /dev/null
+++ b/man/man8/dbskkd_selinux.8
@@ -0,0 +1,113 @@
+.TH  "dbskkd_selinux"  "8"  "dbskkd" "dwalsh@redhat.com" "dbskkd SELinux Policy documentation"
+.SH "NAME"
+dbskkd_selinux \- Security Enhanced Linux Policy for the dbskkd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dbskkd policy is very flexible allowing users to setup their dbskkd processes in as secure a method as possible.
+.PP 
+The following file types are defined for dbskkd:
+
+
+.EX
+.PP
+.B dbskkd_exec_t 
+.EE
+
+- Set files with the dbskkd_exec_t type, if you want to transition an executable to the dbskkd_t domain.
+
+
+.EX
+.PP
+.B dbskkd_tmp_t 
+.EE
+
+- Set files with the dbskkd_tmp_t type, if you want to store dbskkd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dbskkd_var_run_t 
+.EE
+
+- Set files with the dbskkd_var_run_t type, if you want to store the dbskkd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux dbskkd policy is very flexible allowing users to setup their dbskkd processes in as secure a method as possible.
+.PP 
+The following port types are defined for dbskkd:
+
+.EX
+.TP 5
+.B dbskkd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dbskkd policy is very flexible allowing users to setup their dbskkd processes in as secure a method as possible.
+.PP 
+The following process types are defined for dbskkd:
+
+.EX
+.B dbskkd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dbskkd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/dcc_selinux.8 b/man/man8/dcc_selinux.8
new file mode 100644
index 0000000..ac78346
--- /dev/null
+++ b/man/man8/dcc_selinux.8
@@ -0,0 +1,246 @@
+.TH  "dcc_selinux"  "8"  "dcc" "dwalsh@redhat.com" "dcc SELinux Policy documentation"
+.SH "NAME"
+dcc_selinux \- Security Enhanced Linux Policy for the dcc processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B dcc
+(Distributed checksum clearinghouse spam filtering)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dcc policy is very flexible allowing users to setup their dcc processes in as secure a method as possible.
+.PP 
+The following file types are defined for dcc:
+
+
+.EX
+.PP
+.B dcc_client_exec_t 
+.EE
+
+- Set files with the dcc_client_exec_t type, if you want to transition an executable to the dcc_client_t domain.
+
+
+.EX
+.PP
+.B dcc_client_map_t 
+.EE
+
+- Set files with the dcc_client_map_t type, if you want to treat the files as dcc client map data.
+
+.br
+.TP 5
+Paths: 
+/var/lib/dcc/map, /etc/dcc/map, /var/run/dcc/map, /var/dcc/map
+
+.EX
+.PP
+.B dcc_client_tmp_t 
+.EE
+
+- Set files with the dcc_client_tmp_t type, if you want to store dcc client temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dcc_dbclean_exec_t 
+.EE
+
+- Set files with the dcc_dbclean_exec_t type, if you want to transition an executable to the dcc_dbclean_t domain.
+
+
+.EX
+.PP
+.B dcc_dbclean_tmp_t 
+.EE
+
+- Set files with the dcc_dbclean_tmp_t type, if you want to store dcc dbclean temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dcc_var_run_t 
+.EE
+
+- Set files with the dcc_var_run_t type, if you want to store the dcc files under the /run directory.
+
+
+.EX
+.PP
+.B dcc_var_t 
+.EE
+
+- Set files with the dcc_var_t type, if you want to store the  files under the /var directory.
+
+.br
+.TP 5
+Paths: 
+/etc/dcc(/.*)?, /var/dcc(/.*)?, /var/lib/dcc(/.*)?
+
+.EX
+.PP
+.B dccd_exec_t 
+.EE
+
+- Set files with the dccd_exec_t type, if you want to transition an executable to the dccd_t domain.
+
+
+.EX
+.PP
+.B dccd_tmp_t 
+.EE
+
+- Set files with the dccd_tmp_t type, if you want to store dccd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dccd_var_run_t 
+.EE
+
+- Set files with the dccd_var_run_t type, if you want to store the dccd files under the /run directory.
+
+
+.EX
+.PP
+.B dccifd_exec_t 
+.EE
+
+- Set files with the dccifd_exec_t type, if you want to transition an executable to the dccifd_t domain.
+
+
+.EX
+.PP
+.B dccifd_tmp_t 
+.EE
+
+- Set files with the dccifd_tmp_t type, if you want to store dccifd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dccifd_var_run_t 
+.EE
+
+- Set files with the dccifd_var_run_t type, if you want to store the dccifd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/etc/dcc/dccifd, /var/run/dcc/dccifd
+
+.EX
+.PP
+.B dccm_exec_t 
+.EE
+
+- Set files with the dccm_exec_t type, if you want to transition an executable to the dccm_t domain.
+
+
+.EX
+.PP
+.B dccm_tmp_t 
+.EE
+
+- Set files with the dccm_tmp_t type, if you want to store dccm temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dccm_var_run_t 
+.EE
+
+- Set files with the dccm_var_run_t type, if you want to store the dccm files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux dcc policy is very flexible allowing users to setup their dcc processes in as secure a method as possible.
+.PP 
+The following port types are defined for dcc:
+
+.EX
+.TP 5
+.B dcc_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B dccm_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dcc policy is very flexible allowing users to setup their dcc processes in as secure a method as possible.
+.PP 
+The following process types are defined for dcc:
+
+.EX
+.B dccm_t, dcc_client_t, dcc_dbclean_t, dccifd_t, dccd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dcc(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/dccd_selinux.8 b/man/man8/dccd_selinux.8
new file mode 100644
index 0000000..2da502a
--- /dev/null
+++ b/man/man8/dccd_selinux.8
@@ -0,0 +1,188 @@
+.TH  "dccd_selinux"  "8"  "dccd" "dwalsh@redhat.com" "dccd SELinux Policy documentation"
+.SH "NAME"
+dccd_selinux \- Security Enhanced Linux Policy for the dccd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dccd policy is very flexible allowing users to setup their dccd processes in as secure a method as possible.
+.PP 
+The following file types are defined for dccd:
+
+
+.EX
+.PP
+.B dcc_client_exec_t 
+.EE
+
+- Set files with the dcc_client_exec_t type, if you want to transition an executable to the dcc_client_t domain.
+
+
+.EX
+.PP
+.B dcc_client_map_t 
+.EE
+
+- Set files with the dcc_client_map_t type, if you want to treat the files as dcc client map data.
+
+.br
+.TP 5
+Paths: 
+/var/lib/dcc/map, /etc/dcc/map, /var/run/dcc/map, /var/dcc/map
+
+.EX
+.PP
+.B dcc_client_tmp_t 
+.EE
+
+- Set files with the dcc_client_tmp_t type, if you want to store dcc client temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dcc_dbclean_exec_t 
+.EE
+
+- Set files with the dcc_dbclean_exec_t type, if you want to transition an executable to the dcc_dbclean_t domain.
+
+
+.EX
+.PP
+.B dcc_dbclean_tmp_t 
+.EE
+
+- Set files with the dcc_dbclean_tmp_t type, if you want to store dcc dbclean temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dcc_var_run_t 
+.EE
+
+- Set files with the dcc_var_run_t type, if you want to store the dcc files under the /run directory.
+
+
+.EX
+.PP
+.B dcc_var_t 
+.EE
+
+- Set files with the dcc_var_t type, if you want to store the  files under the /var directory.
+
+.br
+.TP 5
+Paths: 
+/etc/dcc(/.*)?, /var/dcc(/.*)?, /var/lib/dcc(/.*)?
+
+.EX
+.PP
+.B dccd_exec_t 
+.EE
+
+- Set files with the dccd_exec_t type, if you want to transition an executable to the dccd_t domain.
+
+
+.EX
+.PP
+.B dccd_tmp_t 
+.EE
+
+- Set files with the dccd_tmp_t type, if you want to store dccd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dccd_var_run_t 
+.EE
+
+- Set files with the dccd_var_run_t type, if you want to store the dccd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux dccd policy is very flexible allowing users to setup their dccd processes in as secure a method as possible.
+.PP 
+The following port types are defined for dccd:
+
+.EX
+.TP 5
+.B dcc_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B dccm_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dccd policy is very flexible allowing users to setup their dccd processes in as secure a method as possible.
+.PP 
+The following process types are defined for dccd:
+
+.EX
+.B dccm_t, dcc_client_t, dcc_dbclean_t, dccifd_t, dccd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dccd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/dccifd_selinux.8 b/man/man8/dccifd_selinux.8
new file mode 100644
index 0000000..c80e92b
--- /dev/null
+++ b/man/man8/dccifd_selinux.8
@@ -0,0 +1,91 @@
+.TH  "dccifd_selinux"  "8"  "dccifd" "dwalsh@redhat.com" "dccifd SELinux Policy documentation"
+.SH "NAME"
+dccifd_selinux \- Security Enhanced Linux Policy for the dccifd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dccifd policy is very flexible allowing users to setup their dccifd processes in as secure a method as possible.
+.PP 
+The following file types are defined for dccifd:
+
+
+.EX
+.PP
+.B dccifd_exec_t 
+.EE
+
+- Set files with the dccifd_exec_t type, if you want to transition an executable to the dccifd_t domain.
+
+
+.EX
+.PP
+.B dccifd_tmp_t 
+.EE
+
+- Set files with the dccifd_tmp_t type, if you want to store dccifd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dccifd_var_run_t 
+.EE
+
+- Set files with the dccifd_var_run_t type, if you want to store the dccifd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/etc/dcc/dccifd, /var/run/dcc/dccifd
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dccifd policy is very flexible allowing users to setup their dccifd processes in as secure a method as possible.
+.PP 
+The following process types are defined for dccifd:
+
+.EX
+.B dccifd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dccifd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/dccm_selinux.8 b/man/man8/dccm_selinux.8
new file mode 100644
index 0000000..a9a2caa
--- /dev/null
+++ b/man/man8/dccm_selinux.8
@@ -0,0 +1,113 @@
+.TH  "dccm_selinux"  "8"  "dccm" "dwalsh@redhat.com" "dccm SELinux Policy documentation"
+.SH "NAME"
+dccm_selinux \- Security Enhanced Linux Policy for the dccm processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dccm policy is very flexible allowing users to setup their dccm processes in as secure a method as possible.
+.PP 
+The following file types are defined for dccm:
+
+
+.EX
+.PP
+.B dccm_exec_t 
+.EE
+
+- Set files with the dccm_exec_t type, if you want to transition an executable to the dccm_t domain.
+
+
+.EX
+.PP
+.B dccm_tmp_t 
+.EE
+
+- Set files with the dccm_tmp_t type, if you want to store dccm temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dccm_var_run_t 
+.EE
+
+- Set files with the dccm_var_run_t type, if you want to store the dccm files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux dccm policy is very flexible allowing users to setup their dccm processes in as secure a method as possible.
+.PP 
+The following port types are defined for dccm:
+
+.EX
+.TP 5
+.B dccm_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dccm policy is very flexible allowing users to setup their dccm processes in as secure a method as possible.
+.PP 
+The following process types are defined for dccm:
+
+.EX
+.B dccm_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dccm(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/dcerpcd_selinux.8 b/man/man8/dcerpcd_selinux.8
new file mode 100644
index 0000000..7e28fe1
--- /dev/null
+++ b/man/man8/dcerpcd_selinux.8
@@ -0,0 +1,95 @@
+.TH  "dcerpcd_selinux"  "8"  "dcerpcd" "dwalsh@redhat.com" "dcerpcd SELinux Policy documentation"
+.SH "NAME"
+dcerpcd_selinux \- Security Enhanced Linux Policy for the dcerpcd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dcerpcd policy is very flexible allowing users to setup their dcerpcd processes in as secure a method as possible.
+.PP 
+The following file types are defined for dcerpcd:
+
+
+.EX
+.PP
+.B dcerpcd_exec_t 
+.EE
+
+- Set files with the dcerpcd_exec_t type, if you want to transition an executable to the dcerpcd_t domain.
+
+
+.EX
+.PP
+.B dcerpcd_var_lib_t 
+.EE
+
+- Set files with the dcerpcd_var_lib_t type, if you want to store the dcerpcd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B dcerpcd_var_run_t 
+.EE
+
+- Set files with the dcerpcd_var_run_t type, if you want to store the dcerpcd files under the /run directory.
+
+
+.EX
+.PP
+.B dcerpcd_var_socket_t 
+.EE
+
+- Set files with the dcerpcd_var_socket_t type, if you want to treat the files as dcerpcd var socket data.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dcerpcd policy is very flexible allowing users to setup their dcerpcd processes in as secure a method as possible.
+.PP 
+The following process types are defined for dcerpcd:
+
+.EX
+.B dcerpcd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dcerpcd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/ddclient_selinux.8 b/man/man8/ddclient_selinux.8
new file mode 100644
index 0000000..13df14d
--- /dev/null
+++ b/man/man8/ddclient_selinux.8
@@ -0,0 +1,145 @@
+.TH  "ddclient_selinux"  "8"  "ddclient" "dwalsh@redhat.com" "ddclient SELinux Policy documentation"
+.SH "NAME"
+ddclient_selinux \- Security Enhanced Linux Policy for the ddclient processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B ddclient
+(Update dynamic IP address at DynDNS.org)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ddclient policy is very flexible allowing users to setup their ddclient processes in as secure a method as possible.
+.PP 
+The following file types are defined for ddclient:
+
+
+.EX
+.PP
+.B ddclient_etc_t 
+.EE
+
+- Set files with the ddclient_etc_t type, if you want to store ddclient files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/ddclient\.conf, /etc/ddtcd\.conf
+
+.EX
+.PP
+.B ddclient_exec_t 
+.EE
+
+- Set files with the ddclient_exec_t type, if you want to transition an executable to the ddclient_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/ddclient, /usr/sbin/ddtcd
+
+.EX
+.PP
+.B ddclient_initrc_exec_t 
+.EE
+
+- Set files with the ddclient_initrc_exec_t type, if you want to transition an executable to the ddclient_initrc_t domain.
+
+
+.EX
+.PP
+.B ddclient_log_t 
+.EE
+
+- Set files with the ddclient_log_t type, if you want to treat the data as ddclient log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B ddclient_tmp_t 
+.EE
+
+- Set files with the ddclient_tmp_t type, if you want to store ddclient temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B ddclient_var_lib_t 
+.EE
+
+- Set files with the ddclient_var_lib_t type, if you want to store the ddclient files under the /var/lib directory.
+
+
+.EX
+.PP
+.B ddclient_var_run_t 
+.EE
+
+- Set files with the ddclient_var_run_t type, if you want to store the ddclient files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/ddtcd\.pid, /var/run/ddclient\.pid
+
+.EX
+.PP
+.B ddclient_var_t 
+.EE
+
+- Set files with the ddclient_var_t type, if you want to store the ddcl files under the /var directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ddclient policy is very flexible allowing users to setup their ddclient processes in as secure a method as possible.
+.PP 
+The following process types are defined for ddclient:
+
+.EX
+.B ddclient_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ddclient(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/deltacloudd_selinux.8 b/man/man8/deltacloudd_selinux.8
new file mode 100644
index 0000000..7d2381f
--- /dev/null
+++ b/man/man8/deltacloudd_selinux.8
@@ -0,0 +1,95 @@
+.TH  "deltacloudd_selinux"  "8"  "deltacloudd" "dwalsh@redhat.com" "deltacloudd SELinux Policy documentation"
+.SH "NAME"
+deltacloudd_selinux \- Security Enhanced Linux Policy for the deltacloudd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux deltacloudd policy is very flexible allowing users to setup their deltacloudd processes in as secure a method as possible.
+.PP 
+The following file types are defined for deltacloudd:
+
+
+.EX
+.PP
+.B deltacloudd_exec_t 
+.EE
+
+- Set files with the deltacloudd_exec_t type, if you want to transition an executable to the deltacloudd_t domain.
+
+
+.EX
+.PP
+.B deltacloudd_log_t 
+.EE
+
+- Set files with the deltacloudd_log_t type, if you want to treat the data as deltacloudd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B deltacloudd_tmp_t 
+.EE
+
+- Set files with the deltacloudd_tmp_t type, if you want to store deltacloudd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B deltacloudd_var_run_t 
+.EE
+
+- Set files with the deltacloudd_var_run_t type, if you want to store the deltacloudd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux deltacloudd policy is very flexible allowing users to setup their deltacloudd processes in as secure a method as possible.
+.PP 
+The following process types are defined for deltacloudd:
+
+.EX
+.B deltacloudd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), deltacloudd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/denyhosts_selinux.8 b/man/man8/denyhosts_selinux.8
new file mode 100644
index 0000000..ff32a2b
--- /dev/null
+++ b/man/man8/denyhosts_selinux.8
@@ -0,0 +1,109 @@
+.TH  "denyhosts_selinux"  "8"  "denyhosts" "dwalsh@redhat.com" "denyhosts SELinux Policy documentation"
+.SH "NAME"
+denyhosts_selinux \- Security Enhanced Linux Policy for the denyhosts processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B denyhosts
+(DenyHosts SSH dictionary attack mitigation)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux denyhosts policy is very flexible allowing users to setup their denyhosts processes in as secure a method as possible.
+.PP 
+The following file types are defined for denyhosts:
+
+
+.EX
+.PP
+.B denyhosts_exec_t 
+.EE
+
+- Set files with the denyhosts_exec_t type, if you want to transition an executable to the denyhosts_t domain.
+
+
+.EX
+.PP
+.B denyhosts_initrc_exec_t 
+.EE
+
+- Set files with the denyhosts_initrc_exec_t type, if you want to transition an executable to the denyhosts_initrc_t domain.
+
+
+.EX
+.PP
+.B denyhosts_var_lib_t 
+.EE
+
+- Set files with the denyhosts_var_lib_t type, if you want to store the denyhosts files under the /var/lib directory.
+
+
+.EX
+.PP
+.B denyhosts_var_lock_t 
+.EE
+
+- Set files with the denyhosts_var_lock_t type, if you want to treat the files as denyhosts var lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B denyhosts_var_log_t 
+.EE
+
+- Set files with the denyhosts_var_log_t type, if you want to treat the data as denyhosts var log data, usually stored under the /var/log directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux denyhosts policy is very flexible allowing users to setup their denyhosts processes in as secure a method as possible.
+.PP 
+The following process types are defined for denyhosts:
+
+.EX
+.B denyhosts_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), denyhosts(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/depmod_selinux.8 b/man/man8/depmod_selinux.8
new file mode 100644
index 0000000..b5dcbff
--- /dev/null
+++ b/man/man8/depmod_selinux.8
@@ -0,0 +1,75 @@
+.TH  "depmod_selinux"  "8"  "depmod" "dwalsh@redhat.com" "depmod SELinux Policy documentation"
+.SH "NAME"
+depmod_selinux \- Security Enhanced Linux Policy for the depmod processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux depmod policy is very flexible allowing users to setup their depmod processes in as secure a method as possible.
+.PP 
+The following file types are defined for depmod:
+
+
+.EX
+.PP
+.B depmod_exec_t 
+.EE
+
+- Set files with the depmod_exec_t type, if you want to transition an executable to the depmod_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/depmod.*, /usr/sbin/depmod.*
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux depmod policy is very flexible allowing users to setup their depmod processes in as secure a method as possible.
+.PP 
+The following process types are defined for depmod:
+
+.EX
+.B depmod_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), depmod(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/devicekit_selinux.8 b/man/man8/devicekit_selinux.8
new file mode 100644
index 0000000..fbd38fb
--- /dev/null
+++ b/man/man8/devicekit_selinux.8
@@ -0,0 +1,145 @@
+.TH  "devicekit_selinux"  "8"  "devicekit" "dwalsh@redhat.com" "devicekit SELinux Policy documentation"
+.SH "NAME"
+devicekit_selinux \- Security Enhanced Linux Policy for the devicekit processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B devicekit
+(Devicekit modular hardware abstraction layer)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux devicekit policy is very flexible allowing users to setup their devicekit processes in as secure a method as possible.
+.PP 
+The following file types are defined for devicekit:
+
+
+.EX
+.PP
+.B devicekit_disk_exec_t 
+.EE
+
+- Set files with the devicekit_disk_exec_t type, if you want to transition an executable to the devicekit_disk_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/udev/udisks-part-id, /lib/udisks2/udisksd, /usr/lib/udisks2/udisksd, /lib/udev/udisks-part-id, /usr/libexec/devkit-disks-daemon, /usr/libexec/udisks-daemon
+
+.EX
+.PP
+.B devicekit_exec_t 
+.EE
+
+- Set files with the devicekit_exec_t type, if you want to transition an executable to the devicekit_t domain.
+
+
+.EX
+.PP
+.B devicekit_power_exec_t 
+.EE
+
+- Set files with the devicekit_power_exec_t type, if you want to transition an executable to the devicekit_power_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/libexec/upowerd, /usr/libexec/devkit-power-daemon
+
+.EX
+.PP
+.B devicekit_tmp_t 
+.EE
+
+- Set files with the devicekit_tmp_t type, if you want to store devicekit temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B devicekit_var_lib_t 
+.EE
+
+- Set files with the devicekit_var_lib_t type, if you want to store the devicekit files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/udisks.*, /var/lib/DeviceKit-.*, /var/lib/upower(/.*)?
+
+.EX
+.PP
+.B devicekit_var_log_t 
+.EE
+
+- Set files with the devicekit_var_log_t type, if you want to treat the data as devicekit var log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/pm-suspend\.log, /var/log/pm-powersave\.log
+
+.EX
+.PP
+.B devicekit_var_run_t 
+.EE
+
+- Set files with the devicekit_var_run_t type, if you want to store the devicekit files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/upower(/.*)?, /var/run/udisks.*, /var/run/devkit(/.*)?, /var/run/DeviceKit-disks(/.*)?, /var/run/pm-utils(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux devicekit policy is very flexible allowing users to setup their devicekit processes in as secure a method as possible.
+.PP 
+The following process types are defined for devicekit:
+
+.EX
+.B devicekit_power_t, devicekit_disk_t, devicekit_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), devicekit(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/dhcpc_selinux.8 b/man/man8/dhcpc_selinux.8
new file mode 100644
index 0000000..b805e27
--- /dev/null
+++ b/man/man8/dhcpc_selinux.8
@@ -0,0 +1,152 @@
+.TH  "dhcpc_selinux"  "8"  "dhcpc" "dwalsh@redhat.com" "dhcpc SELinux Policy documentation"
+.SH "NAME"
+dhcpc_selinux \- Security Enhanced Linux Policy for the dhcpc processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  dhcpc policy is extremely flexible and has several booleans that allow you to manipulate the policy and run dhcpc with the tightest access possible.
+
+
+.PP
+If you want to allow dhcpc client applications to execute iptables command, you must turn on the dhcpc_exec_iptables boolean.
+
+.EX
+.B setsebool -P dhcpc_exec_iptables 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dhcpc policy is very flexible allowing users to setup their dhcpc processes in as secure a method as possible.
+.PP 
+The following file types are defined for dhcpc:
+
+
+.EX
+.PP
+.B dhcpc_exec_t 
+.EE
+
+- Set files with the dhcpc_exec_t type, if you want to transition an executable to the dhcpc_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/dhcpcd, /usr/sbin/pump, /sbin/dhclient.*, /usr/sbin/dhcpcd, /sbin/pump, /usr/sbin/dhclient.*, /usr/sbin/dhcdbd, /sbin/dhcdbd
+
+.EX
+.PP
+.B dhcpc_helper_exec_t 
+.EE
+
+- Set files with the dhcpc_helper_exec_t type, if you want to transition an executable to the dhcpc_helper_t domain.
+
+
+.EX
+.PP
+.B dhcpc_state_t 
+.EE
+
+- Set files with the dhcpc_state_t type, if you want to treat the files as dhcpc state data.
+
+.br
+.TP 5
+Paths: 
+/var/lib/dhclient(/.*)?, /var/lib/dhcp3?/dhclient.*, /var/lib/wifiroamd(/.*)?, /var/lib/dhcpcd(/.*)?
+
+.EX
+.PP
+.B dhcpc_tmp_t 
+.EE
+
+- Set files with the dhcpc_tmp_t type, if you want to store dhcpc temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dhcpc_var_run_t 
+.EE
+
+- Set files with the dhcpc_var_run_t type, if you want to store the dhcpc files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux dhcpc policy is very flexible allowing users to setup their dhcpc processes in as secure a method as possible.
+.PP 
+The following port types are defined for dhcpc:
+
+.EX
+.TP 5
+.B dhcpc_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dhcpc policy is very flexible allowing users to setup their dhcpc processes in as secure a method as possible.
+.PP 
+The following process types are defined for dhcpc:
+
+.EX
+.B dhcpc_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dhcpc(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/dhcpd_selinux.8 b/man/man8/dhcpd_selinux.8
new file mode 100644
index 0000000..db3ea11
--- /dev/null
+++ b/man/man8/dhcpd_selinux.8
@@ -0,0 +1,191 @@
+.TH  "dhcpd_selinux"  "8"  "dhcpd" "dwalsh@redhat.com" "dhcpd SELinux Policy documentation"
+.SH "NAME"
+dhcpd_selinux \- Security Enhanced Linux Policy for the dhcpd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  dhcpd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run dhcpd with the tightest access possible.
+
+
+.PP
+If you want to allow dhcpc client applications to execute iptables command, you must turn on the dhcpc_exec_iptables boolean.
+
+.EX
+.B setsebool -P dhcpc_exec_iptables 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dhcpd policy is very flexible allowing users to setup their dhcpd processes in as secure a method as possible.
+.PP 
+The following file types are defined for dhcpd:
+
+
+.EX
+.PP
+.B dhcp_etc_t 
+.EE
+
+- Set files with the dhcp_etc_t type, if you want to store dhcp files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/dhcp3(/.*)?, /etc/dhcp3?/dhclient.*, /etc/dhcpd(6)?\.conf, /etc/dhcpc.*, /etc/dhclient-script, /etc/dhclient.*conf, /etc/dhcp/dhcpd(6)?\.conf
+
+.EX
+.PP
+.B dhcp_state_t 
+.EE
+
+- Set files with the dhcp_state_t type, if you want to treat the files as dhcp state data.
+
+
+.EX
+.PP
+.B dhcpd_exec_t 
+.EE
+
+- Set files with the dhcpd_exec_t type, if you want to transition an executable to the dhcpd_t domain.
+
+
+.EX
+.PP
+.B dhcpd_initrc_exec_t 
+.EE
+
+- Set files with the dhcpd_initrc_exec_t type, if you want to transition an executable to the dhcpd_initrc_t domain.
+
+
+.EX
+.PP
+.B dhcpd_state_t 
+.EE
+
+- Set files with the dhcpd_state_t type, if you want to treat the files as dhcpd state data.
+
+.br
+.TP 5
+Paths: 
+/var/lib/dhcp(3)?/dhcpd\.leases.*, /var/lib/dhcpd(/.*)?
+
+.EX
+.PP
+.B dhcpd_tmp_t 
+.EE
+
+- Set files with the dhcpd_tmp_t type, if you want to store dhcpd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dhcpd_unit_file_t 
+.EE
+
+- Set files with the dhcpd_unit_file_t type, if you want to treat the files as dhcpd unit content.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/systemd/system/dhcpcd.*, /lib/systemd/system/dhcpcd.*
+
+.EX
+.PP
+.B dhcpd_var_run_t 
+.EE
+
+- Set files with the dhcpd_var_run_t type, if you want to store the dhcpd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux dhcpd policy is very flexible allowing users to setup their dhcpd processes in as secure a method as possible.
+.PP 
+The following port types are defined for dhcpd:
+
+.EX
+.TP 5
+.B dhcpc_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B dhcpd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dhcpd policy is very flexible allowing users to setup their dhcpd processes in as secure a method as possible.
+.PP 
+The following process types are defined for dhcpd:
+
+.EX
+.B dhcpc_t, dhcpd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dhcpd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/dictd_selinux.8 b/man/man8/dictd_selinux.8
new file mode 100644
index 0000000..53e911a
--- /dev/null
+++ b/man/man8/dictd_selinux.8
@@ -0,0 +1,135 @@
+.TH  "dictd_selinux"  "8"  "dictd" "dwalsh@redhat.com" "dictd SELinux Policy documentation"
+.SH "NAME"
+dictd_selinux \- Security Enhanced Linux Policy for the dictd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B dictd
+(Dictionary daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dictd policy is very flexible allowing users to setup their dictd processes in as secure a method as possible.
+.PP 
+The following file types are defined for dictd:
+
+
+.EX
+.PP
+.B dictd_etc_t 
+.EE
+
+- Set files with the dictd_etc_t type, if you want to store dictd files in the /etc directories.
+
+
+.EX
+.PP
+.B dictd_exec_t 
+.EE
+
+- Set files with the dictd_exec_t type, if you want to transition an executable to the dictd_t domain.
+
+
+.EX
+.PP
+.B dictd_initrc_exec_t 
+.EE
+
+- Set files with the dictd_initrc_exec_t type, if you want to transition an executable to the dictd_initrc_t domain.
+
+
+.EX
+.PP
+.B dictd_var_lib_t 
+.EE
+
+- Set files with the dictd_var_lib_t type, if you want to store the dictd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B dictd_var_run_t 
+.EE
+
+- Set files with the dictd_var_run_t type, if you want to store the dictd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux dictd policy is very flexible allowing users to setup their dictd processes in as secure a method as possible.
+.PP 
+The following port types are defined for dictd:
+
+.EX
+.TP 5
+.B dict_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dictd policy is very flexible allowing users to setup their dictd processes in as secure a method as possible.
+.PP 
+The following process types are defined for dictd:
+
+.EX
+.B dictd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dictd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/dirsrv_selinux.8 b/man/man8/dirsrv_selinux.8
new file mode 100644
index 0000000..7c06f47
--- /dev/null
+++ b/man/man8/dirsrv_selinux.8
@@ -0,0 +1,217 @@
+.TH  "dirsrv_selinux"  "8"  "dirsrv" "dwalsh@redhat.com" "dirsrv SELinux Policy documentation"
+.SH "NAME"
+dirsrv_selinux \- Security Enhanced Linux Policy for the dirsrv processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B dirsrv
+(policy for dirsrv)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dirsrv policy is very flexible allowing users to setup their dirsrv processes in as secure a method as possible.
+.PP 
+The following file types are defined for dirsrv:
+
+
+.EX
+.PP
+.B dirsrv_config_t 
+.EE
+
+- Set files with the dirsrv_config_t type, if you want to treat the files as dirsrv configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B dirsrv_exec_t 
+.EE
+
+- Set files with the dirsrv_exec_t type, if you want to transition an executable to the dirsrv_t domain.
+
+
+.EX
+.PP
+.B dirsrv_share_t 
+.EE
+
+- Set files with the dirsrv_share_t type, if you want to treat the files as dirsrv share data.
+
+
+.EX
+.PP
+.B dirsrv_snmp_exec_t 
+.EE
+
+- Set files with the dirsrv_snmp_exec_t type, if you want to transition an executable to the dirsrv_snmp_t domain.
+
+
+.EX
+.PP
+.B dirsrv_snmp_var_log_t 
+.EE
+
+- Set files with the dirsrv_snmp_var_log_t type, if you want to treat the data as dirsrv snmp var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B dirsrv_snmp_var_run_t 
+.EE
+
+- Set files with the dirsrv_snmp_var_run_t type, if you want to store the dirsrv snmp files under the /run directory.
+
+
+.EX
+.PP
+.B dirsrv_tmp_t 
+.EE
+
+- Set files with the dirsrv_tmp_t type, if you want to store dirsrv temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dirsrv_tmpfs_t 
+.EE
+
+- Set files with the dirsrv_tmpfs_t type, if you want to store dirsrv files on a tmpfs file system.
+
+
+.EX
+.PP
+.B dirsrv_var_lib_t 
+.EE
+
+- Set files with the dirsrv_var_lib_t type, if you want to store the dirsrv files under the /var/lib directory.
+
+
+.EX
+.PP
+.B dirsrv_var_lock_t 
+.EE
+
+- Set files with the dirsrv_var_lock_t type, if you want to treat the files as dirsrv var lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B dirsrv_var_log_t 
+.EE
+
+- Set files with the dirsrv_var_log_t type, if you want to treat the data as dirsrv var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B dirsrv_var_run_t 
+.EE
+
+- Set files with the dirsrv_var_run_t type, if you want to store the dirsrv files under the /run directory.
+
+
+.EX
+.PP
+.B dirsrvadmin_config_t 
+.EE
+
+- Set files with the dirsrvadmin_config_t type, if you want to treat the files as dirsrvadmin configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/etc/dirsrv/admin-serv(/.*)?, /etc/dirsrv/dsgw(/.*)?
+
+.EX
+.PP
+.B dirsrvadmin_exec_t 
+.EE
+
+- Set files with the dirsrvadmin_exec_t type, if you want to transition an executable to the dirsrvadmin_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/start-ds-admin, /usr/sbin/stop-ds-admin, /usr/sbin/restart-ds-admin
+
+.EX
+.PP
+.B dirsrvadmin_lock_t 
+.EE
+
+- Set files with the dirsrvadmin_lock_t type, if you want to treat the files as dirsrvadmin lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B dirsrvadmin_tmp_t 
+.EE
+
+- Set files with the dirsrvadmin_tmp_t type, if you want to store dirsrvadmin temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dirsrvadmin_unconfined_script_exec_t 
+.EE
+
+- Set files with the dirsrvadmin_unconfined_script_exec_t type, if you want to transition an executable to the dirsrvadmin_unconfined_script_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/dirsrv/cgi-bin/ds_remove, /usr/lib/dirsrv/cgi-bin/ds_create
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dirsrv policy is very flexible allowing users to setup their dirsrv processes in as secure a method as possible.
+.PP 
+The following process types are defined for dirsrv:
+
+.EX
+.B dirsrvadmin_unconfined_script_t, dirsrv_snmp_t, dirsrvadmin_t, dirsrv_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dirsrv(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/dirsrvadmin_selinux.8 b/man/man8/dirsrvadmin_selinux.8
new file mode 100644
index 0000000..f314f5a
--- /dev/null
+++ b/man/man8/dirsrvadmin_selinux.8
@@ -0,0 +1,115 @@
+.TH  "dirsrvadmin_selinux"  "8"  "dirsrvadmin" "dwalsh@redhat.com" "dirsrvadmin SELinux Policy documentation"
+.SH "NAME"
+dirsrvadmin_selinux \- Security Enhanced Linux Policy for the dirsrvadmin processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dirsrvadmin policy is very flexible allowing users to setup their dirsrvadmin processes in as secure a method as possible.
+.PP 
+The following file types are defined for dirsrvadmin:
+
+
+.EX
+.PP
+.B dirsrvadmin_config_t 
+.EE
+
+- Set files with the dirsrvadmin_config_t type, if you want to treat the files as dirsrvadmin configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/etc/dirsrv/admin-serv(/.*)?, /etc/dirsrv/dsgw(/.*)?
+
+.EX
+.PP
+.B dirsrvadmin_exec_t 
+.EE
+
+- Set files with the dirsrvadmin_exec_t type, if you want to transition an executable to the dirsrvadmin_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/start-ds-admin, /usr/sbin/stop-ds-admin, /usr/sbin/restart-ds-admin
+
+.EX
+.PP
+.B dirsrvadmin_lock_t 
+.EE
+
+- Set files with the dirsrvadmin_lock_t type, if you want to treat the files as dirsrvadmin lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B dirsrvadmin_tmp_t 
+.EE
+
+- Set files with the dirsrvadmin_tmp_t type, if you want to store dirsrvadmin temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dirsrvadmin_unconfined_script_exec_t 
+.EE
+
+- Set files with the dirsrvadmin_unconfined_script_exec_t type, if you want to transition an executable to the dirsrvadmin_unconfined_script_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/dirsrv/cgi-bin/ds_remove, /usr/lib/dirsrv/cgi-bin/ds_create
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dirsrvadmin policy is very flexible allowing users to setup their dirsrvadmin processes in as secure a method as possible.
+.PP 
+The following process types are defined for dirsrvadmin:
+
+.EX
+.B dirsrvadmin_unconfined_script_t, dirsrvadmin_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dirsrvadmin(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/disk_selinux.8 b/man/man8/disk_selinux.8
new file mode 100644
index 0000000..d3d396c
--- /dev/null
+++ b/man/man8/disk_selinux.8
@@ -0,0 +1,83 @@
+.TH  "disk_selinux"  "8"  "disk" "dwalsh@redhat.com" "disk SELinux Policy documentation"
+.SH "NAME"
+disk_selinux \- Security Enhanced Linux Policy for the disk processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux disk policy is very flexible allowing users to setup their disk processes in as secure a method as possible.
+.PP 
+The following file types are defined for disk:
+
+
+.EX
+.PP
+.B disk_munin_plugin_exec_t 
+.EE
+
+- Set files with the disk_munin_plugin_exec_t type, if you want to transition an executable to the disk_munin_plugin_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/share/munin/plugins/diskstat.*, /usr/share/munin/plugins/hddtemp.*, /usr/share/munin/plugins/smart_.*, /usr/share/munin/plugins/df.*
+
+.EX
+.PP
+.B disk_munin_plugin_tmp_t 
+.EE
+
+- Set files with the disk_munin_plugin_tmp_t type, if you want to store disk munin plugin temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux disk policy is very flexible allowing users to setup their disk processes in as secure a method as possible.
+.PP 
+The following process types are defined for disk:
+
+.EX
+.B disk_munin_plugin_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), disk(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/dkim_selinux.8 b/man/man8/dkim_selinux.8
new file mode 100644
index 0000000..ff5f6d1
--- /dev/null
+++ b/man/man8/dkim_selinux.8
@@ -0,0 +1,97 @@
+.TH  "dkim_selinux"  "8"  "dkim" "dwalsh@redhat.com" "dkim SELinux Policy documentation"
+.SH "NAME"
+dkim_selinux \- Security Enhanced Linux Policy for the dkim processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B dkim
+(DomainKeys Identified Mail milter)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dkim policy is very flexible allowing users to setup their dkim processes in as secure a method as possible.
+.PP 
+The following file types are defined for dkim:
+
+
+.EX
+.PP
+.B dkim_milter_data_t 
+.EE
+
+- Set files with the dkim_milter_data_t type, if you want to treat the files as dkim milter content.
+
+.br
+.TP 5
+Paths: 
+/var/lib/dkim-milter(/.*)?, /var/run/dkim-milter(/.*)?
+
+.EX
+.PP
+.B dkim_milter_exec_t 
+.EE
+
+- Set files with the dkim_milter_exec_t type, if you want to transition an executable to the dkim_milter_t domain.
+
+
+.EX
+.PP
+.B dkim_milter_private_key_t 
+.EE
+
+- Set files with the dkim_milter_private_key_t type, if you want to treat the files as dkim milter private key data.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dkim policy is very flexible allowing users to setup their dkim processes in as secure a method as possible.
+.PP 
+The following process types are defined for dkim:
+
+.EX
+.B dkim_milter_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dkim(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/dlm_selinux.8 b/man/man8/dlm_selinux.8
new file mode 100644
index 0000000..d1bdbac
--- /dev/null
+++ b/man/man8/dlm_selinux.8
@@ -0,0 +1,95 @@
+.TH  "dlm_selinux"  "8"  "dlm" "dwalsh@redhat.com" "dlm SELinux Policy documentation"
+.SH "NAME"
+dlm_selinux \- Security Enhanced Linux Policy for the dlm processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dlm policy is very flexible allowing users to setup their dlm processes in as secure a method as possible.
+.PP 
+The following file types are defined for dlm:
+
+
+.EX
+.PP
+.B dlm_controld_exec_t 
+.EE
+
+- Set files with the dlm_controld_exec_t type, if you want to transition an executable to the dlm_controld_t domain.
+
+
+.EX
+.PP
+.B dlm_controld_tmpfs_t 
+.EE
+
+- Set files with the dlm_controld_tmpfs_t type, if you want to store dlm controld files on a tmpfs file system.
+
+
+.EX
+.PP
+.B dlm_controld_var_log_t 
+.EE
+
+- Set files with the dlm_controld_var_log_t type, if you want to treat the data as dlm controld var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B dlm_controld_var_run_t 
+.EE
+
+- Set files with the dlm_controld_var_run_t type, if you want to store the dlm controld files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dlm policy is very flexible allowing users to setup their dlm processes in as secure a method as possible.
+.PP 
+The following process types are defined for dlm:
+
+.EX
+.B dlm_controld_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dlm(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/dmesg_selinux.8 b/man/man8/dmesg_selinux.8
new file mode 100644
index 0000000..7ba27b0
--- /dev/null
+++ b/man/man8/dmesg_selinux.8
@@ -0,0 +1,96 @@
+.TH  "dmesg_selinux"  "8"  "dmesg" "dwalsh@redhat.com" "dmesg SELinux Policy documentation"
+.SH "NAME"
+dmesg_selinux \- Security Enhanced Linux Policy for the dmesg processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B dmesg
+(Policy for dmesg)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  dmesg policy is extremely flexible and has several booleans that allow you to manipulate the policy and run dmesg with the tightest access possible.
+
+
+.PP
+If you want to allow users to read system messages, you must turn on the user_dmesg boolean.
+
+.EX
+.B setsebool -P user_dmesg 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dmesg policy is very flexible allowing users to setup their dmesg processes in as secure a method as possible.
+.PP 
+The following file types are defined for dmesg:
+
+
+.EX
+.PP
+.B dmesg_exec_t 
+.EE
+
+- Set files with the dmesg_exec_t type, if you want to transition an executable to the dmesg_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/dmesg, /bin/dmesg
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dmesg policy is very flexible allowing users to setup their dmesg processes in as secure a method as possible.
+.PP 
+The following process types are defined for dmesg:
+
+.EX
+.B dmesg_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dmesg(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/dmidecode_selinux.8 b/man/man8/dmidecode_selinux.8
new file mode 100644
index 0000000..d2c6acf
--- /dev/null
+++ b/man/man8/dmidecode_selinux.8
@@ -0,0 +1,81 @@
+.TH  "dmidecode_selinux"  "8"  "dmidecode" "dwalsh@redhat.com" "dmidecode SELinux Policy documentation"
+.SH "NAME"
+dmidecode_selinux \- Security Enhanced Linux Policy for the dmidecode processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B dmidecode
+(Decode DMI data for x86/ia64 bioses)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dmidecode policy is very flexible allowing users to setup their dmidecode processes in as secure a method as possible.
+.PP 
+The following file types are defined for dmidecode:
+
+
+.EX
+.PP
+.B dmidecode_exec_t 
+.EE
+
+- Set files with the dmidecode_exec_t type, if you want to transition an executable to the dmidecode_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/ownership, /usr/sbin/dmidecode, /usr/sbin/vpddecode
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dmidecode policy is very flexible allowing users to setup their dmidecode processes in as secure a method as possible.
+.PP 
+The following process types are defined for dmidecode:
+
+.EX
+.B dmidecode_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dmidecode(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/dnsmasq_selinux.8 b/man/man8/dnsmasq_selinux.8
new file mode 100644
index 0000000..2913852
--- /dev/null
+++ b/man/man8/dnsmasq_selinux.8
@@ -0,0 +1,137 @@
+.TH  "dnsmasq_selinux"  "8"  "dnsmasq" "dwalsh@redhat.com" "dnsmasq SELinux Policy documentation"
+.SH "NAME"
+dnsmasq_selinux \- Security Enhanced Linux Policy for the dnsmasq processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B dnsmasq
+(dnsmasq DNS forwarder and DHCP server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dnsmasq policy is very flexible allowing users to setup their dnsmasq processes in as secure a method as possible.
+.PP 
+The following file types are defined for dnsmasq:
+
+
+.EX
+.PP
+.B dnsmasq_etc_t 
+.EE
+
+- Set files with the dnsmasq_etc_t type, if you want to store dnsmasq files in the /etc directories.
+
+
+.EX
+.PP
+.B dnsmasq_exec_t 
+.EE
+
+- Set files with the dnsmasq_exec_t type, if you want to transition an executable to the dnsmasq_t domain.
+
+
+.EX
+.PP
+.B dnsmasq_initrc_exec_t 
+.EE
+
+- Set files with the dnsmasq_initrc_exec_t type, if you want to transition an executable to the dnsmasq_initrc_t domain.
+
+
+.EX
+.PP
+.B dnsmasq_lease_t 
+.EE
+
+- Set files with the dnsmasq_lease_t type, if you want to treat the files as dnsmasq lease data.
+
+.br
+.TP 5
+Paths: 
+/var/lib/dnsmasq(/.*)?, /var/lib/misc/dnsmasq\.leases
+
+.EX
+.PP
+.B dnsmasq_unit_file_t 
+.EE
+
+- Set files with the dnsmasq_unit_file_t type, if you want to treat the files as dnsmasq unit content.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/systemd/system/dnsmasq.*, /lib/systemd/system/dnsmasq.*
+
+.EX
+.PP
+.B dnsmasq_var_log_t 
+.EE
+
+- Set files with the dnsmasq_var_log_t type, if you want to treat the data as dnsmasq var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B dnsmasq_var_run_t 
+.EE
+
+- Set files with the dnsmasq_var_run_t type, if you want to store the dnsmasq files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/dnsmasq\.pid, /var/run/libvirt/network(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dnsmasq policy is very flexible allowing users to setup their dnsmasq processes in as secure a method as possible.
+.PP 
+The following process types are defined for dnsmasq:
+
+.EX
+.B dnsmasq_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dnsmasq(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/dnssec_selinux.8 b/man/man8/dnssec_selinux.8
new file mode 100644
index 0000000..c8a6a53
--- /dev/null
+++ b/man/man8/dnssec_selinux.8
@@ -0,0 +1,123 @@
+.TH  "dnssec_selinux"  "8"  "dnssec" "dwalsh@redhat.com" "dnssec SELinux Policy documentation"
+.SH "NAME"
+dnssec_selinux \- Security Enhanced Linux Policy for the dnssec processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B dnssec
+(policy for dnssec_trigger)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dnssec policy is very flexible allowing users to setup their dnssec processes in as secure a method as possible.
+.PP 
+The following file types are defined for dnssec:
+
+
+.EX
+.PP
+.B dnssec_t 
+.EE
+
+- Set files with the dnssec_t type, if you want to treat the files as dnssec data.
+
+.br
+.TP 5
+Paths: 
+/etc/unbound/.*\.key, /var/named/chroot/etc/rndc\.key, /etc/dnssec-trigger/dnssec_trigger_server\.key, /etc/rndc\.key
+
+.EX
+.PP
+.B dnssec_trigger_exec_t 
+.EE
+
+- Set files with the dnssec_trigger_exec_t type, if you want to transition an executable to the dnssec_trigger_t domain.
+
+
+.EX
+.PP
+.B dnssec_trigger_var_run_t 
+.EE
+
+- Set files with the dnssec_trigger_var_run_t type, if you want to store the dnssec trigger files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux dnssec policy is very flexible allowing users to setup their dnssec processes in as secure a method as possible.
+.PP 
+The following port types are defined for dnssec:
+
+.EX
+.TP 5
+.B dnssec_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dnssec policy is very flexible allowing users to setup their dnssec processes in as secure a method as possible.
+.PP 
+The following process types are defined for dnssec:
+
+.EX
+.B dnssec_trigger_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dnssec(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/dovecot_selinux.8 b/man/man8/dovecot_selinux.8
new file mode 100644
index 0000000..9dccfb5
--- /dev/null
+++ b/man/man8/dovecot_selinux.8
@@ -0,0 +1,213 @@
+.TH  "dovecot_selinux"  "8"  "dovecot" "dwalsh@redhat.com" "dovecot SELinux Policy documentation"
+.SH "NAME"
+dovecot_selinux \- Security Enhanced Linux Policy for the dovecot processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B dovecot
+(Dovecot POP and IMAP mail server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dovecot policy is very flexible allowing users to setup their dovecot processes in as secure a method as possible.
+.PP 
+The following file types are defined for dovecot:
+
+
+.EX
+.PP
+.B dovecot_auth_exec_t 
+.EE
+
+- Set files with the dovecot_auth_exec_t type, if you want to transition an executable to the dovecot_auth_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/libexec/dovecot/auth, /usr/libexec/dovecot/dovecot-auth
+
+.EX
+.PP
+.B dovecot_auth_tmp_t 
+.EE
+
+- Set files with the dovecot_auth_tmp_t type, if you want to store dovecot auth temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dovecot_cert_t 
+.EE
+
+- Set files with the dovecot_cert_t type, if you want to treat the files as dovecot certificate data.
+
+.br
+.TP 5
+Paths: 
+/usr/share/ssl/private/dovecot\.pem, /etc/pki/dovecot(/.*)?, /usr/share/ssl/certs/dovecot\.pem
+
+.EX
+.PP
+.B dovecot_deliver_exec_t 
+.EE
+
+- Set files with the dovecot_deliver_exec_t type, if you want to transition an executable to the dovecot_deliver_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/libexec/dovecot/dovecot-lda, /usr/libexec/dovecot/deliver
+
+.EX
+.PP
+.B dovecot_deliver_tmp_t 
+.EE
+
+- Set files with the dovecot_deliver_tmp_t type, if you want to store dovecot deliver temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dovecot_etc_t 
+.EE
+
+- Set files with the dovecot_etc_t type, if you want to store dovecot files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/dovecot(/.*)?*, /etc/dovecot\.conf.*
+
+.EX
+.PP
+.B dovecot_exec_t 
+.EE
+
+- Set files with the dovecot_exec_t type, if you want to transition an executable to the dovecot_t domain.
+
+
+.EX
+.PP
+.B dovecot_initrc_exec_t 
+.EE
+
+- Set files with the dovecot_initrc_exec_t type, if you want to transition an executable to the dovecot_initrc_t domain.
+
+
+.EX
+.PP
+.B dovecot_keytab_t 
+.EE
+
+- Set files with the dovecot_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B dovecot_passwd_t 
+.EE
+
+- Set files with the dovecot_passwd_t type, if you want to treat the files as dovecot passwd data.
+
+
+.EX
+.PP
+.B dovecot_spool_t 
+.EE
+
+- Set files with the dovecot_spool_t type, if you want to store the dovecot files under the /var/spool directory.
+
+
+.EX
+.PP
+.B dovecot_tmp_t 
+.EE
+
+- Set files with the dovecot_tmp_t type, if you want to store dovecot temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dovecot_var_lib_t 
+.EE
+
+- Set files with the dovecot_var_lib_t type, if you want to store the dovecot files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/dovecot/login/ssl-parameters.dat, /var/lib/dovecot(/.*)?
+
+.EX
+.PP
+.B dovecot_var_log_t 
+.EE
+
+- Set files with the dovecot_var_log_t type, if you want to treat the data as dovecot var log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/dovecot\.log.*, /var/log/dovecot(/.*)?
+
+.EX
+.PP
+.B dovecot_var_run_t 
+.EE
+
+- Set files with the dovecot_var_run_t type, if you want to store the dovecot files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dovecot policy is very flexible allowing users to setup their dovecot processes in as secure a method as possible.
+.PP 
+The following process types are defined for dovecot:
+
+.EX
+.B dovecot_deliver_t, dovecot_auth_t, dovecot_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dovecot(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/drbd_selinux.8 b/man/man8/drbd_selinux.8
new file mode 100644
index 0000000..9cd65f4
--- /dev/null
+++ b/man/man8/drbd_selinux.8
@@ -0,0 +1,97 @@
+.TH  "drbd_selinux"  "8"  "drbd" "dwalsh@redhat.com" "drbd SELinux Policy documentation"
+.SH "NAME"
+drbd_selinux \- Security Enhanced Linux Policy for the drbd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B drbd
+(policy for drbd)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux drbd policy is very flexible allowing users to setup their drbd processes in as secure a method as possible.
+.PP 
+The following file types are defined for drbd:
+
+
+.EX
+.PP
+.B drbd_exec_t 
+.EE
+
+- Set files with the drbd_exec_t type, if you want to transition an executable to the drbd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/drbdadm, /sbin/drbdadm, /usr/lib/ocf/resource.\d/linbit/drbd, /usr/sbin/drbdsetup, /sbin/drbdsetup
+
+.EX
+.PP
+.B drbd_lock_t 
+.EE
+
+- Set files with the drbd_lock_t type, if you want to treat the files as drbd lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B drbd_var_lib_t 
+.EE
+
+- Set files with the drbd_var_lib_t type, if you want to store the drbd files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux drbd policy is very flexible allowing users to setup their drbd processes in as secure a method as possible.
+.PP 
+The following process types are defined for drbd:
+
+.EX
+.B drbd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), drbd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/dspam_selinux.8 b/man/man8/dspam_selinux.8
new file mode 100644
index 0000000..fba374b
--- /dev/null
+++ b/man/man8/dspam_selinux.8
@@ -0,0 +1,117 @@
+.TH  "dspam_selinux"  "8"  "dspam" "dwalsh@redhat.com" "dspam SELinux Policy documentation"
+.SH "NAME"
+dspam_selinux \- Security Enhanced Linux Policy for the dspam processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B dspam
+(policy for dspam)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux dspam policy is very flexible allowing users to setup their dspam processes in as secure a method as possible.
+.PP 
+The following file types are defined for dspam:
+
+
+.EX
+.PP
+.B dspam_exec_t 
+.EE
+
+- Set files with the dspam_exec_t type, if you want to transition an executable to the dspam_t domain.
+
+
+.EX
+.PP
+.B dspam_initrc_exec_t 
+.EE
+
+- Set files with the dspam_initrc_exec_t type, if you want to transition an executable to the dspam_initrc_t domain.
+
+
+.EX
+.PP
+.B dspam_log_t 
+.EE
+
+- Set files with the dspam_log_t type, if you want to treat the data as dspam log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B dspam_tmp_t 
+.EE
+
+- Set files with the dspam_tmp_t type, if you want to store dspam temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B dspam_var_lib_t 
+.EE
+
+- Set files with the dspam_var_lib_t type, if you want to store the dspam files under the /var/lib directory.
+
+
+.EX
+.PP
+.B dspam_var_run_t 
+.EE
+
+- Set files with the dspam_var_run_t type, if you want to store the dspam files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux dspam policy is very flexible allowing users to setup their dspam processes in as secure a method as possible.
+.PP 
+The following process types are defined for dspam:
+
+.EX
+.B dspam_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), dspam(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/entropyd_selinux.8 b/man/man8/entropyd_selinux.8
new file mode 100644
index 0000000..907170c
--- /dev/null
+++ b/man/man8/entropyd_selinux.8
@@ -0,0 +1,108 @@
+.TH  "entropyd_selinux"  "8"  "entropyd" "dwalsh@redhat.com" "entropyd SELinux Policy documentation"
+.SH "NAME"
+entropyd_selinux \- Security Enhanced Linux Policy for the entropyd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B entropyd
+(Generate entropy from audio input)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  entropyd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run entropyd with the tightest access possible.
+
+
+.PP
+If you want to allow the use of the audio devices as the source for the entropy feed, you must turn on the entropyd_use_audio boolean.
+
+.EX
+.B setsebool -P entropyd_use_audio 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux entropyd policy is very flexible allowing users to setup their entropyd processes in as secure a method as possible.
+.PP 
+The following file types are defined for entropyd:
+
+
+.EX
+.PP
+.B entropyd_exec_t 
+.EE
+
+- Set files with the entropyd_exec_t type, if you want to transition an executable to the entropyd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/audio-entropyd, /usr/sbin/haveged
+
+.EX
+.PP
+.B entropyd_var_run_t 
+.EE
+
+- Set files with the entropyd_var_run_t type, if you want to store the entropyd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/audio-entropyd\.pid, /var/run/haveged\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux entropyd policy is very flexible allowing users to setup their entropyd processes in as secure a method as possible.
+.PP 
+The following process types are defined for entropyd:
+
+.EX
+.B entropyd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), entropyd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/eventlogd_selinux.8 b/man/man8/eventlogd_selinux.8
new file mode 100644
index 0000000..01e8f18
--- /dev/null
+++ b/man/man8/eventlogd_selinux.8
@@ -0,0 +1,95 @@
+.TH  "eventlogd_selinux"  "8"  "eventlogd" "dwalsh@redhat.com" "eventlogd SELinux Policy documentation"
+.SH "NAME"
+eventlogd_selinux \- Security Enhanced Linux Policy for the eventlogd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux eventlogd policy is very flexible allowing users to setup their eventlogd processes in as secure a method as possible.
+.PP 
+The following file types are defined for eventlogd:
+
+
+.EX
+.PP
+.B eventlogd_exec_t 
+.EE
+
+- Set files with the eventlogd_exec_t type, if you want to transition an executable to the eventlogd_t domain.
+
+
+.EX
+.PP
+.B eventlogd_var_lib_t 
+.EE
+
+- Set files with the eventlogd_var_lib_t type, if you want to store the eventlogd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B eventlogd_var_run_t 
+.EE
+
+- Set files with the eventlogd_var_run_t type, if you want to store the eventlogd files under the /run directory.
+
+
+.EX
+.PP
+.B eventlogd_var_socket_t 
+.EE
+
+- Set files with the eventlogd_var_socket_t type, if you want to treat the files as eventlogd var socket data.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux eventlogd policy is very flexible allowing users to setup their eventlogd processes in as secure a method as possible.
+.PP 
+The following process types are defined for eventlogd:
+
+.EX
+.B eventlogd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), eventlogd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/evtchnd_selinux.8 b/man/man8/evtchnd_selinux.8
new file mode 100644
index 0000000..fc58144
--- /dev/null
+++ b/man/man8/evtchnd_selinux.8
@@ -0,0 +1,91 @@
+.TH  "evtchnd_selinux"  "8"  "evtchnd" "dwalsh@redhat.com" "evtchnd SELinux Policy documentation"
+.SH "NAME"
+evtchnd_selinux \- Security Enhanced Linux Policy for the evtchnd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux evtchnd policy is very flexible allowing users to setup their evtchnd processes in as secure a method as possible.
+.PP 
+The following file types are defined for evtchnd:
+
+
+.EX
+.PP
+.B evtchnd_exec_t 
+.EE
+
+- Set files with the evtchnd_exec_t type, if you want to transition an executable to the evtchnd_t domain.
+
+
+.EX
+.PP
+.B evtchnd_var_log_t 
+.EE
+
+- Set files with the evtchnd_var_log_t type, if you want to treat the data as evtchnd var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B evtchnd_var_run_t 
+.EE
+
+- Set files with the evtchnd_var_run_t type, if you want to store the evtchnd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/evtchnd, /var/run/evtchnd\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux evtchnd policy is very flexible allowing users to setup their evtchnd processes in as secure a method as possible.
+.PP 
+The following process types are defined for evtchnd:
+
+.EX
+.B evtchnd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), evtchnd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/exim_selinux.8 b/man/man8/exim_selinux.8
new file mode 100644
index 0000000..bb54ea6
--- /dev/null
+++ b/man/man8/exim_selinux.8
@@ -0,0 +1,158 @@
+.TH  "exim_selinux"  "8"  "exim" "dwalsh@redhat.com" "exim SELinux Policy documentation"
+.SH "NAME"
+exim_selinux \- Security Enhanced Linux Policy for the exim processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B exim
+(Exim mail transfer agent)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  exim policy is extremely flexible and has several booleans that allow you to manipulate the policy and run exim with the tightest access possible.
+
+
+.PP
+If you want to allow exim to read unprivileged user files, you must turn on the exim_read_user_files boolean.
+
+.EX
+.B setsebool -P exim_read_user_files 1
+.EE
+
+.PP
+If you want to allow exim to connect to databases (PostgreSQL, MySQL, you must turn on the exim_can_connect_db boolean.
+
+.EX
+.B setsebool -P exim_can_connect_db 1
+.EE
+
+.PP
+If you want to allow exim to create, read, write, and delete unprivileged user files, you must turn on the exim_manage_user_files boolean.
+
+.EX
+.B setsebool -P exim_manage_user_files 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux exim policy is very flexible allowing users to setup their exim processes in as secure a method as possible.
+.PP 
+The following file types are defined for exim:
+
+
+.EX
+.PP
+.B exim_exec_t 
+.EE
+
+- Set files with the exim_exec_t type, if you want to transition an executable to the exim_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/exim_tidydb, /usr/sbin/exim[0-9]?
+
+.EX
+.PP
+.B exim_initrc_exec_t 
+.EE
+
+- Set files with the exim_initrc_exec_t type, if you want to transition an executable to the exim_initrc_t domain.
+
+
+.EX
+.PP
+.B exim_keytab_t 
+.EE
+
+- Set files with the exim_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B exim_log_t 
+.EE
+
+- Set files with the exim_log_t type, if you want to treat the data as exim log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B exim_spool_t 
+.EE
+
+- Set files with the exim_spool_t type, if you want to store the exim files under the /var/spool directory.
+
+
+.EX
+.PP
+.B exim_tmp_t 
+.EE
+
+- Set files with the exim_tmp_t type, if you want to store exim temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B exim_var_run_t 
+.EE
+
+- Set files with the exim_var_run_t type, if you want to store the exim files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux exim policy is very flexible allowing users to setup their exim processes in as secure a method as possible.
+.PP 
+The following process types are defined for exim:
+
+.EX
+.B exim_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), exim(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/fail2ban_selinux.8 b/man/man8/fail2ban_selinux.8
new file mode 100644
index 0000000..8084e6e
--- /dev/null
+++ b/man/man8/fail2ban_selinux.8
@@ -0,0 +1,129 @@
+.TH  "fail2ban_selinux"  "8"  "fail2ban" "dwalsh@redhat.com" "fail2ban SELinux Policy documentation"
+.SH "NAME"
+fail2ban_selinux \- Security Enhanced Linux Policy for the fail2ban processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B fail2ban
+(Update firewall filtering to ban IP addresses with too many password failures)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux fail2ban policy is very flexible allowing users to setup their fail2ban processes in as secure a method as possible.
+.PP 
+The following file types are defined for fail2ban:
+
+
+.EX
+.PP
+.B fail2ban_client_exec_t 
+.EE
+
+- Set files with the fail2ban_client_exec_t type, if you want to transition an executable to the fail2ban_client_t domain.
+
+
+.EX
+.PP
+.B fail2ban_exec_t 
+.EE
+
+- Set files with the fail2ban_exec_t type, if you want to transition an executable to the fail2ban_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/fail2ban-server, /usr/bin/fail2ban
+
+.EX
+.PP
+.B fail2ban_initrc_exec_t 
+.EE
+
+- Set files with the fail2ban_initrc_exec_t type, if you want to transition an executable to the fail2ban_initrc_t domain.
+
+
+.EX
+.PP
+.B fail2ban_log_t 
+.EE
+
+- Set files with the fail2ban_log_t type, if you want to treat the data as fail2ban log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B fail2ban_tmp_t 
+.EE
+
+- Set files with the fail2ban_tmp_t type, if you want to store fail2ban temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B fail2ban_var_lib_t 
+.EE
+
+- Set files with the fail2ban_var_lib_t type, if you want to store the fail2ban files under the /var/lib directory.
+
+
+.EX
+.PP
+.B fail2ban_var_run_t 
+.EE
+
+- Set files with the fail2ban_var_run_t type, if you want to store the fail2ban files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux fail2ban policy is very flexible allowing users to setup their fail2ban processes in as secure a method as possible.
+.PP 
+The following process types are defined for fail2ban:
+
+.EX
+.B fail2ban_client_t, fail2ban_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), fail2ban(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/fcoemon_selinux.8 b/man/man8/fcoemon_selinux.8
new file mode 100644
index 0000000..7f07e27
--- /dev/null
+++ b/man/man8/fcoemon_selinux.8
@@ -0,0 +1,89 @@
+.TH  "fcoemon_selinux"  "8"  "fcoemon" "dwalsh@redhat.com" "fcoemon SELinux Policy documentation"
+.SH "NAME"
+fcoemon_selinux \- Security Enhanced Linux Policy for the fcoemon processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B fcoemon
+(policy for fcoemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux fcoemon policy is very flexible allowing users to setup their fcoemon processes in as secure a method as possible.
+.PP 
+The following file types are defined for fcoemon:
+
+
+.EX
+.PP
+.B fcoemon_exec_t 
+.EE
+
+- Set files with the fcoemon_exec_t type, if you want to transition an executable to the fcoemon_t domain.
+
+
+.EX
+.PP
+.B fcoemon_var_run_t 
+.EE
+
+- Set files with the fcoemon_var_run_t type, if you want to store the fcoemon files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/fcm(/.*)?, /var/run/fcoemon\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux fcoemon policy is very flexible allowing users to setup their fcoemon processes in as secure a method as possible.
+.PP 
+The following process types are defined for fcoemon:
+
+.EX
+.B fcoemon_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), fcoemon(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/fenced_selinux.8 b/man/man8/fenced_selinux.8
new file mode 100644
index 0000000..8a95cd7
--- /dev/null
+++ b/man/man8/fenced_selinux.8
@@ -0,0 +1,141 @@
+.TH  "fenced_selinux"  "8"  "fenced" "dwalsh@redhat.com" "fenced SELinux Policy documentation"
+.SH "NAME"
+fenced_selinux \- Security Enhanced Linux Policy for the fenced processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  fenced policy is extremely flexible and has several booleans that allow you to manipulate the policy and run fenced with the tightest access possible.
+
+
+.PP
+If you want to allow fenced domain to execute ssh, you must turn on the fenced_can_ssh boolean.
+
+.EX
+.B setsebool -P fenced_can_ssh 1
+.EE
+
+.PP
+If you want to allow fenced domain to connect to the network using TCP, you must turn on the fenced_can_network_connect boolean.
+
+.EX
+.B setsebool -P fenced_can_network_connect 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux fenced policy is very flexible allowing users to setup their fenced processes in as secure a method as possible.
+.PP 
+The following file types are defined for fenced:
+
+
+.EX
+.PP
+.B fenced_exec_t 
+.EE
+
+- Set files with the fenced_exec_t type, if you want to transition an executable to the fenced_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/fence_node, /usr/sbin/fence_tool, /usr/sbin/fenced
+
+.EX
+.PP
+.B fenced_lock_t 
+.EE
+
+- Set files with the fenced_lock_t type, if you want to treat the files as fenced lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B fenced_tmp_t 
+.EE
+
+- Set files with the fenced_tmp_t type, if you want to store fenced temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B fenced_tmpfs_t 
+.EE
+
+- Set files with the fenced_tmpfs_t type, if you want to store fenced files on a tmpfs file system.
+
+
+.EX
+.PP
+.B fenced_var_log_t 
+.EE
+
+- Set files with the fenced_var_log_t type, if you want to treat the data as fenced var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B fenced_var_run_t 
+.EE
+
+- Set files with the fenced_var_run_t type, if you want to store the fenced files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/cluster/fenced_override, /var/run/cluster/fence_scsi.*, /var/run/fenced\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux fenced policy is very flexible allowing users to setup their fenced processes in as secure a method as possible.
+.PP 
+The following process types are defined for fenced:
+
+.EX
+.B fenced_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), fenced(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/fetchmail_selinux.8 b/man/man8/fetchmail_selinux.8
new file mode 100644
index 0000000..65f9aa3
--- /dev/null
+++ b/man/man8/fetchmail_selinux.8
@@ -0,0 +1,109 @@
+.TH  "fetchmail_selinux"  "8"  "fetchmail" "dwalsh@redhat.com" "fetchmail SELinux Policy documentation"
+.SH "NAME"
+fetchmail_selinux \- Security Enhanced Linux Policy for the fetchmail processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B fetchmail
+(Remote-mail retrieval and forwarding utility)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux fetchmail policy is very flexible allowing users to setup their fetchmail processes in as secure a method as possible.
+.PP 
+The following file types are defined for fetchmail:
+
+
+.EX
+.PP
+.B fetchmail_etc_t 
+.EE
+
+- Set files with the fetchmail_etc_t type, if you want to store fetchmail files in the /etc directories.
+
+
+.EX
+.PP
+.B fetchmail_exec_t 
+.EE
+
+- Set files with the fetchmail_exec_t type, if you want to transition an executable to the fetchmail_t domain.
+
+
+.EX
+.PP
+.B fetchmail_home_t 
+.EE
+
+- Set files with the fetchmail_home_t type, if you want to store fetchmail files in the users home directory.
+
+
+.EX
+.PP
+.B fetchmail_uidl_cache_t 
+.EE
+
+- Set files with the fetchmail_uidl_cache_t type, if you want to store the files under the /var/cache directory.
+
+
+.EX
+.PP
+.B fetchmail_var_run_t 
+.EE
+
+- Set files with the fetchmail_var_run_t type, if you want to store the fetchmail files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux fetchmail policy is very flexible allowing users to setup their fetchmail processes in as secure a method as possible.
+.PP 
+The following process types are defined for fetchmail:
+
+.EX
+.B fetchmail_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), fetchmail(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/fingerd_selinux.8 b/man/man8/fingerd_selinux.8
new file mode 100644
index 0000000..b1c9f85
--- /dev/null
+++ b/man/man8/fingerd_selinux.8
@@ -0,0 +1,125 @@
+.TH  "fingerd_selinux"  "8"  "fingerd" "dwalsh@redhat.com" "fingerd SELinux Policy documentation"
+.SH "NAME"
+fingerd_selinux \- Security Enhanced Linux Policy for the fingerd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux fingerd policy is very flexible allowing users to setup their fingerd processes in as secure a method as possible.
+.PP 
+The following file types are defined for fingerd:
+
+
+.EX
+.PP
+.B fingerd_etc_t 
+.EE
+
+- Set files with the fingerd_etc_t type, if you want to store fingerd files in the /etc directories.
+
+
+.EX
+.PP
+.B fingerd_exec_t 
+.EE
+
+- Set files with the fingerd_exec_t type, if you want to transition an executable to the fingerd_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/cron\.weekly/(c)?fingerd, /usr/sbin/[cef]fingerd, /usr/sbin/in\.fingerd
+
+.EX
+.PP
+.B fingerd_log_t 
+.EE
+
+- Set files with the fingerd_log_t type, if you want to treat the data as fingerd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B fingerd_var_run_t 
+.EE
+
+- Set files with the fingerd_var_run_t type, if you want to store the fingerd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux fingerd policy is very flexible allowing users to setup their fingerd processes in as secure a method as possible.
+.PP 
+The following port types are defined for fingerd:
+
+.EX
+.TP 5
+.B fingerd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux fingerd policy is very flexible allowing users to setup their fingerd processes in as secure a method as possible.
+.PP 
+The following process types are defined for fingerd:
+
+.EX
+.B fingerd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), fingerd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/firewalld_selinux.8 b/man/man8/firewalld_selinux.8
new file mode 100644
index 0000000..c6d98d6
--- /dev/null
+++ b/man/man8/firewalld_selinux.8
@@ -0,0 +1,121 @@
+.TH  "firewalld_selinux"  "8"  "firewalld" "dwalsh@redhat.com" "firewalld SELinux Policy documentation"
+.SH "NAME"
+firewalld_selinux \- Security Enhanced Linux Policy for the firewalld processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B firewalld
+(policy for firewalld)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux firewalld policy is very flexible allowing users to setup their firewalld processes in as secure a method as possible.
+.PP 
+The following file types are defined for firewalld:
+
+
+.EX
+.PP
+.B firewalld_etc_rw_t 
+.EE
+
+- Set files with the firewalld_etc_rw_t type, if you want to treat the files as firewalld etc read/write content.
+
+
+.EX
+.PP
+.B firewalld_exec_t 
+.EE
+
+- Set files with the firewalld_exec_t type, if you want to transition an executable to the firewalld_t domain.
+
+
+.EX
+.PP
+.B firewalld_initrc_exec_t 
+.EE
+
+- Set files with the firewalld_initrc_exec_t type, if you want to transition an executable to the firewalld_initrc_t domain.
+
+
+.EX
+.PP
+.B firewalld_unit_file_t 
+.EE
+
+- Set files with the firewalld_unit_file_t type, if you want to treat the files as firewalld unit content.
+
+
+.EX
+.PP
+.B firewalld_var_log_t 
+.EE
+
+- Set files with the firewalld_var_log_t type, if you want to treat the data as firewalld var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B firewalld_var_run_t 
+.EE
+
+- Set files with the firewalld_var_run_t type, if you want to store the firewalld files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/firewalld(/.*)?, /var/run/firewalld\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux firewalld policy is very flexible allowing users to setup their firewalld processes in as secure a method as possible.
+.PP 
+The following process types are defined for firewalld:
+
+.EX
+.B firewallgui_t, firewalld_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), firewalld(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/firewallgui_selinux.8 b/man/man8/firewallgui_selinux.8
new file mode 100644
index 0000000..6fd604e
--- /dev/null
+++ b/man/man8/firewallgui_selinux.8
@@ -0,0 +1,85 @@
+.TH  "firewallgui_selinux"  "8"  "firewallgui" "dwalsh@redhat.com" "firewallgui SELinux Policy documentation"
+.SH "NAME"
+firewallgui_selinux \- Security Enhanced Linux Policy for the firewallgui processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B firewallgui
+(policy for firewallgui)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux firewallgui policy is very flexible allowing users to setup their firewallgui processes in as secure a method as possible.
+.PP 
+The following file types are defined for firewallgui:
+
+
+.EX
+.PP
+.B firewallgui_exec_t 
+.EE
+
+- Set files with the firewallgui_exec_t type, if you want to transition an executable to the firewallgui_t domain.
+
+
+.EX
+.PP
+.B firewallgui_tmp_t 
+.EE
+
+- Set files with the firewallgui_tmp_t type, if you want to store firewallgui temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux firewallgui policy is very flexible allowing users to setup their firewallgui processes in as secure a method as possible.
+.PP 
+The following process types are defined for firewallgui:
+
+.EX
+.B firewallgui_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), firewallgui(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/firstboot_selinux.8 b/man/man8/firstboot_selinux.8
new file mode 100644
index 0000000..b1bbe5c
--- /dev/null
+++ b/man/man8/firstboot_selinux.8
@@ -0,0 +1,100 @@
+.TH  "firstboot_selinux"  "8"  "firstboot" "dwalsh@redhat.com" "firstboot SELinux Policy documentation"
+.SH "NAME"
+firstboot_selinux \- Security Enhanced Linux Policy for the firstboot processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B firstboot
+(
+Final system configuration run during the first boot
+after installation of Red Hat/Fedora systems.
+)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux firstboot policy is very flexible allowing users to setup their firstboot processes in as secure a method as possible.
+.PP 
+The following file types are defined for firstboot:
+
+
+.EX
+.PP
+.B firstboot_etc_t 
+.EE
+
+- Set files with the firstboot_etc_t type, if you want to store firstboot files in the /etc directories.
+
+
+.EX
+.PP
+.B firstboot_exec_t 
+.EE
+
+- Set files with the firstboot_exec_t type, if you want to transition an executable to the firstboot_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/share/firstboot/firstboot\.py, /usr/sbin/firstboot
+
+.EX
+.PP
+.B firstboot_tmp_t 
+.EE
+
+- Set files with the firstboot_tmp_t type, if you want to store firstboot temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux firstboot policy is very flexible allowing users to setup their firstboot processes in as secure a method as possible.
+.PP 
+The following process types are defined for firstboot:
+
+.EX
+.B firstboot_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), firstboot(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/foghorn_selinux.8 b/man/man8/foghorn_selinux.8
new file mode 100644
index 0000000..828ba62
--- /dev/null
+++ b/man/man8/foghorn_selinux.8
@@ -0,0 +1,95 @@
+.TH  "foghorn_selinux"  "8"  "foghorn" "dwalsh@redhat.com" "foghorn SELinux Policy documentation"
+.SH "NAME"
+foghorn_selinux \- Security Enhanced Linux Policy for the foghorn processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux foghorn policy is very flexible allowing users to setup their foghorn processes in as secure a method as possible.
+.PP 
+The following file types are defined for foghorn:
+
+
+.EX
+.PP
+.B foghorn_exec_t 
+.EE
+
+- Set files with the foghorn_exec_t type, if you want to transition an executable to the foghorn_t domain.
+
+
+.EX
+.PP
+.B foghorn_tmpfs_t 
+.EE
+
+- Set files with the foghorn_tmpfs_t type, if you want to store foghorn files on a tmpfs file system.
+
+
+.EX
+.PP
+.B foghorn_var_log_t 
+.EE
+
+- Set files with the foghorn_var_log_t type, if you want to treat the data as foghorn var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B foghorn_var_run_t 
+.EE
+
+- Set files with the foghorn_var_run_t type, if you want to store the foghorn files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux foghorn policy is very flexible allowing users to setup their foghorn processes in as secure a method as possible.
+.PP 
+The following process types are defined for foghorn:
+
+.EX
+.B foghorn_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), foghorn(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/fprintd_selinux.8 b/man/man8/fprintd_selinux.8
new file mode 100644
index 0000000..cd72389
--- /dev/null
+++ b/man/man8/fprintd_selinux.8
@@ -0,0 +1,85 @@
+.TH  "fprintd_selinux"  "8"  "fprintd" "dwalsh@redhat.com" "fprintd SELinux Policy documentation"
+.SH "NAME"
+fprintd_selinux \- Security Enhanced Linux Policy for the fprintd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B fprintd
+(DBus fingerprint reader service)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux fprintd policy is very flexible allowing users to setup their fprintd processes in as secure a method as possible.
+.PP 
+The following file types are defined for fprintd:
+
+
+.EX
+.PP
+.B fprintd_exec_t 
+.EE
+
+- Set files with the fprintd_exec_t type, if you want to transition an executable to the fprintd_t domain.
+
+
+.EX
+.PP
+.B fprintd_var_lib_t 
+.EE
+
+- Set files with the fprintd_var_lib_t type, if you want to store the fprintd files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux fprintd policy is very flexible allowing users to setup their fprintd processes in as secure a method as possible.
+.PP 
+The following process types are defined for fprintd:
+
+.EX
+.B fprintd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), fprintd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/freshclam_selinux.8 b/man/man8/freshclam_selinux.8
new file mode 100644
index 0000000..f012b28
--- /dev/null
+++ b/man/man8/freshclam_selinux.8
@@ -0,0 +1,83 @@
+.TH  "freshclam_selinux"  "8"  "freshclam" "dwalsh@redhat.com" "freshclam SELinux Policy documentation"
+.SH "NAME"
+freshclam_selinux \- Security Enhanced Linux Policy for the freshclam processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux freshclam policy is very flexible allowing users to setup their freshclam processes in as secure a method as possible.
+.PP 
+The following file types are defined for freshclam:
+
+
+.EX
+.PP
+.B freshclam_exec_t 
+.EE
+
+- Set files with the freshclam_exec_t type, if you want to transition an executable to the freshclam_t domain.
+
+
+.EX
+.PP
+.B freshclam_var_log_t 
+.EE
+
+- Set files with the freshclam_var_log_t type, if you want to treat the data as freshclam var log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/clamav/freshclam.*, /var/log/freshclam.*
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux freshclam policy is very flexible allowing users to setup their freshclam processes in as secure a method as possible.
+.PP 
+The following process types are defined for freshclam:
+
+.EX
+.B freshclam_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), freshclam(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/fsadm_selinux.8 b/man/man8/fsadm_selinux.8
new file mode 100644
index 0000000..9400571
--- /dev/null
+++ b/man/man8/fsadm_selinux.8
@@ -0,0 +1,91 @@
+.TH  "fsadm_selinux"  "8"  "fsadm" "dwalsh@redhat.com" "fsadm SELinux Policy documentation"
+.SH "NAME"
+fsadm_selinux \- Security Enhanced Linux Policy for the fsadm processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux fsadm policy is very flexible allowing users to setup their fsadm processes in as secure a method as possible.
+.PP 
+The following file types are defined for fsadm:
+
+
+.EX
+.PP
+.B fsadm_exec_t 
+.EE
+
+- Set files with the fsadm_exec_t type, if you want to transition an executable to the fsadm_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/partx, /usr/sbin/fdisk, /sbin/mkfs.*, /sbin/blockdev, /usr/sbin/sfdisk, /sbin/dumpe2fs, /sbin/mkdosfs, /sbin/mke2fs, /sbin/e4fsck, /usr/sbin/dosfsck, /usr/sbin/blockdev, /usr/sbin/lsraid, /usr/bin/partition_uuid, /sbin/raidautorun, /usr/sbin/findfs, /usr/sbin/scsi_info, /usr/sbin/raidstart, /sbin/mkreiserfs, /sbin/sfdisk, /usr/sbin/raidautorun, /usr/sbin/make_reiser4, /usr/sbin/partx, /usr/sbin/resize.*fs, /usr/sbin/fsck.*, /usr/sbin/dumpe2fs, /usr/sbin/mkdosfs, /sbin/blkid, /usr/sbin/hdparm, /sbin/make_reiser4, /sbin/dump, /sbin/swapon.*, /usr/sbin/jfs_.*, /usr/bin/scsi_unique_id, /sbin/findfs, /usr/sbin/smartctl, /usr/bin/syslinux, /usr/sbin/blkid, /usr/sbin/mke2fs, /sbin/tune2fs, /sbin/losetup.*, /sbin/resize.*fs, /usr/sbin/tune2fs, /usr/lib/systemd/systemd-fsck, /sbin/parted, /sbin/partprobe, /sbin/dosfsck, /usr/sbin/mkfs.*, /sbin/e2label, /lib/systemd/systemd-fsck, /usr/sbin/reiserfs(ck|tune), /sbin/mkraid, /sbin/install-mbr, /sbin/scsi_info, /sbin/e2fsck, /sbin/fsck.*, /usr/sbin/install-mbr, /usr/sbin/clubufflush, /sbin/jfs_.*, /sbin/raidstart, /sbin/lsraid, /usr/sbin/losetup.*, /usr/sbin/mkreiserfs, /usr/sbin/swapon.*, /usr/sbin/e2fsck, /sbin/reiserfs(ck|tune), /usr/sbin/e4fsck, /usr/sbin/dump, /usr/sbin/partprobe, /sbin/fdisk, /usr/sbin/e2label, /usr/sbin/parted, /usr/bin/raw, /sbin/mke4fs, /usr/sbin/cfdisk, /usr/sbin/mke4fs, /sbin/cfdisk, /usr/sbin/mkraid, /sbin/hdparm
+
+.EX
+.PP
+.B fsadm_log_t 
+.EE
+
+- Set files with the fsadm_log_t type, if you want to treat the data as fsadm log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B fsadm_tmp_t 
+.EE
+
+- Set files with the fsadm_tmp_t type, if you want to store fsadm temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux fsadm policy is very flexible allowing users to setup their fsadm processes in as secure a method as possible.
+.PP 
+The following process types are defined for fsadm:
+
+.EX
+.B fsadm_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), fsadm(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/fsdaemon_selinux.8 b/man/man8/fsdaemon_selinux.8
new file mode 100644
index 0000000..0f3466e
--- /dev/null
+++ b/man/man8/fsdaemon_selinux.8
@@ -0,0 +1,95 @@
+.TH  "fsdaemon_selinux"  "8"  "fsdaemon" "dwalsh@redhat.com" "fsdaemon SELinux Policy documentation"
+.SH "NAME"
+fsdaemon_selinux \- Security Enhanced Linux Policy for the fsdaemon processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux fsdaemon policy is very flexible allowing users to setup their fsdaemon processes in as secure a method as possible.
+.PP 
+The following file types are defined for fsdaemon:
+
+
+.EX
+.PP
+.B fsdaemon_exec_t 
+.EE
+
+- Set files with the fsdaemon_exec_t type, if you want to transition an executable to the fsdaemon_t domain.
+
+
+.EX
+.PP
+.B fsdaemon_initrc_exec_t 
+.EE
+
+- Set files with the fsdaemon_initrc_exec_t type, if you want to transition an executable to the fsdaemon_initrc_t domain.
+
+
+.EX
+.PP
+.B fsdaemon_tmp_t 
+.EE
+
+- Set files with the fsdaemon_tmp_t type, if you want to store fsdaemon temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B fsdaemon_var_run_t 
+.EE
+
+- Set files with the fsdaemon_var_run_t type, if you want to store the fsdaemon files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux fsdaemon policy is very flexible allowing users to setup their fsdaemon processes in as secure a method as possible.
+.PP 
+The following process types are defined for fsdaemon:
+
+.EX
+.B fsdaemon_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), fsdaemon(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/ftpd_selinux.8 b/man/man8/ftpd_selinux.8
index 5bebd82..c617a6e 100644
--- a/man/man8/ftpd_selinux.8
+++ b/man/man8/ftpd_selinux.8
@@ -1,65 +1,321 @@
-.TH  "ftpd_selinux"  "8"  "17 Jan 2005" "dwalsh@redhat.com" "ftpd SELinux policy documentation"
+.TH  "ftpd_selinux"  "8"  "ftpd" "dwalsh@redhat.com" "ftpd SELinux Policy documentation"
 .SH "NAME"
-.PP
-ftpd_selinux \- Security-Enhanced Linux policy for ftp daemons.
+ftpd_selinux \- Security Enhanced Linux Policy for the ftpd processes
 .SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  ftpd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run ftpd with the tightest access possible.
+
+
 .PP
-Security-Enhanced Linux provides security for ftp daemons via flexible mandatory access control.
-.SH FILE_CONTEXTS
+If you want to allow ftp to read and write files in the user home directorie, you must turn on the ftp_home_dir boolean.
+
+.EX
+.B setsebool -P ftp_home_dir 1
+.EE
+
 .PP
-SELinux requires files to have a file type. File types may be specified with semanage and are restored with restorecon.  Policy governs the access that daemons have to files.
-.TP
-Allow ftp servers to read the /var/ftp directory by adding the public_content_t file type to the directory and by restoring the file type.
+If you want to allow ftp servers to login to local users and read/write all files on the system, governed by DAC, you must turn on the allow_ftpd_full_access boolean.
+
+.EX
+.B setsebool -P allow_ftpd_full_access 1
+.EE
+
 .PP
-.B
-semanage fcontext -a -t public_content_t "/var/ftp(/.*)?"
-.TP
-.B
-restorecon -F -R -v /var/ftp
-.TP
-Allow ftp servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_ftpd_anon_write boolean to be set.
+If you want to allow ftp servers to connect to mysql database port, you must turn on the ftpd_connect_db boolean.
+
+.EX
+.B setsebool -P ftpd_connect_db 1
+.EE
+
 .PP
-.B
-semanage fcontext -a -t public_content_rw_t "/var/ftp/incoming(/.*)?"
-.TP
-.B
-restorecon -F -R -v /var/ftp/incoming
+If you want to allow ftp servers to use cifs used for public file transfer services, you must turn on the allow_ftpd_use_cifs boolean.
+
+.EX
+.B setsebool -P allow_ftpd_use_cifs 1
+.EE
 
-.SH BOOLEANS
 .PP
-SELinux policy is based on least privilege required and may also be customizable by setting a boolean with setsebool.
-.TP
-Allow ftp servers to read and write files with the public_content_rw_t file type.
+If you want to allow ftp servers to use nfs used for public file transfer services, you must turn on the allow_ftpd_use_nfs boolean.
+
+.EX
+.B setsebool -P allow_ftpd_use_nfs 1
+.EE
+
 .PP
-.B
-setsebool -P allow_ftpd_anon_write on
-.TP
-Allow ftp servers to read or write files in the user home directories.
+If you want to allow sftp-internal to read and write files in the user home directorie, you must turn on the sftpd_enable_homedirs boolean.
+
+.EX
+.B setsebool -P sftpd_enable_homedirs 1
+.EE
+
 .PP
-.B
-setsebool -P ftp_home_dir on
-.TP
-Allow ftp servers to read or write all files on the system.
+If you want to allow httpd to act as a FTP client connecting to the ftp port and ephemeral port, you must turn on the httpd_can_connect_ftp boolean.
+
+.EX
+.B setsebool -P httpd_can_connect_ftp 1
+.EE
+
 .PP
-.B
-setsebool -P allow_ftpd_full_access on
+If you want to allow sftp-internal to login to local users and read/write all files on the system, governed by DAC, you must turn on the sftpd_full_access boolean.
+
+.EX
+.B setsebool -P sftpd_full_access 1
+.EE
+
+.PP
+If you want to allow ftp servers to connect to all ports > 102, you must turn on the ftpd_connect_all_unreserved boolean.
+
+.EX
+.B setsebool -P ftpd_connect_all_unreserved 1
+.EE
+
+.PP
+If you want to allow httpd to act as a FTP server by listening on the ftp port, you must turn on the httpd_enable_ftp_server boolean.
+
+.EX
+.B setsebool -P httpd_enable_ftp_server 1
+.EE
+
+.PP
+If you want to allow internal-sftp to read and write files in the user ssh home directories, you must turn on the sftpd_write_ssh_home boolean.
+
+.EX
+.B setsebool -P sftpd_write_ssh_home 1
+.EE
+
+.SH SHARING FILES
+If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
 .TP
-Allow ftp servers to use cifs for public file transfer services.
+Allow ftpd servers to read the /var/ftpd directory by adding the public_content_t file type to the directory and by restoring the file type.
 .PP
 .B
-setsebool -P allow_ftpd_use_cifs on
+semanage fcontext -a -t public_content_t "/var/ftpd(/.*)?"
+.br
+.B restorecon -F -R -v /var/ftpd
+.pp
 .TP
-Allow ftp servers to use nfs for public file transfer services.
+Allow ftpd servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_ftpd_anon_write boolean to be set.
 .PP
 .B
-setsebool -P allow_ftpd_use_nfs on
-.TP
-system-config-selinux is a GUI tool available to customize SELinux policy settings.
-.SH AUTHOR	
+semanage fcontext -a -t public_content_rw_t "/var/ftpd/incoming(/.*)?"
+.br
+.B restorecon -F -R -v /var/ftpd/incoming
+
+
 .PP
-This manual page was written by Dan Walsh <dwalsh@redhat.com>.
+If you want to allow tftp to modify public files used for public file transfer services., you must turn on the tftp_anon_write boolean.
 
-.SH "SEE ALSO"
+.EX
+.B setsebool -P tftp_anon_write 1
+.EE
+
+.PP
+If you want to allow ftp servers to upload files,  used for public file transfer services. Directories must be labeled public_content_rw_t., you must turn on the allow_ftpd_anon_write boolean.
+
+.EX
+.B setsebool -P allow_ftpd_anon_write 1
+.EE
+
+.PP
+If you want to allow anon internal-sftp to upload files, used for public file transfer services, directories must be labeled public_content_rw_t., you must turn on the sftpd_anon_write boolean.
+
+.EX
+.B setsebool -P sftpd_anon_write 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ftpd policy is very flexible allowing users to setup their ftpd processes in as secure a method as possible.
+.PP 
+The following file types are defined for ftpd:
+
+
+.EX
+.PP
+.B ftpd_etc_t 
+.EE
+
+- Set files with the ftpd_etc_t type, if you want to store ftpd files in the /etc directories.
+
+
+.EX
+.PP
+.B ftpd_exec_t 
+.EE
+
+- Set files with the ftpd_exec_t type, if you want to transition an executable to the ftpd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/ftpwho, /etc/cron\.monthly/proftpd, /usr/sbin/in\.ftpd, /usr/sbin/proftpd, /usr/kerberos/sbin/ftpd, /usr/sbin/muddleftpd, /usr/sbin/vsftpd
+
+.EX
+.PP
+.B ftpd_initrc_exec_t 
+.EE
+
+- Set files with the ftpd_initrc_exec_t type, if you want to transition an executable to the ftpd_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/proftpd, /etc/rc\.d/init\.d/vsftpd
+
+.EX
+.PP
+.B ftpd_keytab_t 
+.EE
+
+- Set files with the ftpd_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B ftpd_lock_t 
+.EE
+
+- Set files with the ftpd_lock_t type, if you want to treat the files as ftpd lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B ftpd_tmp_t 
+.EE
+
+- Set files with the ftpd_tmp_t type, if you want to store ftpd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B ftpd_tmpfs_t 
+.EE
+
+- Set files with the ftpd_tmpfs_t type, if you want to store ftpd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B ftpd_unit_file_t 
+.EE
+
+- Set files with the ftpd_unit_file_t type, if you want to treat the files as ftpd unit content.
+
+
+.EX
+.PP
+.B ftpd_var_run_t 
+.EE
+
+- Set files with the ftpd_var_run_t type, if you want to store the ftpd files under the /run directory.
+
+
+.EX
 .PP
+.B ftpdctl_exec_t 
+.EE
 
-selinux(8), ftpd(8), setsebool(8), semanage(8), restorecon(8)
+- Set files with the ftpdctl_exec_t type, if you want to transition an executable to the ftpdctl_t domain.
+
+
+.EX
+.PP
+.B ftpdctl_tmp_t 
+.EE
+
+- Set files with the ftpdctl_tmp_t type, if you want to store ftpdctl temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux ftpd policy is very flexible allowing users to setup their ftpd processes in as secure a method as possible.
+.PP 
+The following port types are defined for ftpd:
+
+.EX
+.TP 5
+.B ftp_data_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B ftp_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ftpd policy is very flexible allowing users to setup their ftpd processes in as secure a method as possible.
+.PP 
+The following process types are defined for ftpd:
+
+.EX
+.B ftpd_t, ftpdctl_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ftpd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/ftpdctl_selinux.8 b/man/man8/ftpdctl_selinux.8
new file mode 100644
index 0000000..8903b4b
--- /dev/null
+++ b/man/man8/ftpdctl_selinux.8
@@ -0,0 +1,79 @@
+.TH  "ftpdctl_selinux"  "8"  "ftpdctl" "dwalsh@redhat.com" "ftpdctl SELinux Policy documentation"
+.SH "NAME"
+ftpdctl_selinux \- Security Enhanced Linux Policy for the ftpdctl processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ftpdctl policy is very flexible allowing users to setup their ftpdctl processes in as secure a method as possible.
+.PP 
+The following file types are defined for ftpdctl:
+
+
+.EX
+.PP
+.B ftpdctl_exec_t 
+.EE
+
+- Set files with the ftpdctl_exec_t type, if you want to transition an executable to the ftpdctl_t domain.
+
+
+.EX
+.PP
+.B ftpdctl_tmp_t 
+.EE
+
+- Set files with the ftpdctl_tmp_t type, if you want to store ftpdctl temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ftpdctl policy is very flexible allowing users to setup their ftpdctl processes in as secure a method as possible.
+.PP 
+The following process types are defined for ftpdctl:
+
+.EX
+.B ftpdctl_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ftpdctl(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/games_selinux.8 b/man/man8/games_selinux.8
new file mode 100644
index 0000000..4ba69f7
--- /dev/null
+++ b/man/man8/games_selinux.8
@@ -0,0 +1,117 @@
+.TH  "games_selinux"  "8"  "games" "dwalsh@redhat.com" "games SELinux Policy documentation"
+.SH "NAME"
+games_selinux \- Security Enhanced Linux Policy for the games processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B games
+(Games)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux games policy is very flexible allowing users to setup their games processes in as secure a method as possible.
+.PP 
+The following file types are defined for games:
+
+
+.EX
+.PP
+.B games_data_t 
+.EE
+
+- Set files with the games_data_t type, if you want to treat the files as games content.
+
+.br
+.TP 5
+Paths: 
+/var/games(/.*)?, /var/lib/games(/.*)?
+
+.EX
+.PP
+.B games_exec_t 
+.EE
+
+- Set files with the games_exec_t type, if you want to transition an executable to the games_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/sol, /usr/bin/blackjack, /usr/bin/micq, /usr/bin/gnome-stones, /usr/bin/gnotski, /usr/bin/kshisen, /usr/bin/klickety, /usr/bin/lskat, /usr/bin/atlantik, /usr/bin/ksame, /usr/bin/kgoldrunner, /usr/bin/lskatproc, /usr/bin/gataxx, /usr/bin/katomic, /usr/bin/Maelstrom, /usr/bin/ksmiletris, /usr/bin/gnotravex, /usr/bin/ksirtet, /usr/bin/ktuberling, /usr/bin/kbounce, /usr/bin/kenolaba, /usr/bin/kmahjongg, /usr/bin/ksnake, /usr/games/.*, /usr/bin/gnobots2, /usr/bin/civserver.*, /usr/bin/civclient.*, /usr/bin/kwin4, /usr/bin/ktron, /usr/bin/mahjongg, /usr/bin/kbackgammon, /usr/bin/kblackbox, /usr/bin/kjumpingcube, /usr/bin/gnect, /usr/bin/kbattleship, /usr/bin/same-gnome, /usr/bin/kasteroids, /usr/bin/ksokoban, /usr/bin/kolf, /usr/bin/konquest, /usr/bin/kreversi, /usr/bin/kpoker, /usr/lib/games(/.*)?, /usr/bin/glines, /usr/bin/kfouleggs, /usr/bin/kmines, /usr/bin/gnibbles, /usr/bin/kspaceduel, /usr/bin/gnomine, /usr/bin/kpat, /usr/bin/iagno, /usr/bin/gtali, /usr/bin/klines, /usr/bin/kwin4proc
+
+.EX
+.PP
+.B games_srv_var_run_t 
+.EE
+
+- Set files with the games_srv_var_run_t type, if you want to store the games srv files under the /run directory.
+
+
+.EX
+.PP
+.B games_tmp_t 
+.EE
+
+- Set files with the games_tmp_t type, if you want to store games temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B games_tmpfs_t 
+.EE
+
+- Set files with the games_tmpfs_t type, if you want to store games files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux games policy is very flexible allowing users to setup their games processes in as secure a method as possible.
+.PP 
+The following process types are defined for games:
+
+.EX
+.B games_t, games_srv_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), games(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/gconfd_selinux.8 b/man/man8/gconfd_selinux.8
new file mode 100644
index 0000000..6146c3a
--- /dev/null
+++ b/man/man8/gconfd_selinux.8
@@ -0,0 +1,107 @@
+.TH  "gconfd_selinux"  "8"  "gconfd" "dwalsh@redhat.com" "gconfd SELinux Policy documentation"
+.SH "NAME"
+gconfd_selinux \- Security Enhanced Linux Policy for the gconfd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux gconfd policy is very flexible allowing users to setup their gconfd processes in as secure a method as possible.
+.PP 
+The following file types are defined for gconfd:
+
+
+.EX
+.PP
+.B gconf_etc_t 
+.EE
+
+- Set files with the gconf_etc_t type, if you want to store gconf files in the /etc directories.
+
+
+.EX
+.PP
+.B gconf_home_t 
+.EE
+
+- Set files with the gconf_home_t type, if you want to store gconf files in the users home directory.
+
+.br
+.TP 5
+Paths: 
+/root/\.gconf(d)?(/.*)?, /root/\.local.*
+
+.EX
+.PP
+.B gconf_tmp_t 
+.EE
+
+- Set files with the gconf_tmp_t type, if you want to store gconf temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B gconfd_exec_t 
+.EE
+
+- Set files with the gconfd_exec_t type, if you want to transition an executable to the gconfd_t domain.
+
+
+.EX
+.PP
+.B gconfdefaultsm_exec_t 
+.EE
+
+- Set files with the gconfdefaultsm_exec_t type, if you want to transition an executable to the gconfdefaultsm_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux gconfd policy is very flexible allowing users to setup their gconfd processes in as secure a method as possible.
+.PP 
+The following process types are defined for gconfd:
+
+.EX
+.B gconfdefaultsm_t, gconfd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), gconfd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/gconfdefaultsm_selinux.8 b/man/man8/gconfdefaultsm_selinux.8
new file mode 100644
index 0000000..71a23ac
--- /dev/null
+++ b/man/man8/gconfdefaultsm_selinux.8
@@ -0,0 +1,71 @@
+.TH  "gconfdefaultsm_selinux"  "8"  "gconfdefaultsm" "dwalsh@redhat.com" "gconfdefaultsm SELinux Policy documentation"
+.SH "NAME"
+gconfdefaultsm_selinux \- Security Enhanced Linux Policy for the gconfdefaultsm processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux gconfdefaultsm policy is very flexible allowing users to setup their gconfdefaultsm processes in as secure a method as possible.
+.PP 
+The following file types are defined for gconfdefaultsm:
+
+
+.EX
+.PP
+.B gconfdefaultsm_exec_t 
+.EE
+
+- Set files with the gconfdefaultsm_exec_t type, if you want to transition an executable to the gconfdefaultsm_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux gconfdefaultsm policy is very flexible allowing users to setup their gconfdefaultsm processes in as secure a method as possible.
+.PP 
+The following process types are defined for gconfdefaultsm:
+
+.EX
+.B gconfdefaultsm_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), gconfdefaultsm(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/getty_selinux.8 b/man/man8/getty_selinux.8
new file mode 100644
index 0000000..85b78f2
--- /dev/null
+++ b/man/man8/getty_selinux.8
@@ -0,0 +1,129 @@
+.TH  "getty_selinux"  "8"  "getty" "dwalsh@redhat.com" "getty SELinux Policy documentation"
+.SH "NAME"
+getty_selinux \- Security Enhanced Linux Policy for the getty processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B getty
+(Policy for getty)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux getty policy is very flexible allowing users to setup their getty processes in as secure a method as possible.
+.PP 
+The following file types are defined for getty:
+
+
+.EX
+.PP
+.B getty_etc_t 
+.EE
+
+- Set files with the getty_etc_t type, if you want to store getty files in the /etc directories.
+
+
+.EX
+.PP
+.B getty_exec_t 
+.EE
+
+- Set files with the getty_exec_t type, if you want to transition an executable to the getty_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/.*getty, /sbin/.*getty
+
+.EX
+.PP
+.B getty_lock_t 
+.EE
+
+- Set files with the getty_lock_t type, if you want to treat the files as getty lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B getty_log_t 
+.EE
+
+- Set files with the getty_log_t type, if you want to treat the data as getty log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/mgetty\.log.*, /var/log/vgetty\.log\..*
+
+.EX
+.PP
+.B getty_tmp_t 
+.EE
+
+- Set files with the getty_tmp_t type, if you want to store getty temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B getty_var_run_t 
+.EE
+
+- Set files with the getty_var_run_t type, if you want to store the getty files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/spool/voice(/.*)?, /var/spool/fax(/.*)?, /var/run/mgetty\.pid.*
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux getty policy is very flexible allowing users to setup their getty processes in as secure a method as possible.
+.PP 
+The following process types are defined for getty:
+
+.EX
+.B getty_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), getty(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/gfs_selinux.8 b/man/man8/gfs_selinux.8
new file mode 100644
index 0000000..c681f11
--- /dev/null
+++ b/man/man8/gfs_selinux.8
@@ -0,0 +1,95 @@
+.TH  "gfs_selinux"  "8"  "gfs" "dwalsh@redhat.com" "gfs SELinux Policy documentation"
+.SH "NAME"
+gfs_selinux \- Security Enhanced Linux Policy for the gfs processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux gfs policy is very flexible allowing users to setup their gfs processes in as secure a method as possible.
+.PP 
+The following file types are defined for gfs:
+
+
+.EX
+.PP
+.B gfs_controld_exec_t 
+.EE
+
+- Set files with the gfs_controld_exec_t type, if you want to transition an executable to the gfs_controld_t domain.
+
+
+.EX
+.PP
+.B gfs_controld_tmpfs_t 
+.EE
+
+- Set files with the gfs_controld_tmpfs_t type, if you want to store gfs controld files on a tmpfs file system.
+
+
+.EX
+.PP
+.B gfs_controld_var_log_t 
+.EE
+
+- Set files with the gfs_controld_var_log_t type, if you want to treat the data as gfs controld var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B gfs_controld_var_run_t 
+.EE
+
+- Set files with the gfs_controld_var_run_t type, if you want to store the gfs controld files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux gfs policy is very flexible allowing users to setup their gfs processes in as secure a method as possible.
+.PP 
+The following process types are defined for gfs:
+
+.EX
+.B gfs_controld_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), gfs(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/git_shell_selinux.8 b/man/man8/git_shell_selinux.8
new file mode 100644
index 0000000..6031c31
--- /dev/null
+++ b/man/man8/git_shell_selinux.8
@@ -0,0 +1,183 @@
+.TH  "git_shell_selinux"  "8"  "git_shell" "mgrepl@redhat.com" "git_shell SELinux Policy documentation"
+.SH "NAME"
+git_shell_u \- \fBgit_shell user role\fP - Security Enhanced Linux Policy 
+
+.SH DESCRIPTION
+
+\fBgit_shell_u\fP is an SELinux User defined in the SELinux
+policy. SELinux users have default roles, \fBgit_shell_r\fP.  The
+default role has a default type, \fBgit_shell_t\fP, associated with it.
+
+The SELinux user will usually login to a system with a context that looks like:
+
+.B git_shell_u:git_shell_r:git_shell_u:s0-s0:c0.c1023
+
+Linux users are automatically assigned an SELinux users at login.  
+Login programs use the SELinux User to assign initial context to the user's shell.
+
+SELinux policy uses the context to control the user's access.
+
+By default all users are assigned to the SELinux user via the \fB__default__\fP flag
+
+On Targeted policy systems the \fB__default__\fP user is assigned to the \fBunconfined_u\fP SELinux user.
+
+You can list all Linux User to SELinux user mapping using:
+
+.B semanage login -l
+
+If you wanted to change the default user mapping to use the git_shell_u user, you would execute:
+
+.B semanage login -m -s git_shell_u __default__
+
+
+.SH USER DESCRIPTION
+
+The SELinux user git_shell_u is defined in policy as a unprivileged user. SELinux prevents unprivileged users from doing administration tasks without transitioning to a different role.
+
+.SH SUDO
+
+The SELinux type git_shell_t is not allowed to execute sudo. 
+
+.SH X WINDOWS LOGIN
+
+The SELinux user git_shell_u is not able to X Windows login.
+
+.SH TERMINAL LOGIN
+
+The SELinux user git_shell_u is not able to terminal login.
+
+.SH NETWORK
+
+.TP
+The SELinux user git_shell_u is able to connect to the following tcp ports.
+
+.B dns_port_t: 53
+
+.B ocsp_port_t: 9080
+
+.B kerberos_port_t: 88,750,4444
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  git_shell_t policy is extremely flexible and has several booleans that allow you to manipulate the policy and run git_shell_t with the tightest access possible.
+
+
+.PP
+If you want to allow users to connect to the local mysql server, you must turn on the allow_user_mysql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_mysql_connect 1
+.EE
+
+.PP
+If you want to control users use of ping and traceroute, you must turn on the user_ping boolean.
+
+.EX
+.B setsebool -P user_ping 1
+.EE
+
+.PP
+If you want to allow w to display everyone, you must turn on the user_ttyfile_stat boolean.
+
+.EX
+.B setsebool -P user_ttyfile_stat 1
+.EE
+
+.PP
+If you want to allow user music sharing, you must turn on the user_share_music boolean.
+
+.EX
+.B setsebool -P user_share_music 1
+.EE
+
+.PP
+If you want to allow regular users direct dri device access, you must turn on the user_direct_dri boolean.
+
+.EX
+.B setsebool -P user_direct_dri 1
+.EE
+
+.PP
+If you want to allow user to r/w files on filesystems that do not have extended attributes (FAT, CDROM, FLOPPY), you must turn on the user_rw_noexattrfile boolean.
+
+.EX
+.B setsebool -P user_rw_noexattrfile 1
+.EE
+
+.PP
+If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the user_tcp_server boolean.
+
+.EX
+.B setsebool -P user_tcp_server 1
+.EE
+
+.PP
+If you want to allow regular users direct mouse access, you must turn on the user_direct_mouse boolean.
+
+.EX
+.B setsebool -P user_direct_mouse 1
+.EE
+
+.PP
+If you want to allow user processes to change their priority, you must turn on the user_setrlimit boolean.
+
+.EX
+.B setsebool -P user_setrlimit 1
+.EE
+
+.PP
+If you want to allow users to connect to PostgreSQL, you must turn on the allow_user_postgresql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_postgresql_connect 1
+.EE
+
+.PP
+If you want to allow users to read system messages, you must turn on the user_dmesg boolean.
+
+.EX
+.B setsebool -P user_dmesg 1
+.EE
+
+.SH HOME_EXEC
+
+The SELinux user git_shell_u is able execute home content files.
+
+.SH TRANSITIONS
+
+Three things can happen when git_shell_t attempts to execute a program.
+
+\fB1.\fP SELinux Policy can deny git_shell_t from executing the program.
+
+.TP
+
+\fB2.\fP SELinux Policy can allow git_shell_t to execute the program in the current user type.
+
+Execute the following to see the types that the SELinux user git_shell_t can execute without transitioning:
+
+.B sesearch -A -s git_shell_t -c file -p execute_no_trans
+
+.TP
+
+\fB3.\fP SELinux can allow git_shell_t to execute the program and transition to a new type.
+
+Execute the following to see the types that the SELinux user git_shell_t can execute and transition:
+
+.B $ sesearch -A -s git_shell_t -c process -p transition
+
+
+.SH "COMMANDS"
+
+.B semanage login
+can also be used to manipulate the Linux User to SELinux User mappings
+
+.B semanage user
+can also be used to manipulate SELinux user definitions.
+
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genuserman.py.
+
+.SH "SEE ALSO"
+selinux(8), semanage(8).
diff --git a/man/man8/gitosis_selinux.8 b/man/man8/gitosis_selinux.8
new file mode 100644
index 0000000..0db16b5
--- /dev/null
+++ b/man/man8/gitosis_selinux.8
@@ -0,0 +1,108 @@
+.TH  "gitosis_selinux"  "8"  "gitosis" "dwalsh@redhat.com" "gitosis SELinux Policy documentation"
+.SH "NAME"
+gitosis_selinux \- Security Enhanced Linux Policy for the gitosis processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B gitosis
+(Tools for managing and hosting git repositories)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  gitosis policy is extremely flexible and has several booleans that allow you to manipulate the policy and run gitosis with the tightest access possible.
+
+
+.PP
+If you want to allow gitisis daemon to send mai, you must turn on the gitosis_can_sendmail boolean.
+
+.EX
+.B setsebool -P gitosis_can_sendmail 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux gitosis policy is very flexible allowing users to setup their gitosis processes in as secure a method as possible.
+.PP 
+The following file types are defined for gitosis:
+
+
+.EX
+.PP
+.B gitosis_exec_t 
+.EE
+
+- Set files with the gitosis_exec_t type, if you want to transition an executable to the gitosis_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/gitosis-serve, /usr/bin/gl-auth-command
+
+.EX
+.PP
+.B gitosis_var_lib_t 
+.EE
+
+- Set files with the gitosis_var_lib_t type, if you want to store the gitosis files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/gitolite(/.*)?, /var/lib/gitosis(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux gitosis policy is very flexible allowing users to setup their gitosis processes in as secure a method as possible.
+.PP 
+The following process types are defined for gitosis:
+
+.EX
+.B gitosis_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), gitosis(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/glance_selinux.8 b/man/man8/glance_selinux.8
new file mode 100644
index 0000000..5fe5fae
--- /dev/null
+++ b/man/man8/glance_selinux.8
@@ -0,0 +1,167 @@
+.TH  "glance_selinux"  "8"  "glance" "dwalsh@redhat.com" "glance SELinux Policy documentation"
+.SH "NAME"
+glance_selinux \- Security Enhanced Linux Policy for the glance processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B glance
+(policy for glance)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux glance policy is very flexible allowing users to setup their glance processes in as secure a method as possible.
+.PP 
+The following file types are defined for glance:
+
+
+.EX
+.PP
+.B glance_api_exec_t 
+.EE
+
+- Set files with the glance_api_exec_t type, if you want to transition an executable to the glance_api_t domain.
+
+
+.EX
+.PP
+.B glance_api_initrc_exec_t 
+.EE
+
+- Set files with the glance_api_initrc_exec_t type, if you want to transition an executable to the glance_api_initrc_t domain.
+
+
+.EX
+.PP
+.B glance_log_t 
+.EE
+
+- Set files with the glance_log_t type, if you want to treat the data as glance log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B glance_registry_exec_t 
+.EE
+
+- Set files with the glance_registry_exec_t type, if you want to transition an executable to the glance_registry_t domain.
+
+
+.EX
+.PP
+.B glance_registry_initrc_exec_t 
+.EE
+
+- Set files with the glance_registry_initrc_exec_t type, if you want to transition an executable to the glance_registry_initrc_t domain.
+
+
+.EX
+.PP
+.B glance_registry_tmp_t 
+.EE
+
+- Set files with the glance_registry_tmp_t type, if you want to store glance registry temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B glance_tmp_t 
+.EE
+
+- Set files with the glance_tmp_t type, if you want to store glance temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B glance_var_lib_t 
+.EE
+
+- Set files with the glance_var_lib_t type, if you want to store the glance files under the /var/lib directory.
+
+
+.EX
+.PP
+.B glance_var_run_t 
+.EE
+
+- Set files with the glance_var_run_t type, if you want to store the glance files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux glance policy is very flexible allowing users to setup their glance processes in as secure a method as possible.
+.PP 
+The following port types are defined for glance:
+
+.EX
+.TP 5
+.B glance_registry_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux glance policy is very flexible allowing users to setup their glance processes in as secure a method as possible.
+.PP 
+The following process types are defined for glance:
+
+.EX
+.B glance_registry_t, glance_api_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), glance(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/gnomeclock_selinux.8 b/man/man8/gnomeclock_selinux.8
new file mode 100644
index 0000000..9664dd6
--- /dev/null
+++ b/man/man8/gnomeclock_selinux.8
@@ -0,0 +1,81 @@
+.TH  "gnomeclock_selinux"  "8"  "gnomeclock" "dwalsh@redhat.com" "gnomeclock SELinux Policy documentation"
+.SH "NAME"
+gnomeclock_selinux \- Security Enhanced Linux Policy for the gnomeclock processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B gnomeclock
+(Gnome clock handler for setting the time)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux gnomeclock policy is very flexible allowing users to setup their gnomeclock processes in as secure a method as possible.
+.PP 
+The following file types are defined for gnomeclock:
+
+
+.EX
+.PP
+.B gnomeclock_exec_t 
+.EE
+
+- Set files with the gnomeclock_exec_t type, if you want to transition an executable to the gnomeclock_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/libexec/gsd-datetime-mechanism, /usr/libexec/kde(3|4)/kcmdatetimehelper, /usr/libexec/gnome-clock-applet-mechanism
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux gnomeclock policy is very flexible allowing users to setup their gnomeclock processes in as secure a method as possible.
+.PP 
+The following process types are defined for gnomeclock:
+
+.EX
+.B gnomeclock_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), gnomeclock(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/gnomesystemmm_selinux.8 b/man/man8/gnomesystemmm_selinux.8
new file mode 100644
index 0000000..d92b3e4
--- /dev/null
+++ b/man/man8/gnomesystemmm_selinux.8
@@ -0,0 +1,75 @@
+.TH  "gnomesystemmm_selinux"  "8"  "gnomesystemmm" "dwalsh@redhat.com" "gnomesystemmm SELinux Policy documentation"
+.SH "NAME"
+gnomesystemmm_selinux \- Security Enhanced Linux Policy for the gnomesystemmm processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux gnomesystemmm policy is very flexible allowing users to setup their gnomesystemmm processes in as secure a method as possible.
+.PP 
+The following file types are defined for gnomesystemmm:
+
+
+.EX
+.PP
+.B gnomesystemmm_exec_t 
+.EE
+
+- Set files with the gnomesystemmm_exec_t type, if you want to transition an executable to the gnomesystemmm_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/libexec/kde(3|4)/ksysguardprocesslist_helper, /usr/libexec/gnome-system-monitor-mechanism
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux gnomesystemmm policy is very flexible allowing users to setup their gnomesystemmm processes in as secure a method as possible.
+.PP 
+The following process types are defined for gnomesystemmm:
+
+.EX
+.B gnomesystemmm_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), gnomesystemmm(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/gpg_selinux.8 b/man/man8/gpg_selinux.8
new file mode 100644
index 0000000..9072646
--- /dev/null
+++ b/man/man8/gpg_selinux.8
@@ -0,0 +1,177 @@
+.TH  "gpg_selinux"  "8"  "gpg" "dwalsh@redhat.com" "gpg SELinux Policy documentation"
+.SH "NAME"
+gpg_selinux \- Security Enhanced Linux Policy for the gpg processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B gpg
+(Policy for GNU Privacy Guard and related programs)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  gpg policy is extremely flexible and has several booleans that allow you to manipulate the policy and run gpg with the tightest access possible.
+
+
+.PP
+If you want to allow usage of the gpg-agent --write-env-file option. This also allows gpg-agent to manage user files, you must turn on the gpg_agent_env_file boolean.
+
+.EX
+.B setsebool -P gpg_agent_env_file 1
+.EE
+
+.PP
+If you want to allow httpd to run gpg in gpg-web domai, you must turn on the httpd_use_gpg boolean.
+
+.EX
+.B setsebool -P httpd_use_gpg 1
+.EE
+
+.SH SHARING FILES
+If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
+.TP
+Allow gpg servers to read the /var/gpg directory by adding the public_content_t file type to the directory and by restoring the file type.
+.PP
+.B
+semanage fcontext -a -t public_content_t "/var/gpg(/.*)?"
+.br
+.B restorecon -F -R -v /var/gpg
+.pp
+.TP
+Allow gpg servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_gpg_anon_write boolean to be set.
+.PP
+.B
+semanage fcontext -a -t public_content_rw_t "/var/gpg/incoming(/.*)?"
+.br
+.B restorecon -F -R -v /var/gpg/incoming
+
+
+.PP
+If you want to allow gpg web domain to modify public files used for public file transfer services., you must turn on the gpg_web_anon_write boolean.
+
+.EX
+.B setsebool -P gpg_web_anon_write 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux gpg policy is very flexible allowing users to setup their gpg processes in as secure a method as possible.
+.PP 
+The following file types are defined for gpg:
+
+
+.EX
+.PP
+.B gpg_agent_exec_t 
+.EE
+
+- Set files with the gpg_agent_exec_t type, if you want to transition an executable to the gpg_agent_t domain.
+
+
+.EX
+.PP
+.B gpg_agent_tmp_t 
+.EE
+
+- Set files with the gpg_agent_tmp_t type, if you want to store gpg agent temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B gpg_exec_t 
+.EE
+
+- Set files with the gpg_exec_t type, if you want to transition an executable to the gpg_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/gpg(2)?, /usr/bin/kgpg, /usr/lib/gnupg/.*
+
+.EX
+.PP
+.B gpg_helper_exec_t 
+.EE
+
+- Set files with the gpg_helper_exec_t type, if you want to transition an executable to the gpg_helper_t domain.
+
+
+.EX
+.PP
+.B gpg_pinentry_tmp_t 
+.EE
+
+- Set files with the gpg_pinentry_tmp_t type, if you want to store gpg pinentry temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B gpg_pinentry_tmpfs_t 
+.EE
+
+- Set files with the gpg_pinentry_tmpfs_t type, if you want to store gpg pinentry files on a tmpfs file system.
+
+
+.EX
+.PP
+.B gpg_secret_t 
+.EE
+
+- Set files with the gpg_secret_t type, if you want to treat the files as gpg se secret data.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux gpg policy is very flexible allowing users to setup their gpg processes in as secure a method as possible.
+.PP 
+The following process types are defined for gpg:
+
+.EX
+.B gpg_t, gpg_pinentry_t, gpg_helper_t, gpg_web_t, gpg_agent_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), gpg(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/gpm_selinux.8 b/man/man8/gpm_selinux.8
new file mode 100644
index 0000000..7c67dba
--- /dev/null
+++ b/man/man8/gpm_selinux.8
@@ -0,0 +1,113 @@
+.TH  "gpm_selinux"  "8"  "gpm" "dwalsh@redhat.com" "gpm SELinux Policy documentation"
+.SH "NAME"
+gpm_selinux \- Security Enhanced Linux Policy for the gpm processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B gpm
+(General Purpose Mouse driver)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux gpm policy is very flexible allowing users to setup their gpm processes in as secure a method as possible.
+.PP 
+The following file types are defined for gpm:
+
+
+.EX
+.PP
+.B gpm_conf_t 
+.EE
+
+- Set files with the gpm_conf_t type, if you want to treat the files as gpm configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B gpm_exec_t 
+.EE
+
+- Set files with the gpm_exec_t type, if you want to transition an executable to the gpm_t domain.
+
+
+.EX
+.PP
+.B gpm_tmp_t 
+.EE
+
+- Set files with the gpm_tmp_t type, if you want to store gpm temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B gpm_var_run_t 
+.EE
+
+- Set files with the gpm_var_run_t type, if you want to store the gpm files under the /run directory.
+
+
+.EX
+.PP
+.B gpmctl_t 
+.EE
+
+- Set files with the gpmctl_t type, if you want to treat the files as gpmctl data.
+
+.br
+.TP 5
+Paths: 
+/dev/gpmctl, /dev/gpmdata
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux gpm policy is very flexible allowing users to setup their gpm processes in as secure a method as possible.
+.PP 
+The following process types are defined for gpm:
+
+.EX
+.B gpm_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), gpm(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/gpsd_selinux.8 b/man/man8/gpsd_selinux.8
new file mode 100644
index 0000000..804e552
--- /dev/null
+++ b/man/man8/gpsd_selinux.8
@@ -0,0 +1,131 @@
+.TH  "gpsd_selinux"  "8"  "gpsd" "dwalsh@redhat.com" "gpsd SELinux Policy documentation"
+.SH "NAME"
+gpsd_selinux \- Security Enhanced Linux Policy for the gpsd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B gpsd
+(gpsd monitor daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux gpsd policy is very flexible allowing users to setup their gpsd processes in as secure a method as possible.
+.PP 
+The following file types are defined for gpsd:
+
+
+.EX
+.PP
+.B gpsd_exec_t 
+.EE
+
+- Set files with the gpsd_exec_t type, if you want to transition an executable to the gpsd_t domain.
+
+
+.EX
+.PP
+.B gpsd_initrc_exec_t 
+.EE
+
+- Set files with the gpsd_initrc_exec_t type, if you want to transition an executable to the gpsd_initrc_t domain.
+
+
+.EX
+.PP
+.B gpsd_tmpfs_t 
+.EE
+
+- Set files with the gpsd_tmpfs_t type, if you want to store gpsd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B gpsd_var_run_t 
+.EE
+
+- Set files with the gpsd_var_run_t type, if you want to store the gpsd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/gpsd\.sock, /var/run/gpsd\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux gpsd policy is very flexible allowing users to setup their gpsd processes in as secure a method as possible.
+.PP 
+The following port types are defined for gpsd:
+
+.EX
+.TP 5
+.B gpsd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux gpsd policy is very flexible allowing users to setup their gpsd processes in as secure a method as possible.
+.PP 
+The following process types are defined for gpsd:
+
+.EX
+.B gpsd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), gpsd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/greylist_selinux.8 b/man/man8/greylist_selinux.8
new file mode 100644
index 0000000..893c92e
--- /dev/null
+++ b/man/man8/greylist_selinux.8
@@ -0,0 +1,83 @@
+.TH  "greylist_selinux"  "8"  "greylist" "dwalsh@redhat.com" "greylist SELinux Policy documentation"
+.SH "NAME"
+greylist_selinux \- Security Enhanced Linux Policy for the greylist processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux greylist policy is very flexible allowing users to setup their greylist processes in as secure a method as possible.
+.PP 
+The following file types are defined for greylist:
+
+
+.EX
+.PP
+.B greylist_milter_data_t 
+.EE
+
+- Set files with the greylist_milter_data_t type, if you want to treat the files as greylist milter content.
+
+.br
+.TP 5
+Paths: 
+/var/run/milter-greylist\.pid, /var/run/milter-greylist(/.*)?, /var/lib/milter-greylist(/.*)?
+
+.EX
+.PP
+.B greylist_milter_exec_t 
+.EE
+
+- Set files with the greylist_milter_exec_t type, if you want to transition an executable to the greylist_milter_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux greylist policy is very flexible allowing users to setup their greylist processes in as secure a method as possible.
+.PP 
+The following process types are defined for greylist:
+
+.EX
+.B greylist_milter_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), greylist(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/groupadd_selinux.8 b/man/man8/groupadd_selinux.8
new file mode 100644
index 0000000..7774b5f
--- /dev/null
+++ b/man/man8/groupadd_selinux.8
@@ -0,0 +1,75 @@
+.TH  "groupadd_selinux"  "8"  "groupadd" "dwalsh@redhat.com" "groupadd SELinux Policy documentation"
+.SH "NAME"
+groupadd_selinux \- Security Enhanced Linux Policy for the groupadd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux groupadd policy is very flexible allowing users to setup their groupadd processes in as secure a method as possible.
+.PP 
+The following file types are defined for groupadd:
+
+
+.EX
+.PP
+.B groupadd_exec_t 
+.EE
+
+- Set files with the groupadd_exec_t type, if you want to transition an executable to the groupadd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/gpasswd, /usr/bin/gpasswd, /usr/sbin/groupdel, /usr/sbin/groupadd, /usr/sbin/groupmod
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux groupadd policy is very flexible allowing users to setup their groupadd processes in as secure a method as possible.
+.PP 
+The following process types are defined for groupadd:
+
+.EX
+.B groupadd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), groupadd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/groupd_selinux.8 b/man/man8/groupd_selinux.8
new file mode 100644
index 0000000..7285b15
--- /dev/null
+++ b/man/man8/groupd_selinux.8
@@ -0,0 +1,95 @@
+.TH  "groupd_selinux"  "8"  "groupd" "dwalsh@redhat.com" "groupd SELinux Policy documentation"
+.SH "NAME"
+groupd_selinux \- Security Enhanced Linux Policy for the groupd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux groupd policy is very flexible allowing users to setup their groupd processes in as secure a method as possible.
+.PP 
+The following file types are defined for groupd:
+
+
+.EX
+.PP
+.B groupd_exec_t 
+.EE
+
+- Set files with the groupd_exec_t type, if you want to transition an executable to the groupd_t domain.
+
+
+.EX
+.PP
+.B groupd_tmpfs_t 
+.EE
+
+- Set files with the groupd_tmpfs_t type, if you want to store groupd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B groupd_var_log_t 
+.EE
+
+- Set files with the groupd_var_log_t type, if you want to treat the data as groupd var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B groupd_var_run_t 
+.EE
+
+- Set files with the groupd_var_run_t type, if you want to store the groupd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux groupd policy is very flexible allowing users to setup their groupd processes in as secure a method as possible.
+.PP 
+The following process types are defined for groupd:
+
+.EX
+.B groupadd_t, groupd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), groupd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/gssd_selinux.8 b/man/man8/gssd_selinux.8
new file mode 100644
index 0000000..2e36991
--- /dev/null
+++ b/man/man8/gssd_selinux.8
@@ -0,0 +1,106 @@
+.TH  "gssd_selinux"  "8"  "gssd" "dwalsh@redhat.com" "gssd SELinux Policy documentation"
+.SH "NAME"
+gssd_selinux \- Security Enhanced Linux Policy for the gssd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  gssd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run gssd with the tightest access possible.
+
+
+.PP
+If you want to allow gssd to read temp directory.  For access to kerberos tgt, you must turn on the allow_gssd_read_tmp boolean.
+
+.EX
+.B setsebool -P allow_gssd_read_tmp 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux gssd policy is very flexible allowing users to setup their gssd processes in as secure a method as possible.
+.PP 
+The following file types are defined for gssd:
+
+
+.EX
+.PP
+.B gssd_exec_t 
+.EE
+
+- Set files with the gssd_exec_t type, if you want to transition an executable to the gssd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/rpc\.gssd, /usr/sbin/rpc\.svcgssd
+
+.EX
+.PP
+.B gssd_keytab_t 
+.EE
+
+- Set files with the gssd_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B gssd_tmp_t 
+.EE
+
+- Set files with the gssd_tmp_t type, if you want to store gssd temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux gssd policy is very flexible allowing users to setup their gssd processes in as secure a method as possible.
+.PP 
+The following process types are defined for gssd:
+
+.EX
+.B gssd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), gssd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/guest_selinux.8 b/man/man8/guest_selinux.8
new file mode 100644
index 0000000..faeeaf7
--- /dev/null
+++ b/man/man8/guest_selinux.8
@@ -0,0 +1,188 @@
+.TH  "guest_selinux"  "8"  "guest" "mgrepl@redhat.com" "guest SELinux Policy documentation"
+.SH "NAME"
+guest_u \- \fBLeast privledge terminal user role\fP - Security Enhanced Linux Policy 
+
+.SH DESCRIPTION
+
+\fBguest_u\fP is an SELinux User defined in the SELinux
+policy. SELinux users have default roles, \fBguest_r\fP.  The
+default role has a default type, \fBguest_t\fP, associated with it.
+
+The SELinux user will usually login to a system with a context that looks like:
+
+.B guest_u:guest_r:guest_u:s0-s0:c0.c1023
+
+Linux users are automatically assigned an SELinux users at login.  
+Login programs use the SELinux User to assign initial context to the user's shell.
+
+SELinux policy uses the context to control the user's access.
+
+By default all users are assigned to the SELinux user via the \fB__default__\fP flag
+
+On Targeted policy systems the \fB__default__\fP user is assigned to the \fBunconfined_u\fP SELinux user.
+
+You can list all Linux User to SELinux user mapping using:
+
+.B semanage login -l
+
+If you wanted to change the default user mapping to use the guest_u user, you would execute:
+
+.B semanage login -m -s guest_u __default__
+
+
+If you want to map the one Linux user (joe) to the SELinux user guest, you would execute:
+
+.B $ semanage login -a -s guest_u joe
+
+
+.SH USER DESCRIPTION
+
+The SELinux user guest_u is defined in policy as a unprivileged user. SELinux prevents unprivileged users from doing administration tasks without transitioning to a different role.
+
+.SH SUDO
+
+The SELinux type guest_t is not allowed to execute sudo. 
+
+.SH X WINDOWS LOGIN
+
+The SELinux user guest_u is not able to X Windows login.
+
+.SH TERMINAL LOGIN
+
+The SELinux user guest_u is able to terminal login.
+
+.SH NETWORK
+
+.TP
+The SELinux user guest_u is able to connect to the following tcp ports.
+
+.B dns_port_t: 53
+
+.B ocsp_port_t: 9080
+
+.B kerberos_port_t: 88,750,4444
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  guest_t policy is extremely flexible and has several booleans that allow you to manipulate the policy and run guest_t with the tightest access possible.
+
+
+.PP
+If you want to allow users to connect to the local mysql server, you must turn on the allow_user_mysql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_mysql_connect 1
+.EE
+
+.PP
+If you want to control users use of ping and traceroute, you must turn on the user_ping boolean.
+
+.EX
+.B setsebool -P user_ping 1
+.EE
+
+.PP
+If you want to allow w to display everyone, you must turn on the user_ttyfile_stat boolean.
+
+.EX
+.B setsebool -P user_ttyfile_stat 1
+.EE
+
+.PP
+If you want to allow user music sharing, you must turn on the user_share_music boolean.
+
+.EX
+.B setsebool -P user_share_music 1
+.EE
+
+.PP
+If you want to allow regular users direct dri device access, you must turn on the user_direct_dri boolean.
+
+.EX
+.B setsebool -P user_direct_dri 1
+.EE
+
+.PP
+If you want to allow user to r/w files on filesystems that do not have extended attributes (FAT, CDROM, FLOPPY), you must turn on the user_rw_noexattrfile boolean.
+
+.EX
+.B setsebool -P user_rw_noexattrfile 1
+.EE
+
+.PP
+If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the user_tcp_server boolean.
+
+.EX
+.B setsebool -P user_tcp_server 1
+.EE
+
+.PP
+If you want to allow regular users direct mouse access, you must turn on the user_direct_mouse boolean.
+
+.EX
+.B setsebool -P user_direct_mouse 1
+.EE
+
+.PP
+If you want to allow user processes to change their priority, you must turn on the user_setrlimit boolean.
+
+.EX
+.B setsebool -P user_setrlimit 1
+.EE
+
+.PP
+If you want to allow users to connect to PostgreSQL, you must turn on the allow_user_postgresql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_postgresql_connect 1
+.EE
+
+.PP
+If you want to allow users to read system messages, you must turn on the user_dmesg boolean.
+
+.EX
+.B setsebool -P user_dmesg 1
+.EE
+
+.SH HOME_EXEC
+
+The SELinux user guest_u is able execute home content files.
+
+.SH TRANSITIONS
+
+Three things can happen when guest_t attempts to execute a program.
+
+\fB1.\fP SELinux Policy can deny guest_t from executing the program.
+
+.TP
+
+\fB2.\fP SELinux Policy can allow guest_t to execute the program in the current user type.
+
+Execute the following to see the types that the SELinux user guest_t can execute without transitioning:
+
+.B sesearch -A -s guest_t -c file -p execute_no_trans
+
+.TP
+
+\fB3.\fP SELinux can allow guest_t to execute the program and transition to a new type.
+
+Execute the following to see the types that the SELinux user guest_t can execute and transition:
+
+.B $ sesearch -A -s guest_t -c process -p transition
+
+
+.SH "COMMANDS"
+
+.B semanage login
+can also be used to manipulate the Linux User to SELinux User mappings
+
+.B semanage user
+can also be used to manipulate SELinux user definitions.
+
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genuserman.py.
+
+.SH "SEE ALSO"
+selinux(8), semanage(8).
diff --git a/man/man8/hddtemp_selinux.8 b/man/man8/hddtemp_selinux.8
new file mode 100644
index 0000000..132cb89
--- /dev/null
+++ b/man/man8/hddtemp_selinux.8
@@ -0,0 +1,119 @@
+.TH  "hddtemp_selinux"  "8"  "hddtemp" "dwalsh@redhat.com" "hddtemp SELinux Policy documentation"
+.SH "NAME"
+hddtemp_selinux \- Security Enhanced Linux Policy for the hddtemp processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B hddtemp
+(hddtemp hard disk temperature tool running as a daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux hddtemp policy is very flexible allowing users to setup their hddtemp processes in as secure a method as possible.
+.PP 
+The following file types are defined for hddtemp:
+
+
+.EX
+.PP
+.B hddtemp_etc_t 
+.EE
+
+- Set files with the hddtemp_etc_t type, if you want to store hddtemp files in the /etc directories.
+
+
+.EX
+.PP
+.B hddtemp_exec_t 
+.EE
+
+- Set files with the hddtemp_exec_t type, if you want to transition an executable to the hddtemp_t domain.
+
+
+.EX
+.PP
+.B hddtemp_initrc_exec_t 
+.EE
+
+- Set files with the hddtemp_initrc_exec_t type, if you want to transition an executable to the hddtemp_initrc_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux hddtemp policy is very flexible allowing users to setup their hddtemp processes in as secure a method as possible.
+.PP 
+The following port types are defined for hddtemp:
+
+.EX
+.TP 5
+.B hddtemp_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux hddtemp policy is very flexible allowing users to setup their hddtemp processes in as secure a method as possible.
+.PP 
+The following process types are defined for hddtemp:
+
+.EX
+.B hddtemp_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), hddtemp(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/hostname_selinux.8 b/man/man8/hostname_selinux.8
new file mode 100644
index 0000000..519b849
--- /dev/null
+++ b/man/man8/hostname_selinux.8
@@ -0,0 +1,81 @@
+.TH  "hostname_selinux"  "8"  "hostname" "dwalsh@redhat.com" "hostname SELinux Policy documentation"
+.SH "NAME"
+hostname_selinux \- Security Enhanced Linux Policy for the hostname processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B hostname
+(Policy for changing the system host name)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux hostname policy is very flexible allowing users to setup their hostname processes in as secure a method as possible.
+.PP 
+The following file types are defined for hostname:
+
+
+.EX
+.PP
+.B hostname_exec_t 
+.EE
+
+- Set files with the hostname_exec_t type, if you want to transition an executable to the hostname_t domain.
+
+.br
+.TP 5
+Paths: 
+/bin/hostname, /usr/bin/hostname
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux hostname policy is very flexible allowing users to setup their hostname processes in as secure a method as possible.
+.PP 
+The following process types are defined for hostname:
+
+.EX
+.B hostname_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), hostname(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/hplip_selinux.8 b/man/man8/hplip_selinux.8
new file mode 100644
index 0000000..05353ce
--- /dev/null
+++ b/man/man8/hplip_selinux.8
@@ -0,0 +1,137 @@
+.TH  "hplip_selinux"  "8"  "hplip" "dwalsh@redhat.com" "hplip SELinux Policy documentation"
+.SH "NAME"
+hplip_selinux \- Security Enhanced Linux Policy for the hplip processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux hplip policy is very flexible allowing users to setup their hplip processes in as secure a method as possible.
+.PP 
+The following file types are defined for hplip:
+
+
+.EX
+.PP
+.B hplip_etc_t 
+.EE
+
+- Set files with the hplip_etc_t type, if you want to store hplip files in the /etc directories.
+
+
+.EX
+.PP
+.B hplip_exec_t 
+.EE
+
+- Set files with the hplip_exec_t type, if you want to transition an executable to the hplip_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/hpijs, /usr/share/hplip/.*\.py, /usr/sbin/hp-[^/]+, /usr/lib/cups/backend/hp.*, /usr/sbin/hpiod
+
+.EX
+.PP
+.B hplip_tmp_t 
+.EE
+
+- Set files with the hplip_tmp_t type, if you want to store hplip temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B hplip_var_lib_t 
+.EE
+
+- Set files with the hplip_var_lib_t type, if you want to store the hplip files under the /var/lib directory.
+
+
+.EX
+.PP
+.B hplip_var_run_t 
+.EE
+
+- Set files with the hplip_var_run_t type, if you want to store the hplip files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/hp.*\.pid, /var/run/hp.*\.port
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux hplip policy is very flexible allowing users to setup their hplip processes in as secure a method as possible.
+.PP 
+The following port types are defined for hplip:
+
+.EX
+.TP 5
+.B hplip_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux hplip policy is very flexible allowing users to setup their hplip processes in as secure a method as possible.
+.PP 
+The following process types are defined for hplip:
+
+.EX
+.B hplip_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), hplip(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/httpd_selinux.8 b/man/man8/httpd_selinux.8
index 16e8b13..335b09f 100644
--- a/man/man8/httpd_selinux.8
+++ b/man/man8/httpd_selinux.8
@@ -1,120 +1,1514 @@
-.TH  "httpd_selinux"  "8"  "17 Jan 2005" "dwalsh@redhat.com" "httpd Selinux Policy documentation"
-.de EX
-.nf
-.ft CW
-..
-.de EE
-.ft R
-.fi
-..
+.TH  "httpd_selinux"  "8"  "httpd" "dwalsh@redhat.com" "httpd SELinux Policy documentation"
 .SH "NAME"
-httpd_selinux \- Security Enhanced Linux Policy for the httpd daemon
+httpd_selinux \- Security Enhanced Linux Policy for the httpd processes
 .SH "DESCRIPTION"
 
-Security-Enhanced Linux secures the httpd server via flexible mandatory access
+
+SELinux Linux secures
+.B httpd
+(Apache web server)
+processes via flexible mandatory access
 control.  
-.SH FILE_CONTEXTS
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  httpd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run httpd with the tightest access possible.
+
+
+.PP
+If you want to allow httpd to act as a rela, you must turn on the httpd_can_network_relay boolean.
+
+.EX
+.B setsebool -P httpd_can_network_relay 1
+.EE
+
+.PP
+If you want to allow HTTPD scripts and modules to connect to databases over the network, you must turn on the httpd_can_network_connect_db boolean.
+
+.EX
+.B setsebool -P httpd_can_network_connect_db 1
+.EE
+
+.PP
+If you want to allow httpd to run gpg in gpg-web domai, you must turn on the httpd_use_gpg boolean.
+
+.EX
+.B setsebool -P httpd_use_gpg 1
+.EE
+
+.PP
+If you want to allow httpd to execute cgi script, you must turn on the httpd_enable_cgi boolean.
+
+.EX
+.B setsebool -P httpd_enable_cgi 1
+.EE
+
+.PP
+If you want to allow httpd to access cifs file system, you must turn on the httpd_use_cifs boolean.
+
+.EX
+.B setsebool -P httpd_use_cifs 1
+.EE
+
+.PP
+If you want to allow Apache to use mod_auth_pa, you must turn on the allow_httpd_mod_auth_pam boolean.
+
+.EX
+.B setsebool -P allow_httpd_mod_auth_pam 1
+.EE
+
+.PP
+If you want to allow httpd to read home directorie, you must turn on the httpd_enable_homedirs boolean.
+
+.EX
+.B setsebool -P httpd_enable_homedirs 1
+.EE
+
+.PP
+If you want to allow Apache to communicate with avahi service via dbu, you must turn on the httpd_dbus_avahi boolean.
+
+.EX
+.B setsebool -P httpd_dbus_avahi 1
+.EE
+
+.PP
+If you want to unify HTTPD handling of all content files, you must turn on the httpd_unified boolean.
+
+.EX
+.B setsebool -P httpd_unified 1
+.EE
+
+.PP
+If you want to allow HTTPD scripts and modules to connect to the network using any TCP port, you must turn on the httpd_can_network_connect boolean.
+
+.EX
+.B setsebool -P httpd_can_network_connect 1
+.EE
+
+.PP
+If you want to allow httpd scripts and modules execmem/execstac, you must turn on the httpd_execmem boolean.
+
+.EX
+.B setsebool -P httpd_execmem 1
+.EE
+
+.PP
+If you want to allow httpd to connect to the ldap por, you must turn on the httpd_can_connect_ldap boolean.
+
+.EX
+.B setsebool -P httpd_can_connect_ldap 1
+.EE
+
+.PP
+If you want to allow Apache to use mod_auth_ntlm_winbin, you must turn on the allow_httpd_mod_auth_ntlm_winbind boolean.
+
+.EX
+.B setsebool -P allow_httpd_mod_auth_ntlm_winbind 1
+.EE
+
+.PP
+If you want to unify HTTPD to communicate with the terminal. Needed for entering the passphrase for certificates at the terminal, you must turn on the httpd_tty_comm boolean.
+
+.EX
+.B setsebool -P httpd_tty_comm 1
+.EE
+
+.PP
+If you want to allow httpd to act as a FTP client connecting to the ftp port and ephemeral port, you must turn on the httpd_can_connect_ftp boolean.
+
+.EX
+.B setsebool -P httpd_can_connect_ftp 1
+.EE
+
+.PP
+If you want to allow httpd to read user conten, you must turn on the httpd_read_user_content boolean.
+
+.EX
+.B setsebool -P httpd_read_user_content 1
+.EE
+
+.PP
+If you want to allow httpd to access nfs file system, you must turn on the httpd_use_nfs boolean.
+
+.EX
+.B setsebool -P httpd_use_nfs 1
+.EE
+
+.PP
+If you want to allow Apache to execute tmp content, you must turn on the httpd_tmp_exec boolean.
+
+.EX
+.B setsebool -P httpd_tmp_exec 1
+.EE
+
+.PP
+If you want to allow httpd processes to manage IPA conten, you must turn on the httpd_manage_ipa boolean.
+
+.EX
+.B setsebool -P httpd_manage_ipa 1
+.EE
+
+.PP
+If you want to allow http daemon to send mai, you must turn on the httpd_can_sendmail boolean.
+
+.EX
+.B setsebool -P httpd_can_sendmail 1
+.EE
+
+.PP
+If you want to allow httpd to use built in scripting (usually php, you must turn on the httpd_builtin_scripting boolean.
+
+.EX
+.B setsebool -P httpd_builtin_scripting 1
+.EE
+
+.PP
+If you want to allow http daemon to check spa, you must turn on the httpd_can_check_spam boolean.
+
+.EX
+.B setsebool -P httpd_can_check_spam 1
+.EE
+
+.PP
+If you want to allow BIND to bind apache port, you must turn on the named_bind_http_port boolean.
+
+.EX
+.B setsebool -P named_bind_http_port 1
+.EE
+
+.PP
+If you want to allow httpd to connect to memcache serve, you must turn on the httpd_can_network_memcache boolean.
+
+.EX
+.B setsebool -P httpd_can_network_memcache 1
+.EE
+
+.PP
+If you want to allow HTTPD scripts and modules to connect to cobbler over the network, you must turn on the httpd_can_network_connect_cobbler boolean.
+
+.EX
+.B setsebool -P httpd_can_network_connect_cobbler 1
+.EE
+
+.PP
+If you want to allow HTTPD to run SSI executables in the same domain as system CGI scripts, you must turn on the httpd_ssi_exec boolean.
+
+.EX
+.B setsebool -P httpd_ssi_exec 1
+.EE
+
+.PP
+If you want to allow httpd to act as a FTP server by listening on the ftp port, you must turn on the httpd_enable_ftp_server boolean.
+
+.EX
+.B setsebool -P httpd_enable_ftp_server 1
+.EE
+
+.PP
+If you want to allow http daemon to connect to zabbi, you must turn on the httpd_can_connect_zabbix boolean.
+
+.EX
+.B setsebool -P httpd_can_connect_zabbix 1
+.EE
+
+.PP
+If you want to allow httpd daemon to change system limit, you must turn on the httpd_setrlimit boolean.
+
+.EX
+.B setsebool -P httpd_setrlimit 1
+.EE
+
+.SH SHARING FILES
+If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
+.TP
+Allow httpd servers to read the /var/httpd directory by adding the public_content_t file type to the directory and by restoring the file type.
+.PP
+.B
+semanage fcontext -a -t public_content_t "/var/httpd(/.*)?"
+.br
+.B restorecon -F -R -v /var/httpd
+.pp
+.TP
+Allow httpd servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_httpd_anon_write boolean to be set.
+.PP
+.B
+semanage fcontext -a -t public_content_rw_t "/var/httpd/incoming(/.*)?"
+.br
+.B restorecon -F -R -v /var/httpd/incoming
+
+
+.PP
+If you want to allow apache scripts to write to public content, directories/files must be labeled public_rw_content_t., you must turn on the allow_httpd_sys_script_anon_write boolean.
+
+.EX
+.B setsebool -P allow_httpd_sys_script_anon_write 1
+.EE
+
+.PP
+If you want to allow Apache to modify public files used for public file transfer services, directories/files must be labeled public_content_rw_t., you must turn on the allow_httpd_anon_write boolean.
+
+.EX
+.B setsebool -P allow_httpd_anon_write 1
+.EE
+
+.SH FILE CONTEXTS
 SELinux requires files to have an extended attribute to define the file type. 
-Policy governs the access daemons have to these files. 
-SELinux httpd policy is very flexible allowing users to setup their web services in as secure a method as possible.
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux httpd policy is very flexible allowing users to setup their httpd processes in as secure a method as possible.
 .PP 
-The following file contexts types are defined for httpd:
+The following file types are defined for httpd:
+
+
 .EX
-httpd_sys_content_t 
-.EE 
-- Set files with httpd_sys_content_t if you want httpd_sys_script_exec_t scripts and the daemon to read the file, and disallow other non sys scripts from access.
+.PP
+.B httpd_apcupsd_cgi_content_t 
+.EE
+
+- Set files with the httpd_apcupsd_cgi_content_t type, if you want to treat the files as httpd apcupsd cgi content.
+
+
 .EX
-httpd_sys_script_exec_t  
-.EE 
-- Set cgi scripts with httpd_sys_script_exec_t to allow them to run with access to all sys types.
+.PP
+.B httpd_apcupsd_cgi_htaccess_t 
+.EE
+
+- Set files with the httpd_apcupsd_cgi_htaccess_t type, if you want to treat the file as a httpd apcupsd cgi access file.
+
+
 .EX
-httpd_sys_content_rw_t 
+.PP
+.B httpd_apcupsd_cgi_ra_content_t 
 .EE
-- Set files with httpd_sys_content_rw_t if you want httpd_sys_script_exec_t scripts and the daemon to read/write the data, and disallow other non sys scripts from access.
+
+- Set files with the httpd_apcupsd_cgi_ra_content_t type, if you want to treat the files as httpd apcupsd cgi read/append content.
+
+
 .EX
-httpd_sys_content_ra_t 
+.PP
+.B httpd_apcupsd_cgi_rw_content_t 
 .EE
-- Set files with httpd_sys_content_ra_t if you want httpd_sys_script_exec_t scripts and the daemon to read/append to the file, and disallow other non sys scripts from access.
+
+- Set files with the httpd_apcupsd_cgi_rw_content_t type, if you want to treat the files as httpd apcupsd cgi read/write content.
+
+
 .EX
-httpd_unconfined_script_exec_t  
-.EE 
-- Set cgi scripts with httpd_unconfined_script_exec_t to allow them to run without any SELinux protection. This should only be used for a very complex httpd scripts, after exhausting all other options.  It is better to use this script rather than turning off SELinux protection for httpd.
+.PP
+.B httpd_apcupsd_cgi_script_exec_t 
+.EE
 
-.SH NOTE
-With certain policies you can define additional file contexts based on roles like user or staff.  httpd_user_script_exec_t can be defined where it would only have access to "user" contexts.
+- Set files with the httpd_apcupsd_cgi_script_exec_t type, if you want to transition an executable to the httpd_apcupsd_cgi_script_t domain.
 
-.SH SHARING FILES
-If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.  allow_DOMAIN_anon_write.  So for httpd you would execute:
+.br
+.TP 5
+Paths: 
+/var/www/apcupsd/upsfstats\.cgi, /var/www/apcupsd/upsstats\.cgi, /var/www/apcupsd/upsimage\.cgi, /var/www/apcupsd/multimon\.cgi, /var/www/cgi-bin/apcgui(/.*)?
 
 .EX
-setsebool -P allow_httpd_anon_write=1
+.PP
+.B httpd_awstats_content_t 
 .EE
 
-or 
+- Set files with the httpd_awstats_content_t type, if you want to treat the files as httpd awstats content.
+
 
 .EX
-setsebool -P allow_httpd_sys_script_anon_write=1
+.PP
+.B httpd_awstats_htaccess_t 
 .EE
 
-.SH BOOLEANS
-SELinux policy is customizable based on least access required.  SELinux can be setup to prevent certain http scripts from working.  httpd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run httpd with the tightest access possible.
+- Set files with the httpd_awstats_htaccess_t type, if you want to treat the file as a httpd awstats access file.
+
+
+.EX
+.PP
+.B httpd_awstats_ra_content_t 
+.EE
+
+- Set files with the httpd_awstats_ra_content_t type, if you want to treat the files as httpd awstats read/append content.
+
+
+.EX
 .PP
-httpd can be setup to allow cgi scripts to be executed, set httpd_enable_cgi to allow this
+.B httpd_awstats_rw_content_t 
+.EE
+
+- Set files with the httpd_awstats_rw_content_t type, if you want to treat the files as httpd awstats read/write content.
+
 
 .EX
-setsebool -P httpd_enable_cgi 1
+.PP
+.B httpd_awstats_script_exec_t 
 .EE
 
+- Set files with the httpd_awstats_script_exec_t type, if you want to transition an executable to the httpd_awstats_script_t domain.
+
+
+.EX
 .PP
-SELinux policy for httpd can be setup to not allowed to access users home directories.  If you want to allow access to users home directories you need to set the httpd_enable_homedirs boolean and change the context of the files that you want people to access off the home dir.
+.B httpd_bugzilla_content_t 
+.EE
+
+- Set files with the httpd_bugzilla_content_t type, if you want to treat the files as httpd bugzilla content.
+
 
 .EX
-setsebool -P httpd_enable_homedirs 1
-chcon -R -t httpd_sys_content_t ~user/public_html
+.PP
+.B httpd_bugzilla_htaccess_t 
 .EE
 
+- Set files with the httpd_bugzilla_htaccess_t type, if you want to treat the file as a httpd bugzilla access file.
+
+
+.EX
 .PP
-SELinux policy for httpd can be setup to not allow access to the controlling terminal.  In most cases this is preferred, because an intruder might be able to use the access to the terminal to gain privileges. But in certain situations httpd needs to prompt for a password to open a certificate file, in these cases, terminal access is required.  Set the httpd_tty_comm boolean to allow terminal access.
+.B httpd_bugzilla_ra_content_t 
+.EE
+
+- Set files with the httpd_bugzilla_ra_content_t type, if you want to treat the files as httpd bugzilla read/append content.
+
 
 .EX
-setsebool -P httpd_tty_comm 1
+.PP
+.B httpd_bugzilla_rw_content_t 
 .EE
 
+- Set files with the httpd_bugzilla_rw_content_t type, if you want to treat the files as httpd bugzilla read/write content.
+
+
+.EX
 .PP
-httpd can be configured to not differentiate file controls based on context, i.e. all files labeled as httpd context can be read/write/execute.  Setting this boolean to false allows you to setup the security policy such that one httpd service can not interfere with another.
+.B httpd_bugzilla_script_exec_t 
+.EE
+
+- Set files with the httpd_bugzilla_script_exec_t type, if you want to transition an executable to the httpd_bugzilla_script_t domain.
+
 
 .EX
-setsebool -P httpd_unified 0
+.PP
+.B httpd_bugzilla_tmp_t 
 .EE
 
+- Set files with the httpd_bugzilla_tmp_t type, if you want to store httpd bugzilla temporary files in the /tmp directories.
+
+
+.EX
 .PP
-SELinu policy for httpd can be configured to turn on sending email. This is a security feature, since it would prevent a vulnerabiltiy in http from causing a spam attack.  I certain situations, you may want http modules to send mail.  You can turn on the httpd_send_mail boolean.
+.B httpd_cache_t 
+.EE
+
+- Set files with the httpd_cache_t type, if you want to store the files under the /var/cache directory.
+
+.br
+.TP 5
+Paths: 
+/var/cache/php-.*, /var/cache/mediawiki(/.*)?, /var/cache/lighttpd(/.*)?, /var/cache/php-mmcache(/.*)?, /var/cache/mod_gnutls(/.*)?, /var/cache/mod_ssl(/.*)?, /var/cache/jetty(/.*)?, /var/cache/mod_.*, /var/cache/ssl.*\.sem, /var/cache/httpd(/.*)?, /var/cache/rt3(/.*)?, /var/cache/php-eaccelerator(/.*)?, /var/cache/mason(/.*)?, /var/cache/mod_proxy(/.*)?
 
 .EX
-setsebool -P httpd_can_sendmail 1
 .PP
-httpd can be configured to turn off internal scripting (PHP).  PHP and other
-loadable modules run under the same context as httpd. Therefore several policy rules allow httpd greater access to the system then is needed if you only use external cgi scripts.
+.B httpd_cobbler_content_t 
+.EE
+
+- Set files with the httpd_cobbler_content_t type, if you want to treat the files as httpd cobbler content.
+
 
 .EX
-setsebool -P httpd_builtin_scripting 0
+.PP
+.B httpd_cobbler_htaccess_t 
 .EE
 
+- Set files with the httpd_cobbler_htaccess_t type, if you want to treat the file as a httpd cobbler access file.
+
+
+.EX
 .PP
-SELinux policy can be setup such that httpd scripts are not allowed to connect out to the network.
-This would prevent a hacker from breaking into you httpd server and attacking 
-other machines.  If you need scripts to be able to connect you can set the httpd_can_network_connect boolean on.
+.B httpd_cobbler_ra_content_t 
+.EE
+
+- Set files with the httpd_cobbler_ra_content_t type, if you want to treat the files as httpd cobbler read/append content.
+
 
 .EX
-setsebool -P httpd_can_network_connect 1
+.PP
+.B httpd_cobbler_rw_content_t 
 .EE
 
+- Set files with the httpd_cobbler_rw_content_t type, if you want to treat the files as httpd cobbler read/write content.
+
+
+.EX
 .PP
-system-config-selinux is a GUI tool available to customize SELinux policy settings.
-.SH AUTHOR	
-This manual page was written by Dan Walsh <dwalsh@redhat.com>.
+.B httpd_cobbler_script_exec_t 
+.EE
 
-.SH "SEE ALSO"
-selinux(8), httpd(8), chcon(1), setsebool(8)
+- Set files with the httpd_cobbler_script_exec_t type, if you want to transition an executable to the httpd_cobbler_script_t domain.
 
 
+.EX
+.PP
+.B httpd_collectd_content_t 
+.EE
+
+- Set files with the httpd_collectd_content_t type, if you want to treat the files as httpd collectd content.
+
+
+.EX
+.PP
+.B httpd_collectd_htaccess_t 
+.EE
+
+- Set files with the httpd_collectd_htaccess_t type, if you want to treat the file as a httpd collectd access file.
+
+
+.EX
+.PP
+.B httpd_collectd_ra_content_t 
+.EE
+
+- Set files with the httpd_collectd_ra_content_t type, if you want to treat the files as httpd collectd read/append content.
+
+
+.EX
+.PP
+.B httpd_collectd_rw_content_t 
+.EE
+
+- Set files with the httpd_collectd_rw_content_t type, if you want to treat the files as httpd collectd read/write content.
+
+
+.EX
+.PP
+.B httpd_collectd_script_exec_t 
+.EE
+
+- Set files with the httpd_collectd_script_exec_t type, if you want to transition an executable to the httpd_collectd_script_t domain.
+
+
+.EX
+.PP
+.B httpd_config_t 
+.EE
+
+- Set files with the httpd_config_t type, if you want to treat the files as httpd configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/etc/vhosts, /etc/httpd(/.*)?, /etc/apache(2)?(/.*)?, /etc/apache-ssl(2)?(/.*)?, /etc/lighttpd(/.*)?, /var/lib/stickshift/.httpd.d(/.*)?, /etc/cherokee(/.*)?
+
+.EX
+.PP
+.B httpd_cvs_content_t 
+.EE
+
+- Set files with the httpd_cvs_content_t type, if you want to treat the files as httpd cvs content.
+
+
+.EX
+.PP
+.B httpd_cvs_htaccess_t 
+.EE
+
+- Set files with the httpd_cvs_htaccess_t type, if you want to treat the file as a httpd cvs access file.
+
+
+.EX
+.PP
+.B httpd_cvs_ra_content_t 
+.EE
+
+- Set files with the httpd_cvs_ra_content_t type, if you want to treat the files as httpd cvs read/append content.
+
+
+.EX
+.PP
+.B httpd_cvs_rw_content_t 
+.EE
+
+- Set files with the httpd_cvs_rw_content_t type, if you want to treat the files as httpd cvs read/write content.
+
+
+.EX
+.PP
+.B httpd_cvs_script_exec_t 
+.EE
+
+- Set files with the httpd_cvs_script_exec_t type, if you want to transition an executable to the httpd_cvs_script_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/share/cvsweb/cvsweb\.cgi, /var/www/cgi-bin/cvsweb\.cgi
+
+.EX
+.PP
+.B httpd_dirsrvadmin_content_t 
+.EE
+
+- Set files with the httpd_dirsrvadmin_content_t type, if you want to treat the files as httpd dirsrvadmin content.
+
+
+.EX
+.PP
+.B httpd_dirsrvadmin_htaccess_t 
+.EE
+
+- Set files with the httpd_dirsrvadmin_htaccess_t type, if you want to treat the file as a httpd dirsrvadmin access file.
+
+
+.EX
+.PP
+.B httpd_dirsrvadmin_ra_content_t 
+.EE
+
+- Set files with the httpd_dirsrvadmin_ra_content_t type, if you want to treat the files as httpd dirsrvadmin read/append content.
+
+
+.EX
+.PP
+.B httpd_dirsrvadmin_rw_content_t 
+.EE
+
+- Set files with the httpd_dirsrvadmin_rw_content_t type, if you want to treat the files as httpd dirsrvadmin read/write content.
+
+
+.EX
+.PP
+.B httpd_dirsrvadmin_script_exec_t 
+.EE
+
+- Set files with the httpd_dirsrvadmin_script_exec_t type, if you want to transition an executable to the httpd_dirsrvadmin_script_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/dirsrv/dsgw-cgi-bin(/.*)?, /usr/lib/dirsrv/cgi-bin(/.*)?
+
+.EX
+.PP
+.B httpd_dspam_content_t 
+.EE
+
+- Set files with the httpd_dspam_content_t type, if you want to treat the files as httpd dspam content.
+
+
+.EX
+.PP
+.B httpd_dspam_htaccess_t 
+.EE
+
+- Set files with the httpd_dspam_htaccess_t type, if you want to treat the file as a httpd dspam access file.
+
+
+.EX
+.PP
+.B httpd_dspam_ra_content_t 
+.EE
+
+- Set files with the httpd_dspam_ra_content_t type, if you want to treat the files as httpd dspam read/append content.
+
+
+.EX
+.PP
+.B httpd_dspam_rw_content_t 
+.EE
+
+- Set files with the httpd_dspam_rw_content_t type, if you want to treat the files as httpd dspam read/write content.
+
+
+.EX
+.PP
+.B httpd_dspam_script_exec_t 
+.EE
+
+- Set files with the httpd_dspam_script_exec_t type, if you want to transition an executable to the httpd_dspam_script_t domain.
+
+
+.EX
+.PP
+.B httpd_exec_t 
+.EE
+
+- Set files with the httpd_exec_t type, if you want to transition an executable to the httpd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/apache(2)?, /usr/bin/mongrel_rails, /usr/lib/apache-ssl/.+, /usr/sbin/httpd\.event, /usr/sbin/httpd(\.worker)?, /usr/sbin/cherokee, /usr/sbin/apache-ssl(2)?, /usr/sbin/lighttpd
+
+.EX
+.PP
+.B httpd_git_content_t 
+.EE
+
+- Set files with the httpd_git_content_t type, if you want to treat the files as httpd git content.
+
+
+.EX
+.PP
+.B httpd_git_htaccess_t 
+.EE
+
+- Set files with the httpd_git_htaccess_t type, if you want to treat the file as a httpd git access file.
+
+
+.EX
+.PP
+.B httpd_git_ra_content_t 
+.EE
+
+- Set files with the httpd_git_ra_content_t type, if you want to treat the files as httpd git read/append content.
+
+
+.EX
+.PP
+.B httpd_git_rw_content_t 
+.EE
+
+- Set files with the httpd_git_rw_content_t type, if you want to treat the files as httpd git read/write content.
+
+.br
+.TP 5
+Paths: 
+/var/cache/gitweb-caching(/.*)?, /var/cache/cgit(/.*)?
+
+.EX
+.PP
+.B httpd_git_script_exec_t 
+.EE
+
+- Set files with the httpd_git_script_exec_t type, if you want to transition an executable to the httpd_git_script_t domain.
+
+.br
+.TP 5
+Paths: 
+/var/www/gitweb-caching/gitweb\.cgi, /var/www/cgi-bin/cgit, /var/www/git/gitweb\.cgi
+
+.EX
+.PP
+.B httpd_helper_exec_t 
+.EE
+
+- Set files with the httpd_helper_exec_t type, if you want to transition an executable to the httpd_helper_t domain.
+
+
+.EX
+.PP
+.B httpd_initrc_exec_t 
+.EE
+
+- Set files with the httpd_initrc_exec_t type, if you want to transition an executable to the httpd_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/init\.d/cherokee, /etc/rc\.d/init\.d/httpd, /etc/rc\.d/init\.d/lighttpd
+
+.EX
+.PP
+.B httpd_keytab_t 
+.EE
+
+- Set files with the httpd_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B httpd_libra_content_t 
+.EE
+
+- Set files with the httpd_libra_content_t type, if you want to treat the files as httpd libra content.
+
+
+.EX
+.PP
+.B httpd_libra_htaccess_t 
+.EE
+
+- Set files with the httpd_libra_htaccess_t type, if you want to treat the file as a httpd libra access file.
+
+
+.EX
+.PP
+.B httpd_libra_ra_content_t 
+.EE
+
+- Set files with the httpd_libra_ra_content_t type, if you want to treat the files as httpd libra read/append content.
+
+
+.EX
+.PP
+.B httpd_libra_rw_content_t 
+.EE
+
+- Set files with the httpd_libra_rw_content_t type, if you want to treat the files as httpd libra read/write content.
+
+
+.EX
+.PP
+.B httpd_libra_script_exec_t 
+.EE
+
+- Set files with the httpd_libra_script_exec_t type, if you want to transition an executable to the httpd_libra_script_t domain.
+
+
+.EX
+.PP
+.B httpd_lock_t 
+.EE
+
+- Set files with the httpd_lock_t type, if you want to treat the files as httpd lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B httpd_log_t 
+.EE
+
+- Set files with the httpd_log_t type, if you want to treat the data as httpd log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/apache-ssl(2)?(/.*)?, /var/log/httpd(/.*)?, /var/log/apache(2)?(/.*)?, /var/log/cherokee(/.*)?, /var/log/roundcubemail(/.*)?, /var/log/cgiwrap\.log.*, /var/log/lighttpd(/.*)?, /var/log/suphp\.log, /var/log/cacti(/.*)?, /var/log/dirsrv/admin-serv(/.*)?, /etc/httpd/logs, /var/log/jetty(/.*)?
+
+.EX
+.PP
+.B httpd_mediawiki_content_t 
+.EE
+
+- Set files with the httpd_mediawiki_content_t type, if you want to treat the files as httpd mediawiki content.
+
+.br
+.TP 5
+Paths: 
+/var/www/wiki/.*\.php, /usr/share/mediawiki(/.*)?
+
+.EX
+.PP
+.B httpd_mediawiki_htaccess_t 
+.EE
+
+- Set files with the httpd_mediawiki_htaccess_t type, if you want to treat the file as a httpd mediawiki access file.
+
+
+.EX
+.PP
+.B httpd_mediawiki_ra_content_t 
+.EE
+
+- Set files with the httpd_mediawiki_ra_content_t type, if you want to treat the files as httpd mediawiki read/append content.
+
+
+.EX
+.PP
+.B httpd_mediawiki_rw_content_t 
+.EE
+
+- Set files with the httpd_mediawiki_rw_content_t type, if you want to treat the files as httpd mediawiki read/write content.
+
+
+.EX
+.PP
+.B httpd_mediawiki_script_exec_t 
+.EE
+
+- Set files with the httpd_mediawiki_script_exec_t type, if you want to transition an executable to the httpd_mediawiki_script_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/mediawiki/math/texvc_tex, /usr/lib/mediawiki/math/texvc, /usr/lib/mediawiki/math/texvc_tes
+
+.EX
+.PP
+.B httpd_modules_t 
+.EE
+
+- Set files with the httpd_modules_t type, if you want to treat the files as httpd modules.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/cherokee(/.*)?, /usr/lib/lighttpd(/.*)?, /usr/lib/apache(/.*)?, /etc/httpd/modules, /usr/lib/httpd(/.*)?, /usr/lib/apache2/modules(/.*)?
+
+.EX
+.PP
+.B httpd_mojomojo_content_t 
+.EE
+
+- Set files with the httpd_mojomojo_content_t type, if you want to treat the files as httpd mojomojo content.
+
+
+.EX
+.PP
+.B httpd_mojomojo_htaccess_t 
+.EE
+
+- Set files with the httpd_mojomojo_htaccess_t type, if you want to treat the file as a httpd mojomojo access file.
+
+
+.EX
+.PP
+.B httpd_mojomojo_ra_content_t 
+.EE
+
+- Set files with the httpd_mojomojo_ra_content_t type, if you want to treat the files as httpd mojomojo read/append content.
+
+
+.EX
+.PP
+.B httpd_mojomojo_rw_content_t 
+.EE
+
+- Set files with the httpd_mojomojo_rw_content_t type, if you want to treat the files as httpd mojomojo read/write content.
+
+
+.EX
+.PP
+.B httpd_mojomojo_script_exec_t 
+.EE
+
+- Set files with the httpd_mojomojo_script_exec_t type, if you want to transition an executable to the httpd_mojomojo_script_t domain.
+
+
+.EX
+.PP
+.B httpd_mojomojo_tmp_t 
+.EE
+
+- Set files with the httpd_mojomojo_tmp_t type, if you want to store httpd mojomojo temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B httpd_munin_content_t 
+.EE
+
+- Set files with the httpd_munin_content_t type, if you want to treat the files as httpd munin content.
+
+
+.EX
+.PP
+.B httpd_munin_htaccess_t 
+.EE
+
+- Set files with the httpd_munin_htaccess_t type, if you want to treat the file as a httpd munin access file.
+
+
+.EX
+.PP
+.B httpd_munin_ra_content_t 
+.EE
+
+- Set files with the httpd_munin_ra_content_t type, if you want to treat the files as httpd munin read/append content.
+
+
+.EX
+.PP
+.B httpd_munin_rw_content_t 
+.EE
+
+- Set files with the httpd_munin_rw_content_t type, if you want to treat the files as httpd munin read/write content.
+
+
+.EX
+.PP
+.B httpd_munin_script_exec_t 
+.EE
+
+- Set files with the httpd_munin_script_exec_t type, if you want to transition an executable to the httpd_munin_script_t domain.
+
+
+.EX
+.PP
+.B httpd_nagios_content_t 
+.EE
+
+- Set files with the httpd_nagios_content_t type, if you want to treat the files as httpd nagios content.
+
+
+.EX
+.PP
+.B httpd_nagios_htaccess_t 
+.EE
+
+- Set files with the httpd_nagios_htaccess_t type, if you want to treat the file as a httpd nagios access file.
+
+
+.EX
+.PP
+.B httpd_nagios_ra_content_t 
+.EE
+
+- Set files with the httpd_nagios_ra_content_t type, if you want to treat the files as httpd nagios read/append content.
+
+
+.EX
+.PP
+.B httpd_nagios_rw_content_t 
+.EE
+
+- Set files with the httpd_nagios_rw_content_t type, if you want to treat the files as httpd nagios read/write content.
+
+
+.EX
+.PP
+.B httpd_nagios_script_exec_t 
+.EE
+
+- Set files with the httpd_nagios_script_exec_t type, if you want to transition an executable to the httpd_nagios_script_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/cgi-bin/nagios(/.+)?, /usr/lib/nagios/cgi-bin(/.*)?, /usr/lib/cgi-bin/netsaint(/.*)?, /usr/lib/nagios/cgi(/.*)?
+
+.EX
+.PP
+.B httpd_nutups_cgi_content_t 
+.EE
+
+- Set files with the httpd_nutups_cgi_content_t type, if you want to treat the files as httpd nutups cgi content.
+
+
+.EX
+.PP
+.B httpd_nutups_cgi_htaccess_t 
+.EE
+
+- Set files with the httpd_nutups_cgi_htaccess_t type, if you want to treat the file as a httpd nutups cgi access file.
+
+
+.EX
+.PP
+.B httpd_nutups_cgi_ra_content_t 
+.EE
+
+- Set files with the httpd_nutups_cgi_ra_content_t type, if you want to treat the files as httpd nutups cgi read/append content.
+
+
+.EX
+.PP
+.B httpd_nutups_cgi_rw_content_t 
+.EE
+
+- Set files with the httpd_nutups_cgi_rw_content_t type, if you want to treat the files as httpd nutups cgi read/write content.
+
+
+.EX
+.PP
+.B httpd_nutups_cgi_script_exec_t 
+.EE
+
+- Set files with the httpd_nutups_cgi_script_exec_t type, if you want to transition an executable to the httpd_nutups_cgi_script_t domain.
+
+.br
+.TP 5
+Paths: 
+/var/www/nut-cgi-bin/upsstats\.cgi, /var/www/nut-cgi-bin/upsimage\.cgi, /var/www/nut-cgi-bin/upsset\.cgi
+
+.EX
+.PP
+.B httpd_passwd_exec_t 
+.EE
+
+- Set files with the httpd_passwd_exec_t type, if you want to transition an executable to the httpd_passwd_t domain.
+
+
+.EX
+.PP
+.B httpd_php_exec_t 
+.EE
+
+- Set files with the httpd_php_exec_t type, if you want to transition an executable to the httpd_php_t domain.
+
+
+.EX
+.PP
+.B httpd_php_tmp_t 
+.EE
+
+- Set files with the httpd_php_tmp_t type, if you want to store httpd php temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B httpd_prewikka_content_t 
+.EE
+
+- Set files with the httpd_prewikka_content_t type, if you want to treat the files as httpd prewikka content.
+
+
+.EX
+.PP
+.B httpd_prewikka_htaccess_t 
+.EE
+
+- Set files with the httpd_prewikka_htaccess_t type, if you want to treat the file as a httpd prewikka access file.
+
+
+.EX
+.PP
+.B httpd_prewikka_ra_content_t 
+.EE
+
+- Set files with the httpd_prewikka_ra_content_t type, if you want to treat the files as httpd prewikka read/append content.
+
+
+.EX
+.PP
+.B httpd_prewikka_rw_content_t 
+.EE
+
+- Set files with the httpd_prewikka_rw_content_t type, if you want to treat the files as httpd prewikka read/write content.
+
+
+.EX
+.PP
+.B httpd_prewikka_script_exec_t 
+.EE
+
+- Set files with the httpd_prewikka_script_exec_t type, if you want to transition an executable to the httpd_prewikka_script_t domain.
+
+
+.EX
+.PP
+.B httpd_rotatelogs_exec_t 
+.EE
+
+- Set files with the httpd_rotatelogs_exec_t type, if you want to transition an executable to the httpd_rotatelogs_t domain.
+
+
+.EX
+.PP
+.B httpd_smokeping_cgi_content_t 
+.EE
+
+- Set files with the httpd_smokeping_cgi_content_t type, if you want to treat the files as httpd smokeping cgi content.
+
+
+.EX
+.PP
+.B httpd_smokeping_cgi_htaccess_t 
+.EE
+
+- Set files with the httpd_smokeping_cgi_htaccess_t type, if you want to treat the file as a httpd smokeping cgi access file.
+
+
+.EX
+.PP
+.B httpd_smokeping_cgi_ra_content_t 
+.EE
+
+- Set files with the httpd_smokeping_cgi_ra_content_t type, if you want to treat the files as httpd smokeping cgi read/append content.
+
+
+.EX
+.PP
+.B httpd_smokeping_cgi_rw_content_t 
+.EE
+
+- Set files with the httpd_smokeping_cgi_rw_content_t type, if you want to treat the files as httpd smokeping cgi read/write content.
+
+
+.EX
+.PP
+.B httpd_smokeping_cgi_script_exec_t 
+.EE
+
+- Set files with the httpd_smokeping_cgi_script_exec_t type, if you want to transition an executable to the httpd_smokeping_cgi_script_t domain.
+
+
+.EX
+.PP
+.B httpd_squid_content_t 
+.EE
+
+- Set files with the httpd_squid_content_t type, if you want to treat the files as httpd squid content.
+
+
+.EX
+.PP
+.B httpd_squid_htaccess_t 
+.EE
+
+- Set files with the httpd_squid_htaccess_t type, if you want to treat the file as a httpd squid access file.
+
+
+.EX
+.PP
+.B httpd_squid_ra_content_t 
+.EE
+
+- Set files with the httpd_squid_ra_content_t type, if you want to treat the files as httpd squid read/append content.
+
+
+.EX
+.PP
+.B httpd_squid_rw_content_t 
+.EE
+
+- Set files with the httpd_squid_rw_content_t type, if you want to treat the files as httpd squid read/write content.
+
+
+.EX
+.PP
+.B httpd_squid_script_exec_t 
+.EE
+
+- Set files with the httpd_squid_script_exec_t type, if you want to transition an executable to the httpd_squid_script_t domain.
+
+
+.EX
+.PP
+.B httpd_squirrelmail_t 
+.EE
+
+- Set files with the httpd_squirrelmail_t type, if you want to treat the files as httpd squirrelmail data.
+
+
+.EX
+.PP
+.B httpd_suexec_exec_t 
+.EE
+
+- Set files with the httpd_suexec_exec_t type, if you want to transition an executable to the httpd_suexec_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/apache(2)?/suexec(2)?, /usr/sbin/suexec, /usr/lib/cgi-bin/(nph-)?cgiwrap(d)?
+
+.EX
+.PP
+.B httpd_suexec_tmp_t 
+.EE
+
+- Set files with the httpd_suexec_tmp_t type, if you want to store httpd suexec temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B httpd_sys_content_t 
+.EE
+
+- Set files with the httpd_sys_content_t type, if you want to treat the files as httpd sys content.
+
+.br
+.TP 5
+Paths: 
+/usr/share/icecast(/.*)?, /usr/share/htdig(/.*)?, /etc/htdig(/.*)?, /var/www/svn/conf(/.*)?, /usr/share/doc/ghc/html(/.*)?, /usr/share/mythtv/data(/.*)?, /var/lib/htdig(/.*)?, /srv/gallery2(/.*)?, /srv/([^/]*/)?www(/.*)?, /usr/share/ntop/html(/.*)?, /usr/share/mythweb(/.*)?, /var/lib/cacti/rra(/.*)?, /usr/share/openca/htdocs(/.*)?, /usr/share/selinux-policy[^/]*/html(/.*)?, /usr/share/drupal.*, /var/lib/trac(/.*)?, /var/www(/.*)?, /var/www/icons(/.*)?
+
+.EX
+.PP
+.B httpd_sys_htaccess_t 
+.EE
+
+- Set files with the httpd_sys_htaccess_t type, if you want to treat the file as a httpd sys access file.
+
+
+.EX
+.PP
+.B httpd_sys_ra_content_t 
+.EE
+
+- Set files with the httpd_sys_ra_content_t type, if you want to treat the files as httpd sys read/append content.
+
+
+.EX
+.PP
+.B httpd_sys_rw_content_t 
+.EE
+
+- Set files with the httpd_sys_rw_content_t type, if you want to treat the files as httpd sys read/write content.
+
+.br
+.TP 5
+Paths: 
+/var/spool/viewvc(/.*)?, /etc/WebCalendar(/.*)?, /etc/mock/koji(/.*)?, /var/lib/svn(/.*)?, /var/spool/gosa(/.*)?, /etc/zabbix/web(/.*)?, /var/lib/pootle/po(/.*)?, /etc/drupal.*, /var/www/gallery/albums(/.*)?, /usr/share/wordpress/wp-content/uploads(/.*)?, /var/www/html/configuration\.php, /usr/share/wordpress/wp-content/upgrade(/.*)?, /var/lib/drupal.*, /usr/share/wordpress-mu/wp-content(/.*)?, /var/lib/dokuwiki(/.*)?, /var/www/moodledata(/.*)?, /var/www/svn(/.*)?, /var/www/html/wp-content(/.*)?
+
+.EX
+.PP
+.B httpd_sys_script_exec_t 
+.EE
+
+- Set files with the httpd_sys_script_exec_t type, if you want to transition an executable to the httpd_sys_script_t domain.
+
+.br
+.TP 5
+Paths: 
+/var/www/svn/hooks(/.*)?, /usr/share/mythweb/mythweb\.pl, /usr/share/wordpress/.*\.php, /usr/lib/cgi-bin(/.*)?, /var/www/perl(/.*)?, /usr/share/mythtv/mythweather/scripts(/.*)?, /usr/share/wordpress-mu/wp-config\.php, /var/www/html/[^/]*/cgi-bin(/.*)?, /var/www/[^/]*/cgi-bin(/.*)?, /var/www/cgi-bin(/.*)?
+
+.EX
+.PP
+.B httpd_tmp_t 
+.EE
+
+- Set files with the httpd_tmp_t type, if you want to store httpd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B httpd_tmpfs_t 
+.EE
+
+- Set files with the httpd_tmpfs_t type, if you want to store httpd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B httpd_unit_file_t 
+.EE
+
+- Set files with the httpd_unit_file_t type, if you want to treat the files as httpd unit content.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/systemd/system/httpd.?\.service, /lib/systemd/system/jetty.*\.service, /lib/systemd/system/httpd.*\.service
+
+.EX
+.PP
+.B httpd_user_content_t 
+.EE
+
+- Set files with the httpd_user_content_t type, if you want to treat the files as httpd user content.
+
+
+.EX
+.PP
+.B httpd_user_htaccess_t 
+.EE
+
+- Set files with the httpd_user_htaccess_t type, if you want to treat the file as a httpd user access file.
+
+
+.EX
+.PP
+.B httpd_user_ra_content_t 
+.EE
+
+- Set files with the httpd_user_ra_content_t type, if you want to treat the files as httpd user read/append content.
+
+
+.EX
+.PP
+.B httpd_user_rw_content_t 
+.EE
+
+- Set files with the httpd_user_rw_content_t type, if you want to treat the files as httpd user read/write content.
+
+
+.EX
+.PP
+.B httpd_user_script_exec_t 
+.EE
+
+- Set files with the httpd_user_script_exec_t type, if you want to transition an executable to the httpd_user_script_t domain.
+
+
+.EX
+.PP
+.B httpd_var_lib_t 
+.EE
+
+- Set files with the httpd_var_lib_t type, if you want to store the httpd files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/rt3/data/RT-Shredder(/.*)?, /var/lib/jetty(/.*)?, /var/lib/httpd(/.*)?, /var/lib/cherokee(/.*)?, /var/lib/dav(/.*)?
+
+.EX
+.PP
+.B httpd_var_run_t 
+.EE
+
+- Set files with the httpd_var_run_t type, if you want to store the httpd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/mod_.*, /var/run/wsgi.*, /var/run/apache.*, /var/run/jetty(/.*)?, /var/run/gcache_port, /opt/dirsrv/var/run/dirsrv/dsgw/cookies(/.*)?, /var/run/httpd.*, /var/run/dirsrv/admin-serv.*, /var/lib/php/session(/.*)?, /var/run/lighttpd(/.*)?
+
+.EX
+.PP
+.B httpd_w3c_validator_content_t 
+.EE
+
+- Set files with the httpd_w3c_validator_content_t type, if you want to treat the files as httpd w3c validator content.
+
+
+.EX
+.PP
+.B httpd_w3c_validator_htaccess_t 
+.EE
+
+- Set files with the httpd_w3c_validator_htaccess_t type, if you want to treat the file as a httpd w3c validator access file.
+
+
+.EX
+.PP
+.B httpd_w3c_validator_ra_content_t 
+.EE
+
+- Set files with the httpd_w3c_validator_ra_content_t type, if you want to treat the files as httpd w3c validator read/append content.
+
+
+.EX
+.PP
+.B httpd_w3c_validator_rw_content_t 
+.EE
+
+- Set files with the httpd_w3c_validator_rw_content_t type, if you want to treat the files as httpd w3c validator read/write content.
+
+
+.EX
+.PP
+.B httpd_w3c_validator_script_exec_t 
+.EE
+
+- Set files with the httpd_w3c_validator_script_exec_t type, if you want to transition an executable to the httpd_w3c_validator_script_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/share/w3c-markup-validator/cgi-bin(/.*)?, /usr/lib/cgi-bin/check
+
+.EX
+.PP
+.B httpd_w3c_validator_tmp_t 
+.EE
+
+- Set files with the httpd_w3c_validator_tmp_t type, if you want to store httpd w3c validator temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B httpd_zoneminder_content_t 
+.EE
+
+- Set files with the httpd_zoneminder_content_t type, if you want to treat the files as httpd zoneminder content.
+
+
+.EX
+.PP
+.B httpd_zoneminder_htaccess_t 
+.EE
+
+- Set files with the httpd_zoneminder_htaccess_t type, if you want to treat the file as a httpd zoneminder access file.
+
+
+.EX
+.PP
+.B httpd_zoneminder_ra_content_t 
+.EE
+
+- Set files with the httpd_zoneminder_ra_content_t type, if you want to treat the files as httpd zoneminder read/append content.
+
+
+.EX
+.PP
+.B httpd_zoneminder_rw_content_t 
+.EE
+
+- Set files with the httpd_zoneminder_rw_content_t type, if you want to treat the files as httpd zoneminder read/write content.
+
+
+.EX
+.PP
+.B httpd_zoneminder_script_exec_t 
+.EE
+
+- Set files with the httpd_zoneminder_script_exec_t type, if you want to transition an executable to the httpd_zoneminder_script_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux httpd policy is very flexible allowing users to setup their httpd processes in as secure a method as possible.
+.PP 
+The following port types are defined for httpd:
+
+.EX
+.TP 5
+.B http_cache_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B http_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux httpd policy is very flexible allowing users to setup their httpd processes in as secure a method as possible.
+.PP 
+The following process types are defined for httpd:
+
+.EX
+.B httpd_collectd_script_t, httpd_cvs_script_t, httpd_rotatelogs_t, httpd_bugzilla_script_t, httpd_smokeping_cgi_script_t, httpd_nagios_script_t, httpd_dirsrvadmin_script_t, httpd_suexec_t, httpd_mojomojo_script_t, httpd_php_t, httpd_w3c_validator_script_t, httpd_user_script_t, httpd_awstats_script_t, httpd_libra_script_t, httpd_apcupsd_cgi_script_t, httpd_nutups_cgi_script_t, httpd_munin_script_t, httpd_zoneminder_script_t, httpd_sys_script_t, httpd_dspam_script_t, httpd_prewikka_script_t, httpd_git_script_t, httpd_t, httpd_passwd_t, httpd_helper_t, httpd_squid_script_t, httpd_cobbler_script_t, httpd_mediawiki_script_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), httpd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/hwclock_selinux.8 b/man/man8/hwclock_selinux.8
new file mode 100644
index 0000000..1928dc4
--- /dev/null
+++ b/man/man8/hwclock_selinux.8
@@ -0,0 +1,75 @@
+.TH  "hwclock_selinux"  "8"  "hwclock" "dwalsh@redhat.com" "hwclock SELinux Policy documentation"
+.SH "NAME"
+hwclock_selinux \- Security Enhanced Linux Policy for the hwclock processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux hwclock policy is very flexible allowing users to setup their hwclock processes in as secure a method as possible.
+.PP 
+The following file types are defined for hwclock:
+
+
+.EX
+.PP
+.B hwclock_exec_t 
+.EE
+
+- Set files with the hwclock_exec_t type, if you want to transition an executable to the hwclock_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/hwclock, /sbin/hwclock
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux hwclock policy is very flexible allowing users to setup their hwclock processes in as secure a method as possible.
+.PP 
+The following process types are defined for hwclock:
+
+.EX
+.B hwclock_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), hwclock(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/iceauth_selinux.8 b/man/man8/iceauth_selinux.8
new file mode 100644
index 0000000..53e495f
--- /dev/null
+++ b/man/man8/iceauth_selinux.8
@@ -0,0 +1,87 @@
+.TH  "iceauth_selinux"  "8"  "iceauth" "dwalsh@redhat.com" "iceauth SELinux Policy documentation"
+.SH "NAME"
+iceauth_selinux \- Security Enhanced Linux Policy for the iceauth processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux iceauth policy is very flexible allowing users to setup their iceauth processes in as secure a method as possible.
+.PP 
+The following file types are defined for iceauth:
+
+
+.EX
+.PP
+.B iceauth_exec_t 
+.EE
+
+- Set files with the iceauth_exec_t type, if you want to transition an executable to the iceauth_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/iceauth, /usr/X11R6/bin/iceauth
+
+.EX
+.PP
+.B iceauth_home_t 
+.EE
+
+- Set files with the iceauth_home_t type, if you want to store iceauth files in the users home directory.
+
+.br
+.TP 5
+Paths: 
+/root/\.DCOP.*, /root/\.ICEauthority.*
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux iceauth policy is very flexible allowing users to setup their iceauth processes in as secure a method as possible.
+.PP 
+The following process types are defined for iceauth:
+
+.EX
+.B iceauth_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), iceauth(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/icecast_selinux.8 b/man/man8/icecast_selinux.8
new file mode 100644
index 0000000..ca10859
--- /dev/null
+++ b/man/man8/icecast_selinux.8
@@ -0,0 +1,116 @@
+.TH  "icecast_selinux"  "8"  "icecast" "dwalsh@redhat.com" "icecast SELinux Policy documentation"
+.SH "NAME"
+icecast_selinux \- Security Enhanced Linux Policy for the icecast processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B icecast
+( ShoutCast compatible streaming media server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  icecast policy is extremely flexible and has several booleans that allow you to manipulate the policy and run icecast with the tightest access possible.
+
+
+.PP
+If you want to allow icecast to connect to all ports, not just sound ports, you must turn on the icecast_connect_any boolean.
+
+.EX
+.B setsebool -P icecast_connect_any 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux icecast policy is very flexible allowing users to setup their icecast processes in as secure a method as possible.
+.PP 
+The following file types are defined for icecast:
+
+
+.EX
+.PP
+.B icecast_exec_t 
+.EE
+
+- Set files with the icecast_exec_t type, if you want to transition an executable to the icecast_t domain.
+
+
+.EX
+.PP
+.B icecast_initrc_exec_t 
+.EE
+
+- Set files with the icecast_initrc_exec_t type, if you want to transition an executable to the icecast_initrc_t domain.
+
+
+.EX
+.PP
+.B icecast_log_t 
+.EE
+
+- Set files with the icecast_log_t type, if you want to treat the data as icecast log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B icecast_var_run_t 
+.EE
+
+- Set files with the icecast_var_run_t type, if you want to store the icecast files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux icecast policy is very flexible allowing users to setup their icecast processes in as secure a method as possible.
+.PP 
+The following process types are defined for icecast:
+
+.EX
+.B icecast_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), icecast(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/ifconfig_selinux.8 b/man/man8/ifconfig_selinux.8
new file mode 100644
index 0000000..b2444a2
--- /dev/null
+++ b/man/man8/ifconfig_selinux.8
@@ -0,0 +1,75 @@
+.TH  "ifconfig_selinux"  "8"  "ifconfig" "dwalsh@redhat.com" "ifconfig SELinux Policy documentation"
+.SH "NAME"
+ifconfig_selinux \- Security Enhanced Linux Policy for the ifconfig processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ifconfig policy is very flexible allowing users to setup their ifconfig processes in as secure a method as possible.
+.PP 
+The following file types are defined for ifconfig:
+
+
+.EX
+.PP
+.B ifconfig_exec_t 
+.EE
+
+- Set files with the ifconfig_exec_t type, if you want to transition an executable to the ifconfig_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/ipx_internal_net, /sbin/ipx_configure, /sbin/tc, /usr/sbin/ipx_configure, /usr/sbin/iwconfig, /usr/sbin/ipx_interface, /usr/sbin/mii-tool, /usr/sbin/ethtool, /sbin/ipx_internal_net, /usr/sbin/ifconfig, /bin/ip, /usr/bin/ip, /usr/sbin/tc, /sbin/iwconfig, /sbin/ifconfig, /sbin/mii-tool, /sbin/ethtool, /usr/sbin/ip, /sbin/ipx_interface, /sbin/ip
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ifconfig policy is very flexible allowing users to setup their ifconfig processes in as secure a method as possible.
+.PP 
+The following process types are defined for ifconfig:
+
+.EX
+.B ifconfig_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ifconfig(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/inetd_selinux.8 b/man/man8/inetd_selinux.8
new file mode 100644
index 0000000..122a8f9
--- /dev/null
+++ b/man/man8/inetd_selinux.8
@@ -0,0 +1,159 @@
+.TH  "inetd_selinux"  "8"  "inetd" "dwalsh@redhat.com" "inetd SELinux Policy documentation"
+.SH "NAME"
+inetd_selinux \- Security Enhanced Linux Policy for the inetd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B inetd
+(Internet services daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux inetd policy is very flexible allowing users to setup their inetd processes in as secure a method as possible.
+.PP 
+The following file types are defined for inetd:
+
+
+.EX
+.PP
+.B inetd_child_exec_t 
+.EE
+
+- Set files with the inetd_child_exec_t type, if you want to transition an executable to the inetd_child_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/identd, /usr/local/lib/pysieved/pysieved.*\.py, /usr/sbin/in\..*d
+
+.EX
+.PP
+.B inetd_child_tmp_t 
+.EE
+
+- Set files with the inetd_child_tmp_t type, if you want to store inetd child temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B inetd_child_var_run_t 
+.EE
+
+- Set files with the inetd_child_var_run_t type, if you want to store the inetd child files under the /run directory.
+
+
+.EX
+.PP
+.B inetd_exec_t 
+.EE
+
+- Set files with the inetd_exec_t type, if you want to transition an executable to the inetd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/inetd, /usr/sbin/xinetd, /usr/sbin/rlinetd
+
+.EX
+.PP
+.B inetd_log_t 
+.EE
+
+- Set files with the inetd_log_t type, if you want to treat the data as inetd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B inetd_tmp_t 
+.EE
+
+- Set files with the inetd_tmp_t type, if you want to store inetd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B inetd_var_run_t 
+.EE
+
+- Set files with the inetd_var_run_t type, if you want to store the inetd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux inetd policy is very flexible allowing users to setup their inetd processes in as secure a method as possible.
+.PP 
+The following port types are defined for inetd:
+
+.EX
+.TP 5
+.B inetd_child_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux inetd policy is very flexible allowing users to setup their inetd processes in as secure a method as possible.
+.PP 
+The following process types are defined for inetd:
+
+.EX
+.B inetd_t, inetd_child_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), inetd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/init_selinux.8 b/man/man8/init_selinux.8
new file mode 100644
index 0000000..ce0a398
--- /dev/null
+++ b/man/man8/init_selinux.8
@@ -0,0 +1,167 @@
+.TH  "init_selinux"  "8"  "init" "dwalsh@redhat.com" "init SELinux Policy documentation"
+.SH "NAME"
+init_selinux \- Security Enhanced Linux Policy for the init processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B init
+(System initialization programs (init and init scripts))
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  init policy is extremely flexible and has several booleans that allow you to manipulate the policy and run init with the tightest access possible.
+
+
+.PP
+If you want to enable support for upstart as the init program, you must turn on the init_upstart boolean.
+
+.EX
+.B setsebool -P init_upstart 1
+.EE
+
+.PP
+If you want to enable support for systemd as the init program, you must turn on the init_systemd boolean.
+
+.EX
+.B setsebool -P init_systemd 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux init policy is very flexible allowing users to setup their init processes in as secure a method as possible.
+.PP 
+The following file types are defined for init:
+
+
+.EX
+.PP
+.B init_exec_t 
+.EE
+
+- Set files with the init_exec_t type, if you want to transition an executable to the init_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/init(ng)?, /lib/systemd/[^/]*, /sbin/init(ng)?, /bin/systemd, /usr/lib/systemd/system-generators/[^/]*, /usr/bin/systemd, /lib/systemd/system-generators/[^/]*, /sbin/upstart, /usr/sbin/upstart, /usr/lib/systemd/[^/]*
+
+.EX
+.PP
+.B init_var_run_t 
+.EE
+
+- Set files with the init_var_run_t type, if you want to store the init files under the /run directory.
+
+
+.EX
+.PP
+.B initctl_t 
+.EE
+
+- Set files with the initctl_t type, if you want to treat the files as initctl data.
+
+
+.EX
+.PP
+.B initrc_devpts_t 
+.EE
+
+- Set files with the initrc_devpts_t type, if you want to treat the files as initrc devpts data.
+
+
+.EX
+.PP
+.B initrc_exec_t 
+.EE
+
+- Set files with the initrc_exec_t type, if you want to transition an executable to the initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/startx, /etc/rc\.d/rc, /usr/libexec/dcc/stop-.*, /etc/sysconfig/network-scripts/ifup-ipsec, /usr/lib/systemd/fedora[^/]*, /lib/systemd/fedora[^/]*, /usr/sbin/start-dirsrv, /usr/sbin/open_init_pty, /usr/sbin/ldap-agent, /etc/X11/prefdm, /usr/share/system-config-services/system-config-services-mechanism\.py, /etc/rc\.d/rc\.[^/]+, /etc/rc\.d/init\.d/.*, /usr/libexec/dcc/start-.*, /usr/sbin/apachectl, /usr/sbin/restart-dirsrv, /etc/init\.d/.*, /usr/bin/sepg_ctl
+
+.EX
+.PP
+.B initrc_state_t 
+.EE
+
+- Set files with the initrc_state_t type, if you want to treat the files as initrc state data.
+
+
+.EX
+.PP
+.B initrc_tmp_t 
+.EE
+
+- Set files with the initrc_tmp_t type, if you want to store initrc temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B initrc_var_run_t 
+.EE
+
+- Set files with the initrc_var_run_t type, if you want to store the initrc files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/setmixer_flag, /var/run/runlevel\.dir, /var/run/random-seed, /var/run/utmp
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux init policy is very flexible allowing users to setup their init processes in as secure a method as possible.
+.PP 
+The following process types are defined for init:
+
+.EX
+.B initrc_t, init_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), init(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/initrc_selinux.8 b/man/man8/initrc_selinux.8
new file mode 100644
index 0000000..2fa2434
--- /dev/null
+++ b/man/man8/initrc_selinux.8
@@ -0,0 +1,111 @@
+.TH  "initrc_selinux"  "8"  "initrc" "dwalsh@redhat.com" "initrc SELinux Policy documentation"
+.SH "NAME"
+initrc_selinux \- Security Enhanced Linux Policy for the initrc processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux initrc policy is very flexible allowing users to setup their initrc processes in as secure a method as possible.
+.PP 
+The following file types are defined for initrc:
+
+
+.EX
+.PP
+.B initrc_devpts_t 
+.EE
+
+- Set files with the initrc_devpts_t type, if you want to treat the files as initrc devpts data.
+
+
+.EX
+.PP
+.B initrc_exec_t 
+.EE
+
+- Set files with the initrc_exec_t type, if you want to transition an executable to the initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/startx, /etc/rc\.d/rc, /usr/libexec/dcc/stop-.*, /etc/sysconfig/network-scripts/ifup-ipsec, /usr/lib/systemd/fedora[^/]*, /lib/systemd/fedora[^/]*, /usr/sbin/start-dirsrv, /usr/sbin/open_init_pty, /usr/sbin/ldap-agent, /etc/X11/prefdm, /usr/share/system-config-services/system-config-services-mechanism\.py, /etc/rc\.d/rc\.[^/]+, /etc/rc\.d/init\.d/.*, /usr/libexec/dcc/start-.*, /usr/sbin/apachectl, /usr/sbin/restart-dirsrv, /etc/init\.d/.*, /usr/bin/sepg_ctl
+
+.EX
+.PP
+.B initrc_state_t 
+.EE
+
+- Set files with the initrc_state_t type, if you want to treat the files as initrc state data.
+
+
+.EX
+.PP
+.B initrc_tmp_t 
+.EE
+
+- Set files with the initrc_tmp_t type, if you want to store initrc temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B initrc_var_run_t 
+.EE
+
+- Set files with the initrc_var_run_t type, if you want to store the initrc files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/setmixer_flag, /var/run/runlevel\.dir, /var/run/random-seed, /var/run/utmp
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux initrc policy is very flexible allowing users to setup their initrc processes in as secure a method as possible.
+.PP 
+The following process types are defined for initrc:
+
+.EX
+.B initrc_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), initrc(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/innd_selinux.8 b/man/man8/innd_selinux.8
new file mode 100644
index 0000000..541f9e9
--- /dev/null
+++ b/man/man8/innd_selinux.8
@@ -0,0 +1,145 @@
+.TH  "innd_selinux"  "8"  "innd" "dwalsh@redhat.com" "innd SELinux Policy documentation"
+.SH "NAME"
+innd_selinux \- Security Enhanced Linux Policy for the innd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux innd policy is very flexible allowing users to setup their innd processes in as secure a method as possible.
+.PP 
+The following file types are defined for innd:
+
+
+.EX
+.PP
+.B innd_etc_t 
+.EE
+
+- Set files with the innd_etc_t type, if you want to store innd files in the /etc directories.
+
+
+.EX
+.PP
+.B innd_exec_t 
+.EE
+
+- Set files with the innd_exec_t type, if you want to transition an executable to the innd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/suck, /usr/lib/news/bin/convdate, /usr/lib/news/bin/filechan, /usr/lib/news/bin/nntpget, /usr/sbin/in\.nnrpd, /usr/lib/news/bin/innfeed, /usr/lib/news/bin/shlock, /usr/lib/news/bin/archive, /usr/lib/news/bin/innconfval, /usr/lib/news/bin/innd, /usr/lib/news/bin/actsync, /usr/lib/news/bin/innxbatch, /usr/bin/inews, /usr/lib/news/bin/batcher, /usr/sbin/innd.*, /usr/lib/news/bin/expire, /usr/lib/news/bin/nnrpd, /usr/lib/news/bin/inndstart, /usr/lib/news/bin/ctlinnd, /usr/bin/rpost, /usr/lib/news/bin/buffchan, /etc/news/boot, /usr/lib/news/bin/ovdb_recover, /usr/lib/news/bin/startinnfeed, /usr/lib/news/bin/makehistory, /usr/lib/news/bin/newsrequeue, /usr/lib/news/bin/makedbz, /usr/bin/rnews, /usr/lib/news/bin/innxmit, /usr/lib/news/bin/fastrm, /usr/lib/news/bin/getlist, /usr/lib/news/bin/sm, /usr/lib/news/bin/grephistory, /usr/lib/news/bin/rnews, /usr/lib/news/bin/overchan, /usr/lib/news/bin/cvtbatch, /usr/lib/news/bin/prunehistory, /usr/lib/news/bin/inews, /usr/lib/news/bin/shrinkfile, /usr/lib/news/bin/expireover, /usr/lib/news/bin/inndf
+
+.EX
+.PP
+.B innd_initrc_exec_t 
+.EE
+
+- Set files with the innd_initrc_exec_t type, if you want to transition an executable to the innd_initrc_t domain.
+
+
+.EX
+.PP
+.B innd_log_t 
+.EE
+
+- Set files with the innd_log_t type, if you want to treat the data as innd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B innd_var_lib_t 
+.EE
+
+- Set files with the innd_var_lib_t type, if you want to store the innd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B innd_var_run_t 
+.EE
+
+- Set files with the innd_var_run_t type, if you want to store the innd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/innd(/.*)?, /var/run/news(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux innd policy is very flexible allowing users to setup their innd processes in as secure a method as possible.
+.PP 
+The following port types are defined for innd:
+
+.EX
+.TP 5
+.B innd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux innd policy is very flexible allowing users to setup their innd processes in as secure a method as possible.
+.PP 
+The following process types are defined for innd:
+
+.EX
+.B innd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), innd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/insmod_selinux.8 b/man/man8/insmod_selinux.8
new file mode 100644
index 0000000..0e25a12
--- /dev/null
+++ b/man/man8/insmod_selinux.8
@@ -0,0 +1,105 @@
+.TH  "insmod_selinux"  "8"  "insmod" "dwalsh@redhat.com" "insmod SELinux Policy documentation"
+.SH "NAME"
+insmod_selinux \- Security Enhanced Linux Policy for the insmod processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  insmod policy is extremely flexible and has several booleans that allow you to manipulate the policy and run insmod with the tightest access possible.
+
+
+.PP
+If you want to disallow programs and users from transitioning to insmod domain, you must turn on the secure_mode_insmod boolean.
+
+.EX
+.B setsebool -P secure_mode_insmod 1
+.EE
+
+.PP
+If you want to allow pppd to load kernel modules for certain modem, you must turn on the pppd_can_insmod boolean.
+
+.EX
+.B setsebool -P pppd_can_insmod 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux insmod policy is very flexible allowing users to setup their insmod processes in as secure a method as possible.
+.PP 
+The following file types are defined for insmod:
+
+
+.EX
+.PP
+.B insmod_exec_t 
+.EE
+
+- Set files with the insmod_exec_t type, if you want to transition an executable to the insmod_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/modprobe.*, /sbin/rmmod.*, /sbin/insmod.*, /usr/sbin/modprobe.*, /usr/bin/kmod, /usr/sbin/insmod.*, /usr/sbin/rmmod.*
+
+.EX
+.PP
+.B insmod_tmpfs_t 
+.EE
+
+- Set files with the insmod_tmpfs_t type, if you want to store insmod files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux insmod policy is very flexible allowing users to setup their insmod processes in as secure a method as possible.
+.PP 
+The following process types are defined for insmod:
+
+.EX
+.B insmod_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), insmod(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/ipsec_selinux.8 b/man/man8/ipsec_selinux.8
new file mode 100644
index 0000000..3273369
--- /dev/null
+++ b/man/man8/ipsec_selinux.8
@@ -0,0 +1,199 @@
+.TH  "ipsec_selinux"  "8"  "ipsec" "dwalsh@redhat.com" "ipsec SELinux Policy documentation"
+.SH "NAME"
+ipsec_selinux \- Security Enhanced Linux Policy for the ipsec processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B ipsec
+(TCP/IP encryption)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ipsec policy is very flexible allowing users to setup their ipsec processes in as secure a method as possible.
+.PP 
+The following file types are defined for ipsec:
+
+
+.EX
+.PP
+.B ipsec_conf_file_t 
+.EE
+
+- Set files with the ipsec_conf_file_t type, if you want to treat the files as ipsec conf content.
+
+.br
+.TP 5
+Paths: 
+/etc/ipsec\.conf, /etc/racoon(/.*)?
+
+.EX
+.PP
+.B ipsec_exec_t 
+.EE
+
+- Set files with the ipsec_exec_t type, if you want to transition an executable to the ipsec_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/local/lib/ipsec/eroute, /usr/lib/ipsec/pluto, /usr/local/lib/ipsec/pluto, /usr/lib/ipsec/klipsdebug, /usr/libexec/ipsec/eroute, /usr/libexec/ipsec/pluto, /usr/lib/ipsec/spi, /usr/lib/ipsec/eroute, /usr/local/lib/ipsec/klipsdebug, /usr/local/lib/ipsec/spi, /usr/libexec/ipsec/spi, /usr/libexec/ipsec/klipsdebug
+
+.EX
+.PP
+.B ipsec_initrc_exec_t 
+.EE
+
+- Set files with the ipsec_initrc_exec_t type, if you want to transition an executable to the ipsec_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/racoon, /etc/rc\.d/init\.d/ipsec
+
+.EX
+.PP
+.B ipsec_key_file_t 
+.EE
+
+- Set files with the ipsec_key_file_t type, if you want to treat the files as ipsec key content.
+
+.br
+.TP 5
+Paths: 
+/etc/ipsec\.secrets, /etc/racoon/psk\.txt, /etc/racoon/certs(/.*)?, /etc/ipsec\.d(/.*)?
+
+.EX
+.PP
+.B ipsec_log_t 
+.EE
+
+- Set files with the ipsec_log_t type, if you want to treat the data as ipsec log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B ipsec_mgmt_exec_t 
+.EE
+
+- Set files with the ipsec_mgmt_exec_t type, if you want to transition an executable to the ipsec_mgmt_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/ipsec/_plutorun, /usr/libexec/ipsec/_plutoload, /usr/libexec/nm-openswan-service, /usr/lib/ipsec/_plutoload, /usr/sbin/ipsec, /usr/libexec/ipsec/_plutorun
+
+.EX
+.PP
+.B ipsec_mgmt_lock_t 
+.EE
+
+- Set files with the ipsec_mgmt_lock_t type, if you want to treat the files as ipsec mgmt lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B ipsec_mgmt_var_run_t 
+.EE
+
+- Set files with the ipsec_mgmt_var_run_t type, if you want to store the ipsec mgmt files under the /run directory.
+
+
+.EX
+.PP
+.B ipsec_tmp_t 
+.EE
+
+- Set files with the ipsec_tmp_t type, if you want to store ipsec temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B ipsec_var_run_t 
+.EE
+
+- Set files with the ipsec_var_run_t type, if you want to store the ipsec files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/racoon\.pid, /var/run/pluto(/.*)?, /var/racoon(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux ipsec policy is very flexible allowing users to setup their ipsec processes in as secure a method as possible.
+.PP 
+The following port types are defined for ipsec:
+
+.EX
+.TP 5
+.B ipsecnat_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ipsec policy is very flexible allowing users to setup their ipsec processes in as secure a method as possible.
+.PP 
+The following process types are defined for ipsec:
+
+.EX
+.B ipsec_t, ipsec_mgmt_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ipsec(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/iptables_selinux.8 b/man/man8/iptables_selinux.8
new file mode 100644
index 0000000..8e6b3de
--- /dev/null
+++ b/man/man8/iptables_selinux.8
@@ -0,0 +1,136 @@
+.TH  "iptables_selinux"  "8"  "iptables" "dwalsh@redhat.com" "iptables SELinux Policy documentation"
+.SH "NAME"
+iptables_selinux \- Security Enhanced Linux Policy for the iptables processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B iptables
+(Policy for iptables)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  iptables policy is extremely flexible and has several booleans that allow you to manipulate the policy and run iptables with the tightest access possible.
+
+
+.PP
+If you want to allow dhcpc client applications to execute iptables command, you must turn on the dhcpc_exec_iptables boolean.
+
+.EX
+.B setsebool -P dhcpc_exec_iptables 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux iptables policy is very flexible allowing users to setup their iptables processes in as secure a method as possible.
+.PP 
+The following file types are defined for iptables:
+
+
+.EX
+.PP
+.B iptables_exec_t 
+.EE
+
+- Set files with the iptables_exec_t type, if you want to transition an executable to the iptables_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/ebtables-restore, /usr/sbin/ipvsadm-restore, /usr/sbin/ipchains.*, /usr/sbin/ip6?tables, /sbin/ebtables, /usr/sbin/ip6?tables-restore, /usr/sbin/xtables-multi, /sbin/ipchains.*, /sbin/ip6?tables, /usr/sbin/ebtables-restore, /usr/sbin/ebtables, /sbin/ipvsadm, /usr/sbin/ipvsadm-save, /sbin/xtables-multi, /sbin/ipvsadm-restore, /usr/sbin/ip6?tables-multi, /sbin/ip6?tables-multi, /usr/sbin/ipvsadm, /sbin/ipvsadm-save, /sbin/ip6?tables-restore
+
+.EX
+.PP
+.B iptables_initrc_exec_t 
+.EE
+
+- Set files with the iptables_initrc_exec_t type, if you want to transition an executable to the iptables_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/ebtables, /etc/rc\.d/init\.d/ip6?tables
+
+.EX
+.PP
+.B iptables_tmp_t 
+.EE
+
+- Set files with the iptables_tmp_t type, if you want to store iptables temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B iptables_unit_file_t 
+.EE
+
+- Set files with the iptables_unit_file_t type, if you want to treat the files as iptables unit content.
+
+.br
+.TP 5
+Paths: 
+/lib/systemd/system/vsftpd.*, /usr/lib/systemd/system/proftpd.*, /usr/lib/systemd/system/iptables6?.service, /lib/systemd/system/ip6tables.service, /lib/systemd/system/slapd.*, /usr/lib/systemd/system/vsftpd.*, /lib/systemd/system/ppp.*, /usr/lib/systemd/system/kdump.service, /usr/lib/systemd/system/slapd.*, /usr/lib/systemd/system/ppp.*, /lib/systemd/system/kdump.service, /lib/systemd/system/proftpd.*, /lib/systemd/system/iptables.service
+
+.EX
+.PP
+.B iptables_var_run_t 
+.EE
+
+- Set files with the iptables_var_run_t type, if you want to store the iptables files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux iptables policy is very flexible allowing users to setup their iptables processes in as secure a method as possible.
+.PP 
+The following process types are defined for iptables:
+
+.EX
+.B iptables_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), iptables(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/irc_selinux.8 b/man/man8/irc_selinux.8
new file mode 100644
index 0000000..6bd8081
--- /dev/null
+++ b/man/man8/irc_selinux.8
@@ -0,0 +1,123 @@
+.TH  "irc_selinux"  "8"  "irc" "dwalsh@redhat.com" "irc SELinux Policy documentation"
+.SH "NAME"
+irc_selinux \- Security Enhanced Linux Policy for the irc processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B irc
+(IRC client policy)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux irc policy is very flexible allowing users to setup their irc processes in as secure a method as possible.
+.PP 
+The following file types are defined for irc:
+
+
+.EX
+.PP
+.B irc_exec_t 
+.EE
+
+- Set files with the irc_exec_t type, if you want to transition an executable to the irc_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/ircII, /usr/bin/tinyirc, /usr/bin/[st]irc
+
+.EX
+.PP
+.B irc_home_t 
+.EE
+
+- Set files with the irc_home_t type, if you want to store irc files in the users home directory.
+
+
+.EX
+.PP
+.B irc_tmp_t 
+.EE
+
+- Set files with the irc_tmp_t type, if you want to store irc temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux irc policy is very flexible allowing users to setup their irc processes in as secure a method as possible.
+.PP 
+The following port types are defined for irc:
+
+.EX
+.TP 5
+.B ircd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux irc policy is very flexible allowing users to setup their irc processes in as secure a method as possible.
+.PP 
+The following process types are defined for irc:
+
+.EX
+.B irc_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), irc(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/irqbalance_selinux.8 b/man/man8/irqbalance_selinux.8
new file mode 100644
index 0000000..daf7657
--- /dev/null
+++ b/man/man8/irqbalance_selinux.8
@@ -0,0 +1,85 @@
+.TH  "irqbalance_selinux"  "8"  "irqbalance" "dwalsh@redhat.com" "irqbalance SELinux Policy documentation"
+.SH "NAME"
+irqbalance_selinux \- Security Enhanced Linux Policy for the irqbalance processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B irqbalance
+(IRQ balancing daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux irqbalance policy is very flexible allowing users to setup their irqbalance processes in as secure a method as possible.
+.PP 
+The following file types are defined for irqbalance:
+
+
+.EX
+.PP
+.B irqbalance_exec_t 
+.EE
+
+- Set files with the irqbalance_exec_t type, if you want to transition an executable to the irqbalance_t domain.
+
+
+.EX
+.PP
+.B irqbalance_var_run_t 
+.EE
+
+- Set files with the irqbalance_var_run_t type, if you want to store the irqbalance files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux irqbalance policy is very flexible allowing users to setup their irqbalance processes in as secure a method as possible.
+.PP 
+The following process types are defined for irqbalance:
+
+.EX
+.B irqbalance_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), irqbalance(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/irssi_selinux.8 b/man/man8/irssi_selinux.8
new file mode 100644
index 0000000..3320869
--- /dev/null
+++ b/man/man8/irssi_selinux.8
@@ -0,0 +1,102 @@
+.TH  "irssi_selinux"  "8"  "irssi" "dwalsh@redhat.com" "irssi SELinux Policy documentation"
+.SH "NAME"
+irssi_selinux \- Security Enhanced Linux Policy for the irssi processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  irssi policy is extremely flexible and has several booleans that allow you to manipulate the policy and run irssi with the tightest access possible.
+
+
+.PP
+If you want to allow the Irssi IRC Client to connect to any port, and to bind to any unreserved port, you must turn on the irssi_use_full_network boolean.
+
+.EX
+.B setsebool -P irssi_use_full_network 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux irssi policy is very flexible allowing users to setup their irssi processes in as secure a method as possible.
+.PP 
+The following file types are defined for irssi:
+
+
+.EX
+.PP
+.B irssi_etc_t 
+.EE
+
+- Set files with the irssi_etc_t type, if you want to store irssi files in the /etc directories.
+
+
+.EX
+.PP
+.B irssi_exec_t 
+.EE
+
+- Set files with the irssi_exec_t type, if you want to transition an executable to the irssi_t domain.
+
+
+.EX
+.PP
+.B irssi_home_t 
+.EE
+
+- Set files with the irssi_home_t type, if you want to store irssi files in the users home directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux irssi policy is very flexible allowing users to setup their irssi processes in as secure a method as possible.
+.PP 
+The following process types are defined for irssi:
+
+.EX
+.B irssi_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), irssi(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/iscsid_selinux.8 b/man/man8/iscsid_selinux.8
new file mode 100644
index 0000000..4f0d9c3
--- /dev/null
+++ b/man/man8/iscsid_selinux.8
@@ -0,0 +1,145 @@
+.TH  "iscsid_selinux"  "8"  "iscsid" "dwalsh@redhat.com" "iscsid SELinux Policy documentation"
+.SH "NAME"
+iscsid_selinux \- Security Enhanced Linux Policy for the iscsid processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux iscsid policy is very flexible allowing users to setup their iscsid processes in as secure a method as possible.
+.PP 
+The following file types are defined for iscsid:
+
+
+.EX
+.PP
+.B iscsi_lock_t 
+.EE
+
+- Set files with the iscsi_lock_t type, if you want to treat the files as iscsi lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B iscsi_log_t 
+.EE
+
+- Set files with the iscsi_log_t type, if you want to treat the data as iscsi log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/iscsiuio\.log.*, /var/log/brcm-iscsi\.log
+
+.EX
+.PP
+.B iscsi_tmp_t 
+.EE
+
+- Set files with the iscsi_tmp_t type, if you want to store iscsi temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B iscsi_var_lib_t 
+.EE
+
+- Set files with the iscsi_var_lib_t type, if you want to store the iscsi files under the /var/lib directory.
+
+
+.EX
+.PP
+.B iscsi_var_run_t 
+.EE
+
+- Set files with the iscsi_var_run_t type, if you want to store the iscsi files under the /run directory.
+
+
+.EX
+.PP
+.B iscsid_exec_t 
+.EE
+
+- Set files with the iscsid_exec_t type, if you want to transition an executable to the iscsid_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/brcm_iscsiuio, /sbin/iscsiuio, /usr/sbin/iscsiuio, /usr/sbin/iscsid, /usr/sbin/brcm_iscsiuio, /sbin/iscsid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux iscsid policy is very flexible allowing users to setup their iscsid processes in as secure a method as possible.
+.PP 
+The following port types are defined for iscsid:
+
+.EX
+.TP 5
+.B iscsi_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux iscsid policy is very flexible allowing users to setup their iscsid processes in as secure a method as possible.
+.PP 
+The following process types are defined for iscsid:
+
+.EX
+.B iscsid_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), iscsid(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/iwhd_selinux.8 b/man/man8/iwhd_selinux.8
new file mode 100644
index 0000000..2031201
--- /dev/null
+++ b/man/man8/iwhd_selinux.8
@@ -0,0 +1,103 @@
+.TH  "iwhd_selinux"  "8"  "iwhd" "dwalsh@redhat.com" "iwhd SELinux Policy documentation"
+.SH "NAME"
+iwhd_selinux \- Security Enhanced Linux Policy for the iwhd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux iwhd policy is very flexible allowing users to setup their iwhd processes in as secure a method as possible.
+.PP 
+The following file types are defined for iwhd:
+
+
+.EX
+.PP
+.B iwhd_exec_t 
+.EE
+
+- Set files with the iwhd_exec_t type, if you want to transition an executable to the iwhd_t domain.
+
+
+.EX
+.PP
+.B iwhd_initrc_exec_t 
+.EE
+
+- Set files with the iwhd_initrc_exec_t type, if you want to transition an executable to the iwhd_initrc_t domain.
+
+
+.EX
+.PP
+.B iwhd_log_t 
+.EE
+
+- Set files with the iwhd_log_t type, if you want to treat the data as iwhd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B iwhd_var_lib_t 
+.EE
+
+- Set files with the iwhd_var_lib_t type, if you want to store the iwhd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B iwhd_var_run_t 
+.EE
+
+- Set files with the iwhd_var_run_t type, if you want to store the iwhd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux iwhd policy is very flexible allowing users to setup their iwhd processes in as secure a method as possible.
+.PP 
+The following process types are defined for iwhd:
+
+.EX
+.B iwhd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), iwhd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/jabberd_selinux.8 b/man/man8/jabberd_selinux.8
new file mode 100644
index 0000000..5f3d39d
--- /dev/null
+++ b/man/man8/jabberd_selinux.8
@@ -0,0 +1,151 @@
+.TH  "jabberd_selinux"  "8"  "jabberd" "dwalsh@redhat.com" "jabberd SELinux Policy documentation"
+.SH "NAME"
+jabberd_selinux \- Security Enhanced Linux Policy for the jabberd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux jabberd policy is very flexible allowing users to setup their jabberd processes in as secure a method as possible.
+.PP 
+The following file types are defined for jabberd:
+
+
+.EX
+.PP
+.B jabberd_exec_t 
+.EE
+
+- Set files with the jabberd_exec_t type, if you want to transition an executable to the jabberd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/s2s, /usr/bin/sm
+
+.EX
+.PP
+.B jabberd_initrc_exec_t 
+.EE
+
+- Set files with the jabberd_initrc_exec_t type, if you want to transition an executable to the jabberd_initrc_t domain.
+
+
+.EX
+.PP
+.B jabberd_router_exec_t 
+.EE
+
+- Set files with the jabberd_router_exec_t type, if you want to transition an executable to the jabberd_router_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/c2s, /usr/bin/router
+
+.EX
+.PP
+.B jabberd_var_lib_t 
+.EE
+
+- Set files with the jabberd_var_lib_t type, if you want to store the jabberd files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux jabberd policy is very flexible allowing users to setup their jabberd processes in as secure a method as possible.
+.PP 
+The following port types are defined for jabberd:
+
+.EX
+.TP 5
+.B jabber_client_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B jabber_interserver_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B jabber_router_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux jabberd policy is very flexible allowing users to setup their jabberd processes in as secure a method as possible.
+.PP 
+The following process types are defined for jabberd:
+
+.EX
+.B jabberd_router_t, jabberd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), jabberd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/jockey_selinux.8 b/man/man8/jockey_selinux.8
new file mode 100644
index 0000000..239af62
--- /dev/null
+++ b/man/man8/jockey_selinux.8
@@ -0,0 +1,97 @@
+.TH  "jockey_selinux"  "8"  "jockey" "dwalsh@redhat.com" "jockey SELinux Policy documentation"
+.SH "NAME"
+jockey_selinux \- Security Enhanced Linux Policy for the jockey processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B jockey
+(policy for jockey)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux jockey policy is very flexible allowing users to setup their jockey processes in as secure a method as possible.
+.PP 
+The following file types are defined for jockey:
+
+
+.EX
+.PP
+.B jockey_cache_t 
+.EE
+
+- Set files with the jockey_cache_t type, if you want to store the files under the /var/cache directory.
+
+
+.EX
+.PP
+.B jockey_exec_t 
+.EE
+
+- Set files with the jockey_exec_t type, if you want to transition an executable to the jockey_t domain.
+
+
+.EX
+.PP
+.B jockey_var_log_t 
+.EE
+
+- Set files with the jockey_var_log_t type, if you want to treat the data as jockey var log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/jockey\.log, /var/log/jockey(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux jockey policy is very flexible allowing users to setup their jockey processes in as secure a method as possible.
+.PP 
+The following process types are defined for jockey:
+
+.EX
+.B jockey_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), jockey(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/kadmind_selinux.8 b/man/man8/kadmind_selinux.8
new file mode 100644
index 0000000..b56c5c1
--- /dev/null
+++ b/man/man8/kadmind_selinux.8
@@ -0,0 +1,99 @@
+.TH  "kadmind_selinux"  "8"  "kadmind" "dwalsh@redhat.com" "kadmind SELinux Policy documentation"
+.SH "NAME"
+kadmind_selinux \- Security Enhanced Linux Policy for the kadmind processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux kadmind policy is very flexible allowing users to setup their kadmind processes in as secure a method as possible.
+.PP 
+The following file types are defined for kadmind:
+
+
+.EX
+.PP
+.B kadmind_exec_t 
+.EE
+
+- Set files with the kadmind_exec_t type, if you want to transition an executable to the kadmind_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/(local/)?(kerberos/)?sbin/kadmind, /usr/kerberos/sbin/kadmin\.local
+
+.EX
+.PP
+.B kadmind_log_t 
+.EE
+
+- Set files with the kadmind_log_t type, if you want to treat the data as kadmind log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B kadmind_tmp_t 
+.EE
+
+- Set files with the kadmind_tmp_t type, if you want to store kadmind temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B kadmind_var_run_t 
+.EE
+
+- Set files with the kadmind_var_run_t type, if you want to store the kadmind files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux kadmind policy is very flexible allowing users to setup their kadmind processes in as secure a method as possible.
+.PP 
+The following process types are defined for kadmind:
+
+.EX
+.B kadmind_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), kadmind(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/kdump_selinux.8 b/man/man8/kdump_selinux.8
new file mode 100644
index 0000000..b47a14d
--- /dev/null
+++ b/man/man8/kdump_selinux.8
@@ -0,0 +1,121 @@
+.TH  "kdump_selinux"  "8"  "kdump" "dwalsh@redhat.com" "kdump SELinux Policy documentation"
+.SH "NAME"
+kdump_selinux \- Security Enhanced Linux Policy for the kdump processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B kdump
+(Kernel crash dumping mechanism)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux kdump policy is very flexible allowing users to setup their kdump processes in as secure a method as possible.
+.PP 
+The following file types are defined for kdump:
+
+
+.EX
+.PP
+.B kdump_etc_t 
+.EE
+
+- Set files with the kdump_etc_t type, if you want to store kdump files in the /etc directories.
+
+
+.EX
+.PP
+.B kdump_exec_t 
+.EE
+
+- Set files with the kdump_exec_t type, if you want to transition an executable to the kdump_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/kdump, /usr/sbin/kexec, /sbin/kdump, /sbin/kexec
+
+.EX
+.PP
+.B kdump_initrc_exec_t 
+.EE
+
+- Set files with the kdump_initrc_exec_t type, if you want to transition an executable to the kdump_initrc_t domain.
+
+
+.EX
+.PP
+.B kdump_unit_file_t 
+.EE
+
+- Set files with the kdump_unit_file_t type, if you want to treat the files as kdump unit content.
+
+
+.EX
+.PP
+.B kdumpgui_exec_t 
+.EE
+
+- Set files with the kdumpgui_exec_t type, if you want to transition an executable to the kdumpgui_t domain.
+
+
+.EX
+.PP
+.B kdumpgui_tmp_t 
+.EE
+
+- Set files with the kdumpgui_tmp_t type, if you want to store kdumpgui temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux kdump policy is very flexible allowing users to setup their kdump processes in as secure a method as possible.
+.PP 
+The following process types are defined for kdump:
+
+.EX
+.B kdumpgui_t, kdump_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), kdump(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/kdumpgui_selinux.8 b/man/man8/kdumpgui_selinux.8
new file mode 100644
index 0000000..82754b0
--- /dev/null
+++ b/man/man8/kdumpgui_selinux.8
@@ -0,0 +1,85 @@
+.TH  "kdumpgui_selinux"  "8"  "kdumpgui" "dwalsh@redhat.com" "kdumpgui SELinux Policy documentation"
+.SH "NAME"
+kdumpgui_selinux \- Security Enhanced Linux Policy for the kdumpgui processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B kdumpgui
+(system-config-kdump GUI)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux kdumpgui policy is very flexible allowing users to setup their kdumpgui processes in as secure a method as possible.
+.PP 
+The following file types are defined for kdumpgui:
+
+
+.EX
+.PP
+.B kdumpgui_exec_t 
+.EE
+
+- Set files with the kdumpgui_exec_t type, if you want to transition an executable to the kdumpgui_t domain.
+
+
+.EX
+.PP
+.B kdumpgui_tmp_t 
+.EE
+
+- Set files with the kdumpgui_tmp_t type, if you want to store kdumpgui temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux kdumpgui policy is very flexible allowing users to setup their kdumpgui processes in as secure a method as possible.
+.PP 
+The following process types are defined for kdumpgui:
+
+.EX
+.B kdumpgui_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), kdumpgui(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/keyboardd_selinux.8 b/man/man8/keyboardd_selinux.8
new file mode 100644
index 0000000..782e48f
--- /dev/null
+++ b/man/man8/keyboardd_selinux.8
@@ -0,0 +1,77 @@
+.TH  "keyboardd_selinux"  "8"  "keyboardd" "dwalsh@redhat.com" "keyboardd SELinux Policy documentation"
+.SH "NAME"
+keyboardd_selinux \- Security Enhanced Linux Policy for the keyboardd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B keyboardd
+(policy for system-setup-keyboard daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux keyboardd policy is very flexible allowing users to setup their keyboardd processes in as secure a method as possible.
+.PP 
+The following file types are defined for keyboardd:
+
+
+.EX
+.PP
+.B keyboardd_exec_t 
+.EE
+
+- Set files with the keyboardd_exec_t type, if you want to transition an executable to the keyboardd_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux keyboardd policy is very flexible allowing users to setup their keyboardd processes in as secure a method as possible.
+.PP 
+The following process types are defined for keyboardd:
+
+.EX
+.B keyboardd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), keyboardd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/keystone_selinux.8 b/man/man8/keystone_selinux.8
new file mode 100644
index 0000000..1c2d5b6
--- /dev/null
+++ b/man/man8/keystone_selinux.8
@@ -0,0 +1,109 @@
+.TH  "keystone_selinux"  "8"  "keystone" "dwalsh@redhat.com" "keystone SELinux Policy documentation"
+.SH "NAME"
+keystone_selinux \- Security Enhanced Linux Policy for the keystone processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B keystone
+(policy for keystone)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux keystone policy is very flexible allowing users to setup their keystone processes in as secure a method as possible.
+.PP 
+The following file types are defined for keystone:
+
+
+.EX
+.PP
+.B keystone_exec_t 
+.EE
+
+- Set files with the keystone_exec_t type, if you want to transition an executable to the keystone_t domain.
+
+
+.EX
+.PP
+.B keystone_log_t 
+.EE
+
+- Set files with the keystone_log_t type, if you want to treat the data as keystone log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B keystone_tmp_t 
+.EE
+
+- Set files with the keystone_tmp_t type, if you want to store keystone temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B keystone_unit_file_t 
+.EE
+
+- Set files with the keystone_unit_file_t type, if you want to treat the files as keystone unit content.
+
+
+.EX
+.PP
+.B keystone_var_lib_t 
+.EE
+
+- Set files with the keystone_var_lib_t type, if you want to store the keystone files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux keystone policy is very flexible allowing users to setup their keystone processes in as secure a method as possible.
+.PP 
+The following process types are defined for keystone:
+
+.EX
+.B keystone_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), keystone(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/kismet_selinux.8 b/man/man8/kismet_selinux.8
new file mode 100644
index 0000000..678bdc4
--- /dev/null
+++ b/man/man8/kismet_selinux.8
@@ -0,0 +1,151 @@
+.TH  "kismet_selinux"  "8"  "kismet" "dwalsh@redhat.com" "kismet SELinux Policy documentation"
+.SH "NAME"
+kismet_selinux \- Security Enhanced Linux Policy for the kismet processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B kismet
+(Kismet is an 802.11 layer2 wireless network detector, sniffer, and intrusion detection system)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux kismet policy is very flexible allowing users to setup their kismet processes in as secure a method as possible.
+.PP 
+The following file types are defined for kismet:
+
+
+.EX
+.PP
+.B kismet_exec_t 
+.EE
+
+- Set files with the kismet_exec_t type, if you want to transition an executable to the kismet_t domain.
+
+
+.EX
+.PP
+.B kismet_home_t 
+.EE
+
+- Set files with the kismet_home_t type, if you want to store kismet files in the users home directory.
+
+
+.EX
+.PP
+.B kismet_log_t 
+.EE
+
+- Set files with the kismet_log_t type, if you want to treat the data as kismet log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B kismet_tmp_t 
+.EE
+
+- Set files with the kismet_tmp_t type, if you want to store kismet temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B kismet_tmpfs_t 
+.EE
+
+- Set files with the kismet_tmpfs_t type, if you want to store kismet files on a tmpfs file system.
+
+
+.EX
+.PP
+.B kismet_var_lib_t 
+.EE
+
+- Set files with the kismet_var_lib_t type, if you want to store the kismet files under the /var/lib directory.
+
+
+.EX
+.PP
+.B kismet_var_run_t 
+.EE
+
+- Set files with the kismet_var_run_t type, if you want to store the kismet files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux kismet policy is very flexible allowing users to setup their kismet processes in as secure a method as possible.
+.PP 
+The following port types are defined for kismet:
+
+.EX
+.TP 5
+.B kismet_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux kismet policy is very flexible allowing users to setup their kismet processes in as secure a method as possible.
+.PP 
+The following process types are defined for kismet:
+
+.EX
+.B kismet_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), kismet(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/klogd_selinux.8 b/man/man8/klogd_selinux.8
new file mode 100644
index 0000000..9dcdb4f
--- /dev/null
+++ b/man/man8/klogd_selinux.8
@@ -0,0 +1,91 @@
+.TH  "klogd_selinux"  "8"  "klogd" "dwalsh@redhat.com" "klogd SELinux Policy documentation"
+.SH "NAME"
+klogd_selinux \- Security Enhanced Linux Policy for the klogd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux klogd policy is very flexible allowing users to setup their klogd processes in as secure a method as possible.
+.PP 
+The following file types are defined for klogd:
+
+
+.EX
+.PP
+.B klogd_exec_t 
+.EE
+
+- Set files with the klogd_exec_t type, if you want to transition an executable to the klogd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/rklogd, /sbin/klogd, /sbin/rklogd, /usr/sbin/klogd
+
+.EX
+.PP
+.B klogd_tmp_t 
+.EE
+
+- Set files with the klogd_tmp_t type, if you want to store klogd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B klogd_var_run_t 
+.EE
+
+- Set files with the klogd_var_run_t type, if you want to store the klogd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux klogd policy is very flexible allowing users to setup their klogd processes in as secure a method as possible.
+.PP 
+The following process types are defined for klogd:
+
+.EX
+.B klogd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), klogd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/kpropd_selinux.8 b/man/man8/kpropd_selinux.8
new file mode 100644
index 0000000..5ad7425
--- /dev/null
+++ b/man/man8/kpropd_selinux.8
@@ -0,0 +1,97 @@
+.TH  "kpropd_selinux"  "8"  "kpropd" "dwalsh@redhat.com" "kpropd SELinux Policy documentation"
+.SH "NAME"
+kpropd_selinux \- Security Enhanced Linux Policy for the kpropd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux kpropd policy is very flexible allowing users to setup their kpropd processes in as secure a method as possible.
+.PP 
+The following file types are defined for kpropd:
+
+
+.EX
+.PP
+.B kpropd_exec_t 
+.EE
+
+- Set files with the kpropd_exec_t type, if you want to transition an executable to the kpropd_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux kpropd policy is very flexible allowing users to setup their kpropd processes in as secure a method as possible.
+.PP 
+The following port types are defined for kpropd:
+
+.EX
+.TP 5
+.B kprop_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux kpropd policy is very flexible allowing users to setup their kpropd processes in as secure a method as possible.
+.PP 
+The following process types are defined for kpropd:
+
+.EX
+.B kpropd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), kpropd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/krb5kdc_selinux.8 b/man/man8/krb5kdc_selinux.8
new file mode 100644
index 0000000..8a01b27
--- /dev/null
+++ b/man/man8/krb5kdc_selinux.8
@@ -0,0 +1,131 @@
+.TH  "krb5kdc_selinux"  "8"  "krb5kdc" "dwalsh@redhat.com" "krb5kdc SELinux Policy documentation"
+.SH "NAME"
+krb5kdc_selinux \- Security Enhanced Linux Policy for the krb5kdc processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux krb5kdc policy is very flexible allowing users to setup their krb5kdc processes in as secure a method as possible.
+.PP 
+The following file types are defined for krb5kdc:
+
+
+.EX
+.PP
+.B krb5kdc_conf_t 
+.EE
+
+- Set files with the krb5kdc_conf_t type, if you want to treat the files as krb5kdc configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/var/kerberos/krb5kdc(/.*)?, /etc/krb5kdc(/.*)?, /usr/local/var/krb5kdc(/.*)?
+
+.EX
+.PP
+.B krb5kdc_exec_t 
+.EE
+
+- Set files with the krb5kdc_exec_t type, if you want to transition an executable to the krb5kdc_t domain.
+
+
+.EX
+.PP
+.B krb5kdc_lock_t 
+.EE
+
+- Set files with the krb5kdc_lock_t type, if you want to treat the files as krb5kdc lock data, stored under the /var/lock directory
+
+.br
+.TP 5
+Paths: 
+/var/kerberos/krb5kdc/principal.*\.ok, /var/kerberos/krb5kdc/from_master.*
+
+.EX
+.PP
+.B krb5kdc_log_t 
+.EE
+
+- Set files with the krb5kdc_log_t type, if you want to treat the data as krb5kdc log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B krb5kdc_principal_t 
+.EE
+
+- Set files with the krb5kdc_principal_t type, if you want to treat the files as krb5kdc principal data.
+
+.br
+.TP 5
+Paths: 
+/usr/local/var/krb5kdc/principal.*, /etc/krb5kdc/principal.*, /var/kerberos/krb5kdc/principal.*
+
+.EX
+.PP
+.B krb5kdc_tmp_t 
+.EE
+
+- Set files with the krb5kdc_tmp_t type, if you want to store krb5kdc temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B krb5kdc_var_run_t 
+.EE
+
+- Set files with the krb5kdc_var_run_t type, if you want to store the krb5kdc files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux krb5kdc policy is very flexible allowing users to setup their krb5kdc processes in as secure a method as possible.
+.PP 
+The following process types are defined for krb5kdc:
+
+.EX
+.B krb5kdc_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), krb5kdc(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/ksmtuned_selinux.8 b/man/man8/ksmtuned_selinux.8
new file mode 100644
index 0000000..5874ff2
--- /dev/null
+++ b/man/man8/ksmtuned_selinux.8
@@ -0,0 +1,101 @@
+.TH  "ksmtuned_selinux"  "8"  "ksmtuned" "dwalsh@redhat.com" "ksmtuned SELinux Policy documentation"
+.SH "NAME"
+ksmtuned_selinux \- Security Enhanced Linux Policy for the ksmtuned processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B ksmtuned
+(Kernel Samepage Merging (KSM) Tuning Daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ksmtuned policy is very flexible allowing users to setup their ksmtuned processes in as secure a method as possible.
+.PP 
+The following file types are defined for ksmtuned:
+
+
+.EX
+.PP
+.B ksmtuned_exec_t 
+.EE
+
+- Set files with the ksmtuned_exec_t type, if you want to transition an executable to the ksmtuned_t domain.
+
+
+.EX
+.PP
+.B ksmtuned_initrc_exec_t 
+.EE
+
+- Set files with the ksmtuned_initrc_exec_t type, if you want to transition an executable to the ksmtuned_initrc_t domain.
+
+
+.EX
+.PP
+.B ksmtuned_log_t 
+.EE
+
+- Set files with the ksmtuned_log_t type, if you want to treat the data as ksmtuned log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B ksmtuned_var_run_t 
+.EE
+
+- Set files with the ksmtuned_var_run_t type, if you want to store the ksmtuned files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ksmtuned policy is very flexible allowing users to setup their ksmtuned processes in as secure a method as possible.
+.PP 
+The following process types are defined for ksmtuned:
+
+.EX
+.B ksmtuned_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ksmtuned(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/ktalkd_selinux.8 b/man/man8/ktalkd_selinux.8
new file mode 100644
index 0000000..2b084b7
--- /dev/null
+++ b/man/man8/ktalkd_selinux.8
@@ -0,0 +1,125 @@
+.TH  "ktalkd_selinux"  "8"  "ktalkd" "dwalsh@redhat.com" "ktalkd SELinux Policy documentation"
+.SH "NAME"
+ktalkd_selinux \- Security Enhanced Linux Policy for the ktalkd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ktalkd policy is very flexible allowing users to setup their ktalkd processes in as secure a method as possible.
+.PP 
+The following file types are defined for ktalkd:
+
+
+.EX
+.PP
+.B ktalkd_exec_t 
+.EE
+
+- Set files with the ktalkd_exec_t type, if you want to transition an executable to the ktalkd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/in\.talkd, /usr/bin/ktalkd, /usr/sbin/in\.ntalkd
+
+.EX
+.PP
+.B ktalkd_log_t 
+.EE
+
+- Set files with the ktalkd_log_t type, if you want to treat the data as ktalkd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B ktalkd_tmp_t 
+.EE
+
+- Set files with the ktalkd_tmp_t type, if you want to store ktalkd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B ktalkd_var_run_t 
+.EE
+
+- Set files with the ktalkd_var_run_t type, if you want to store the ktalkd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux ktalkd policy is very flexible allowing users to setup their ktalkd processes in as secure a method as possible.
+.PP 
+The following port types are defined for ktalkd:
+
+.EX
+.TP 5
+.B ktalkd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ktalkd policy is very flexible allowing users to setup their ktalkd processes in as secure a method as possible.
+.PP 
+The following process types are defined for ktalkd:
+
+.EX
+.B ktalkd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ktalkd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/l2tpd_selinux.8 b/man/man8/l2tpd_selinux.8
new file mode 100644
index 0000000..be9e0f9
--- /dev/null
+++ b/man/man8/l2tpd_selinux.8
@@ -0,0 +1,105 @@
+.TH  "l2tpd_selinux"  "8"  "l2tpd" "dwalsh@redhat.com" "l2tpd SELinux Policy documentation"
+.SH "NAME"
+l2tpd_selinux \- Security Enhanced Linux Policy for the l2tpd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B l2tpd
+(policy for l2tpd)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux l2tpd policy is very flexible allowing users to setup their l2tpd processes in as secure a method as possible.
+.PP 
+The following file types are defined for l2tpd:
+
+
+.EX
+.PP
+.B l2tpd_exec_t 
+.EE
+
+- Set files with the l2tpd_exec_t type, if you want to transition an executable to the l2tpd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/xl2tpd, /usr/sbin/openl2tpd
+
+.EX
+.PP
+.B l2tpd_initrc_exec_t 
+.EE
+
+- Set files with the l2tpd_initrc_exec_t type, if you want to transition an executable to the l2tpd_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/xl2tpd, /etc/rc\.d/init\.d/openl2tpd
+
+.EX
+.PP
+.B l2tpd_var_run_t 
+.EE
+
+- Set files with the l2tpd_var_run_t type, if you want to store the l2tpd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/xl2tpd(/.*)?, /var/run/xl2tpd\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux l2tpd policy is very flexible allowing users to setup their l2tpd processes in as secure a method as possible.
+.PP 
+The following process types are defined for l2tpd:
+
+.EX
+.B l2tpd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), l2tpd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/ldconfig_selinux.8 b/man/man8/ldconfig_selinux.8
new file mode 100644
index 0000000..488c36b
--- /dev/null
+++ b/man/man8/ldconfig_selinux.8
@@ -0,0 +1,91 @@
+.TH  "ldconfig_selinux"  "8"  "ldconfig" "dwalsh@redhat.com" "ldconfig SELinux Policy documentation"
+.SH "NAME"
+ldconfig_selinux \- Security Enhanced Linux Policy for the ldconfig processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ldconfig policy is very flexible allowing users to setup their ldconfig processes in as secure a method as possible.
+.PP 
+The following file types are defined for ldconfig:
+
+
+.EX
+.PP
+.B ldconfig_cache_t 
+.EE
+
+- Set files with the ldconfig_cache_t type, if you want to store the files under the /var/cache directory.
+
+
+.EX
+.PP
+.B ldconfig_exec_t 
+.EE
+
+- Set files with the ldconfig_exec_t type, if you want to transition an executable to the ldconfig_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/ldconfig, /sbin/ldconfig
+
+.EX
+.PP
+.B ldconfig_tmp_t 
+.EE
+
+- Set files with the ldconfig_tmp_t type, if you want to store ldconfig temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ldconfig policy is very flexible allowing users to setup their ldconfig processes in as secure a method as possible.
+.PP 
+The following process types are defined for ldconfig:
+
+.EX
+.B ldconfig_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ldconfig(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/libra_selinux.8 b/man/man8/libra_selinux.8
new file mode 100644
index 0000000..8b6ac6e
--- /dev/null
+++ b/man/man8/libra_selinux.8
@@ -0,0 +1,173 @@
+.TH  "libra_selinux"  "8"  "libra" "dwalsh@redhat.com" "libra SELinux Policy documentation"
+.SH "NAME"
+libra_selinux \- Security Enhanced Linux Policy for the libra processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux libra policy is very flexible allowing users to setup their libra processes in as secure a method as possible.
+.PP 
+The following file types are defined for libra:
+
+
+.EX
+.PP
+.B libra_cgroup_read_exec_t 
+.EE
+
+- Set files with the libra_cgroup_read_exec_t type, if you want to transition an executable to the libra_cgroup_read_t domain.
+
+
+.EX
+.PP
+.B libra_initrc_exec_t 
+.EE
+
+- Set files with the libra_initrc_exec_t type, if you want to transition an executable to the libra_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/rhc-restorer, /etc/rc\.d/init\.d/mcollective, /etc/rc\.d/init\.d/libra
+
+.EX
+.PP
+.B libra_initrc_tmp_t 
+.EE
+
+- Set files with the libra_initrc_tmp_t type, if you want to store libra initrc temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B libra_log_t 
+.EE
+
+- Set files with the libra_log_t type, if you want to treat the data as libra log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B libra_mail_tmp_t 
+.EE
+
+- Set files with the libra_mail_tmp_t type, if you want to store libra mail temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B libra_private_file_t 
+.EE
+
+- Set files with the libra_private_file_t type, if you want to treat the files as libra private content.
+
+
+.EX
+.PP
+.B libra_rw_file_t 
+.EE
+
+- Set files with the libra_rw_file_t type, if you want to treat the files as libra rw content.
+
+
+.EX
+.PP
+.B libra_tmp_t 
+.EE
+
+- Set files with the libra_tmp_t type, if you want to store libra temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B libra_var_lib_t 
+.EE
+
+- Set files with the libra_var_lib_t type, if you want to store the libra files under the /var/lib directory.
+
+
+.EX
+.PP
+.B libra_var_run_t 
+.EE
+
+- Set files with the libra_var_run_t type, if you want to store the libra files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux libra policy is very flexible allowing users to setup their libra processes in as secure a method as possible.
+.PP 
+The following port types are defined for libra:
+
+.EX
+.TP 5
+.B libra_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux libra policy is very flexible allowing users to setup their libra processes in as secure a method as possible.
+.PP 
+The following process types are defined for libra:
+
+.EX
+.B libra_t, libra_initrc_t, libra_mail_t, libra_net_app_t, libra_min_app_t, libra_app_t, libra_min_t, libra_net_t, libra_cgroup_read_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), libra(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/lircd_selinux.8 b/man/man8/lircd_selinux.8
new file mode 100644
index 0000000..6b5ddb1
--- /dev/null
+++ b/man/man8/lircd_selinux.8
@@ -0,0 +1,135 @@
+.TH  "lircd_selinux"  "8"  "lircd" "dwalsh@redhat.com" "lircd SELinux Policy documentation"
+.SH "NAME"
+lircd_selinux \- Security Enhanced Linux Policy for the lircd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B lircd
+(Linux infared remote control daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux lircd policy is very flexible allowing users to setup their lircd processes in as secure a method as possible.
+.PP 
+The following file types are defined for lircd:
+
+
+.EX
+.PP
+.B lircd_etc_t 
+.EE
+
+- Set files with the lircd_etc_t type, if you want to store lircd files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/lircd\.conf, /etc/lirc(/.*)?
+
+.EX
+.PP
+.B lircd_exec_t 
+.EE
+
+- Set files with the lircd_exec_t type, if you want to transition an executable to the lircd_t domain.
+
+
+.EX
+.PP
+.B lircd_initrc_exec_t 
+.EE
+
+- Set files with the lircd_initrc_exec_t type, if you want to transition an executable to the lircd_initrc_t domain.
+
+
+.EX
+.PP
+.B lircd_var_run_t 
+.EE
+
+- Set files with the lircd_var_run_t type, if you want to store the lircd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/lirc(/.*)?, /var/run/lircd(/.*)?, /var/run/lircd\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux lircd policy is very flexible allowing users to setup their lircd processes in as secure a method as possible.
+.PP 
+The following port types are defined for lircd:
+
+.EX
+.TP 5
+.B lirc_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux lircd policy is very flexible allowing users to setup their lircd processes in as secure a method as possible.
+.PP 
+The following process types are defined for lircd:
+
+.EX
+.B lircd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), lircd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/livecd_selinux.8 b/man/man8/livecd_selinux.8
new file mode 100644
index 0000000..01c43d5
--- /dev/null
+++ b/man/man8/livecd_selinux.8
@@ -0,0 +1,85 @@
+.TH  "livecd_selinux"  "8"  "livecd" "dwalsh@redhat.com" "livecd SELinux Policy documentation"
+.SH "NAME"
+livecd_selinux \- Security Enhanced Linux Policy for the livecd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B livecd
+(Livecd tool for building alternate livecd for different os and policy versions)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux livecd policy is very flexible allowing users to setup their livecd processes in as secure a method as possible.
+.PP 
+The following file types are defined for livecd:
+
+
+.EX
+.PP
+.B livecd_exec_t 
+.EE
+
+- Set files with the livecd_exec_t type, if you want to transition an executable to the livecd_t domain.
+
+
+.EX
+.PP
+.B livecd_tmp_t 
+.EE
+
+- Set files with the livecd_tmp_t type, if you want to store livecd temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux livecd policy is very flexible allowing users to setup their livecd processes in as secure a method as possible.
+.PP 
+The following process types are defined for livecd:
+
+.EX
+.B livecd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), livecd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/lldpad_selinux.8 b/man/man8/lldpad_selinux.8
new file mode 100644
index 0000000..25e0ebf
--- /dev/null
+++ b/man/man8/lldpad_selinux.8
@@ -0,0 +1,109 @@
+.TH  "lldpad_selinux"  "8"  "lldpad" "dwalsh@redhat.com" "lldpad SELinux Policy documentation"
+.SH "NAME"
+lldpad_selinux \- Security Enhanced Linux Policy for the lldpad processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B lldpad
+(policy for lldpad)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux lldpad policy is very flexible allowing users to setup their lldpad processes in as secure a method as possible.
+.PP 
+The following file types are defined for lldpad:
+
+
+.EX
+.PP
+.B lldpad_exec_t 
+.EE
+
+- Set files with the lldpad_exec_t type, if you want to transition an executable to the lldpad_t domain.
+
+
+.EX
+.PP
+.B lldpad_initrc_exec_t 
+.EE
+
+- Set files with the lldpad_initrc_exec_t type, if you want to transition an executable to the lldpad_initrc_t domain.
+
+
+.EX
+.PP
+.B lldpad_tmpfs_t 
+.EE
+
+- Set files with the lldpad_tmpfs_t type, if you want to store lldpad files on a tmpfs file system.
+
+
+.EX
+.PP
+.B lldpad_var_lib_t 
+.EE
+
+- Set files with the lldpad_var_lib_t type, if you want to store the lldpad files under the /var/lib directory.
+
+
+.EX
+.PP
+.B lldpad_var_run_t 
+.EE
+
+- Set files with the lldpad_var_run_t type, if you want to store the lldpad files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux lldpad policy is very flexible allowing users to setup their lldpad processes in as secure a method as possible.
+.PP 
+The following process types are defined for lldpad:
+
+.EX
+.B lldpad_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), lldpad(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/load_selinux.8 b/man/man8/load_selinux.8
new file mode 100644
index 0000000..27bf215
--- /dev/null
+++ b/man/man8/load_selinux.8
@@ -0,0 +1,116 @@
+.TH  "load_selinux"  "8"  "load" "dwalsh@redhat.com" "load SELinux Policy documentation"
+.SH "NAME"
+load_selinux \- Security Enhanced Linux Policy for the load processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  load policy is extremely flexible and has several booleans that allow you to manipulate the policy and run load with the tightest access possible.
+
+
+.PP
+If you want to prevent all confined domains from loading policy, setting enforcing mode, and changing boolean values.  Set this to true and you have to reboot to set it bac, you must turn on the secure_mode_policyload boolean.
+
+.EX
+.B setsebool -P secure_mode_policyload 1
+.EE
+
+.PP
+If you want to allow the graphical login program to execute bootloade, you must turn on the xdm_exec_bootloader boolean.
+
+.EX
+.B setsebool -P xdm_exec_bootloader 1
+.EE
+
+.PP
+If you want to allow all domains to have the kernel load module, you must turn on the domain_kernel_load_modules boolean.
+
+.EX
+.B setsebool -P domain_kernel_load_modules 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux load policy is very flexible allowing users to setup their load processes in as secure a method as possible.
+.PP 
+The following file types are defined for load:
+
+
+.EX
+.PP
+.B load_policy_exec_t 
+.EE
+
+- Set files with the load_policy_exec_t type, if you want to transition an executable to the load_policy_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/load_policy, /sbin/load_policy
+
+.EX
+.PP
+.B loadkeys_exec_t 
+.EE
+
+- Set files with the loadkeys_exec_t type, if you want to transition an executable to the loadkeys_t domain.
+
+.br
+.TP 5
+Paths: 
+/bin/unikeys, /usr/bin/unikeys, /bin/loadkeys, /usr/bin/loadkeys
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux load policy is very flexible allowing users to setup their load processes in as secure a method as possible.
+.PP 
+The following process types are defined for load:
+
+.EX
+.B loadkeys_t, load_policy_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), load(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/loadkeys_selinux.8 b/man/man8/loadkeys_selinux.8
new file mode 100644
index 0000000..7ea5471
--- /dev/null
+++ b/man/man8/loadkeys_selinux.8
@@ -0,0 +1,81 @@
+.TH  "loadkeys_selinux"  "8"  "loadkeys" "dwalsh@redhat.com" "loadkeys SELinux Policy documentation"
+.SH "NAME"
+loadkeys_selinux \- Security Enhanced Linux Policy for the loadkeys processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B loadkeys
+(Load keyboard mappings)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux loadkeys policy is very flexible allowing users to setup their loadkeys processes in as secure a method as possible.
+.PP 
+The following file types are defined for loadkeys:
+
+
+.EX
+.PP
+.B loadkeys_exec_t 
+.EE
+
+- Set files with the loadkeys_exec_t type, if you want to transition an executable to the loadkeys_t domain.
+
+.br
+.TP 5
+Paths: 
+/bin/unikeys, /usr/bin/unikeys, /bin/loadkeys, /usr/bin/loadkeys
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux loadkeys policy is very flexible allowing users to setup their loadkeys processes in as secure a method as possible.
+.PP 
+The following process types are defined for loadkeys:
+
+.EX
+.B loadkeys_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), loadkeys(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/locate_selinux.8 b/man/man8/locate_selinux.8
new file mode 100644
index 0000000..d9c0a33
--- /dev/null
+++ b/man/man8/locate_selinux.8
@@ -0,0 +1,87 @@
+.TH  "locate_selinux"  "8"  "locate" "dwalsh@redhat.com" "locate SELinux Policy documentation"
+.SH "NAME"
+locate_selinux \- Security Enhanced Linux Policy for the locate processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux locate policy is very flexible allowing users to setup their locate processes in as secure a method as possible.
+.PP 
+The following file types are defined for locate:
+
+
+.EX
+.PP
+.B locate_exec_t 
+.EE
+
+- Set files with the locate_exec_t type, if you want to transition an executable to the locate_t domain.
+
+
+.EX
+.PP
+.B locate_log_t 
+.EE
+
+- Set files with the locate_log_t type, if you want to treat the data as locate log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B locate_var_lib_t 
+.EE
+
+- Set files with the locate_var_lib_t type, if you want to store the locate files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux locate policy is very flexible allowing users to setup their locate processes in as secure a method as possible.
+.PP 
+The following process types are defined for locate:
+
+.EX
+.B locate_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), locate(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/lockdev_selinux.8 b/man/man8/lockdev_selinux.8
new file mode 100644
index 0000000..c899a1b
--- /dev/null
+++ b/man/man8/lockdev_selinux.8
@@ -0,0 +1,85 @@
+.TH  "lockdev_selinux"  "8"  "lockdev" "dwalsh@redhat.com" "lockdev SELinux Policy documentation"
+.SH "NAME"
+lockdev_selinux \- Security Enhanced Linux Policy for the lockdev processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B lockdev
+(device locking policy for lockdev)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux lockdev policy is very flexible allowing users to setup their lockdev processes in as secure a method as possible.
+.PP 
+The following file types are defined for lockdev:
+
+
+.EX
+.PP
+.B lockdev_exec_t 
+.EE
+
+- Set files with the lockdev_exec_t type, if you want to transition an executable to the lockdev_t domain.
+
+
+.EX
+.PP
+.B lockdev_lock_t 
+.EE
+
+- Set files with the lockdev_lock_t type, if you want to treat the files as lockdev lock data, stored under the /var/lock directory
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux lockdev policy is very flexible allowing users to setup their lockdev processes in as secure a method as possible.
+.PP 
+The following process types are defined for lockdev:
+
+.EX
+.B lockdev_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), lockdev(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/logadm_selinux.8 b/man/man8/logadm_selinux.8
new file mode 100644
index 0000000..0edd73f
--- /dev/null
+++ b/man/man8/logadm_selinux.8
@@ -0,0 +1,65 @@
+.TH  "logadm_selinux"  "8"  "logadm" "mgrepl@redhat.com" "logadm SELinux Policy documentation"
+.SH "NAME"
+logadm_r \- \fBLog administrator role\fP - Security Enhanced Linux Policy 
+
+.SH DESCRIPTION
+
+SELinux supports Roles Based Access Control, some Linux roles are login roles, while other roles need to be transition to. 
+
+Note: The examples in the man page will user the staff_u user.
+
+Non login roles are usually used for administrative tasks.
+
+Roles usually have default types assigned to them. 
+
+The default type for the logadm_r role is logadm_t.
+
+You can use the 
+.B newrole 
+program to transition directly to this role.
+
+.B newrole -r logadm_r -t logadm_t
+
+.B sudo 
+can also be setup to transition to this role using the visudo command.
+
+USERNAME ALL=(ALL) ROLE=logadm_r TYPE=logadm_t COMMAND
+.br
+sudo will run COMMAND as staff_u:logadm_r:logadm_t:LEVEL
+
+If you want to use a non login role, you need to make sure the SELinux user you are using can reach this role.
+
+You can see all of the assigned SELinux roles using the following
+
+.B semanage user -l
+
+If you wanted to add logadm_r to the staff_u user, you would execute:
+
+.B $ semanage user -m -R 'staff_r logadm_r' staff_u 
+
+
+
+SELinux policy also controls which roles can transition to a different role.  
+You can list these rules using the following command.
+
+.B sesearch --role_allow
+
+SELinux policy allows the staff_r role can transition to the logadm_r role.
+
+
+.SH "COMMANDS"
+
+.B semanage login
+can also be used to manipulate the Linux User to SELinux User mappings
+
+.B semanage user
+can also be used to manipulate SELinux user definitions.
+
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genuserman.py.
+
+.SH "SEE ALSO"
+selinux(8), semanage(8).
diff --git a/man/man8/logrotate_selinux.8 b/man/man8/logrotate_selinux.8
new file mode 100644
index 0000000..7f01fd7
--- /dev/null
+++ b/man/man8/logrotate_selinux.8
@@ -0,0 +1,113 @@
+.TH  "logrotate_selinux"  "8"  "logrotate" "dwalsh@redhat.com" "logrotate SELinux Policy documentation"
+.SH "NAME"
+logrotate_selinux \- Security Enhanced Linux Policy for the logrotate processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B logrotate
+(Rotate and archive system logs)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux logrotate policy is very flexible allowing users to setup their logrotate processes in as secure a method as possible.
+.PP 
+The following file types are defined for logrotate:
+
+
+.EX
+.PP
+.B logrotate_exec_t 
+.EE
+
+- Set files with the logrotate_exec_t type, if you want to transition an executable to the logrotate_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/logrotate, /etc/cron\.(daily|weekly)/sysklogd
+
+.EX
+.PP
+.B logrotate_lock_t 
+.EE
+
+- Set files with the logrotate_lock_t type, if you want to treat the files as logrotate lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B logrotate_mail_tmp_t 
+.EE
+
+- Set files with the logrotate_mail_tmp_t type, if you want to store logrotate mail temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B logrotate_tmp_t 
+.EE
+
+- Set files with the logrotate_tmp_t type, if you want to store logrotate temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B logrotate_var_lib_t 
+.EE
+
+- Set files with the logrotate_var_lib_t type, if you want to store the logrotate files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux logrotate policy is very flexible allowing users to setup their logrotate processes in as secure a method as possible.
+.PP 
+The following process types are defined for logrotate:
+
+.EX
+.B logrotate_t, logrotate_mail_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), logrotate(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/logwatch_selinux.8 b/man/man8/logwatch_selinux.8
new file mode 100644
index 0000000..a03fd51
--- /dev/null
+++ b/man/man8/logwatch_selinux.8
@@ -0,0 +1,125 @@
+.TH  "logwatch_selinux"  "8"  "logwatch" "dwalsh@redhat.com" "logwatch SELinux Policy documentation"
+.SH "NAME"
+logwatch_selinux \- Security Enhanced Linux Policy for the logwatch processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B logwatch
+(System log analyzer and reporter)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux logwatch policy is very flexible allowing users to setup their logwatch processes in as secure a method as possible.
+.PP 
+The following file types are defined for logwatch:
+
+
+.EX
+.PP
+.B logwatch_cache_t 
+.EE
+
+- Set files with the logwatch_cache_t type, if you want to store the files under the /var/cache directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/epylog(/.*)?, /var/cache/logwatch(/.*)?, /var/lib/logcheck(/.*)?
+
+.EX
+.PP
+.B logwatch_exec_t 
+.EE
+
+- Set files with the logwatch_exec_t type, if you want to transition an executable to the logwatch_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/logcheck, /usr/sbin/epylog, /usr/share/logwatch/scripts/logwatch\.pl
+
+.EX
+.PP
+.B logwatch_lock_t 
+.EE
+
+- Set files with the logwatch_lock_t type, if you want to treat the files as logwatch lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B logwatch_mail_tmp_t 
+.EE
+
+- Set files with the logwatch_mail_tmp_t type, if you want to store logwatch mail temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B logwatch_tmp_t 
+.EE
+
+- Set files with the logwatch_tmp_t type, if you want to store logwatch temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B logwatch_var_run_t 
+.EE
+
+- Set files with the logwatch_var_run_t type, if you want to store the logwatch files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux logwatch policy is very flexible allowing users to setup their logwatch processes in as secure a method as possible.
+.PP 
+The following process types are defined for logwatch:
+
+.EX
+.B logwatch_t, logwatch_mail_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), logwatch(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/lpd_selinux.8 b/man/man8/lpd_selinux.8
new file mode 100644
index 0000000..f69947a
--- /dev/null
+++ b/man/man8/lpd_selinux.8
@@ -0,0 +1,112 @@
+.TH  "lpd_selinux"  "8"  "lpd" "dwalsh@redhat.com" "lpd SELinux Policy documentation"
+.SH "NAME"
+lpd_selinux \- Security Enhanced Linux Policy for the lpd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B lpd
+(Line printer daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  lpd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run lpd with the tightest access possible.
+
+
+.PP
+If you want to use lpd server instead of cup, you must turn on the use_lpd_server boolean.
+
+.EX
+.B setsebool -P use_lpd_server 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux lpd policy is very flexible allowing users to setup their lpd processes in as secure a method as possible.
+.PP 
+The following file types are defined for lpd:
+
+
+.EX
+.PP
+.B lpd_exec_t 
+.EE
+
+- Set files with the lpd_exec_t type, if you want to transition an executable to the lpd_t domain.
+
+
+.EX
+.PP
+.B lpd_tmp_t 
+.EE
+
+- Set files with the lpd_tmp_t type, if you want to store lpd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B lpd_var_run_t 
+.EE
+
+- Set files with the lpd_var_run_t type, if you want to store the lpd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/lprng(/.*)?, /var/spool/turboprint(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux lpd policy is very flexible allowing users to setup their lpd processes in as secure a method as possible.
+.PP 
+The following process types are defined for lpd:
+
+.EX
+.B lpd_t, lpr_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), lpd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/lpr_selinux.8 b/man/man8/lpr_selinux.8
new file mode 100644
index 0000000..90d47ef
--- /dev/null
+++ b/man/man8/lpr_selinux.8
@@ -0,0 +1,83 @@
+.TH  "lpr_selinux"  "8"  "lpr" "dwalsh@redhat.com" "lpr SELinux Policy documentation"
+.SH "NAME"
+lpr_selinux \- Security Enhanced Linux Policy for the lpr processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux lpr policy is very flexible allowing users to setup their lpr processes in as secure a method as possible.
+.PP 
+The following file types are defined for lpr:
+
+
+.EX
+.PP
+.B lpr_exec_t 
+.EE
+
+- Set files with the lpr_exec_t type, if you want to transition an executable to the lpr_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/accept, /usr/bin/cancel(\.cups)?, /usr/bin/lp(\.cups)?, /usr/bin/lpstat(\.cups)?, /usr/sbin/lpc(\.cups)?, /usr/local/linuxprinter/bin/l?lpr, /usr/bin/lpoptions, /usr/sbin/lpadmin, /usr/sbin/lpinfo, /opt/gutenprint/s?bin(/.*)?, /usr/bin/lpr(\.cups)?, /usr/bin/lpq(\.cups)?, /usr/sbin/lpmove, /usr/bin/lprm(\.cups)?
+
+.EX
+.PP
+.B lpr_tmp_t 
+.EE
+
+- Set files with the lpr_tmp_t type, if you want to store lpr temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux lpr policy is very flexible allowing users to setup their lpr processes in as secure a method as possible.
+.PP 
+The following process types are defined for lpr:
+
+.EX
+.B lpr_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), lpr(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/lsassd_selinux.8 b/man/man8/lsassd_selinux.8
new file mode 100644
index 0000000..087cd7b
--- /dev/null
+++ b/man/man8/lsassd_selinux.8
@@ -0,0 +1,111 @@
+.TH  "lsassd_selinux"  "8"  "lsassd" "dwalsh@redhat.com" "lsassd SELinux Policy documentation"
+.SH "NAME"
+lsassd_selinux \- Security Enhanced Linux Policy for the lsassd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux lsassd policy is very flexible allowing users to setup their lsassd processes in as secure a method as possible.
+.PP 
+The following file types are defined for lsassd:
+
+
+.EX
+.PP
+.B lsassd_exec_t 
+.EE
+
+- Set files with the lsassd_exec_t type, if you want to transition an executable to the lsassd_t domain.
+
+
+.EX
+.PP
+.B lsassd_tmp_t 
+.EE
+
+- Set files with the lsassd_tmp_t type, if you want to store lsassd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B lsassd_var_lib_t 
+.EE
+
+- Set files with the lsassd_var_lib_t type, if you want to store the lsassd files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/likewise-open/krb5ccr_lsass, /var/lib/likewise-open/db/lsass-adstate\.filedb, /var/lib/likewise-open/lsasd\.err, /var/lib/likewise-open/db/lsass-adcache\.db, /var/lib/likewise-open/db/sam\.db
+
+.EX
+.PP
+.B lsassd_var_run_t 
+.EE
+
+- Set files with the lsassd_var_run_t type, if you want to store the lsassd files under the /run directory.
+
+
+.EX
+.PP
+.B lsassd_var_socket_t 
+.EE
+
+- Set files with the lsassd_var_socket_t type, if you want to treat the files as lsassd var socket data.
+
+.br
+.TP 5
+Paths: 
+/var/lib/likewise-open/rpc/lsass, /var/lib/likewise-open/\.lsassd, /var/lib/likewise-open/\.ntlmd
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux lsassd policy is very flexible allowing users to setup their lsassd processes in as secure a method as possible.
+.PP 
+The following process types are defined for lsassd:
+
+.EX
+.B lsassd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), lsassd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/lvm_selinux.8 b/man/man8/lvm_selinux.8
new file mode 100644
index 0000000..20c9a41
--- /dev/null
+++ b/man/man8/lvm_selinux.8
@@ -0,0 +1,141 @@
+.TH  "lvm_selinux"  "8"  "lvm" "dwalsh@redhat.com" "lvm SELinux Policy documentation"
+.SH "NAME"
+lvm_selinux \- Security Enhanced Linux Policy for the lvm processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B lvm
+(Policy for logical volume management programs)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux lvm policy is very flexible allowing users to setup their lvm processes in as secure a method as possible.
+.PP 
+The following file types are defined for lvm:
+
+
+.EX
+.PP
+.B lvm_etc_t 
+.EE
+
+- Set files with the lvm_etc_t type, if you want to store lvm files in the /etc directories.
+
+
+.EX
+.PP
+.B lvm_exec_t 
+.EE
+
+- Set files with the lvm_exec_t type, if you want to transition an executable to the lvm_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/dmsetup, /usr/sbin/dmsetup, /usr/sbin/pvchange, /sbin/dmraid, /sbin/pvremove, /sbin/vgextend, /sbin/vgmerge, /sbin/vgscan\.static, /usr/sbin/pvdisplay, /sbin/vgrename, /usr/sbin/vgck, /sbin/lvdisplay, /usr/sbin/vgremove, /usr/lib/lvm-10/.*, /sbin/pvs, /sbin/lvmdiskscan, /sbin/lvresize, /sbin/vgmknodes, /usr/sbin/lvdisplay, /usr/sbin/mount\.crypt, /usr/sbin/vgsplit, /usr/lib/systemd/systemd-cryptsetup, /sbin/pvmove, /sbin/multipath\.static, /usr/sbin/pvcreate, /usr/sbin/lvmdiskscan, /usr/sbin/vgcfgbackup, /usr/sbin/vgimport, /sbin/vgck, /sbin/pvscan, /usr/sbin/lvmchange, /sbin/lvreduce, /sbin/vgremove, /sbin/vgscan, /sbin/lvremove, /lib/lvm-200/.*, /usr/sbin/lvremove, /sbin/pvcreate, /usr/sbin/lvrename, /usr/sbin/lvmsadc, /usr/sbin/lvm, /usr/lib/lvm-200/.*, /usr/sbin/pvdata, /sbin/vgchange, /sbin/lvm\.static, /sbin/vgcfgbackup, /sbin/e2fsadm, /sbin/lvm, /sbin/pvdata, /usr/sbin/lvmiopversion, /usr/sbin/vgextend, /sbin/lvextend, /usr/lib/udev/udisks-lvm-pv-export, /sbin/vgcfgrestore, /usr/sbin/vgscan, /sbin/vgs, /sbin/lvmchange, /sbin/vgimport, /usr/sbin/lvscan, /usr/sbin/pvscan, /usr/sbin/vgreduce, /usr/sbin/dmsetup\.static, /usr/sbin/vgchange\.static, /usr/sbin/vgexport, /usr/sbin/lvextend, /usr/sbin/cryptsetup, /usr/sbin/dmraid, /usr/sbin/lvresize, /sbin/dmsetup\.static, /sbin/lvmsar, /usr/sbin/vgs, /usr/sbin/vgrename, /usr/sbin/lvs, /sbin/vgchange\.static, /usr/sbin/pvmove, /sbin/lvmsadc, /usr/sbin/vgmknodes, /sbin/lvmiopversion, /usr/sbin/vgscan\.static, /sbin/pvdisplay, /sbin/vgsplit, /usr/sbin/vgcfgrestore, /usr/sbin/kpartx, /sbin/cryptsetup, /usr/sbin/lvcreate, /lib/udev/udisks-lvm-pv-export, /sbin/vgwrapper, /sbin/lvchange, /sbin/pvchange, /usr/sbin/lvm\.static, /usr/sbin/multipathd, /sbin/mount\.crypt, /sbin/vgcreate, /sbin/vgreduce, /usr/sbin/lvreduce, /usr/sbin/vgwrapper, /sbin/lvrename, /lib/systemd/systemd-cryptsetup, /sbin/multipathd, /usr/sbin/vgcreate, /usr/sbin/vgmerge, /sbin/vgexport, /usr/sbin/lvchange, /sbin/lvs, /usr/sbin/lvmsar, /usr/sbin/multipath\.static, /usr/sbin/vgdisplay, /usr/sbin/vgchange, /sbin/kpartx, /usr/sbin/pvs, /lib/lvm-10/.*, /sbin/lvscan, /sbin/lvcreate, /sbin/vgdisplay, /usr/sbin/pvremove, /usr/sbin/e2fsadm
+
+.EX
+.PP
+.B lvm_lock_t 
+.EE
+
+- Set files with the lvm_lock_t type, if you want to treat the files as lvm lock data, stored under the /var/lock directory
+
+.br
+.TP 5
+Paths: 
+/var/lock/lvm(/.*)?, /etc/lvm/lock(/.*)?
+
+.EX
+.PP
+.B lvm_metadata_t 
+.EE
+
+- Set files with the lvm_metadata_t type, if you want to treat the files as lvm metadata data.
+
+.br
+.TP 5
+Paths: 
+/etc/lvm/backup(/.*)?, /var/cache/multipathd(/.*)?, /etc/lvmtab\.d(/.*)?, /etc/lvmtab(/.*)?, /etc/lvm/\.cache, /etc/lvm/archive(/.*)?, /etc/lvm/cache(/.*)?
+
+.EX
+.PP
+.B lvm_tmp_t 
+.EE
+
+- Set files with the lvm_tmp_t type, if you want to store lvm temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B lvm_var_lib_t 
+.EE
+
+- Set files with the lvm_var_lib_t type, if you want to store the lvm files under the /var/lib directory.
+
+
+.EX
+.PP
+.B lvm_var_run_t 
+.EE
+
+- Set files with the lvm_var_run_t type, if you want to store the lvm files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/lvm(/.*)?, /var/run/multipathd\.sock, /var/run/dmevent.*
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux lvm policy is very flexible allowing users to setup their lvm processes in as secure a method as possible.
+.PP 
+The following process types are defined for lvm:
+
+.EX
+.B lvm_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), lvm(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/lwiod_selinux.8 b/man/man8/lwiod_selinux.8
new file mode 100644
index 0000000..39b80fc
--- /dev/null
+++ b/man/man8/lwiod_selinux.8
@@ -0,0 +1,95 @@
+.TH  "lwiod_selinux"  "8"  "lwiod" "dwalsh@redhat.com" "lwiod SELinux Policy documentation"
+.SH "NAME"
+lwiod_selinux \- Security Enhanced Linux Policy for the lwiod processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux lwiod policy is very flexible allowing users to setup their lwiod processes in as secure a method as possible.
+.PP 
+The following file types are defined for lwiod:
+
+
+.EX
+.PP
+.B lwiod_exec_t 
+.EE
+
+- Set files with the lwiod_exec_t type, if you want to transition an executable to the lwiod_t domain.
+
+
+.EX
+.PP
+.B lwiod_var_lib_t 
+.EE
+
+- Set files with the lwiod_var_lib_t type, if you want to store the lwiod files under the /var/lib directory.
+
+
+.EX
+.PP
+.B lwiod_var_run_t 
+.EE
+
+- Set files with the lwiod_var_run_t type, if you want to store the lwiod files under the /run directory.
+
+
+.EX
+.PP
+.B lwiod_var_socket_t 
+.EE
+
+- Set files with the lwiod_var_socket_t type, if you want to treat the files as lwiod var socket data.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux lwiod policy is very flexible allowing users to setup their lwiod processes in as secure a method as possible.
+.PP 
+The following process types are defined for lwiod:
+
+.EX
+.B lwiod_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), lwiod(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/lwregd_selinux.8 b/man/man8/lwregd_selinux.8
new file mode 100644
index 0000000..e954cd1
--- /dev/null
+++ b/man/man8/lwregd_selinux.8
@@ -0,0 +1,99 @@
+.TH  "lwregd_selinux"  "8"  "lwregd" "dwalsh@redhat.com" "lwregd SELinux Policy documentation"
+.SH "NAME"
+lwregd_selinux \- Security Enhanced Linux Policy for the lwregd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux lwregd policy is very flexible allowing users to setup their lwregd processes in as secure a method as possible.
+.PP 
+The following file types are defined for lwregd:
+
+
+.EX
+.PP
+.B lwregd_exec_t 
+.EE
+
+- Set files with the lwregd_exec_t type, if you want to transition an executable to the lwregd_t domain.
+
+
+.EX
+.PP
+.B lwregd_var_lib_t 
+.EE
+
+- Set files with the lwregd_var_lib_t type, if you want to store the lwregd files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/likewise-open/db/registry\.db, /var/lib/likewise-open/regsd\.err
+
+.EX
+.PP
+.B lwregd_var_run_t 
+.EE
+
+- Set files with the lwregd_var_run_t type, if you want to store the lwregd files under the /run directory.
+
+
+.EX
+.PP
+.B lwregd_var_socket_t 
+.EE
+
+- Set files with the lwregd_var_socket_t type, if you want to treat the files as lwregd var socket data.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux lwregd policy is very flexible allowing users to setup their lwregd processes in as secure a method as possible.
+.PP 
+The following process types are defined for lwregd:
+
+.EX
+.B lwregd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), lwregd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/lwsmd_selinux.8 b/man/man8/lwsmd_selinux.8
new file mode 100644
index 0000000..96c1b69
--- /dev/null
+++ b/man/man8/lwsmd_selinux.8
@@ -0,0 +1,95 @@
+.TH  "lwsmd_selinux"  "8"  "lwsmd" "dwalsh@redhat.com" "lwsmd SELinux Policy documentation"
+.SH "NAME"
+lwsmd_selinux \- Security Enhanced Linux Policy for the lwsmd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux lwsmd policy is very flexible allowing users to setup their lwsmd processes in as secure a method as possible.
+.PP 
+The following file types are defined for lwsmd:
+
+
+.EX
+.PP
+.B lwsmd_exec_t 
+.EE
+
+- Set files with the lwsmd_exec_t type, if you want to transition an executable to the lwsmd_t domain.
+
+
+.EX
+.PP
+.B lwsmd_var_lib_t 
+.EE
+
+- Set files with the lwsmd_var_lib_t type, if you want to store the lwsmd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B lwsmd_var_run_t 
+.EE
+
+- Set files with the lwsmd_var_run_t type, if you want to store the lwsmd files under the /run directory.
+
+
+.EX
+.PP
+.B lwsmd_var_socket_t 
+.EE
+
+- Set files with the lwsmd_var_socket_t type, if you want to treat the files as lwsmd var socket data.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux lwsmd policy is very flexible allowing users to setup their lwsmd processes in as secure a method as possible.
+.PP 
+The following process types are defined for lwsmd:
+
+.EX
+.B lwsmd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), lwsmd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/mail_selinux.8 b/man/man8/mail_selinux.8
new file mode 100644
index 0000000..bd12996
--- /dev/null
+++ b/man/man8/mail_selinux.8
@@ -0,0 +1,277 @@
+.TH  "mail_selinux"  "8"  "mail" "dwalsh@redhat.com" "mail SELinux Policy documentation"
+.SH "NAME"
+mail_selinux \- Security Enhanced Linux Policy for the mail processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  mail policy is extremely flexible and has several booleans that allow you to manipulate the policy and run mail with the tightest access possible.
+
+
+.PP
+If you want to allow postfix_local domain full write access to mail_spool directorie, you must turn on the allow_postfix_local_write_mail_spool boolean.
+
+.EX
+.B setsebool -P allow_postfix_local_write_mail_spool 1
+.EE
+
+.PP
+If you want to allow http daemon to send mai, you must turn on the httpd_can_sendmail boolean.
+
+.EX
+.B setsebool -P httpd_can_sendmail 1
+.EE
+
+.PP
+If you want to allow syslogd daemon to send mai, you must turn on the logging_syslogd_can_sendmail boolean.
+
+.EX
+.B setsebool -P logging_syslogd_can_sendmail 1
+.EE
+
+.PP
+If you want to allow gitisis daemon to send mai, you must turn on the gitosis_can_sendmail boolean.
+
+.EX
+.B setsebool -P gitosis_can_sendmail 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mail policy is very flexible allowing users to setup their mail processes in as secure a method as possible.
+.PP 
+The following file types are defined for mail:
+
+
+.EX
+.PP
+.B mail_home_rw_t 
+.EE
+
+- Set files with the mail_home_rw_t type, if you want to treat the files as mail home read/write content.
+
+
+.EX
+.PP
+.B mail_home_t 
+.EE
+
+- Set files with the mail_home_t type, if you want to store mail files in the users home directory.
+
+.br
+.TP 5
+Paths: 
+/root/\.forward, /root/.mailrc, /root/dead.letter
+
+.EX
+.PP
+.B mail_munin_plugin_exec_t 
+.EE
+
+- Set files with the mail_munin_plugin_exec_t type, if you want to transition an executable to the mail_munin_plugin_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/share/munin/plugins/postfix_mail.*, /usr/share/munin/plugins/mailscanner, /usr/share/munin/plugins/courier_mta_.*, /usr/share/munin/plugins/mailman, /usr/share/munin/plugins/exim_mail.*, /usr/share/munin/plugins/qmail.*, /usr/share/munin/plugins/sendmail_.*
+
+.EX
+.PP
+.B mail_munin_plugin_tmp_t 
+.EE
+
+- Set files with the mail_munin_plugin_tmp_t type, if you want to store mail munin plugin temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B mail_spool_t 
+.EE
+
+- Set files with the mail_spool_t type, if you want to store the mail files under the /var/spool directory.
+
+.br
+.TP 5
+Paths: 
+/var/mail(/.*)?, /var/spool/imap(/.*)?, /var/spool/mail(/.*)?
+
+.EX
+.PP
+.B mailman_archive_t 
+.EE
+
+- Set files with the mailman_archive_t type, if you want to treat the files as mailman archive data.
+
+
+.EX
+.PP
+.B mailman_cgi_exec_t 
+.EE
+
+- Set files with the mailman_cgi_exec_t type, if you want to transition an executable to the mailman_cgi_t domain.
+
+
+.EX
+.PP
+.B mailman_cgi_tmp_t 
+.EE
+
+- Set files with the mailman_cgi_tmp_t type, if you want to store mailman cgi temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B mailman_data_t 
+.EE
+
+- Set files with the mailman_data_t type, if you want to treat the files as mailman content.
+
+.br
+.TP 5
+Paths: 
+/etc/mailman.*, /var/spool/mailman.*, /var/lib/mailman.*
+
+.EX
+.PP
+.B mailman_lock_t 
+.EE
+
+- Set files with the mailman_lock_t type, if you want to treat the files as mailman lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B mailman_log_t 
+.EE
+
+- Set files with the mailman_log_t type, if you want to treat the data as mailman log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B mailman_mail_exec_t 
+.EE
+
+- Set files with the mailman_mail_exec_t type, if you want to transition an executable to the mailman_mail_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/mailman.*/mail/mailman, /usr/lib/mailman.*/bin/mm-handler.*, /usr/share/doc/mailman.*/mm-handler.*, /usr/lib/mailman.*/bin/mailmanctl, /usr/lib/mailman.*/scripts/mailman
+
+.EX
+.PP
+.B mailman_mail_tmp_t 
+.EE
+
+- Set files with the mailman_mail_tmp_t type, if you want to store mailman mail temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B mailman_queue_exec_t 
+.EE
+
+- Set files with the mailman_queue_exec_t type, if you want to transition an executable to the mailman_queue_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/mailman.*/cron/.*, /usr/lib/mailman.*/bin/qrunner
+
+.EX
+.PP
+.B mailman_queue_tmp_t 
+.EE
+
+- Set files with the mailman_queue_tmp_t type, if you want to store mailman queue temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B mailman_var_run_t 
+.EE
+
+- Set files with the mailman_var_run_t type, if you want to store the mailman files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux mail policy is very flexible allowing users to setup their mail processes in as secure a method as possible.
+.PP 
+The following port types are defined for mail:
+
+.EX
+.TP 5
+.B mail_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mail policy is very flexible allowing users to setup their mail processes in as secure a method as possible.
+.PP 
+The following process types are defined for mail:
+
+.EX
+.B mailman_cgi_t, mailman_mail_t, mail_munin_plugin_t, mailman_queue_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mail(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/mailman_selinux.8 b/man/man8/mailman_selinux.8
new file mode 100644
index 0000000..2cc348b
--- /dev/null
+++ b/man/man8/mailman_selinux.8
@@ -0,0 +1,169 @@
+.TH  "mailman_selinux"  "8"  "mailman" "dwalsh@redhat.com" "mailman SELinux Policy documentation"
+.SH "NAME"
+mailman_selinux \- Security Enhanced Linux Policy for the mailman processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B mailman
+(Mailman is for managing electronic mail discussion and e-newsletter lists)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mailman policy is very flexible allowing users to setup their mailman processes in as secure a method as possible.
+.PP 
+The following file types are defined for mailman:
+
+
+.EX
+.PP
+.B mailman_archive_t 
+.EE
+
+- Set files with the mailman_archive_t type, if you want to treat the files as mailman archive data.
+
+
+.EX
+.PP
+.B mailman_cgi_exec_t 
+.EE
+
+- Set files with the mailman_cgi_exec_t type, if you want to transition an executable to the mailman_cgi_t domain.
+
+
+.EX
+.PP
+.B mailman_cgi_tmp_t 
+.EE
+
+- Set files with the mailman_cgi_tmp_t type, if you want to store mailman cgi temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B mailman_data_t 
+.EE
+
+- Set files with the mailman_data_t type, if you want to treat the files as mailman content.
+
+.br
+.TP 5
+Paths: 
+/etc/mailman.*, /var/spool/mailman.*, /var/lib/mailman.*
+
+.EX
+.PP
+.B mailman_lock_t 
+.EE
+
+- Set files with the mailman_lock_t type, if you want to treat the files as mailman lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B mailman_log_t 
+.EE
+
+- Set files with the mailman_log_t type, if you want to treat the data as mailman log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B mailman_mail_exec_t 
+.EE
+
+- Set files with the mailman_mail_exec_t type, if you want to transition an executable to the mailman_mail_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/mailman.*/mail/mailman, /usr/lib/mailman.*/bin/mm-handler.*, /usr/share/doc/mailman.*/mm-handler.*, /usr/lib/mailman.*/bin/mailmanctl, /usr/lib/mailman.*/scripts/mailman
+
+.EX
+.PP
+.B mailman_mail_tmp_t 
+.EE
+
+- Set files with the mailman_mail_tmp_t type, if you want to store mailman mail temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B mailman_queue_exec_t 
+.EE
+
+- Set files with the mailman_queue_exec_t type, if you want to transition an executable to the mailman_queue_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/mailman.*/cron/.*, /usr/lib/mailman.*/bin/qrunner
+
+.EX
+.PP
+.B mailman_queue_tmp_t 
+.EE
+
+- Set files with the mailman_queue_tmp_t type, if you want to store mailman queue temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B mailman_var_run_t 
+.EE
+
+- Set files with the mailman_var_run_t type, if you want to store the mailman files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mailman policy is very flexible allowing users to setup their mailman processes in as secure a method as possible.
+.PP 
+The following process types are defined for mailman:
+
+.EX
+.B mailman_cgi_t, mailman_mail_t, mailman_queue_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mailman(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/matahari_selinux.8 b/man/man8/matahari_selinux.8
new file mode 100644
index 0000000..6cbe09a
--- /dev/null
+++ b/man/man8/matahari_selinux.8
@@ -0,0 +1,243 @@
+.TH  "matahari_selinux"  "8"  "matahari" "dwalsh@redhat.com" "matahari SELinux Policy documentation"
+.SH "NAME"
+matahari_selinux \- Security Enhanced Linux Policy for the matahari processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B matahari
+(policy for matahari)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux matahari policy is very flexible allowing users to setup their matahari processes in as secure a method as possible.
+.PP 
+The following file types are defined for matahari:
+
+
+.EX
+.PP
+.B matahari_hostd_exec_t 
+.EE
+
+- Set files with the matahari_hostd_exec_t type, if you want to transition an executable to the matahari_hostd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/matahari-qmf-hostd, /usr/sbin/matahari-hostd, /usr/sbin/matahari-dbus-hostd
+
+.EX
+.PP
+.B matahari_hostd_unit_file_t 
+.EE
+
+- Set files with the matahari_hostd_unit_file_t type, if you want to treat the files as matahari hostd unit content.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/systemd/system/matahari-host\.service, /lib/systemd/system/matahari-host\.service
+
+.EX
+.PP
+.B matahari_initrc_exec_t 
+.EE
+
+- Set files with the matahari_initrc_exec_t type, if you want to transition an executable to the matahari_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/matahari-sysconfig, /etc/rc\.d/init\.d/matahari-host, /etc/rc\.d/init\.d/matahari-service, /etc/init.d/matahari-sysconfig-console, /etc/rc\.d/init\.d/matahari-net
+
+.EX
+.PP
+.B matahari_netd_exec_t 
+.EE
+
+- Set files with the matahari_netd_exec_t type, if you want to transition an executable to the matahari_netd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/matahari-qmf-networkd, /usr/sbin/matahari-dbus-networkd, /usr/sbin/matahari-netd
+
+.EX
+.PP
+.B matahari_netd_unit_file_t 
+.EE
+
+- Set files with the matahari_netd_unit_file_t type, if you want to treat the files as matahari netd unit content.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/systemd/system/matahari-network\.service, /lib/systemd/system/matahari-network\.service
+
+.EX
+.PP
+.B matahari_rpcd_exec_t 
+.EE
+
+- Set files with the matahari_rpcd_exec_t type, if you want to transition an executable to the matahari_rpcd_t domain.
+
+
+.EX
+.PP
+.B matahari_rpcd_unit_file_t 
+.EE
+
+- Set files with the matahari_rpcd_unit_file_t type, if you want to treat the files as matahari rpcd unit content.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/systemd/system/matahari-rpc.service, /lib/systemd/system/matahari-rpc.service
+
+.EX
+.PP
+.B matahari_serviced_exec_t 
+.EE
+
+- Set files with the matahari_serviced_exec_t type, if you want to transition an executable to the matahari_serviced_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/matahari-serviced, /usr/sbin/matahari-dbus-serviced, /usr/sbin/matahari-qmf-serviced
+
+.EX
+.PP
+.B matahari_serviced_unit_file_t 
+.EE
+
+- Set files with the matahari_serviced_unit_file_t type, if you want to treat the files as matahari serviced unit content.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/systemd/system/matahari-service\.service, /lib/systemd/system/matahari-service\.service
+
+.EX
+.PP
+.B matahari_sysconfigd_exec_t 
+.EE
+
+- Set files with the matahari_sysconfigd_exec_t type, if you want to transition an executable to the matahari_sysconfigd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/matahari-qmf-sysconfigd, /usr/sbin/matahari-qmf-sysconfig-consoled
+
+.EX
+.PP
+.B matahari_sysconfigd_unit_file_t 
+.EE
+
+- Set files with the matahari_sysconfigd_unit_file_t type, if you want to treat the files as matahari sysconfigd unit content.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/systemd/system/matahari-sysconfig-console\.service, /lib/systemd/system/matahari-sysconfig\.service, /usr/lib/systemd/system/matahari-sysconfig\.service, /lib/systemd/system/matahari-sysconfig-console\.service
+
+.EX
+.PP
+.B matahari_var_lib_t 
+.EE
+
+- Set files with the matahari_var_lib_t type, if you want to store the matahari files under the /var/lib directory.
+
+
+.EX
+.PP
+.B matahari_var_run_t 
+.EE
+
+- Set files with the matahari_var_run_t type, if you want to store the matahari files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/matahari(/.*)?, /var/run/matahari\.pid, /var/run/matahari-broker\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux matahari policy is very flexible allowing users to setup their matahari processes in as secure a method as possible.
+.PP 
+The following port types are defined for matahari:
+
+.EX
+.TP 5
+.B matahari_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux matahari policy is very flexible allowing users to setup their matahari processes in as secure a method as possible.
+.PP 
+The following process types are defined for matahari:
+
+.EX
+.B matahari_serviced_t, matahari_sysconfigd_t, matahari_hostd_t, matahari_netd_t, matahari_rpcd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), matahari(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/mcelog_selinux.8 b/man/man8/mcelog_selinux.8
new file mode 100644
index 0000000..7292383
--- /dev/null
+++ b/man/man8/mcelog_selinux.8
@@ -0,0 +1,93 @@
+.TH  "mcelog_selinux"  "8"  "mcelog" "dwalsh@redhat.com" "mcelog SELinux Policy documentation"
+.SH "NAME"
+mcelog_selinux \- Security Enhanced Linux Policy for the mcelog processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B mcelog
+(policy for mcelog)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mcelog policy is very flexible allowing users to setup their mcelog processes in as secure a method as possible.
+.PP 
+The following file types are defined for mcelog:
+
+
+.EX
+.PP
+.B mcelog_exec_t 
+.EE
+
+- Set files with the mcelog_exec_t type, if you want to transition an executable to the mcelog_t domain.
+
+
+.EX
+.PP
+.B mcelog_log_t 
+.EE
+
+- Set files with the mcelog_log_t type, if you want to treat the data as mcelog log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B mcelog_var_run_t 
+.EE
+
+- Set files with the mcelog_var_run_t type, if you want to store the mcelog files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mcelog policy is very flexible allowing users to setup their mcelog processes in as secure a method as possible.
+.PP 
+The following process types are defined for mcelog:
+
+.EX
+.B mcelog_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mcelog(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/mdadm_selinux.8 b/man/man8/mdadm_selinux.8
new file mode 100644
index 0000000..ab79be5
--- /dev/null
+++ b/man/man8/mdadm_selinux.8
@@ -0,0 +1,87 @@
+.TH  "mdadm_selinux"  "8"  "mdadm" "dwalsh@redhat.com" "mdadm SELinux Policy documentation"
+.SH "NAME"
+mdadm_selinux \- Security Enhanced Linux Policy for the mdadm processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mdadm policy is very flexible allowing users to setup their mdadm processes in as secure a method as possible.
+.PP 
+The following file types are defined for mdadm:
+
+
+.EX
+.PP
+.B mdadm_exec_t 
+.EE
+
+- Set files with the mdadm_exec_t type, if you want to transition an executable to the mdadm_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/raid-check, /sbin/mdmpd, /usr/sbin/iprinit, /usr/sbin/mdadm, /usr/sbin/iprupdate, /sbin/mdadm, /usr/sbin/mdmpd, /usr/sbin/iprdump
+
+.EX
+.PP
+.B mdadm_var_run_t 
+.EE
+
+- Set files with the mdadm_var_run_t type, if you want to store the mdadm files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/mdadm(/.*)?, /dev/md/.*, /dev/.mdadm\.map
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mdadm policy is very flexible allowing users to setup their mdadm processes in as secure a method as possible.
+.PP 
+The following process types are defined for mdadm:
+
+.EX
+.B mdadm_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mdadm(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/memcached_selinux.8 b/man/man8/memcached_selinux.8
new file mode 100644
index 0000000..62d286c
--- /dev/null
+++ b/man/man8/memcached_selinux.8
@@ -0,0 +1,138 @@
+.TH  "memcached_selinux"  "8"  "memcached" "dwalsh@redhat.com" "memcached SELinux Policy documentation"
+.SH "NAME"
+memcached_selinux \- Security Enhanced Linux Policy for the memcached processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B memcached
+(high-performance memory object caching system)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  memcached policy is extremely flexible and has several booleans that allow you to manipulate the policy and run memcached with the tightest access possible.
+
+
+.PP
+If you want to allow httpd to connect to memcache serve, you must turn on the httpd_can_network_memcache boolean.
+
+.EX
+.B setsebool -P httpd_can_network_memcache 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux memcached policy is very flexible allowing users to setup their memcached processes in as secure a method as possible.
+.PP 
+The following file types are defined for memcached:
+
+
+.EX
+.PP
+.B memcached_exec_t 
+.EE
+
+- Set files with the memcached_exec_t type, if you want to transition an executable to the memcached_t domain.
+
+
+.EX
+.PP
+.B memcached_initrc_exec_t 
+.EE
+
+- Set files with the memcached_initrc_exec_t type, if you want to transition an executable to the memcached_initrc_t domain.
+
+
+.EX
+.PP
+.B memcached_var_run_t 
+.EE
+
+- Set files with the memcached_var_run_t type, if you want to store the memcached files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/ipa_memcached(/.*)?, /var/run/memcached(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux memcached policy is very flexible allowing users to setup their memcached processes in as secure a method as possible.
+.PP 
+The following port types are defined for memcached:
+
+.EX
+.TP 5
+.B memcache_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux memcached policy is very flexible allowing users to setup their memcached processes in as secure a method as possible.
+.PP 
+The following process types are defined for memcached:
+
+.EX
+.B memcached_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), memcached(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/mencoder_selinux.8 b/man/man8/mencoder_selinux.8
new file mode 100644
index 0000000..aa093ee
--- /dev/null
+++ b/man/man8/mencoder_selinux.8
@@ -0,0 +1,71 @@
+.TH  "mencoder_selinux"  "8"  "mencoder" "dwalsh@redhat.com" "mencoder SELinux Policy documentation"
+.SH "NAME"
+mencoder_selinux \- Security Enhanced Linux Policy for the mencoder processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mencoder policy is very flexible allowing users to setup their mencoder processes in as secure a method as possible.
+.PP 
+The following file types are defined for mencoder:
+
+
+.EX
+.PP
+.B mencoder_exec_t 
+.EE
+
+- Set files with the mencoder_exec_t type, if you want to transition an executable to the mencoder_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mencoder policy is very flexible allowing users to setup their mencoder processes in as secure a method as possible.
+.PP 
+The following process types are defined for mencoder:
+
+.EX
+.B mencoder_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mencoder(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/mock_selinux.8 b/man/man8/mock_selinux.8
new file mode 100644
index 0000000..e7cc7e3
--- /dev/null
+++ b/man/man8/mock_selinux.8
@@ -0,0 +1,132 @@
+.TH  "mock_selinux"  "8"  "mock" "dwalsh@redhat.com" "mock SELinux Policy documentation"
+.SH "NAME"
+mock_selinux \- Security Enhanced Linux Policy for the mock processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B mock
+(policy for mock)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  mock policy is extremely flexible and has several booleans that allow you to manipulate the policy and run mock with the tightest access possible.
+
+
+.PP
+If you want to allow mock to read files in home directories, you must turn on the mock_enable_homedirs boolean.
+
+.EX
+.B setsebool -P mock_enable_homedirs 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mock policy is very flexible allowing users to setup their mock processes in as secure a method as possible.
+.PP 
+The following file types are defined for mock:
+
+
+.EX
+.PP
+.B mock_build_exec_t 
+.EE
+
+- Set files with the mock_build_exec_t type, if you want to transition an executable to the mock_build_t domain.
+
+
+.EX
+.PP
+.B mock_cache_t 
+.EE
+
+- Set files with the mock_cache_t type, if you want to store the files under the /var/cache directory.
+
+
+.EX
+.PP
+.B mock_etc_t 
+.EE
+
+- Set files with the mock_etc_t type, if you want to store mock files in the /etc directories.
+
+
+.EX
+.PP
+.B mock_exec_t 
+.EE
+
+- Set files with the mock_exec_t type, if you want to transition an executable to the mock_t domain.
+
+
+.EX
+.PP
+.B mock_tmp_t 
+.EE
+
+- Set files with the mock_tmp_t type, if you want to store mock temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B mock_var_lib_t 
+.EE
+
+- Set files with the mock_var_lib_t type, if you want to store the mock files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mock policy is very flexible allowing users to setup their mock processes in as secure a method as possible.
+.PP 
+The following process types are defined for mock:
+
+.EX
+.B mock_t, mock_build_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mock(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/modemmanager_selinux.8 b/man/man8/modemmanager_selinux.8
new file mode 100644
index 0000000..3772dfe
--- /dev/null
+++ b/man/man8/modemmanager_selinux.8
@@ -0,0 +1,77 @@
+.TH  "modemmanager_selinux"  "8"  "modemmanager" "dwalsh@redhat.com" "modemmanager SELinux Policy documentation"
+.SH "NAME"
+modemmanager_selinux \- Security Enhanced Linux Policy for the modemmanager processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B modemmanager
+(Provides a DBus interface to communicate with mobile broadband (GSM, CDMA, UMTS, ...) cards)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux modemmanager policy is very flexible allowing users to setup their modemmanager processes in as secure a method as possible.
+.PP 
+The following file types are defined for modemmanager:
+
+
+.EX
+.PP
+.B modemmanager_exec_t 
+.EE
+
+- Set files with the modemmanager_exec_t type, if you want to transition an executable to the modemmanager_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux modemmanager policy is very flexible allowing users to setup their modemmanager processes in as secure a method as possible.
+.PP 
+The following process types are defined for modemmanager:
+
+.EX
+.B modemmanager_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), modemmanager(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/mongod_selinux.8 b/man/man8/mongod_selinux.8
new file mode 100644
index 0000000..7282fb2
--- /dev/null
+++ b/man/man8/mongod_selinux.8
@@ -0,0 +1,145 @@
+.TH  "mongod_selinux"  "8"  "mongod" "dwalsh@redhat.com" "mongod SELinux Policy documentation"
+.SH "NAME"
+mongod_selinux \- Security Enhanced Linux Policy for the mongod processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mongod policy is very flexible allowing users to setup their mongod processes in as secure a method as possible.
+.PP 
+The following file types are defined for mongod:
+
+
+.EX
+.PP
+.B mongod_exec_t 
+.EE
+
+- Set files with the mongod_exec_t type, if you want to transition an executable to the mongod_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/mongod, /usr/share/aeolus-conductor/dbomatic/dbomatic
+
+.EX
+.PP
+.B mongod_initrc_exec_t 
+.EE
+
+- Set files with the mongod_initrc_exec_t type, if you want to transition an executable to the mongod_initrc_t domain.
+
+
+.EX
+.PP
+.B mongod_log_t 
+.EE
+
+- Set files with the mongod_log_t type, if you want to treat the data as mongod log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B mongod_tmp_t 
+.EE
+
+- Set files with the mongod_tmp_t type, if you want to store mongod temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B mongod_var_lib_t 
+.EE
+
+- Set files with the mongod_var_lib_t type, if you want to store the mongod files under the /var/lib directory.
+
+
+.EX
+.PP
+.B mongod_var_run_t 
+.EE
+
+- Set files with the mongod_var_run_t type, if you want to store the mongod files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/mongodb(/.*)?, /var/run/aeolus/dbomatic\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux mongod policy is very flexible allowing users to setup their mongod processes in as secure a method as possible.
+.PP 
+The following port types are defined for mongod:
+
+.EX
+.TP 5
+.B mongod_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mongod policy is very flexible allowing users to setup their mongod processes in as secure a method as possible.
+.PP 
+The following process types are defined for mongod:
+
+.EX
+.B mongod_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mongod(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/mount_selinux.8 b/man/man8/mount_selinux.8
new file mode 100644
index 0000000..9744fa7
--- /dev/null
+++ b/man/man8/mount_selinux.8
@@ -0,0 +1,131 @@
+.TH  "mount_selinux"  "8"  "mount" "dwalsh@redhat.com" "mount SELinux Policy documentation"
+.SH "NAME"
+mount_selinux \- Security Enhanced Linux Policy for the mount processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B mount
+(Policy for mount)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  mount policy is extremely flexible and has several booleans that allow you to manipulate the policy and run mount with the tightest access possible.
+
+
+.PP
+If you want to allow the mount command to mount any directory or file, you must turn on the allow_mount_anyfile boolean.
+
+.EX
+.B setsebool -P allow_mount_anyfile 1
+.EE
+
+.PP
+If you want to allow xguest users to mount removable medi, you must turn on the xguest_mount_media boolean.
+
+.EX
+.B setsebool -P xguest_mount_media 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mount policy is very flexible allowing users to setup their mount processes in as secure a method as possible.
+.PP 
+The following file types are defined for mount:
+
+
+.EX
+.PP
+.B mount_exec_t 
+.EE
+
+- Set files with the mount_exec_t type, if you want to transition an executable to the mount_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/mount.*, /sbin/umount.*, /usr/bin/umount.*, /usr/sbin/umount.*, /bin/umount.*, /usr/bin/mount.*, /bin/mount.*, /usr/sbin/mount.*
+
+.EX
+.PP
+.B mount_loopback_t 
+.EE
+
+- Set files with the mount_loopback_t type, if you want to treat the files as mount loopback data.
+
+
+.EX
+.PP
+.B mount_tmp_t 
+.EE
+
+- Set files with the mount_tmp_t type, if you want to store mount temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B mount_var_run_t 
+.EE
+
+- Set files with the mount_var_run_t type, if you want to store the mount files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/run/mount(/.*)?, /dev/\.mount(/.*)?, /var/run/mount(/.*)?, /var/run/davfs2(/.*)?, /var/cache/davfs2(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mount policy is very flexible allowing users to setup their mount processes in as secure a method as possible.
+.PP 
+The following process types are defined for mount:
+
+.EX
+.B mount_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mount(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/mozilla_selinux.8 b/man/man8/mozilla_selinux.8
new file mode 100644
index 0000000..2b94a8b
--- /dev/null
+++ b/man/man8/mozilla_selinux.8
@@ -0,0 +1,179 @@
+.TH  "mozilla_selinux"  "8"  "mozilla" "dwalsh@redhat.com" "mozilla SELinux Policy documentation"
+.SH "NAME"
+mozilla_selinux \- Security Enhanced Linux Policy for the mozilla processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B mozilla
+(Policy for Mozilla and related web browsers)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  mozilla policy is extremely flexible and has several booleans that allow you to manipulate the policy and run mozilla with the tightest access possible.
+
+
+.PP
+If you want to allow confined web browsers to read home directory conten, you must turn on the mozilla_read_content boolean.
+
+.EX
+.B setsebool -P mozilla_read_content 1
+.EE
+
+.PP
+If you want to allow unconfined users to transition to the Mozilla plugin domain when running xulrunner plugin-container, you must turn on the unconfined_mozilla_plugin_transition boolean.
+
+.EX
+.B setsebool -P unconfined_mozilla_plugin_transition 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mozilla policy is very flexible allowing users to setup their mozilla processes in as secure a method as possible.
+.PP 
+The following file types are defined for mozilla:
+
+
+.EX
+.PP
+.B mozilla_conf_t 
+.EE
+
+- Set files with the mozilla_conf_t type, if you want to treat the files as mozilla configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B mozilla_exec_t 
+.EE
+
+- Set files with the mozilla_exec_t type, if you want to transition an executable to the mozilla_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/[^/]*firefox[^/]*/firefox, /usr/lib/galeon/galeon, /usr/lib/netscape/.+/communicator/communicator-smotif\.real, /usr/bin/netscape, /usr/bin/mozilla-bin-[0-9].*, /usr/bin/epiphany-bin, /usr/lib/mozilla[^/]*/reg.+, /usr/lib/netscape/base-4/wrapper, /usr/bin/mozilla-snapshot, /usr/lib/[^/]*firefox[^/]*/firefox-bin, /usr/bin/mozilla-[0-9].*, /usr/lib/firefox[^/]*/mozilla-.*, /usr/lib/mozilla[^/]*/mozilla-.*, /usr/bin/mozilla, /usr/bin/epiphany
+
+.EX
+.PP
+.B mozilla_home_t 
+.EE
+
+- Set files with the mozilla_home_t type, if you want to store mozilla files in the users home directory.
+
+
+.EX
+.PP
+.B mozilla_plugin_config_exec_t 
+.EE
+
+- Set files with the mozilla_plugin_config_exec_t type, if you want to transition an executable to the mozilla_plugin_config_t domain.
+
+
+.EX
+.PP
+.B mozilla_plugin_exec_t 
+.EE
+
+- Set files with the mozilla_plugin_exec_t type, if you want to transition an executable to the mozilla_plugin_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/nspluginscan, /usr/lib/nspluginwrapper/npviewer.bin, /usr/lib/xulrunner[^/]*/plugin-container, /usr/bin/nspluginviewer
+
+.EX
+.PP
+.B mozilla_plugin_rw_t 
+.EE
+
+- Set files with the mozilla_plugin_rw_t type, if you want to treat the files as mozilla plugin read/write content.
+
+
+.EX
+.PP
+.B mozilla_plugin_tmp_t 
+.EE
+
+- Set files with the mozilla_plugin_tmp_t type, if you want to store mozilla plugin temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B mozilla_plugin_tmpfs_t 
+.EE
+
+- Set files with the mozilla_plugin_tmpfs_t type, if you want to store mozilla plugin files on a tmpfs file system.
+
+
+.EX
+.PP
+.B mozilla_tmp_t 
+.EE
+
+- Set files with the mozilla_tmp_t type, if you want to store mozilla temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B mozilla_tmpfs_t 
+.EE
+
+- Set files with the mozilla_tmpfs_t type, if you want to store mozilla files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mozilla policy is very flexible allowing users to setup their mozilla processes in as secure a method as possible.
+.PP 
+The following process types are defined for mozilla:
+
+.EX
+.B mozilla_t, mozilla_plugin_config_t, mozilla_plugin_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mozilla(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/mpd_selinux.8 b/man/man8/mpd_selinux.8
new file mode 100644
index 0000000..76210f5
--- /dev/null
+++ b/man/man8/mpd_selinux.8
@@ -0,0 +1,206 @@
+.TH  "mpd_selinux"  "8"  "mpd" "dwalsh@redhat.com" "mpd SELinux Policy documentation"
+.SH "NAME"
+mpd_selinux \- Security Enhanced Linux Policy for the mpd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B mpd
+(Music Player Daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  mpd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run mpd with the tightest access possible.
+
+
+.PP
+If you want to allow mplayer executable stac, you must turn on the allow_mplayer_execstack boolean.
+
+.EX
+.B setsebool -P allow_mplayer_execstack 1
+.EE
+
+.PP
+If you want to allow all daemons to write corefiles to , you must turn on the allow_daemons_dump_core boolean.
+
+.EX
+.B setsebool -P allow_daemons_dump_core 1
+.EE
+
+.PP
+If you want to allow Apache to execute tmp content, you must turn on the httpd_tmp_exec boolean.
+
+.EX
+.B setsebool -P httpd_tmp_exec 1
+.EE
+
+.PP
+If you want to allow video playing tools to run unconfine, you must turn on the unconfined_mplayer boolean.
+
+.EX
+.B setsebool -P unconfined_mplayer 1
+.EE
+
+.PP
+If you want to allow gssd to read temp directory.  For access to kerberos tgt, you must turn on the allow_gssd_read_tmp boolean.
+
+.EX
+.B setsebool -P allow_gssd_read_tmp 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mpd policy is very flexible allowing users to setup their mpd processes in as secure a method as possible.
+.PP 
+The following file types are defined for mpd:
+
+
+.EX
+.PP
+.B mpd_data_t 
+.EE
+
+- Set files with the mpd_data_t type, if you want to treat the files as mpd content.
+
+.br
+.TP 5
+Paths: 
+/var/lib/mpd/playlists(/.*)?, /var/lib/mpd/music(/.*)?
+
+.EX
+.PP
+.B mpd_etc_t 
+.EE
+
+- Set files with the mpd_etc_t type, if you want to store mpd files in the /etc directories.
+
+
+.EX
+.PP
+.B mpd_exec_t 
+.EE
+
+- Set files with the mpd_exec_t type, if you want to transition an executable to the mpd_t domain.
+
+
+.EX
+.PP
+.B mpd_initrc_exec_t 
+.EE
+
+- Set files with the mpd_initrc_exec_t type, if you want to transition an executable to the mpd_initrc_t domain.
+
+
+.EX
+.PP
+.B mpd_log_t 
+.EE
+
+- Set files with the mpd_log_t type, if you want to treat the data as mpd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B mpd_tmp_t 
+.EE
+
+- Set files with the mpd_tmp_t type, if you want to store mpd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B mpd_tmpfs_t 
+.EE
+
+- Set files with the mpd_tmpfs_t type, if you want to store mpd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B mpd_var_lib_t 
+.EE
+
+- Set files with the mpd_var_lib_t type, if you want to store the mpd files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux mpd policy is very flexible allowing users to setup their mpd processes in as secure a method as possible.
+.PP 
+The following port types are defined for mpd:
+
+.EX
+.TP 5
+.B mpd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mpd policy is very flexible allowing users to setup their mpd processes in as secure a method as possible.
+.PP 
+The following process types are defined for mpd:
+
+.EX
+.B mpd_t, mplayer_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mpd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/mplayer_selinux.8 b/man/man8/mplayer_selinux.8
new file mode 100644
index 0000000..0098b19
--- /dev/null
+++ b/man/man8/mplayer_selinux.8
@@ -0,0 +1,127 @@
+.TH  "mplayer_selinux"  "8"  "mplayer" "dwalsh@redhat.com" "mplayer SELinux Policy documentation"
+.SH "NAME"
+mplayer_selinux \- Security Enhanced Linux Policy for the mplayer processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B mplayer
+(Mplayer media player and encoder)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  mplayer policy is extremely flexible and has several booleans that allow you to manipulate the policy and run mplayer with the tightest access possible.
+
+
+.PP
+If you want to allow mplayer executable stac, you must turn on the allow_mplayer_execstack boolean.
+
+.EX
+.B setsebool -P allow_mplayer_execstack 1
+.EE
+
+.PP
+If you want to allow video playing tools to run unconfine, you must turn on the unconfined_mplayer boolean.
+
+.EX
+.B setsebool -P unconfined_mplayer 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mplayer policy is very flexible allowing users to setup their mplayer processes in as secure a method as possible.
+.PP 
+The following file types are defined for mplayer:
+
+
+.EX
+.PP
+.B mplayer_etc_t 
+.EE
+
+- Set files with the mplayer_etc_t type, if you want to store mplayer files in the /etc directories.
+
+
+.EX
+.PP
+.B mplayer_exec_t 
+.EE
+
+- Set files with the mplayer_exec_t type, if you want to transition an executable to the mplayer_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/vlc, /usr/bin/mplayer, /usr/bin/xine
+
+.EX
+.PP
+.B mplayer_home_t 
+.EE
+
+- Set files with the mplayer_home_t type, if you want to store mplayer files in the users home directory.
+
+
+.EX
+.PP
+.B mplayer_tmpfs_t 
+.EE
+
+- Set files with the mplayer_tmpfs_t type, if you want to store mplayer files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mplayer policy is very flexible allowing users to setup their mplayer processes in as secure a method as possible.
+.PP 
+The following process types are defined for mplayer:
+
+.EX
+.B mplayer_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mplayer(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/mrtg_selinux.8 b/man/man8/mrtg_selinux.8
new file mode 100644
index 0000000..0ca59e6
--- /dev/null
+++ b/man/man8/mrtg_selinux.8
@@ -0,0 +1,121 @@
+.TH  "mrtg_selinux"  "8"  "mrtg" "dwalsh@redhat.com" "mrtg SELinux Policy documentation"
+.SH "NAME"
+mrtg_selinux \- Security Enhanced Linux Policy for the mrtg processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B mrtg
+(Network traffic graphing)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mrtg policy is very flexible allowing users to setup their mrtg processes in as secure a method as possible.
+.PP 
+The following file types are defined for mrtg:
+
+
+.EX
+.PP
+.B mrtg_etc_t 
+.EE
+
+- Set files with the mrtg_etc_t type, if you want to store mrtg files in the /etc directories.
+
+
+.EX
+.PP
+.B mrtg_exec_t 
+.EE
+
+- Set files with the mrtg_exec_t type, if you want to transition an executable to the mrtg_t domain.
+
+
+.EX
+.PP
+.B mrtg_lock_t 
+.EE
+
+- Set files with the mrtg_lock_t type, if you want to treat the files as mrtg lock data, stored under the /var/lock directory
+
+.br
+.TP 5
+Paths: 
+/var/lock/mrtg(/.*)?, /etc/mrtg/mrtg\.ok
+
+.EX
+.PP
+.B mrtg_log_t 
+.EE
+
+- Set files with the mrtg_log_t type, if you want to treat the data as mrtg log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B mrtg_var_lib_t 
+.EE
+
+- Set files with the mrtg_var_lib_t type, if you want to store the mrtg files under the /var/lib directory.
+
+
+.EX
+.PP
+.B mrtg_var_run_t 
+.EE
+
+- Set files with the mrtg_var_run_t type, if you want to store the mrtg files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mrtg policy is very flexible allowing users to setup their mrtg processes in as secure a method as possible.
+.PP 
+The following process types are defined for mrtg:
+
+.EX
+.B mrtg_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mrtg(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/mscan_selinux.8 b/man/man8/mscan_selinux.8
new file mode 100644
index 0000000..1b9091c
--- /dev/null
+++ b/man/man8/mscan_selinux.8
@@ -0,0 +1,122 @@
+.TH  "mscan_selinux"  "8"  "mscan" "dwalsh@redhat.com" "mscan SELinux Policy documentation"
+.SH "NAME"
+mscan_selinux \- Security Enhanced Linux Policy for the mscan processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  mscan policy is extremely flexible and has several booleans that allow you to manipulate the policy and run mscan with the tightest access possible.
+
+
+.PP
+If you want to allow clamscan to read user conten, you must turn on the clamscan_read_user_content boolean.
+
+.EX
+.B setsebool -P clamscan_read_user_content 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mscan policy is very flexible allowing users to setup their mscan processes in as secure a method as possible.
+.PP 
+The following file types are defined for mscan:
+
+
+.EX
+.PP
+.B mscan_etc_t 
+.EE
+
+- Set files with the mscan_etc_t type, if you want to store mscan files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/sysconfig/MailScanner, /etc/MailScanner(/.*)?, /etc/sysconfig/update_spamassassin
+
+.EX
+.PP
+.B mscan_exec_t 
+.EE
+
+- Set files with the mscan_exec_t type, if you want to transition an executable to the mscan_t domain.
+
+
+.EX
+.PP
+.B mscan_initrc_exec_t 
+.EE
+
+- Set files with the mscan_initrc_exec_t type, if you want to transition an executable to the mscan_initrc_t domain.
+
+
+.EX
+.PP
+.B mscan_tmp_t 
+.EE
+
+- Set files with the mscan_tmp_t type, if you want to store mscan temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B mscan_var_run_t 
+.EE
+
+- Set files with the mscan_var_run_t type, if you want to store the mscan files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mscan policy is very flexible allowing users to setup their mscan processes in as secure a method as possible.
+.PP 
+The following process types are defined for mscan:
+
+.EX
+.B mscan_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mscan(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/munin_selinux.8 b/man/man8/munin_selinux.8
new file mode 100644
index 0000000..17b161d
--- /dev/null
+++ b/man/man8/munin_selinux.8
@@ -0,0 +1,163 @@
+.TH  "munin_selinux"  "8"  "munin" "dwalsh@redhat.com" "munin SELinux Policy documentation"
+.SH "NAME"
+munin_selinux \- Security Enhanced Linux Policy for the munin processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B munin
+(Munin network-wide load graphing (formerly LRRD))
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux munin policy is very flexible allowing users to setup their munin processes in as secure a method as possible.
+.PP 
+The following file types are defined for munin:
+
+
+.EX
+.PP
+.B munin_etc_t 
+.EE
+
+- Set files with the munin_etc_t type, if you want to store munin files in the /etc directories.
+
+
+.EX
+.PP
+.B munin_exec_t 
+.EE
+
+- Set files with the munin_exec_t type, if you want to transition an executable to the munin_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/munin-.*, /usr/share/munin/munin-.*, /usr/share/munin/plugins/.*, /usr/bin/munin-.*
+
+.EX
+.PP
+.B munin_initrc_exec_t 
+.EE
+
+- Set files with the munin_initrc_exec_t type, if you want to transition an executable to the munin_initrc_t domain.
+
+
+.EX
+.PP
+.B munin_log_t 
+.EE
+
+- Set files with the munin_log_t type, if you want to treat the data as munin log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B munin_plugin_state_t 
+.EE
+
+- Set files with the munin_plugin_state_t type, if you want to treat the files as munin plugin state data.
+
+
+.EX
+.PP
+.B munin_tmp_t 
+.EE
+
+- Set files with the munin_tmp_t type, if you want to store munin temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B munin_var_lib_t 
+.EE
+
+- Set files with the munin_var_lib_t type, if you want to store the munin files under the /var/lib directory.
+
+
+.EX
+.PP
+.B munin_var_run_t 
+.EE
+
+- Set files with the munin_var_run_t type, if you want to store the munin files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux munin policy is very flexible allowing users to setup their munin processes in as secure a method as possible.
+.PP 
+The following port types are defined for munin:
+
+.EX
+.TP 5
+.B munin_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux munin policy is very flexible allowing users to setup their munin processes in as secure a method as possible.
+.PP 
+The following process types are defined for munin:
+
+.EX
+.B munin_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), munin(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/mysqld_selinux.8 b/man/man8/mysqld_selinux.8
new file mode 100644
index 0000000..9f5bb25
--- /dev/null
+++ b/man/man8/mysqld_selinux.8
@@ -0,0 +1,214 @@
+.TH  "mysqld_selinux"  "8"  "mysqld" "dwalsh@redhat.com" "mysqld SELinux Policy documentation"
+.SH "NAME"
+mysqld_selinux \- Security Enhanced Linux Policy for the mysqld processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  mysqld policy is extremely flexible and has several booleans that allow you to manipulate the policy and run mysqld with the tightest access possible.
+
+
+.PP
+If you want to allow users to connect to the local mysql serve, you must turn on the allow_user_mysql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_mysql_connect 1
+.EE
+
+.PP
+If you want to allow mysqld to connect to all port, you must turn on the mysql_connect_any boolean.
+
+.EX
+.B setsebool -P mysql_connect_any 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mysqld policy is very flexible allowing users to setup their mysqld processes in as secure a method as possible.
+.PP 
+The following file types are defined for mysqld:
+
+
+.EX
+.PP
+.B mysqld_db_t 
+.EE
+
+- Set files with the mysqld_db_t type, if you want to treat the files as mysqld database content.
+
+
+.EX
+.PP
+.B mysqld_etc_t 
+.EE
+
+- Set files with the mysqld_etc_t type, if you want to store mysqld files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/my\.cnf, /etc/mysql(/.*)?
+
+.EX
+.PP
+.B mysqld_exec_t 
+.EE
+
+- Set files with the mysqld_exec_t type, if you want to transition an executable to the mysqld_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/libexec/mysqld, /usr/sbin/mysqld(-max)?
+
+.EX
+.PP
+.B mysqld_home_t 
+.EE
+
+- Set files with the mysqld_home_t type, if you want to store mysqld files in the users home directory.
+
+
+.EX
+.PP
+.B mysqld_initrc_exec_t 
+.EE
+
+- Set files with the mysqld_initrc_exec_t type, if you want to transition an executable to the mysqld_initrc_t domain.
+
+
+.EX
+.PP
+.B mysqld_log_t 
+.EE
+
+- Set files with the mysqld_log_t type, if you want to treat the data as mysqld log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B mysqld_safe_exec_t 
+.EE
+
+- Set files with the mysqld_safe_exec_t type, if you want to transition an executable to the mysqld_safe_t domain.
+
+
+.EX
+.PP
+.B mysqld_tmp_t 
+.EE
+
+- Set files with the mysqld_tmp_t type, if you want to store mysqld temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B mysqld_unit_file_t 
+.EE
+
+- Set files with the mysqld_unit_file_t type, if you want to treat the files as mysqld unit content.
+
+
+.EX
+.PP
+.B mysqld_var_run_t 
+.EE
+
+- Set files with the mysqld_var_run_t type, if you want to store the mysqld files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/mysqld(/.*)?, /var/lib/mysql/mysql\.sock
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux mysqld policy is very flexible allowing users to setup their mysqld processes in as secure a method as possible.
+.PP 
+The following port types are defined for mysqld:
+
+.EX
+.TP 5
+.B mysqld_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B mysqlmanagerd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mysqld policy is very flexible allowing users to setup their mysqld processes in as secure a method as possible.
+.PP 
+The following process types are defined for mysqld:
+
+.EX
+.B mysqld_safe_t, mysqlmanagerd_t, mysqld_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mysqld(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/mysqlmanagerd_selinux.8 b/man/man8/mysqlmanagerd_selinux.8
new file mode 100644
index 0000000..6bce1f8
--- /dev/null
+++ b/man/man8/mysqlmanagerd_selinux.8
@@ -0,0 +1,113 @@
+.TH  "mysqlmanagerd_selinux"  "8"  "mysqlmanagerd" "dwalsh@redhat.com" "mysqlmanagerd SELinux Policy documentation"
+.SH "NAME"
+mysqlmanagerd_selinux \- Security Enhanced Linux Policy for the mysqlmanagerd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux mysqlmanagerd policy is very flexible allowing users to setup their mysqlmanagerd processes in as secure a method as possible.
+.PP 
+The following file types are defined for mysqlmanagerd:
+
+
+.EX
+.PP
+.B mysqlmanagerd_exec_t 
+.EE
+
+- Set files with the mysqlmanagerd_exec_t type, if you want to transition an executable to the mysqlmanagerd_t domain.
+
+
+.EX
+.PP
+.B mysqlmanagerd_initrc_exec_t 
+.EE
+
+- Set files with the mysqlmanagerd_initrc_exec_t type, if you want to transition an executable to the mysqlmanagerd_initrc_t domain.
+
+
+.EX
+.PP
+.B mysqlmanagerd_var_run_t 
+.EE
+
+- Set files with the mysqlmanagerd_var_run_t type, if you want to store the mysqlmanagerd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux mysqlmanagerd policy is very flexible allowing users to setup their mysqlmanagerd processes in as secure a method as possible.
+.PP 
+The following port types are defined for mysqlmanagerd:
+
+.EX
+.TP 5
+.B mysqlmanagerd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux mysqlmanagerd policy is very flexible allowing users to setup their mysqlmanagerd processes in as secure a method as possible.
+.PP 
+The following process types are defined for mysqlmanagerd:
+
+.EX
+.B mysqlmanagerd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), mysqlmanagerd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/nagios_selinux.8 b/man/man8/nagios_selinux.8
new file mode 100644
index 0000000..c1343c2
--- /dev/null
+++ b/man/man8/nagios_selinux.8
@@ -0,0 +1,225 @@
+.TH  "nagios_selinux"  "8"  "nagios" "dwalsh@redhat.com" "nagios SELinux Policy documentation"
+.SH "NAME"
+nagios_selinux \- Security Enhanced Linux Policy for the nagios processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B nagios
+(Net Saint / NAGIOS - network monitoring server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux nagios policy is very flexible allowing users to setup their nagios processes in as secure a method as possible.
+.PP 
+The following file types are defined for nagios:
+
+
+.EX
+.PP
+.B nagios_admin_plugin_exec_t 
+.EE
+
+- Set files with the nagios_admin_plugin_exec_t type, if you want to transition an executable to the nagios_admin_plugin_t domain.
+
+
+.EX
+.PP
+.B nagios_checkdisk_plugin_exec_t 
+.EE
+
+- Set files with the nagios_checkdisk_plugin_exec_t type, if you want to transition an executable to the nagios_checkdisk_plugin_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/nagios/plugins/check_linux_raid, /usr/lib/nagios/plugins/check_disk_smb, /usr/lib/nagios/plugins/check_ide_smart, /usr/lib/nagios/plugins/check_disk
+
+.EX
+.PP
+.B nagios_etc_t 
+.EE
+
+- Set files with the nagios_etc_t type, if you want to store nagios files in the /etc directories.
+
+
+.EX
+.PP
+.B nagios_eventhandler_plugin_exec_t 
+.EE
+
+- Set files with the nagios_eventhandler_plugin_exec_t type, if you want to transition an executable to the nagios_eventhandler_plugin_t domain.
+
+
+.EX
+.PP
+.B nagios_eventhandler_plugin_tmp_t 
+.EE
+
+- Set files with the nagios_eventhandler_plugin_tmp_t type, if you want to store nagios eventhandler plugin temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B nagios_exec_t 
+.EE
+
+- Set files with the nagios_exec_t type, if you want to transition an executable to the nagios_t domain.
+
+
+.EX
+.PP
+.B nagios_initrc_exec_t 
+.EE
+
+- Set files with the nagios_initrc_exec_t type, if you want to transition an executable to the nagios_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/nagios, /etc/rc\.d/init\.d/nrpe
+
+.EX
+.PP
+.B nagios_log_t 
+.EE
+
+- Set files with the nagios_log_t type, if you want to treat the data as nagios log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/netsaint(/.*)?, /var/log/nagios(/.*)?
+
+.EX
+.PP
+.B nagios_mail_plugin_exec_t 
+.EE
+
+- Set files with the nagios_mail_plugin_exec_t type, if you want to transition an executable to the nagios_mail_plugin_t domain.
+
+
+.EX
+.PP
+.B nagios_services_plugin_exec_t 
+.EE
+
+- Set files with the nagios_services_plugin_exec_t type, if you want to transition an executable to the nagios_services_plugin_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/nagios/plugins/check_time, /usr/lib/nagios/plugins/check_dhcp, /usr/lib/nagios/plugins/check_radius, /usr/lib/nagios/plugins/check_nrpe, /usr/lib/nagios/plugins/check_smtp, /usr/lib/nagios/plugins/check_sip, /usr/lib/nagios/plugins/check_ssh, /usr/lib/nagios/plugins/check_pgsql, /usr/lib/nagios/plugins/check_ntp.*, /usr/lib/nagios/plugins/check_ldap, /usr/lib/nagios/plugins/check_real, /usr/lib/nagios/plugins/check_ping, /usr/lib/nagios/plugins/check_nt, /usr/lib/nagios/plugins/check_game, /usr/lib/nagios/plugins/check_breeze, /usr/lib/nagios/plugins/check_tcp, /usr/lib/nagios/plugins/check_rpc, /usr/lib/nagios/plugins/check_oracle, /usr/lib/nagios/plugins/check_cluster, /usr/lib/nagios/plugins/check_dummy, /usr/lib/nagios/plugins/check_ups, /usr/lib/nagios/plugins/check_ircd, /usr/lib/nagios/plugins/check_dig, /usr/lib/nagios/plugins/check_fping, /usr/lib/nagios/plugins/check_hpjd, /usr/lib/nagios/plugins/check_mysql, /usr/lib/nagios/plugins/check_icmp, /usr/lib/nagios/plugins/check_http, /usr/lib/nagios/plugins/check_snmp.*, /usr/lib/nagios/plugins/check_mysql_query, /usr/lib/nagios/plugins/check_dns
+
+.EX
+.PP
+.B nagios_spool_t 
+.EE
+
+- Set files with the nagios_spool_t type, if you want to store the nagios files under the /var/spool directory.
+
+
+.EX
+.PP
+.B nagios_system_plugin_exec_t 
+.EE
+
+- Set files with the nagios_system_plugin_exec_t type, if you want to transition an executable to the nagios_system_plugin_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/nagios/plugins/check_log, /usr/lib/nagios/plugins/check_load, /usr/lib/nagios/plugins/check_flexlm, /usr/lib/nagios/plugins/check_swap, /usr/lib/nagios/plugins/check_users, /usr/lib/nagios/plugins/check_ifstatus, /usr/lib/nagios/plugins/check_ifoperstatus, /usr/lib/nagios/plugins/check_nagios, /usr/lib/nagios/plugins/check_sensors, /usr/lib/nagios/plugins/check_wave, /usr/lib/nagios/plugins/check_mrtgtraf, /usr/lib/nagios/plugins/check_nwstat, /usr/lib/nagios/plugins/check_procs, /usr/lib/nagios/plugins/check_mrtg, /usr/lib/nagios/plugins/check_overcr
+
+.EX
+.PP
+.B nagios_system_plugin_tmp_t 
+.EE
+
+- Set files with the nagios_system_plugin_tmp_t type, if you want to store nagios system plugin temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B nagios_tmp_t 
+.EE
+
+- Set files with the nagios_tmp_t type, if you want to store nagios temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B nagios_unconfined_plugin_exec_t 
+.EE
+
+- Set files with the nagios_unconfined_plugin_exec_t type, if you want to transition an executable to the nagios_unconfined_plugin_t domain.
+
+
+.EX
+.PP
+.B nagios_var_lib_t 
+.EE
+
+- Set files with the nagios_var_lib_t type, if you want to store the nagios files under the /var/lib directory.
+
+
+.EX
+.PP
+.B nagios_var_run_t 
+.EE
+
+- Set files with the nagios_var_run_t type, if you want to store the nagios files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux nagios policy is very flexible allowing users to setup their nagios processes in as secure a method as possible.
+.PP 
+The following process types are defined for nagios:
+
+.EX
+.B nagios_t, nagios_mail_plugin_t, nagios_checkdisk_plugin_t, nagios_services_plugin_t, nagios_eventhandler_plugin_t, nagios_system_plugin_t, nagios_unconfined_plugin_t, nagios_admin_plugin_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), nagios(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/named_selinux.8 b/man/man8/named_selinux.8
index fce0b48..653c29b 100644
--- a/man/man8/named_selinux.8
+++ b/man/man8/named_selinux.8
@@ -1,30 +1,211 @@
-.TH  "named_selinux"  "8"  "17 Jan 2005" "dwalsh@redhat.com" "named Selinux Policy documentation"
-.de EX
-.nf
-.ft CW
-..
-.de EE
-.ft R
-.fi
-..
+.TH  "named_selinux"  "8"  "named" "dwalsh@redhat.com" "named SELinux Policy documentation"
 .SH "NAME"
-named_selinux \- Security Enhanced Linux Policy for the Internet Name server (named) daemon
+named_selinux \- Security Enhanced Linux Policy for the named processes
 .SH "DESCRIPTION"
 
-Security-Enhanced Linux secures the named server via flexible mandatory access
+
+SELinux Linux secures
+.B named
+(Berkeley internet name domain DNS server)
+processes via flexible mandatory access
 control.  
+
+
+
 .SH BOOLEANS
-SELinux policy is customizable based on least access required.  So by 
-default SELinux policy does not allow named to write master zone files.  If you want to have named update the master zone files you need to set the named_write_master_zones boolean.
+SELinux policy is customizable based on least access required.  named policy is extremely flexible and has several booleans that allow you to manipulate the policy and run named with the tightest access possible.
+
+
+.PP
+If you want to allow BIND to write the master zone files. Generally this is used for dynamic DNS or zone transfers, you must turn on the named_write_master_zones boolean.
+
 .EX
-setsebool -P named_write_master_zones 1
+.B setsebool -P named_write_master_zones 1
 .EE
+
 .PP
-system-config-selinux is a GUI tool available to customize SELinux policy settings.
-.SH AUTHOR	
-This manual page was written by Dan Walsh <dwalsh@redhat.com>.
+If you want to allow BIND to bind apache port, you must turn on the named_bind_http_port boolean.
 
-.SH "SEE ALSO"
-selinux(8), named(8), chcon(1), setsebool(8)
+.EX
+.B setsebool -P named_bind_http_port 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux named policy is very flexible allowing users to setup their named processes in as secure a method as possible.
+.PP 
+The following file types are defined for named:
+
+
+.EX
+.PP
+.B named_cache_t 
+.EE
+
+- Set files with the named_cache_t type, if you want to store the files under the /var/cache directory.
+
+.br
+.TP 5
+Paths: 
+/var/named/chroot/var/named/data(/.*)?, /var/named/chroot/var/tmp(/.*)?, /var/named/data(/.*)?, /var/named/chroot/var/named/slaves(/.*)?, /var/named/dynamic(/.*)?, /var/named/slaves(/.*)?, /var/named/chroot/var/named/dynamic(/.*)?
+
+.EX
+.PP
+.B named_checkconf_exec_t 
+.EE
+
+- Set files with the named_checkconf_exec_t type, if you want to transition an executable to the named_checkconf_t domain.
+
+
+.EX
+.PP
+.B named_conf_t 
+.EE
+
+- Set files with the named_conf_t type, if you want to treat the files as named configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/var/named/chroot/etc/named\.root\.hints, /etc/named\.root\.hints, /var/named/chroot(/.*)?, /var/named/named\.ca, /etc/unbound(/.*)?, /var/named/chroot/etc/named\.caching-nameserver\.conf, /etc/named\.rfc1912.zones, /etc/named\.caching-nameserver\.conf, /etc/named\.conf, /var/named/chroot/var/named/named\.ca, /var/named/chroot/etc/named\.conf, /etc/rndc.*, /var/named/chroot/etc/named\.rfc1912.zones
+
+.EX
+.PP
+.B named_exec_t 
+.EE
+
+- Set files with the named_exec_t type, if you want to transition an executable to the named_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/lwresd, /usr/sbin/named, /usr/sbin/unbound
+
+.EX
+.PP
+.B named_initrc_exec_t 
+.EE
+
+- Set files with the named_initrc_exec_t type, if you want to transition an executable to the named_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/named, /etc/rc\.d/init\.d/unbound
+
+.EX
+.PP
+.B named_keytab_t 
+.EE
+
+- Set files with the named_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B named_log_t 
+.EE
+
+- Set files with the named_log_t type, if you want to treat the data as named log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/named.*, /var/named/chroot/var/log/named.*
+
+.EX
+.PP
+.B named_tmp_t 
+.EE
+
+- Set files with the named_tmp_t type, if you want to store named temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B named_unit_file_t 
+.EE
+
+- Set files with the named_unit_file_t type, if you want to treat the files as named unit content.
+
+.br
+.TP 5
+Paths: 
+/lib/systemd/system/named.service, /usr/lib/systemd/system/named.service, /lib/systemd/system/unbound.service, /lib/systemd/system/unbound-keygen.service
+
+.EX
+.PP
+.B named_var_run_t 
+.EE
 
+- Set files with the named_var_run_t type, if you want to store the named files under the /run directory.
 
+.br
+.TP 5
+Paths: 
+/var/named/chroot/var/run/named.*, /var/run/ndc, /var/run/bind(/.*)?, /var/run/named(/.*)?, /var/run/unbound(/.*)?
+
+.EX
+.PP
+.B named_zone_t 
+.EE
+
+- Set files with the named_zone_t type, if you want to treat the files as named zone data.
+
+.br
+.TP 5
+Paths: 
+/var/named/chroot/var/named(/.*)?, /var/named(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux named policy is very flexible allowing users to setup their named processes in as secure a method as possible.
+.PP 
+The following process types are defined for named:
+
+.EX
+.B named_t, namespace_init_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), named(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/namespace_selinux.8 b/man/man8/namespace_selinux.8
new file mode 100644
index 0000000..7572442
--- /dev/null
+++ b/man/man8/namespace_selinux.8
@@ -0,0 +1,77 @@
+.TH  "namespace_selinux"  "8"  "namespace" "dwalsh@redhat.com" "namespace SELinux Policy documentation"
+.SH "NAME"
+namespace_selinux \- Security Enhanced Linux Policy for the namespace processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B namespace
+(policy for namespace)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux namespace policy is very flexible allowing users to setup their namespace processes in as secure a method as possible.
+.PP 
+The following file types are defined for namespace:
+
+
+.EX
+.PP
+.B namespace_init_exec_t 
+.EE
+
+- Set files with the namespace_init_exec_t type, if you want to transition an executable to the namespace_init_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux namespace policy is very flexible allowing users to setup their namespace processes in as secure a method as possible.
+.PP 
+The following process types are defined for namespace:
+
+.EX
+.B namespace_init_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), namespace(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/ncftool_selinux.8 b/man/man8/ncftool_selinux.8
new file mode 100644
index 0000000..394997f
--- /dev/null
+++ b/man/man8/ncftool_selinux.8
@@ -0,0 +1,77 @@
+.TH  "ncftool_selinux"  "8"  "ncftool" "dwalsh@redhat.com" "ncftool SELinux Policy documentation"
+.SH "NAME"
+ncftool_selinux \- Security Enhanced Linux Policy for the ncftool processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B ncftool
+(Netcf network configuration tool (ncftool))
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ncftool policy is very flexible allowing users to setup their ncftool processes in as secure a method as possible.
+.PP 
+The following file types are defined for ncftool:
+
+
+.EX
+.PP
+.B ncftool_exec_t 
+.EE
+
+- Set files with the ncftool_exec_t type, if you want to transition an executable to the ncftool_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ncftool policy is very flexible allowing users to setup their ncftool processes in as secure a method as possible.
+.PP 
+The following process types are defined for ncftool:
+
+.EX
+.B ncftool_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ncftool(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/ndc_selinux.8 b/man/man8/ndc_selinux.8
new file mode 100644
index 0000000..fe49fef
--- /dev/null
+++ b/man/man8/ndc_selinux.8
@@ -0,0 +1,71 @@
+.TH  "ndc_selinux"  "8"  "ndc" "dwalsh@redhat.com" "ndc SELinux Policy documentation"
+.SH "NAME"
+ndc_selinux \- Security Enhanced Linux Policy for the ndc processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ndc policy is very flexible allowing users to setup their ndc processes in as secure a method as possible.
+.PP 
+The following file types are defined for ndc:
+
+
+.EX
+.PP
+.B ndc_exec_t 
+.EE
+
+- Set files with the ndc_exec_t type, if you want to transition an executable to the ndc_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ndc policy is very flexible allowing users to setup their ndc processes in as secure a method as possible.
+.PP 
+The following process types are defined for ndc:
+
+.EX
+.B ndc_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ndc(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/netlabel_selinux.8 b/man/man8/netlabel_selinux.8
new file mode 100644
index 0000000..8d7e496
--- /dev/null
+++ b/man/man8/netlabel_selinux.8
@@ -0,0 +1,81 @@
+.TH  "netlabel_selinux"  "8"  "netlabel" "dwalsh@redhat.com" "netlabel SELinux Policy documentation"
+.SH "NAME"
+netlabel_selinux \- Security Enhanced Linux Policy for the netlabel processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B netlabel
+(NetLabel/CIPSO labeled networking management)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux netlabel policy is very flexible allowing users to setup their netlabel processes in as secure a method as possible.
+.PP 
+The following file types are defined for netlabel:
+
+
+.EX
+.PP
+.B netlabel_mgmt_exec_t 
+.EE
+
+- Set files with the netlabel_mgmt_exec_t type, if you want to transition an executable to the netlabel_mgmt_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/netlabelctl, /usr/sbin/netlabelctl
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux netlabel policy is very flexible allowing users to setup their netlabel processes in as secure a method as possible.
+.PP 
+The following process types are defined for netlabel:
+
+.EX
+.B netlabel_mgmt_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), netlabel(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/netlogond_selinux.8 b/man/man8/netlogond_selinux.8
new file mode 100644
index 0000000..3e7dc32
--- /dev/null
+++ b/man/man8/netlogond_selinux.8
@@ -0,0 +1,99 @@
+.TH  "netlogond_selinux"  "8"  "netlogond" "dwalsh@redhat.com" "netlogond SELinux Policy documentation"
+.SH "NAME"
+netlogond_selinux \- Security Enhanced Linux Policy for the netlogond processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux netlogond policy is very flexible allowing users to setup their netlogond processes in as secure a method as possible.
+.PP 
+The following file types are defined for netlogond:
+
+
+.EX
+.PP
+.B netlogond_exec_t 
+.EE
+
+- Set files with the netlogond_exec_t type, if you want to transition an executable to the netlogond_t domain.
+
+
+.EX
+.PP
+.B netlogond_var_lib_t 
+.EE
+
+- Set files with the netlogond_var_lib_t type, if you want to store the netlogond files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/likewise-open/krb5-affinity.conf, /var/lib/likewise-open/LWNetsd\.err
+
+.EX
+.PP
+.B netlogond_var_run_t 
+.EE
+
+- Set files with the netlogond_var_run_t type, if you want to store the netlogond files under the /run directory.
+
+
+.EX
+.PP
+.B netlogond_var_socket_t 
+.EE
+
+- Set files with the netlogond_var_socket_t type, if you want to treat the files as netlogond var socket data.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux netlogond policy is very flexible allowing users to setup their netlogond processes in as secure a method as possible.
+.PP 
+The following process types are defined for netlogond:
+
+.EX
+.B netlogond_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), netlogond(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/netutils_selinux.8 b/man/man8/netutils_selinux.8
new file mode 100644
index 0000000..55eb6c1
--- /dev/null
+++ b/man/man8/netutils_selinux.8
@@ -0,0 +1,89 @@
+.TH  "netutils_selinux"  "8"  "netutils" "dwalsh@redhat.com" "netutils SELinux Policy documentation"
+.SH "NAME"
+netutils_selinux \- Security Enhanced Linux Policy for the netutils processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B netutils
+(Network analysis utilities)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux netutils policy is very flexible allowing users to setup their netutils processes in as secure a method as possible.
+.PP 
+The following file types are defined for netutils:
+
+
+.EX
+.PP
+.B netutils_exec_t 
+.EE
+
+- Set files with the netutils_exec_t type, if you want to transition an executable to the netutils_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/arping, /usr/sbin/arping, /usr/sbin/tcpdump
+
+.EX
+.PP
+.B netutils_tmp_t 
+.EE
+
+- Set files with the netutils_tmp_t type, if you want to store netutils temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux netutils policy is very flexible allowing users to setup their netutils processes in as secure a method as possible.
+.PP 
+The following process types are defined for netutils:
+
+.EX
+.B netutils_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), netutils(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/newrole_selinux.8 b/man/man8/newrole_selinux.8
new file mode 100644
index 0000000..bdc4376
--- /dev/null
+++ b/man/man8/newrole_selinux.8
@@ -0,0 +1,71 @@
+.TH  "newrole_selinux"  "8"  "newrole" "dwalsh@redhat.com" "newrole SELinux Policy documentation"
+.SH "NAME"
+newrole_selinux \- Security Enhanced Linux Policy for the newrole processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux newrole policy is very flexible allowing users to setup their newrole processes in as secure a method as possible.
+.PP 
+The following file types are defined for newrole:
+
+
+.EX
+.PP
+.B newrole_exec_t 
+.EE
+
+- Set files with the newrole_exec_t type, if you want to transition an executable to the newrole_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux newrole policy is very flexible allowing users to setup their newrole processes in as secure a method as possible.
+.PP 
+The following process types are defined for newrole:
+
+.EX
+.B newrole_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), newrole(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/nfsd_selinux.8 b/man/man8/nfsd_selinux.8
new file mode 100644
index 0000000..e664bc1
--- /dev/null
+++ b/man/man8/nfsd_selinux.8
@@ -0,0 +1,284 @@
+.TH  "nfsd_selinux"  "8"  "nfsd" "dwalsh@redhat.com" "nfsd SELinux Policy documentation"
+.SH "NAME"
+nfsd_selinux \- Security Enhanced Linux Policy for the nfsd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  nfsd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run nfsd with the tightest access possible.
+
+
+.PP
+If you want to allow xen to manage nfs file, you must turn on the xen_use_nfs boolean.
+
+.EX
+.B setsebool -P xen_use_nfs 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to manage nfs file, you must turn on the virt_use_nfs boolean.
+
+.EX
+.B setsebool -P virt_use_nfs 1
+.EE
+
+.PP
+If you want to allow ftp servers to use nfs used for public file transfer services, you must turn on the allow_ftpd_use_nfs boolean.
+
+.EX
+.B setsebool -P allow_ftpd_use_nfs 1
+.EE
+
+.PP
+If you want to allow Git daemon system to access nfs file systems, you must turn on the git_system_use_nfs boolean.
+
+.EX
+.B setsebool -P git_system_use_nfs 1
+.EE
+
+.PP
+If you want to allow qemu to use nfs file system, you must turn on the qemu_use_nfs boolean.
+
+.EX
+.B setsebool -P qemu_use_nfs 1
+.EE
+
+.PP
+If you want to allow rsync servers to share nfs files system, you must turn on the rsync_use_nfs boolean.
+
+.EX
+.B setsebool -P rsync_use_nfs 1
+.EE
+
+.PP
+If you want to allow Cobbler to access nfs file systems, you must turn on the cobbler_use_nfs boolean.
+
+.EX
+.B setsebool -P cobbler_use_nfs 1
+.EE
+
+.PP
+If you want to allow httpd to access nfs file system, you must turn on the httpd_use_nfs boolean.
+
+.EX
+.B setsebool -P httpd_use_nfs 1
+.EE
+
+.PP
+If you want to allow sge to access nfs file systems, you must turn on the sge_use_nfs boolean.
+
+.EX
+.B setsebool -P sge_use_nfs 1
+.EE
+
+.PP
+If you want to allow any files/directories to be exported read/write via NFS, you must turn on the nfs_export_all_rw boolean.
+
+.EX
+.B setsebool -P nfs_export_all_rw 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to manage nfs file, you must turn on the sanlock_use_nfs boolean.
+
+.EX
+.B setsebool -P sanlock_use_nfs 1
+.EE
+
+.PP
+If you want to allow samba to export NFS volumes, you must turn on the samba_share_nfs boolean.
+
+.EX
+.B setsebool -P samba_share_nfs 1
+.EE
+
+.PP
+If you want to determine whether Polipo can access nfs file systems, you must turn on the polipo_use_nfs boolean.
+
+.EX
+.B setsebool -P polipo_use_nfs 1
+.EE
+
+.PP
+If you want to support NFS home directorie, you must turn on the use_nfs_home_dirs boolean.
+
+.EX
+.B setsebool -P use_nfs_home_dirs 1
+.EE
+
+.PP
+If you want to allow any files/directories to be exported read/only via NFS, you must turn on the nfs_export_all_ro boolean.
+
+.EX
+.B setsebool -P nfs_export_all_ro 1
+.EE
+
+.SH SHARING FILES
+If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
+.TP
+Allow nfsd servers to read the /var/nfsd directory by adding the public_content_t file type to the directory and by restoring the file type.
+.PP
+.B
+semanage fcontext -a -t public_content_t "/var/nfsd(/.*)?"
+.br
+.B restorecon -F -R -v /var/nfsd
+.pp
+.TP
+Allow nfsd servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_nfsd_anon_write boolean to be set.
+.PP
+.B
+semanage fcontext -a -t public_content_rw_t "/var/nfsd/incoming(/.*)?"
+.br
+.B restorecon -F -R -v /var/nfsd/incoming
+
+
+.PP
+If you want to allow nfs servers to modify public files used for public file transfer services.  Files/Directories must be labeled public_content_rw_t., you must turn on the allow_nfsd_anon_write boolean.
+
+.EX
+.B setsebool -P allow_nfsd_anon_write 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux nfsd policy is very flexible allowing users to setup their nfsd processes in as secure a method as possible.
+.PP 
+The following file types are defined for nfsd:
+
+
+.EX
+.PP
+.B nfs_t 
+.EE
+
+- Set files with the nfs_t type, if you want to treat the files as nfs data.
+
+
+.EX
+.PP
+.B nfsd_exec_t 
+.EE
+
+- Set files with the nfsd_exec_t type, if you want to transition an executable to the nfsd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/rpc\.mountd, /usr/sbin/rpc\.nfsd
+
+.EX
+.PP
+.B nfsd_initrc_exec_t 
+.EE
+
+- Set files with the nfsd_initrc_exec_t type, if you want to transition an executable to the nfsd_initrc_t domain.
+
+
+.EX
+.PP
+.B nfsd_ro_t 
+.EE
+
+- Set files with the nfsd_ro_t type, if you want to treat the files as nfsd read/only content.
+
+
+.EX
+.PP
+.B nfsd_rw_t 
+.EE
+
+- Set files with the nfsd_rw_t type, if you want to treat the files as nfsd read/write content.
+
+
+.EX
+.PP
+.B nfsd_unit_file_t 
+.EE
+
+- Set files with the nfsd_unit_file_t type, if you want to treat the files as nfsd unit content.
+
+.br
+.TP 5
+Paths: 
+/lib/systemd/system/nfs.*, /usr/lib/systemd/system/nfs.*
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux nfsd policy is very flexible allowing users to setup their nfsd processes in as secure a method as possible.
+.PP 
+The following port types are defined for nfsd:
+
+.EX
+.TP 5
+.B nfs_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux nfsd policy is very flexible allowing users to setup their nfsd processes in as secure a method as possible.
+.PP 
+The following process types are defined for nfsd:
+
+.EX
+.B nfsd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), nfsd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/nginx_selinux.8 b/man/man8/nginx_selinux.8
new file mode 100644
index 0000000..87983d6
--- /dev/null
+++ b/man/man8/nginx_selinux.8
@@ -0,0 +1,103 @@
+.TH  "nginx_selinux"  "8"  "nginx" "dwalsh@redhat.com" "nginx SELinux Policy documentation"
+.SH "NAME"
+nginx_selinux \- Security Enhanced Linux Policy for the nginx processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux nginx policy is very flexible allowing users to setup their nginx processes in as secure a method as possible.
+.PP 
+The following file types are defined for nginx:
+
+
+.EX
+.PP
+.B nginx_exec_t 
+.EE
+
+- Set files with the nginx_exec_t type, if you want to transition an executable to the nginx_t domain.
+
+
+.EX
+.PP
+.B nginx_initrc_exec_t 
+.EE
+
+- Set files with the nginx_initrc_exec_t type, if you want to transition an executable to the nginx_initrc_t domain.
+
+
+.EX
+.PP
+.B nginx_log_t 
+.EE
+
+- Set files with the nginx_log_t type, if you want to treat the data as nginx log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B nginx_var_lib_t 
+.EE
+
+- Set files with the nginx_var_lib_t type, if you want to store the nginx files under the /var/lib directory.
+
+
+.EX
+.PP
+.B nginx_var_run_t 
+.EE
+
+- Set files with the nginx_var_run_t type, if you want to store the nginx files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux nginx policy is very flexible allowing users to setup their nginx processes in as secure a method as possible.
+.PP 
+The following process types are defined for nginx:
+
+.EX
+.B nginx_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), nginx(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/nmbd_selinux.8 b/man/man8/nmbd_selinux.8
new file mode 100644
index 0000000..bfcd1db
--- /dev/null
+++ b/man/man8/nmbd_selinux.8
@@ -0,0 +1,109 @@
+.TH  "nmbd_selinux"  "8"  "nmbd" "dwalsh@redhat.com" "nmbd SELinux Policy documentation"
+.SH "NAME"
+nmbd_selinux \- Security Enhanced Linux Policy for the nmbd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux nmbd policy is very flexible allowing users to setup their nmbd processes in as secure a method as possible.
+.PP 
+The following file types are defined for nmbd:
+
+
+.EX
+.PP
+.B nmbd_exec_t 
+.EE
+
+- Set files with the nmbd_exec_t type, if you want to transition an executable to the nmbd_t domain.
+
+
+.EX
+.PP
+.B nmbd_var_run_t 
+.EE
+
+- Set files with the nmbd_var_run_t type, if you want to store the nmbd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/samba/messages\.tdb, /var/run/samba/namelist\.debug, /var/run/nmbd(/.*)?, /var/run/samba/unexpected\.tdb, /var/run/samba/nmbd\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux nmbd policy is very flexible allowing users to setup their nmbd processes in as secure a method as possible.
+.PP 
+The following port types are defined for nmbd:
+
+.EX
+.TP 5
+.B nmbd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux nmbd policy is very flexible allowing users to setup their nmbd processes in as secure a method as possible.
+.PP 
+The following process types are defined for nmbd:
+
+.EX
+.B nmbd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), nmbd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/nova_selinux.8 b/man/man8/nova_selinux.8
new file mode 100644
index 0000000..c55585f
--- /dev/null
+++ b/man/man8/nova_selinux.8
@@ -0,0 +1,365 @@
+.TH  "nova_selinux"  "8"  "nova" "dwalsh@redhat.com" "nova SELinux Policy documentation"
+.SH "NAME"
+nova_selinux \- Security Enhanced Linux Policy for the nova processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B nova
+(openstack-nova)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux nova policy is very flexible allowing users to setup their nova processes in as secure a method as possible.
+.PP 
+The following file types are defined for nova:
+
+
+.EX
+.PP
+.B nova_ajax_exec_t 
+.EE
+
+- Set files with the nova_ajax_exec_t type, if you want to transition an executable to the nova_ajax_t domain.
+
+
+.EX
+.PP
+.B nova_ajax_tmp_t 
+.EE
+
+- Set files with the nova_ajax_tmp_t type, if you want to store nova ajax temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B nova_ajax_unit_file_t 
+.EE
+
+- Set files with the nova_ajax_unit_file_t type, if you want to treat the files as nova ajax unit content.
+
+
+.EX
+.PP
+.B nova_api_exec_t 
+.EE
+
+- Set files with the nova_api_exec_t type, if you want to transition an executable to the nova_api_t domain.
+
+
+.EX
+.PP
+.B nova_api_tmp_t 
+.EE
+
+- Set files with the nova_api_tmp_t type, if you want to store nova api temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B nova_api_unit_file_t 
+.EE
+
+- Set files with the nova_api_unit_file_t type, if you want to treat the files as nova api unit content.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/systemd/system/openstack-nova-api\.service, /lib/systemd/system/openstack-nova-api\.service
+
+.EX
+.PP
+.B nova_cert_exec_t 
+.EE
+
+- Set files with the nova_cert_exec_t type, if you want to transition an executable to the nova_cert_t domain.
+
+
+.EX
+.PP
+.B nova_cert_tmp_t 
+.EE
+
+- Set files with the nova_cert_tmp_t type, if you want to store nova cert temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B nova_cert_unit_file_t 
+.EE
+
+- Set files with the nova_cert_unit_file_t type, if you want to treat the files as nova cert unit content.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/systemd/system/openstack-nova-cert\.service, /lib/systemd/system/openstack-nova-cert\.service
+
+.EX
+.PP
+.B nova_compute_exec_t 
+.EE
+
+- Set files with the nova_compute_exec_t type, if you want to transition an executable to the nova_compute_t domain.
+
+
+.EX
+.PP
+.B nova_compute_tmp_t 
+.EE
+
+- Set files with the nova_compute_tmp_t type, if you want to store nova compute temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B nova_compute_unit_file_t 
+.EE
+
+- Set files with the nova_compute_unit_file_t type, if you want to treat the files as nova compute unit content.
+
+
+.EX
+.PP
+.B nova_direct_exec_t 
+.EE
+
+- Set files with the nova_direct_exec_t type, if you want to transition an executable to the nova_direct_t domain.
+
+
+.EX
+.PP
+.B nova_direct_tmp_t 
+.EE
+
+- Set files with the nova_direct_tmp_t type, if you want to store nova direct temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B nova_direct_unit_file_t 
+.EE
+
+- Set files with the nova_direct_unit_file_t type, if you want to treat the files as nova direct unit content.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/systemd/system/openstack-nova-ajax-console-proxy\.service, /lib/systemd/system/openstack-nova-direct-api\.service, /lib/systemd/system/openstack-nova-ajax-console-proxy\.service, /usr/lib/systemd/system/openstack-nova-direct-api\.service
+
+.EX
+.PP
+.B nova_log_t 
+.EE
+
+- Set files with the nova_log_t type, if you want to treat the data as nova log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B nova_network_exec_t 
+.EE
+
+- Set files with the nova_network_exec_t type, if you want to transition an executable to the nova_network_t domain.
+
+
+.EX
+.PP
+.B nova_network_tmp_t 
+.EE
+
+- Set files with the nova_network_tmp_t type, if you want to store nova network temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B nova_network_unit_file_t 
+.EE
+
+- Set files with the nova_network_unit_file_t type, if you want to treat the files as nova network unit content.
+
+.br
+.TP 5
+Paths: 
+/lib/systemd/system/openstack-nova-network\.service, /usr/lib/systemd/system/openstack-nova-network\.service
+
+.EX
+.PP
+.B nova_objectstore_exec_t 
+.EE
+
+- Set files with the nova_objectstore_exec_t type, if you want to transition an executable to the nova_objectstore_t domain.
+
+
+.EX
+.PP
+.B nova_objectstore_tmp_t 
+.EE
+
+- Set files with the nova_objectstore_tmp_t type, if you want to store nova objectstore temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B nova_objectstore_unit_file_t 
+.EE
+
+- Set files with the nova_objectstore_unit_file_t type, if you want to treat the files as nova objectstore unit content.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/systemd/system/openstack-nova-objectstore\.service, /lib/systemd/system/openstack-nova-objectstore\.service
+
+.EX
+.PP
+.B nova_scheduler_exec_t 
+.EE
+
+- Set files with the nova_scheduler_exec_t type, if you want to transition an executable to the nova_scheduler_t domain.
+
+
+.EX
+.PP
+.B nova_scheduler_tmp_t 
+.EE
+
+- Set files with the nova_scheduler_tmp_t type, if you want to store nova scheduler temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B nova_scheduler_unit_file_t 
+.EE
+
+- Set files with the nova_scheduler_unit_file_t type, if you want to treat the files as nova scheduler unit content.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/systemd/system/openstack-nova-scheduler\.service, /lib/systemd/system/openstack-nova-scheduler\.service
+
+.EX
+.PP
+.B nova_var_lib_t 
+.EE
+
+- Set files with the nova_var_lib_t type, if you want to store the nova files under the /var/lib directory.
+
+
+.EX
+.PP
+.B nova_var_run_t 
+.EE
+
+- Set files with the nova_var_run_t type, if you want to store the nova files under the /run directory.
+
+
+.EX
+.PP
+.B nova_vncproxy_exec_t 
+.EE
+
+- Set files with the nova_vncproxy_exec_t type, if you want to transition an executable to the nova_vncproxy_t domain.
+
+
+.EX
+.PP
+.B nova_vncproxy_tmp_t 
+.EE
+
+- Set files with the nova_vncproxy_tmp_t type, if you want to store nova vncproxy temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B nova_vncproxy_unit_file_t 
+.EE
+
+- Set files with the nova_vncproxy_unit_file_t type, if you want to treat the files as nova vncproxy unit content.
+
+.br
+.TP 5
+Paths: 
+/lib/systemd/system/openstack-nova-vncproxy\.service, /usr/lib/systemd/system/openstack-nova-vncproxy\.service
+
+.EX
+.PP
+.B nova_volume_exec_t 
+.EE
+
+- Set files with the nova_volume_exec_t type, if you want to transition an executable to the nova_volume_t domain.
+
+
+.EX
+.PP
+.B nova_volume_tmp_t 
+.EE
+
+- Set files with the nova_volume_tmp_t type, if you want to store nova volume temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B nova_volume_unit_file_t 
+.EE
+
+- Set files with the nova_volume_unit_file_t type, if you want to treat the files as nova volume unit content.
+
+.br
+.TP 5
+Paths: 
+/lib/systemd/system/openstack-nova-volume\.service, /usr/lib/systemd/system/openstack-nova-volume\.service
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux nova policy is very flexible allowing users to setup their nova processes in as secure a method as possible.
+.PP 
+The following process types are defined for nova:
+
+.EX
+.B nova_api_t, nova_compute_t, nova_network_t, nova_objectstore_t, nova_vncproxy_t, nova_volume_t, nova_scheduler_t, nova_ajax_t, nova_cert_t, nova_direct_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), nova(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/nrpe_selinux.8 b/man/man8/nrpe_selinux.8
new file mode 100644
index 0000000..f6a3c05
--- /dev/null
+++ b/man/man8/nrpe_selinux.8
@@ -0,0 +1,87 @@
+.TH  "nrpe_selinux"  "8"  "nrpe" "dwalsh@redhat.com" "nrpe SELinux Policy documentation"
+.SH "NAME"
+nrpe_selinux \- Security Enhanced Linux Policy for the nrpe processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux nrpe policy is very flexible allowing users to setup their nrpe processes in as secure a method as possible.
+.PP 
+The following file types are defined for nrpe:
+
+
+.EX
+.PP
+.B nrpe_etc_t 
+.EE
+
+- Set files with the nrpe_etc_t type, if you want to store nrpe files in the /etc directories.
+
+
+.EX
+.PP
+.B nrpe_exec_t 
+.EE
+
+- Set files with the nrpe_exec_t type, if you want to transition an executable to the nrpe_t domain.
+
+
+.EX
+.PP
+.B nrpe_var_run_t 
+.EE
+
+- Set files with the nrpe_var_run_t type, if you want to store the nrpe files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux nrpe policy is very flexible allowing users to setup their nrpe processes in as secure a method as possible.
+.PP 
+The following process types are defined for nrpe:
+
+.EX
+.B nrpe_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), nrpe(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/nscd_selinux.8 b/man/man8/nscd_selinux.8
new file mode 100644
index 0000000..01045df
--- /dev/null
+++ b/man/man8/nscd_selinux.8
@@ -0,0 +1,128 @@
+.TH  "nscd_selinux"  "8"  "nscd" "dwalsh@redhat.com" "nscd SELinux Policy documentation"
+.SH "NAME"
+nscd_selinux \- Security Enhanced Linux Policy for the nscd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B nscd
+(Name service cache daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  nscd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run nscd with the tightest access possible.
+
+
+.PP
+If you want to allow confined applications to use nscd shared memory, you must turn on the nscd_use_shm boolean.
+
+.EX
+.B setsebool -P nscd_use_shm 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux nscd policy is very flexible allowing users to setup their nscd processes in as secure a method as possible.
+.PP 
+The following file types are defined for nscd:
+
+
+.EX
+.PP
+.B nscd_exec_t 
+.EE
+
+- Set files with the nscd_exec_t type, if you want to transition an executable to the nscd_t domain.
+
+
+.EX
+.PP
+.B nscd_initrc_exec_t 
+.EE
+
+- Set files with the nscd_initrc_exec_t type, if you want to transition an executable to the nscd_initrc_t domain.
+
+
+.EX
+.PP
+.B nscd_log_t 
+.EE
+
+- Set files with the nscd_log_t type, if you want to treat the data as nscd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B nscd_unit_file_t 
+.EE
+
+- Set files with the nscd_unit_file_t type, if you want to treat the files as nscd unit content.
+
+
+.EX
+.PP
+.B nscd_var_run_t 
+.EE
+
+- Set files with the nscd_var_run_t type, if you want to store the nscd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/nscd\.pid, /var/run/nscd(/.*)?, /var/db/nscd(/.*)?, /var/run/\.nscd_socket, /var/cache/nscd(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux nscd policy is very flexible allowing users to setup their nscd processes in as secure a method as possible.
+.PP 
+The following process types are defined for nscd:
+
+.EX
+.B nscd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), nscd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/nslcd_selinux.8 b/man/man8/nslcd_selinux.8
new file mode 100644
index 0000000..a9a427d
--- /dev/null
+++ b/man/man8/nslcd_selinux.8
@@ -0,0 +1,101 @@
+.TH  "nslcd_selinux"  "8"  "nslcd" "dwalsh@redhat.com" "nslcd SELinux Policy documentation"
+.SH "NAME"
+nslcd_selinux \- Security Enhanced Linux Policy for the nslcd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B nslcd
+(nslcd - local LDAP name service daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux nslcd policy is very flexible allowing users to setup their nslcd processes in as secure a method as possible.
+.PP 
+The following file types are defined for nslcd:
+
+
+.EX
+.PP
+.B nslcd_conf_t 
+.EE
+
+- Set files with the nslcd_conf_t type, if you want to treat the files as nslcd configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B nslcd_exec_t 
+.EE
+
+- Set files with the nslcd_exec_t type, if you want to transition an executable to the nslcd_t domain.
+
+
+.EX
+.PP
+.B nslcd_initrc_exec_t 
+.EE
+
+- Set files with the nslcd_initrc_exec_t type, if you want to transition an executable to the nslcd_initrc_t domain.
+
+
+.EX
+.PP
+.B nslcd_var_run_t 
+.EE
+
+- Set files with the nslcd_var_run_t type, if you want to store the nslcd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux nslcd policy is very flexible allowing users to setup their nslcd processes in as secure a method as possible.
+.PP 
+The following process types are defined for nslcd:
+
+.EX
+.B nslcd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), nslcd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/ntop_selinux.8 b/man/man8/ntop_selinux.8
new file mode 100644
index 0000000..cb7f3a4
--- /dev/null
+++ b/man/man8/ntop_selinux.8
@@ -0,0 +1,143 @@
+.TH  "ntop_selinux"  "8"  "ntop" "dwalsh@redhat.com" "ntop SELinux Policy documentation"
+.SH "NAME"
+ntop_selinux \- Security Enhanced Linux Policy for the ntop processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B ntop
+(Network Top)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ntop policy is very flexible allowing users to setup their ntop processes in as secure a method as possible.
+.PP 
+The following file types are defined for ntop:
+
+
+.EX
+.PP
+.B ntop_etc_t 
+.EE
+
+- Set files with the ntop_etc_t type, if you want to store ntop files in the /etc directories.
+
+
+.EX
+.PP
+.B ntop_exec_t 
+.EE
+
+- Set files with the ntop_exec_t type, if you want to transition an executable to the ntop_t domain.
+
+
+.EX
+.PP
+.B ntop_initrc_exec_t 
+.EE
+
+- Set files with the ntop_initrc_exec_t type, if you want to transition an executable to the ntop_initrc_t domain.
+
+
+.EX
+.PP
+.B ntop_tmp_t 
+.EE
+
+- Set files with the ntop_tmp_t type, if you want to store ntop temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B ntop_var_lib_t 
+.EE
+
+- Set files with the ntop_var_lib_t type, if you want to store the ntop files under the /var/lib directory.
+
+
+.EX
+.PP
+.B ntop_var_run_t 
+.EE
+
+- Set files with the ntop_var_run_t type, if you want to store the ntop files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux ntop policy is very flexible allowing users to setup their ntop processes in as secure a method as possible.
+.PP 
+The following port types are defined for ntop:
+
+.EX
+.TP 5
+.B ntop_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ntop policy is very flexible allowing users to setup their ntop processes in as secure a method as possible.
+.PP 
+The following process types are defined for ntop:
+
+.EX
+.B ntop_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ntop(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/ntpd_selinux.8 b/man/man8/ntpd_selinux.8
new file mode 100644
index 0000000..515419d
--- /dev/null
+++ b/man/man8/ntpd_selinux.8
@@ -0,0 +1,189 @@
+.TH  "ntpd_selinux"  "8"  "ntpd" "dwalsh@redhat.com" "ntpd SELinux Policy documentation"
+.SH "NAME"
+ntpd_selinux \- Security Enhanced Linux Policy for the ntpd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ntpd policy is very flexible allowing users to setup their ntpd processes in as secure a method as possible.
+.PP 
+The following file types are defined for ntpd:
+
+
+.EX
+.PP
+.B ntp_drift_t 
+.EE
+
+- Set files with the ntp_drift_t type, if you want to treat the files as ntp drift data.
+
+.br
+.TP 5
+Paths: 
+/var/lib/ntp(/.*)?, /etc/ntp/data(/.*)?
+
+.EX
+.PP
+.B ntpd_exec_t 
+.EE
+
+- Set files with the ntpd_exec_t type, if you want to transition an executable to the ntpd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/ntpd, /etc/cron\.(daily|weekly)/ntp-server, /etc/cron\.(daily|weekly)/ntp-simple
+
+.EX
+.PP
+.B ntpd_initrc_exec_t 
+.EE
+
+- Set files with the ntpd_initrc_exec_t type, if you want to transition an executable to the ntpd_initrc_t domain.
+
+
+.EX
+.PP
+.B ntpd_key_t 
+.EE
+
+- Set files with the ntpd_key_t type, if you want to treat the files as ntpd key data.
+
+.br
+.TP 5
+Paths: 
+/etc/ntp/crypto(/.*)?, /etc/ntp/keys
+
+.EX
+.PP
+.B ntpd_log_t 
+.EE
+
+- Set files with the ntpd_log_t type, if you want to treat the data as ntpd log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/ntpstats(/.*)?, /var/log/xntpd.*, /var/log/ntp.*
+
+.EX
+.PP
+.B ntpd_tmp_t 
+.EE
+
+- Set files with the ntpd_tmp_t type, if you want to store ntpd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B ntpd_tmpfs_t 
+.EE
+
+- Set files with the ntpd_tmpfs_t type, if you want to store ntpd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B ntpd_unit_file_t 
+.EE
+
+- Set files with the ntpd_unit_file_t type, if you want to treat the files as ntpd unit content.
+
+.br
+.TP 5
+Paths: 
+/lib/systemd/system/ntpd\.service, /usr/lib/systemd/system/ntpd\.service
+
+.EX
+.PP
+.B ntpd_var_run_t 
+.EE
+
+- Set files with the ntpd_var_run_t type, if you want to store the ntpd files under the /run directory.
+
+
+.EX
+.PP
+.B ntpdate_exec_t 
+.EE
+
+- Set files with the ntpdate_exec_t type, if you want to transition an executable to the ntpdate_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux ntpd policy is very flexible allowing users to setup their ntpd processes in as secure a method as possible.
+.PP 
+The following port types are defined for ntpd:
+
+.EX
+.TP 5
+.B ntp_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ntpd policy is very flexible allowing users to setup their ntpd processes in as secure a method as possible.
+.PP 
+The following process types are defined for ntpd:
+
+.EX
+.B ntpd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ntpd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/numad_selinux.8 b/man/man8/numad_selinux.8
new file mode 100644
index 0000000..7a63255
--- /dev/null
+++ b/man/man8/numad_selinux.8
@@ -0,0 +1,101 @@
+.TH  "numad_selinux"  "8"  "numad" "dwalsh@redhat.com" "numad SELinux Policy documentation"
+.SH "NAME"
+numad_selinux \- Security Enhanced Linux Policy for the numad processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B numad
+(policy for numad)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux numad policy is very flexible allowing users to setup their numad processes in as secure a method as possible.
+.PP 
+The following file types are defined for numad:
+
+
+.EX
+.PP
+.B numad_exec_t 
+.EE
+
+- Set files with the numad_exec_t type, if you want to transition an executable to the numad_t domain.
+
+
+.EX
+.PP
+.B numad_unit_file_t 
+.EE
+
+- Set files with the numad_unit_file_t type, if you want to treat the files as numad unit content.
+
+
+.EX
+.PP
+.B numad_var_log_t 
+.EE
+
+- Set files with the numad_var_log_t type, if you want to treat the data as numad var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B numad_var_run_t 
+.EE
+
+- Set files with the numad_var_run_t type, if you want to store the numad files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux numad policy is very flexible allowing users to setup their numad processes in as secure a method as possible.
+.PP 
+The following process types are defined for numad:
+
+.EX
+.B numad_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), numad(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/nut_selinux.8 b/man/man8/nut_selinux.8
new file mode 100644
index 0000000..fe354e5
--- /dev/null
+++ b/man/man8/nut_selinux.8
@@ -0,0 +1,113 @@
+.TH  "nut_selinux"  "8"  "nut" "dwalsh@redhat.com" "nut SELinux Policy documentation"
+.SH "NAME"
+nut_selinux \- Security Enhanced Linux Policy for the nut processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B nut
+(nut - Network UPS Tools )
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux nut policy is very flexible allowing users to setup their nut processes in as secure a method as possible.
+.PP 
+The following file types are defined for nut:
+
+
+.EX
+.PP
+.B nut_conf_t 
+.EE
+
+- Set files with the nut_conf_t type, if you want to treat the files as nut configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B nut_upsd_exec_t 
+.EE
+
+- Set files with the nut_upsd_exec_t type, if you want to transition an executable to the nut_upsd_t domain.
+
+
+.EX
+.PP
+.B nut_upsdrvctl_exec_t 
+.EE
+
+- Set files with the nut_upsdrvctl_exec_t type, if you want to transition an executable to the nut_upsdrvctl_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/upsdrvctl, /sbin/upsdrvctl
+
+.EX
+.PP
+.B nut_upsmon_exec_t 
+.EE
+
+- Set files with the nut_upsmon_exec_t type, if you want to transition an executable to the nut_upsmon_t domain.
+
+
+.EX
+.PP
+.B nut_var_run_t 
+.EE
+
+- Set files with the nut_var_run_t type, if you want to store the nut files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux nut policy is very flexible allowing users to setup their nut processes in as secure a method as possible.
+.PP 
+The following process types are defined for nut:
+
+.EX
+.B nut_upsd_t, nut_upsmon_t, nut_upsdrvctl_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), nut(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/nx_selinux.8 b/man/man8/nx_selinux.8
new file mode 100644
index 0000000..ef2c5aa
--- /dev/null
+++ b/man/man8/nx_selinux.8
@@ -0,0 +1,121 @@
+.TH  "nx_selinux"  "8"  "nx" "dwalsh@redhat.com" "nx SELinux Policy documentation"
+.SH "NAME"
+nx_selinux \- Security Enhanced Linux Policy for the nx processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B nx
+(NX remote desktop)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux nx policy is very flexible allowing users to setup their nx processes in as secure a method as possible.
+.PP 
+The following file types are defined for nx:
+
+
+.EX
+.PP
+.B nx_server_exec_t 
+.EE
+
+- Set files with the nx_server_exec_t type, if you want to transition an executable to the nx_server_t domain.
+
+.br
+.TP 5
+Paths: 
+/opt/NX/bin/nxserver, /usr/NX/bin/nxserver, /usr/libexec/nx/nxserver
+
+.EX
+.PP
+.B nx_server_home_ssh_t 
+.EE
+
+- Set files with the nx_server_home_ssh_t type, if you want to treat the files as nx server home ssh data.
+
+.br
+.TP 5
+Paths: 
+/opt/NX/home/nx/\.ssh(/.*)?, /usr/NX/home/nx/\.ssh(/.*)?, /var/lib/nxserver/home/.ssh(/.*)?
+
+.EX
+.PP
+.B nx_server_tmp_t 
+.EE
+
+- Set files with the nx_server_tmp_t type, if you want to store nx server temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B nx_server_var_lib_t 
+.EE
+
+- Set files with the nx_server_var_lib_t type, if you want to store the nx server files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/usr/NX/home(/.*)?, /opt/NX/home(/.*)?, /var/lib/nxserver(/.*)?
+
+.EX
+.PP
+.B nx_server_var_run_t 
+.EE
+
+- Set files with the nx_server_var_run_t type, if you want to store the nx server files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux nx policy is very flexible allowing users to setup their nx processes in as secure a method as possible.
+.PP 
+The following process types are defined for nx:
+
+.EX
+.B nx_server_t, nx_server_ssh_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), nx(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/nx_server_selinux.8 b/man/man8/nx_server_selinux.8
new file mode 100644
index 0000000..2746ea3
--- /dev/null
+++ b/man/man8/nx_server_selinux.8
@@ -0,0 +1,56 @@
+.TH  "nx_server_selinux"  "8"  "nx_server" "mgrepl@redhat.com" "nx_server SELinux Policy documentation"
+.SH "NAME"
+nx_server_r \- \fBnx_server user role\fP - Security Enhanced Linux Policy 
+
+.SH DESCRIPTION
+
+SELinux supports Roles Based Access Control, some Linux roles are login roles, while other roles need to be transition to. 
+
+Note: The examples in the man page will user the staff_u user.
+
+Non login roles are usually used for administrative tasks.
+
+Roles usually have default types assigned to them. 
+
+The default type for the nx_server_r role is nx_server_t.
+
+You can use the 
+.B newrole 
+program to transition directly to this role.
+
+.B newrole -r nx_server_r -t nx_server_t
+
+.B sudo 
+can also be setup to transition to this role using the visudo command.
+
+USERNAME ALL=(ALL) ROLE=nx_server_r TYPE=nx_server_t COMMAND
+.br
+sudo will run COMMAND as staff_u:nx_server_r:nx_server_t:LEVEL
+
+If you want to use a non login role, you need to make sure the SELinux user you are using can reach this role.
+
+You can see all of the assigned SELinux roles using the following
+
+.B semanage user -l
+
+If you wanted to add nx_server_r to the staff_u user, you would execute:
+
+.B $ semanage user -m -R 'staff_r nx_server_r' staff_u 
+
+
+.SH "COMMANDS"
+
+.B semanage login
+can also be used to manipulate the Linux User to SELinux User mappings
+
+.B semanage user
+can also be used to manipulate SELinux user definitions.
+
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genuserman.py.
+
+.SH "SEE ALSO"
+selinux(8), semanage(8).
diff --git a/man/man8/obex_selinux.8 b/man/man8/obex_selinux.8
new file mode 100644
index 0000000..a6b6598
--- /dev/null
+++ b/man/man8/obex_selinux.8
@@ -0,0 +1,77 @@
+.TH  "obex_selinux"  "8"  "obex" "dwalsh@redhat.com" "obex SELinux Policy documentation"
+.SH "NAME"
+obex_selinux \- Security Enhanced Linux Policy for the obex processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B obex
+(SELinux policy for obex-data-server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux obex policy is very flexible allowing users to setup their obex processes in as secure a method as possible.
+.PP 
+The following file types are defined for obex:
+
+
+.EX
+.PP
+.B obex_exec_t 
+.EE
+
+- Set files with the obex_exec_t type, if you want to transition an executable to the obex_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux obex policy is very flexible allowing users to setup their obex processes in as secure a method as possible.
+.PP 
+The following process types are defined for obex:
+
+.EX
+.B obex_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), obex(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/oddjob_selinux.8 b/man/man8/oddjob_selinux.8
new file mode 100644
index 0000000..88a1ce7
--- /dev/null
+++ b/man/man8/oddjob_selinux.8
@@ -0,0 +1,101 @@
+.TH  "oddjob_selinux"  "8"  "oddjob" "dwalsh@redhat.com" "oddjob SELinux Policy documentation"
+.SH "NAME"
+oddjob_selinux \- Security Enhanced Linux Policy for the oddjob processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B oddjob
+(
+Oddjob provides a mechanism by which unprivileged applications can
+request that specified privileged operations be performed on their
+behalf.
+)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux oddjob policy is very flexible allowing users to setup their oddjob processes in as secure a method as possible.
+.PP 
+The following file types are defined for oddjob:
+
+
+.EX
+.PP
+.B oddjob_exec_t 
+.EE
+
+- Set files with the oddjob_exec_t type, if you want to transition an executable to the oddjob_t domain.
+
+
+.EX
+.PP
+.B oddjob_mkhomedir_exec_t 
+.EE
+
+- Set files with the oddjob_mkhomedir_exec_t type, if you want to transition an executable to the oddjob_mkhomedir_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/libexec/oddjob/mkhomedir, /usr/lib/oddjob/mkhomedir
+
+.EX
+.PP
+.B oddjob_var_run_t 
+.EE
+
+- Set files with the oddjob_var_run_t type, if you want to store the oddjob files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux oddjob policy is very flexible allowing users to setup their oddjob processes in as secure a method as possible.
+.PP 
+The following process types are defined for oddjob:
+
+.EX
+.B oddjob_mkhomedir_t, oddjob_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), oddjob(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/openct_selinux.8 b/man/man8/openct_selinux.8
new file mode 100644
index 0000000..b21e586
--- /dev/null
+++ b/man/man8/openct_selinux.8
@@ -0,0 +1,89 @@
+.TH  "openct_selinux"  "8"  "openct" "dwalsh@redhat.com" "openct SELinux Policy documentation"
+.SH "NAME"
+openct_selinux \- Security Enhanced Linux Policy for the openct processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B openct
+(Service for handling smart card readers)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux openct policy is very flexible allowing users to setup their openct processes in as secure a method as possible.
+.PP 
+The following file types are defined for openct:
+
+
+.EX
+.PP
+.B openct_exec_t 
+.EE
+
+- Set files with the openct_exec_t type, if you want to transition an executable to the openct_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/ifdhandler, /usr/sbin/openct-control
+
+.EX
+.PP
+.B openct_var_run_t 
+.EE
+
+- Set files with the openct_var_run_t type, if you want to store the openct files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux openct policy is very flexible allowing users to setup their openct processes in as secure a method as possible.
+.PP 
+The following process types are defined for openct:
+
+.EX
+.B openct_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), openct(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/openvpn_selinux.8 b/man/man8/openvpn_selinux.8
new file mode 100644
index 0000000..9a9b8b8
--- /dev/null
+++ b/man/man8/openvpn_selinux.8
@@ -0,0 +1,166 @@
+.TH  "openvpn_selinux"  "8"  "openvpn" "dwalsh@redhat.com" "openvpn SELinux Policy documentation"
+.SH "NAME"
+openvpn_selinux \- Security Enhanced Linux Policy for the openvpn processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B openvpn
+(full-featured SSL VPN solution)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  openvpn policy is extremely flexible and has several booleans that allow you to manipulate the policy and run openvpn with the tightest access possible.
+
+
+.PP
+If you want to allow openvpn to read home directorie, you must turn on the openvpn_enable_homedirs boolean.
+
+.EX
+.B setsebool -P openvpn_enable_homedirs 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux openvpn policy is very flexible allowing users to setup their openvpn processes in as secure a method as possible.
+.PP 
+The following file types are defined for openvpn:
+
+
+.EX
+.PP
+.B openvpn_etc_rw_t 
+.EE
+
+- Set files with the openvpn_etc_rw_t type, if you want to treat the files as openvpn etc read/write content.
+
+
+.EX
+.PP
+.B openvpn_etc_t 
+.EE
+
+- Set files with the openvpn_etc_t type, if you want to store openvpn files in the /etc directories.
+
+
+.EX
+.PP
+.B openvpn_exec_t 
+.EE
+
+- Set files with the openvpn_exec_t type, if you want to transition an executable to the openvpn_t domain.
+
+
+.EX
+.PP
+.B openvpn_initrc_exec_t 
+.EE
+
+- Set files with the openvpn_initrc_exec_t type, if you want to transition an executable to the openvpn_initrc_t domain.
+
+
+.EX
+.PP
+.B openvpn_tmp_t 
+.EE
+
+- Set files with the openvpn_tmp_t type, if you want to store openvpn temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B openvpn_var_log_t 
+.EE
+
+- Set files with the openvpn_var_log_t type, if you want to treat the data as openvpn var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B openvpn_var_run_t 
+.EE
+
+- Set files with the openvpn_var_run_t type, if you want to store the openvpn files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux openvpn policy is very flexible allowing users to setup their openvpn processes in as secure a method as possible.
+.PP 
+The following port types are defined for openvpn:
+
+.EX
+.TP 5
+.B openvpn_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux openvpn policy is very flexible allowing users to setup their openvpn processes in as secure a method as possible.
+.PP 
+The following process types are defined for openvpn:
+
+.EX
+.B openvpn_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), openvpn(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/pacemaker_selinux.8 b/man/man8/pacemaker_selinux.8
new file mode 100644
index 0000000..a43fb5b
--- /dev/null
+++ b/man/man8/pacemaker_selinux.8
@@ -0,0 +1,113 @@
+.TH  "pacemaker_selinux"  "8"  "pacemaker" "dwalsh@redhat.com" "pacemaker SELinux Policy documentation"
+.SH "NAME"
+pacemaker_selinux \- Security Enhanced Linux Policy for the pacemaker processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B pacemaker
+(policy for pacemaker)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux pacemaker policy is very flexible allowing users to setup their pacemaker processes in as secure a method as possible.
+.PP 
+The following file types are defined for pacemaker:
+
+
+.EX
+.PP
+.B pacemaker_exec_t 
+.EE
+
+- Set files with the pacemaker_exec_t type, if you want to transition an executable to the pacemaker_t domain.
+
+
+.EX
+.PP
+.B pacemaker_initrc_exec_t 
+.EE
+
+- Set files with the pacemaker_initrc_exec_t type, if you want to transition an executable to the pacemaker_initrc_t domain.
+
+
+.EX
+.PP
+.B pacemaker_unit_file_t 
+.EE
+
+- Set files with the pacemaker_unit_file_t type, if you want to treat the files as pacemaker unit content.
+
+
+.EX
+.PP
+.B pacemaker_var_lib_t 
+.EE
+
+- Set files with the pacemaker_var_lib_t type, if you want to store the pacemaker files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/pengine(/.*)?, /var/lib/heartbeat/crm(/.*)?
+
+.EX
+.PP
+.B pacemaker_var_run_t 
+.EE
+
+- Set files with the pacemaker_var_run_t type, if you want to store the pacemaker files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux pacemaker policy is very flexible allowing users to setup their pacemaker processes in as secure a method as possible.
+.PP 
+The following process types are defined for pacemaker:
+
+.EX
+.B pacemaker_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), pacemaker(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/pads_selinux.8 b/man/man8/pads_selinux.8
new file mode 100644
index 0000000..f2bc8e8
--- /dev/null
+++ b/man/man8/pads_selinux.8
@@ -0,0 +1,105 @@
+.TH  "pads_selinux"  "8"  "pads" "dwalsh@redhat.com" "pads SELinux Policy documentation"
+.SH "NAME"
+pads_selinux \- Security Enhanced Linux Policy for the pads processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B pads
+(Passive Asset Detection System)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux pads policy is very flexible allowing users to setup their pads processes in as secure a method as possible.
+.PP 
+The following file types are defined for pads:
+
+
+.EX
+.PP
+.B pads_config_t 
+.EE
+
+- Set files with the pads_config_t type, if you want to treat the files as pads configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/etc/pads-assets.csv, /etc/pads-ether-codes, /etc/pads\.conf, /etc/pads-signature-list
+
+.EX
+.PP
+.B pads_exec_t 
+.EE
+
+- Set files with the pads_exec_t type, if you want to transition an executable to the pads_t domain.
+
+
+.EX
+.PP
+.B pads_initrc_exec_t 
+.EE
+
+- Set files with the pads_initrc_exec_t type, if you want to transition an executable to the pads_initrc_t domain.
+
+
+.EX
+.PP
+.B pads_var_run_t 
+.EE
+
+- Set files with the pads_var_run_t type, if you want to store the pads files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux pads policy is very flexible allowing users to setup their pads processes in as secure a method as possible.
+.PP 
+The following process types are defined for pads:
+
+.EX
+.B pads_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), pads(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/passenger_selinux.8 b/man/man8/passenger_selinux.8
new file mode 100644
index 0000000..872ce91
--- /dev/null
+++ b/man/man8/passenger_selinux.8
@@ -0,0 +1,117 @@
+.TH  "passenger_selinux"  "8"  "passenger" "dwalsh@redhat.com" "passenger SELinux Policy documentation"
+.SH "NAME"
+passenger_selinux \- Security Enhanced Linux Policy for the passenger processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B passenger
+(Ruby on rails deployment for Apache and Nginx servers)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux passenger policy is very flexible allowing users to setup their passenger processes in as secure a method as possible.
+.PP 
+The following file types are defined for passenger:
+
+
+.EX
+.PP
+.B passenger_exec_t 
+.EE
+
+- Set files with the passenger_exec_t type, if you want to transition an executable to the passenger_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/ruby/gems/.*/passenger-.*/agents/PassengerLoggingAgent, /usr/lib/ruby/gems/.*/passenger-.*/agents/apache2/PassengerHelperAgent, /usr/lib/ruby/gems/.*/passenger-.*/agents/PassengerWatchdog, /usr/lib/ruby/gems/.*/passenger-.*/ext/apache2/ApplicationPoolServerExecutable
+
+.EX
+.PP
+.B passenger_log_t 
+.EE
+
+- Set files with the passenger_log_t type, if you want to treat the data as passenger log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/passenger.*, /var/log/passenger(/.*)?
+
+.EX
+.PP
+.B passenger_tmp_t 
+.EE
+
+- Set files with the passenger_tmp_t type, if you want to store passenger temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B passenger_var_lib_t 
+.EE
+
+- Set files with the passenger_var_lib_t type, if you want to store the passenger files under the /var/lib directory.
+
+
+.EX
+.PP
+.B passenger_var_run_t 
+.EE
+
+- Set files with the passenger_var_run_t type, if you want to store the passenger files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux passenger policy is very flexible allowing users to setup their passenger processes in as secure a method as possible.
+.PP 
+The following process types are defined for passenger:
+
+.EX
+.B passenger_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), passenger(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/passwd_selinux.8 b/man/man8/passwd_selinux.8
new file mode 100644
index 0000000..71d4cc4
--- /dev/null
+++ b/man/man8/passwd_selinux.8
@@ -0,0 +1,87 @@
+.TH  "passwd_selinux"  "8"  "passwd" "dwalsh@redhat.com" "passwd SELinux Policy documentation"
+.SH "NAME"
+passwd_selinux \- Security Enhanced Linux Policy for the passwd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux passwd policy is very flexible allowing users to setup their passwd processes in as secure a method as possible.
+.PP 
+The following file types are defined for passwd:
+
+
+.EX
+.PP
+.B passwd_exec_t 
+.EE
+
+- Set files with the passwd_exec_t type, if you want to transition an executable to the passwd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/passwd, /usr/bin/chage
+
+.EX
+.PP
+.B passwd_file_t 
+.EE
+
+- Set files with the passwd_file_t type, if you want to treat the files as passwd content.
+
+.br
+.TP 5
+Paths: 
+/etc/passwd\.OLD, /etc/ptmptmp, /etc/passwd-?, /etc/group-?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux passwd policy is very flexible allowing users to setup their passwd processes in as secure a method as possible.
+.PP 
+The following process types are defined for passwd:
+
+.EX
+.B passwd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), passwd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/pcscd_selinux.8 b/man/man8/pcscd_selinux.8
new file mode 100644
index 0000000..07f91c9
--- /dev/null
+++ b/man/man8/pcscd_selinux.8
@@ -0,0 +1,89 @@
+.TH  "pcscd_selinux"  "8"  "pcscd" "dwalsh@redhat.com" "pcscd SELinux Policy documentation"
+.SH "NAME"
+pcscd_selinux \- Security Enhanced Linux Policy for the pcscd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B pcscd
+(PCSC smart card service)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux pcscd policy is very flexible allowing users to setup their pcscd processes in as secure a method as possible.
+.PP 
+The following file types are defined for pcscd:
+
+
+.EX
+.PP
+.B pcscd_exec_t 
+.EE
+
+- Set files with the pcscd_exec_t type, if you want to transition an executable to the pcscd_t domain.
+
+
+.EX
+.PP
+.B pcscd_var_run_t 
+.EE
+
+- Set files with the pcscd_var_run_t type, if you want to store the pcscd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/pcscd\.pid, /var/run/pcscd\.comm, /var/run/pcscd\.events(/.*)?, /var/run/pcscd\.pub, /var/run/pcscd(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux pcscd policy is very flexible allowing users to setup their pcscd processes in as secure a method as possible.
+.PP 
+The following process types are defined for pcscd:
+
+.EX
+.B pcscd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), pcscd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/pegasus_selinux.8 b/man/man8/pegasus_selinux.8
new file mode 100644
index 0000000..b015c87
--- /dev/null
+++ b/man/man8/pegasus_selinux.8
@@ -0,0 +1,162 @@
+.TH  "pegasus_selinux"  "8"  "pegasus" "dwalsh@redhat.com" "pegasus SELinux Policy documentation"
+.SH "NAME"
+pegasus_selinux \- Security Enhanced Linux Policy for the pegasus processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B pegasus
+(The Open Group Pegasus CIM/WBEM Server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux pegasus policy is very flexible allowing users to setup their pegasus processes in as secure a method as possible.
+.PP 
+The following file types are defined for pegasus:
+
+
+.EX
+.PP
+.B pegasus_conf_t 
+.EE
+
+- Set files with the pegasus_conf_t type, if you want to treat the files as pegasus configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B pegasus_data_t 
+.EE
+
+- Set files with the pegasus_data_t type, if you want to treat the files as pegasus content.
+
+.br
+.TP 5
+Paths: 
+/etc/Pegasus/pegasus_current\.conf, /var/lib/Pegasus(/.*)?
+
+.EX
+.PP
+.B pegasus_exec_t 
+.EE
+
+- Set files with the pegasus_exec_t type, if you want to transition an executable to the pegasus_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/init_repository, /usr/sbin/cimserver
+
+.EX
+.PP
+.B pegasus_mof_t 
+.EE
+
+- Set files with the pegasus_mof_t type, if you want to treat the files as pegasus mof data.
+
+
+.EX
+.PP
+.B pegasus_tmp_t 
+.EE
+
+- Set files with the pegasus_tmp_t type, if you want to store pegasus temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B pegasus_var_run_t 
+.EE
+
+- Set files with the pegasus_var_run_t type, if you want to store the pegasus files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux pegasus policy is very flexible allowing users to setup their pegasus processes in as secure a method as possible.
+.PP 
+The following port types are defined for pegasus:
+
+.EX
+.TP 5
+.B pegasus_http_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B pegasus_https_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux pegasus policy is very flexible allowing users to setup their pegasus processes in as secure a method as possible.
+.PP 
+The following process types are defined for pegasus:
+
+.EX
+.B pegasus_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), pegasus(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/ping_selinux.8 b/man/man8/ping_selinux.8
new file mode 100644
index 0000000..bda0235
--- /dev/null
+++ b/man/man8/ping_selinux.8
@@ -0,0 +1,148 @@
+.TH  "ping_selinux"  "8"  "ping" "dwalsh@redhat.com" "ping SELinux Policy documentation"
+.SH "NAME"
+ping_selinux \- Security Enhanced Linux Policy for the ping processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  ping policy is extremely flexible and has several booleans that allow you to manipulate the policy and run ping with the tightest access possible.
+
+
+.PP
+If you want to control users use of ping and tracerout, you must turn on the user_ping boolean.
+
+.EX
+.B setsebool -P user_ping 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ping policy is very flexible allowing users to setup their ping processes in as secure a method as possible.
+.PP 
+The following file types are defined for ping:
+
+
+.EX
+.PP
+.B ping_exec_t 
+.EE
+
+- Set files with the ping_exec_t type, if you want to transition an executable to the ping_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/ping.*, /usr/sbin/hping2, /usr/sbin/fping.*, /bin/ping.*, /usr/sbin/send_arp
+
+.EX
+.PP
+.B pingd_etc_t 
+.EE
+
+- Set files with the pingd_etc_t type, if you want to store pingd files in the /etc directories.
+
+
+.EX
+.PP
+.B pingd_exec_t 
+.EE
+
+- Set files with the pingd_exec_t type, if you want to transition an executable to the pingd_t domain.
+
+
+.EX
+.PP
+.B pingd_initrc_exec_t 
+.EE
+
+- Set files with the pingd_initrc_exec_t type, if you want to transition an executable to the pingd_initrc_t domain.
+
+
+.EX
+.PP
+.B pingd_modules_t 
+.EE
+
+- Set files with the pingd_modules_t type, if you want to treat the files as pingd modules.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux ping policy is very flexible allowing users to setup their ping processes in as secure a method as possible.
+.PP 
+The following port types are defined for ping:
+
+.EX
+.TP 5
+.B pingd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ping policy is very flexible allowing users to setup their ping processes in as secure a method as possible.
+.PP 
+The following process types are defined for ping:
+
+.EX
+.B ping_t, pingd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ping(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/pingd_selinux.8 b/man/man8/pingd_selinux.8
new file mode 100644
index 0000000..1259587
--- /dev/null
+++ b/man/man8/pingd_selinux.8
@@ -0,0 +1,154 @@
+.TH  "pingd_selinux"  "8"  "pingd" "dwalsh@redhat.com" "pingd SELinux Policy documentation"
+.SH "NAME"
+pingd_selinux \- Security Enhanced Linux Policy for the pingd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B pingd
+(Pingd of the Whatsup cluster node up/down detection utility)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  pingd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run pingd with the tightest access possible.
+
+
+.PP
+If you want to control users use of ping and tracerout, you must turn on the user_ping boolean.
+
+.EX
+.B setsebool -P user_ping 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux pingd policy is very flexible allowing users to setup their pingd processes in as secure a method as possible.
+.PP 
+The following file types are defined for pingd:
+
+
+.EX
+.PP
+.B ping_exec_t 
+.EE
+
+- Set files with the ping_exec_t type, if you want to transition an executable to the ping_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/ping.*, /usr/sbin/hping2, /usr/sbin/fping.*, /bin/ping.*, /usr/sbin/send_arp
+
+.EX
+.PP
+.B pingd_etc_t 
+.EE
+
+- Set files with the pingd_etc_t type, if you want to store pingd files in the /etc directories.
+
+
+.EX
+.PP
+.B pingd_exec_t 
+.EE
+
+- Set files with the pingd_exec_t type, if you want to transition an executable to the pingd_t domain.
+
+
+.EX
+.PP
+.B pingd_initrc_exec_t 
+.EE
+
+- Set files with the pingd_initrc_exec_t type, if you want to transition an executable to the pingd_initrc_t domain.
+
+
+.EX
+.PP
+.B pingd_modules_t 
+.EE
+
+- Set files with the pingd_modules_t type, if you want to treat the files as pingd modules.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux pingd policy is very flexible allowing users to setup their pingd processes in as secure a method as possible.
+.PP 
+The following port types are defined for pingd:
+
+.EX
+.TP 5
+.B pingd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux pingd policy is very flexible allowing users to setup their pingd processes in as secure a method as possible.
+.PP 
+The following process types are defined for pingd:
+
+.EX
+.B ping_t, pingd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), pingd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/piranha_selinux.8 b/man/man8/piranha_selinux.8
new file mode 100644
index 0000000..cbd1451
--- /dev/null
+++ b/man/man8/piranha_selinux.8
@@ -0,0 +1,238 @@
+.TH  "piranha_selinux"  "8"  "piranha" "dwalsh@redhat.com" "piranha SELinux Policy documentation"
+.SH "NAME"
+piranha_selinux \- Security Enhanced Linux Policy for the piranha processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B piranha
+(policy for piranha)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  piranha policy is extremely flexible and has several booleans that allow you to manipulate the policy and run piranha with the tightest access possible.
+
+
+.PP
+If you want to allow piranha-lvs domain to connect to the network using TCP, you must turn on the piranha_lvs_can_network_connect boolean.
+
+.EX
+.B setsebool -P piranha_lvs_can_network_connect 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux piranha policy is very flexible allowing users to setup their piranha processes in as secure a method as possible.
+.PP 
+The following file types are defined for piranha:
+
+
+.EX
+.PP
+.B piranha_etc_rw_t 
+.EE
+
+- Set files with the piranha_etc_rw_t type, if you want to treat the files as piranha etc read/write content.
+
+
+.EX
+.PP
+.B piranha_fos_exec_t 
+.EE
+
+- Set files with the piranha_fos_exec_t type, if you want to transition an executable to the piranha_fos_t domain.
+
+
+.EX
+.PP
+.B piranha_fos_var_run_t 
+.EE
+
+- Set files with the piranha_fos_var_run_t type, if you want to store the piranha fos files under the /run directory.
+
+
+.EX
+.PP
+.B piranha_log_t 
+.EE
+
+- Set files with the piranha_log_t type, if you want to treat the data as piranha log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B piranha_lvs_exec_t 
+.EE
+
+- Set files with the piranha_lvs_exec_t type, if you want to transition an executable to the piranha_lvs_t domain.
+
+
+.EX
+.PP
+.B piranha_lvs_var_run_t 
+.EE
+
+- Set files with the piranha_lvs_var_run_t type, if you want to store the piranha lvs files under the /run directory.
+
+
+.EX
+.PP
+.B piranha_pulse_exec_t 
+.EE
+
+- Set files with the piranha_pulse_exec_t type, if you want to transition an executable to the piranha_pulse_t domain.
+
+
+.EX
+.PP
+.B piranha_pulse_initrc_exec_t 
+.EE
+
+- Set files with the piranha_pulse_initrc_exec_t type, if you want to transition an executable to the piranha_pulse_initrc_t domain.
+
+
+.EX
+.PP
+.B piranha_pulse_var_run_t 
+.EE
+
+- Set files with the piranha_pulse_var_run_t type, if you want to store the piranha pulse files under the /run directory.
+
+
+.EX
+.PP
+.B piranha_web_conf_t 
+.EE
+
+- Set files with the piranha_web_conf_t type, if you want to treat the files as piranha web configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/luci/etc(/.*)?, /var/lib/luci/cert(/.*)?
+
+.EX
+.PP
+.B piranha_web_data_t 
+.EE
+
+- Set files with the piranha_web_data_t type, if you want to treat the files as piranha web content.
+
+
+.EX
+.PP
+.B piranha_web_exec_t 
+.EE
+
+- Set files with the piranha_web_exec_t type, if you want to transition an executable to the piranha_web_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/piranha_gui, /usr/bin/paster
+
+.EX
+.PP
+.B piranha_web_tmp_t 
+.EE
+
+- Set files with the piranha_web_tmp_t type, if you want to store piranha web temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B piranha_web_tmpfs_t 
+.EE
+
+- Set files with the piranha_web_tmpfs_t type, if you want to store piranha web files on a tmpfs file system.
+
+
+.EX
+.PP
+.B piranha_web_var_run_t 
+.EE
+
+- Set files with the piranha_web_var_run_t type, if you want to store the piranha web files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux piranha policy is very flexible allowing users to setup their piranha processes in as secure a method as possible.
+.PP 
+The following port types are defined for piranha:
+
+.EX
+.TP 5
+.B piranha_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux piranha policy is very flexible allowing users to setup their piranha processes in as secure a method as possible.
+.PP 
+The following process types are defined for piranha:
+
+.EX
+.B piranha_pulse_t, piranha_fos_t, piranha_lvs_t, piranha_web_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), piranha(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/pki_selinux.8 b/man/man8/pki_selinux.8
new file mode 100644
index 0000000..2272c46
--- /dev/null
+++ b/man/man8/pki_selinux.8
@@ -0,0 +1,504 @@
+.TH  "pki_selinux"  "8"  "pki" "dwalsh@redhat.com" "pki SELinux Policy documentation"
+.SH "NAME"
+pki_selinux \- Security Enhanced Linux Policy for the pki processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux pki policy is very flexible allowing users to setup their pki processes in as secure a method as possible.
+.PP 
+The following file types are defined for pki:
+
+
+.EX
+.PP
+.B pki_ca_etc_rw_t 
+.EE
+
+- Set files with the pki_ca_etc_rw_t type, if you want to treat the files as pki ca etc read/write content.
+
+.br
+.TP 5
+Paths: 
+/etc/pki-ca(/.*)?, /etc/sysconfig/pki/ca(/.*)?
+
+.EX
+.PP
+.B pki_ca_exec_t 
+.EE
+
+- Set files with the pki_ca_exec_t type, if you want to transition an executable to the pki_ca_t domain.
+
+
+.EX
+.PP
+.B pki_ca_log_t 
+.EE
+
+- Set files with the pki_ca_log_t type, if you want to treat the data as pki ca log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B pki_ca_tomcat_exec_t 
+.EE
+
+- Set files with the pki_ca_tomcat_exec_t type, if you want to transition an executable to the pki_ca_tomcat_t domain.
+
+
+.EX
+.PP
+.B pki_ca_var_lib_t 
+.EE
+
+- Set files with the pki_ca_var_lib_t type, if you want to store the pki ca files under the /var/lib directory.
+
+
+.EX
+.PP
+.B pki_ca_var_run_t 
+.EE
+
+- Set files with the pki_ca_var_run_t type, if you want to store the pki ca files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/pki-ca.pid, /var/run/pki/ca(/.*)?
+
+.EX
+.PP
+.B pki_common_dev_t 
+.EE
+
+- Set files with the pki_common_dev_t type, if you want to treat the files as pki common dev data.
+
+
+.EX
+.PP
+.B pki_common_t 
+.EE
+
+- Set files with the pki_common_t type, if you want to treat the files as pki common data.
+
+
+.EX
+.PP
+.B pki_kra_etc_rw_t 
+.EE
+
+- Set files with the pki_kra_etc_rw_t type, if you want to treat the files as pki kra etc read/write content.
+
+.br
+.TP 5
+Paths: 
+/etc/pki-kra(/.*)?, /etc/sysconfig/pki/kra(/.*)?
+
+.EX
+.PP
+.B pki_kra_exec_t 
+.EE
+
+- Set files with the pki_kra_exec_t type, if you want to transition an executable to the pki_kra_t domain.
+
+
+.EX
+.PP
+.B pki_kra_log_t 
+.EE
+
+- Set files with the pki_kra_log_t type, if you want to treat the data as pki kra log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B pki_kra_tomcat_exec_t 
+.EE
+
+- Set files with the pki_kra_tomcat_exec_t type, if you want to transition an executable to the pki_kra_tomcat_t domain.
+
+
+.EX
+.PP
+.B pki_kra_var_lib_t 
+.EE
+
+- Set files with the pki_kra_var_lib_t type, if you want to store the pki kra files under the /var/lib directory.
+
+
+.EX
+.PP
+.B pki_kra_var_run_t 
+.EE
+
+- Set files with the pki_kra_var_run_t type, if you want to store the pki kra files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/pki-kra.pid, /var/run/pki/kra(/.*)?
+
+.EX
+.PP
+.B pki_ocsp_etc_rw_t 
+.EE
+
+- Set files with the pki_ocsp_etc_rw_t type, if you want to treat the files as pki ocsp etc read/write content.
+
+.br
+.TP 5
+Paths: 
+/etc/pki-ocsp(/.*)?, /etc/sysconfig/pki/ocsp(/.*)?
+
+.EX
+.PP
+.B pki_ocsp_exec_t 
+.EE
+
+- Set files with the pki_ocsp_exec_t type, if you want to transition an executable to the pki_ocsp_t domain.
+
+
+.EX
+.PP
+.B pki_ocsp_log_t 
+.EE
+
+- Set files with the pki_ocsp_log_t type, if you want to treat the data as pki ocsp log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B pki_ocsp_tomcat_exec_t 
+.EE
+
+- Set files with the pki_ocsp_tomcat_exec_t type, if you want to transition an executable to the pki_ocsp_tomcat_t domain.
+
+
+.EX
+.PP
+.B pki_ocsp_var_lib_t 
+.EE
+
+- Set files with the pki_ocsp_var_lib_t type, if you want to store the pki ocsp files under the /var/lib directory.
+
+
+.EX
+.PP
+.B pki_ocsp_var_run_t 
+.EE
+
+- Set files with the pki_ocsp_var_run_t type, if you want to store the pki ocsp files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/pki-ocsp.pid, /var/run/pki/ocsp(/.*)?
+
+.EX
+.PP
+.B pki_ra_etc_rw_t 
+.EE
+
+- Set files with the pki_ra_etc_rw_t type, if you want to treat the files as pki ra etc read/write content.
+
+.br
+.TP 5
+Paths: 
+/etc/sysconfig/pki/ra(/.*)?, /etc/pki-ra(/.*)?
+
+.EX
+.PP
+.B pki_ra_exec_t 
+.EE
+
+- Set files with the pki_ra_exec_t type, if you want to transition an executable to the pki_ra_t domain.
+
+
+.EX
+.PP
+.B pki_ra_log_t 
+.EE
+
+- Set files with the pki_ra_log_t type, if you want to treat the data as pki ra log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B pki_ra_script_exec_t 
+.EE
+
+- Set files with the pki_ra_script_exec_t type, if you want to transition an executable to the pki_ra_script_t domain.
+
+
+.EX
+.PP
+.B pki_ra_tomcat_exec_t 
+.EE
+
+- Set files with the pki_ra_tomcat_exec_t type, if you want to transition an executable to the pki_ra_tomcat_t domain.
+
+
+.EX
+.PP
+.B pki_ra_var_lib_t 
+.EE
+
+- Set files with the pki_ra_var_lib_t type, if you want to store the pki ra files under the /var/lib directory.
+
+
+.EX
+.PP
+.B pki_ra_var_run_t 
+.EE
+
+- Set files with the pki_ra_var_run_t type, if you want to store the pki ra files under the /run directory.
+
+
+.EX
+.PP
+.B pki_tks_etc_rw_t 
+.EE
+
+- Set files with the pki_tks_etc_rw_t type, if you want to treat the files as pki tks etc read/write content.
+
+.br
+.TP 5
+Paths: 
+/etc/sysconfig/pki/tks(/.*)?, /etc/pki-tks(/.*)?
+
+.EX
+.PP
+.B pki_tks_exec_t 
+.EE
+
+- Set files with the pki_tks_exec_t type, if you want to transition an executable to the pki_tks_t domain.
+
+
+.EX
+.PP
+.B pki_tks_log_t 
+.EE
+
+- Set files with the pki_tks_log_t type, if you want to treat the data as pki tks log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B pki_tks_tomcat_exec_t 
+.EE
+
+- Set files with the pki_tks_tomcat_exec_t type, if you want to transition an executable to the pki_tks_tomcat_t domain.
+
+
+.EX
+.PP
+.B pki_tks_var_lib_t 
+.EE
+
+- Set files with the pki_tks_var_lib_t type, if you want to store the pki tks files under the /var/lib directory.
+
+
+.EX
+.PP
+.B pki_tks_var_run_t 
+.EE
+
+- Set files with the pki_tks_var_run_t type, if you want to store the pki tks files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/pki-tks.pid, /var/run/pki/tks(/.*)?
+
+.EX
+.PP
+.B pki_tps_etc_rw_t 
+.EE
+
+- Set files with the pki_tps_etc_rw_t type, if you want to treat the files as pki tps etc read/write content.
+
+.br
+.TP 5
+Paths: 
+/etc/sysconfig/pki/tps(/.*)?, /etc/pki-tps(/.*)?
+
+.EX
+.PP
+.B pki_tps_exec_t 
+.EE
+
+- Set files with the pki_tps_exec_t type, if you want to transition an executable to the pki_tps_t domain.
+
+
+.EX
+.PP
+.B pki_tps_log_t 
+.EE
+
+- Set files with the pki_tps_log_t type, if you want to treat the data as pki tps log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B pki_tps_script_exec_t 
+.EE
+
+- Set files with the pki_tps_script_exec_t type, if you want to transition an executable to the pki_tps_script_t domain.
+
+
+.EX
+.PP
+.B pki_tps_tomcat_exec_t 
+.EE
+
+- Set files with the pki_tps_tomcat_exec_t type, if you want to transition an executable to the pki_tps_tomcat_t domain.
+
+
+.EX
+.PP
+.B pki_tps_var_lib_t 
+.EE
+
+- Set files with the pki_tps_var_lib_t type, if you want to store the pki tps files under the /var/lib directory.
+
+
+.EX
+.PP
+.B pki_tps_var_run_t 
+.EE
+
+- Set files with the pki_tps_var_run_t type, if you want to store the pki tps files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux pki policy is very flexible allowing users to setup their pki processes in as secure a method as possible.
+.PP 
+The following port types are defined for pki:
+
+.EX
+.TP 5
+.B pki_ca_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B pki_kra_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B pki_ocsp_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B pki_ra_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B pki_tks_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B pki_tps_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux pki policy is very flexible allowing users to setup their pki processes in as secure a method as possible.
+.PP 
+The following process types are defined for pki:
+
+.EX
+.B pki_ca_t, pki_ra_t, pki_ca_script_t, pki_ocsp_t, pki_kra_t, pki_tks_t, pki_tps_t, pki_ocsp_script_t, pki_kra_script_t, pki_tks_script_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), pki(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/plymouth_selinux.8 b/man/man8/plymouth_selinux.8
new file mode 100644
index 0000000..581c9cb
--- /dev/null
+++ b/man/man8/plymouth_selinux.8
@@ -0,0 +1,119 @@
+.TH  "plymouth_selinux"  "8"  "plymouth" "dwalsh@redhat.com" "plymouth SELinux Policy documentation"
+.SH "NAME"
+plymouth_selinux \- Security Enhanced Linux Policy for the plymouth processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux plymouth policy is very flexible allowing users to setup their plymouth processes in as secure a method as possible.
+.PP 
+The following file types are defined for plymouth:
+
+
+.EX
+.PP
+.B plymouth_exec_t 
+.EE
+
+- Set files with the plymouth_exec_t type, if you want to transition an executable to the plymouth_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/plymouth, /bin/plymouth
+
+.EX
+.PP
+.B plymouthd_exec_t 
+.EE
+
+- Set files with the plymouthd_exec_t type, if you want to transition an executable to the plymouthd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/plymouthd, /sbin/plymouthd
+
+.EX
+.PP
+.B plymouthd_spool_t 
+.EE
+
+- Set files with the plymouthd_spool_t type, if you want to store the plymouthd files under the /var/spool directory.
+
+
+.EX
+.PP
+.B plymouthd_var_lib_t 
+.EE
+
+- Set files with the plymouthd_var_lib_t type, if you want to store the plymouthd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B plymouthd_var_log_t 
+.EE
+
+- Set files with the plymouthd_var_log_t type, if you want to treat the data as plymouthd var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B plymouthd_var_run_t 
+.EE
+
+- Set files with the plymouthd_var_run_t type, if you want to store the plymouthd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux plymouth policy is very flexible allowing users to setup their plymouth processes in as secure a method as possible.
+.PP 
+The following process types are defined for plymouth:
+
+.EX
+.B plymouth_t, plymouthd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), plymouth(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/plymouthd_selinux.8 b/man/man8/plymouthd_selinux.8
new file mode 100644
index 0000000..a9addd8
--- /dev/null
+++ b/man/man8/plymouthd_selinux.8
@@ -0,0 +1,125 @@
+.TH  "plymouthd_selinux"  "8"  "plymouthd" "dwalsh@redhat.com" "plymouthd SELinux Policy documentation"
+.SH "NAME"
+plymouthd_selinux \- Security Enhanced Linux Policy for the plymouthd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B plymouthd
+(Plymouth graphical boot)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux plymouthd policy is very flexible allowing users to setup their plymouthd processes in as secure a method as possible.
+.PP 
+The following file types are defined for plymouthd:
+
+
+.EX
+.PP
+.B plymouth_exec_t 
+.EE
+
+- Set files with the plymouth_exec_t type, if you want to transition an executable to the plymouth_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/plymouth, /bin/plymouth
+
+.EX
+.PP
+.B plymouthd_exec_t 
+.EE
+
+- Set files with the plymouthd_exec_t type, if you want to transition an executable to the plymouthd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/plymouthd, /sbin/plymouthd
+
+.EX
+.PP
+.B plymouthd_spool_t 
+.EE
+
+- Set files with the plymouthd_spool_t type, if you want to store the plymouthd files under the /var/spool directory.
+
+
+.EX
+.PP
+.B plymouthd_var_lib_t 
+.EE
+
+- Set files with the plymouthd_var_lib_t type, if you want to store the plymouthd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B plymouthd_var_log_t 
+.EE
+
+- Set files with the plymouthd_var_log_t type, if you want to treat the data as plymouthd var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B plymouthd_var_run_t 
+.EE
+
+- Set files with the plymouthd_var_run_t type, if you want to store the plymouthd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux plymouthd policy is very flexible allowing users to setup their plymouthd processes in as secure a method as possible.
+.PP 
+The following process types are defined for plymouthd:
+
+.EX
+.B plymouth_t, plymouthd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), plymouthd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/podsleuth_selinux.8 b/man/man8/podsleuth_selinux.8
new file mode 100644
index 0000000..413dd33
--- /dev/null
+++ b/man/man8/podsleuth_selinux.8
@@ -0,0 +1,105 @@
+.TH  "podsleuth_selinux"  "8"  "podsleuth" "dwalsh@redhat.com" "podsleuth SELinux Policy documentation"
+.SH "NAME"
+podsleuth_selinux \- Security Enhanced Linux Policy for the podsleuth processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B podsleuth
+(Podsleuth is a tool to get information about an Apple (TM) iPod (TM))
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux podsleuth policy is very flexible allowing users to setup their podsleuth processes in as secure a method as possible.
+.PP 
+The following file types are defined for podsleuth:
+
+
+.EX
+.PP
+.B podsleuth_cache_t 
+.EE
+
+- Set files with the podsleuth_cache_t type, if you want to store the files under the /var/cache directory.
+
+
+.EX
+.PP
+.B podsleuth_exec_t 
+.EE
+
+- Set files with the podsleuth_exec_t type, if you want to transition an executable to the podsleuth_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/podsleuth, /usr/libexec/hal-podsleuth
+
+.EX
+.PP
+.B podsleuth_tmp_t 
+.EE
+
+- Set files with the podsleuth_tmp_t type, if you want to store podsleuth temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B podsleuth_tmpfs_t 
+.EE
+
+- Set files with the podsleuth_tmpfs_t type, if you want to store podsleuth files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux podsleuth policy is very flexible allowing users to setup their podsleuth processes in as secure a method as possible.
+.PP 
+The following process types are defined for podsleuth:
+
+.EX
+.B podsleuth_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), podsleuth(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/policykit_selinux.8 b/man/man8/policykit_selinux.8
new file mode 100644
index 0000000..b14cbf9
--- /dev/null
+++ b/man/man8/policykit_selinux.8
@@ -0,0 +1,153 @@
+.TH  "policykit_selinux"  "8"  "policykit" "dwalsh@redhat.com" "policykit SELinux Policy documentation"
+.SH "NAME"
+policykit_selinux \- Security Enhanced Linux Policy for the policykit processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B policykit
+(Policy framework for controlling privileges for system-wide services)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux policykit policy is very flexible allowing users to setup their policykit processes in as secure a method as possible.
+.PP 
+The following file types are defined for policykit:
+
+
+.EX
+.PP
+.B policykit_auth_exec_t 
+.EE
+
+- Set files with the policykit_auth_exec_t type, if you want to transition an executable to the policykit_auth_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/libexec/polkit-read-auth-helper, /usr/lib/policykit/polkit-read-auth-helper, /usr/libexec/polkit-1/polkit-agent-helper-1
+
+.EX
+.PP
+.B policykit_exec_t 
+.EE
+
+- Set files with the policykit_exec_t type, if you want to transition an executable to the policykit_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/libexec/polkitd.*, /usr/libexec/polkit-1/polkitd.*, /usr/lib/policykit/polkitd
+
+.EX
+.PP
+.B policykit_grant_exec_t 
+.EE
+
+- Set files with the policykit_grant_exec_t type, if you want to transition an executable to the policykit_grant_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/libexec/polkit-grant-helper.*, /usr/lib/policykit/polkit-grant-helper.*
+
+.EX
+.PP
+.B policykit_reload_t 
+.EE
+
+- Set files with the policykit_reload_t type, if you want to treat the files as policykit reload data.
+
+
+.EX
+.PP
+.B policykit_resolve_exec_t 
+.EE
+
+- Set files with the policykit_resolve_exec_t type, if you want to transition an executable to the policykit_resolve_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/policykit/polkit-resolve-exe-helper.*, /usr/libexec/polkit-resolve-exe-helper.*
+
+.EX
+.PP
+.B policykit_tmp_t 
+.EE
+
+- Set files with the policykit_tmp_t type, if you want to store policykit temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B policykit_var_lib_t 
+.EE
+
+- Set files with the policykit_var_lib_t type, if you want to store the policykit files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/PolicyKit-public(/.*)?, /var/lib/PolicyKit(/.*)?, /var/lib/polkit-1(/.*)?
+
+.EX
+.PP
+.B policykit_var_run_t 
+.EE
+
+- Set files with the policykit_var_run_t type, if you want to store the policykit files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux policykit policy is very flexible allowing users to setup their policykit processes in as secure a method as possible.
+.PP 
+The following process types are defined for policykit:
+
+.EX
+.B policykit_grant_t, policykit_auth_t, policykit_t, policykit_resolve_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), policykit(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/polipo_selinux.8 b/man/man8/polipo_selinux.8
new file mode 100644
index 0000000..ada080b
--- /dev/null
+++ b/man/man8/polipo_selinux.8
@@ -0,0 +1,191 @@
+.TH  "polipo_selinux"  "8"  "polipo" "dwalsh@redhat.com" "polipo SELinux Policy documentation"
+.SH "NAME"
+polipo_selinux \- Security Enhanced Linux Policy for the polipo processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B polipo
+(Caching web proxy)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  polipo policy is extremely flexible and has several booleans that allow you to manipulate the policy and run polipo with the tightest access possible.
+
+
+.PP
+If you want to allow polipo to connect to all ports > 102, you must turn on the polipo_connect_all_unreserved boolean.
+
+.EX
+.B setsebool -P polipo_connect_all_unreserved 1
+.EE
+
+.PP
+If you want to determine whether polipo can access cifs file systems, you must turn on the polipo_use_cifs boolean.
+
+.EX
+.B setsebool -P polipo_use_cifs 1
+.EE
+
+.PP
+If you want to determine whether Polipo session daemon can send syslog messages, you must turn on the polipo_session_send_syslog_msg boolean.
+
+.EX
+.B setsebool -P polipo_session_send_syslog_msg 1
+.EE
+
+.PP
+If you want to determine whether Polipo session daemon can bind tcp sockets to all unreserved ports, you must turn on the polipo_session_bind_all_unreserved_ports boolean.
+
+.EX
+.B setsebool -P polipo_session_bind_all_unreserved_ports 1
+.EE
+
+.PP
+If you want to determine whether calling user domains can execute Polipo daemon in the polipo_session_t domain, you must turn on the polipo_session_users boolean.
+
+.EX
+.B setsebool -P polipo_session_users 1
+.EE
+
+.PP
+If you want to determine whether Polipo can access nfs file systems, you must turn on the polipo_use_nfs boolean.
+
+.EX
+.B setsebool -P polipo_use_nfs 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux polipo policy is very flexible allowing users to setup their polipo processes in as secure a method as possible.
+.PP 
+The following file types are defined for polipo:
+
+
+.EX
+.PP
+.B polipo_cache_home_t 
+.EE
+
+- Set files with the polipo_cache_home_t type, if you want to store polipo cache files in the users home directory.
+
+
+.EX
+.PP
+.B polipo_cache_t 
+.EE
+
+- Set files with the polipo_cache_t type, if you want to store the files under the /var/cache directory.
+
+
+.EX
+.PP
+.B polipo_config_home_t 
+.EE
+
+- Set files with the polipo_config_home_t type, if you want to store polipo config files in the users home directory.
+
+
+.EX
+.PP
+.B polipo_etc_t 
+.EE
+
+- Set files with the polipo_etc_t type, if you want to store polipo files in the /etc directories.
+
+
+.EX
+.PP
+.B polipo_exec_t 
+.EE
+
+- Set files with the polipo_exec_t type, if you want to transition an executable to the polipo_t domain.
+
+
+.EX
+.PP
+.B polipo_initrc_exec_t 
+.EE
+
+- Set files with the polipo_initrc_exec_t type, if you want to transition an executable to the polipo_initrc_t domain.
+
+
+.EX
+.PP
+.B polipo_log_t 
+.EE
+
+- Set files with the polipo_log_t type, if you want to treat the data as polipo log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B polipo_pid_t 
+.EE
+
+- Set files with the polipo_pid_t type, if you want to store the polipo files under the /run directory.
+
+
+.EX
+.PP
+.B polipo_unit_file_t 
+.EE
+
+- Set files with the polipo_unit_file_t type, if you want to treat the files as polipo unit content.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux polipo policy is very flexible allowing users to setup their polipo processes in as secure a method as possible.
+.PP 
+The following process types are defined for polipo:
+
+.EX
+.B polipo_t, polipo_session_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), polipo(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/portmap_selinux.8 b/man/man8/portmap_selinux.8
new file mode 100644
index 0000000..7513001
--- /dev/null
+++ b/man/man8/portmap_selinux.8
@@ -0,0 +1,150 @@
+.TH  "portmap_selinux"  "8"  "portmap" "dwalsh@redhat.com" "portmap SELinux Policy documentation"
+.SH "NAME"
+portmap_selinux \- Security Enhanced Linux Policy for the portmap processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B portmap
+(RPC port mapping service)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  portmap policy is extremely flexible and has several booleans that allow you to manipulate the policy and run portmap with the tightest access possible.
+
+
+.PP
+If you want to allow samba to act as a portmappe, you must turn on the samba_portmapper boolean.
+
+.EX
+.B setsebool -P samba_portmapper 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux portmap policy is very flexible allowing users to setup their portmap processes in as secure a method as possible.
+.PP 
+The following file types are defined for portmap:
+
+
+.EX
+.PP
+.B portmap_exec_t 
+.EE
+
+- Set files with the portmap_exec_t type, if you want to transition an executable to the portmap_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/portmap, /usr/sbin/portmap
+
+.EX
+.PP
+.B portmap_helper_exec_t 
+.EE
+
+- Set files with the portmap_helper_exec_t type, if you want to transition an executable to the portmap_helper_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/pmap_set, /usr/sbin/pmap_dump
+
+.EX
+.PP
+.B portmap_tmp_t 
+.EE
+
+- Set files with the portmap_tmp_t type, if you want to store portmap temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B portmap_var_run_t 
+.EE
+
+- Set files with the portmap_var_run_t type, if you want to store the portmap files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux portmap policy is very flexible allowing users to setup their portmap processes in as secure a method as possible.
+.PP 
+The following port types are defined for portmap:
+
+.EX
+.TP 5
+.B portmap_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux portmap policy is very flexible allowing users to setup their portmap processes in as secure a method as possible.
+.PP 
+The following process types are defined for portmap:
+
+.EX
+.B portmap_helper_t, portmap_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), portmap(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/portreserve_selinux.8 b/man/man8/portreserve_selinux.8
new file mode 100644
index 0000000..909a5da
--- /dev/null
+++ b/man/man8/portreserve_selinux.8
@@ -0,0 +1,105 @@
+.TH  "portreserve_selinux"  "8"  "portreserve" "dwalsh@redhat.com" "portreserve SELinux Policy documentation"
+.SH "NAME"
+portreserve_selinux \- Security Enhanced Linux Policy for the portreserve processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B portreserve
+(Reserve well-known ports in the RPC port range)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux portreserve policy is very flexible allowing users to setup their portreserve processes in as secure a method as possible.
+.PP 
+The following file types are defined for portreserve:
+
+
+.EX
+.PP
+.B portreserve_etc_t 
+.EE
+
+- Set files with the portreserve_etc_t type, if you want to store portreserve files in the /etc directories.
+
+
+.EX
+.PP
+.B portreserve_exec_t 
+.EE
+
+- Set files with the portreserve_exec_t type, if you want to transition an executable to the portreserve_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/portreserve, /sbin/portreserve
+
+.EX
+.PP
+.B portreserve_initrc_exec_t 
+.EE
+
+- Set files with the portreserve_initrc_exec_t type, if you want to transition an executable to the portreserve_initrc_t domain.
+
+
+.EX
+.PP
+.B portreserve_var_run_t 
+.EE
+
+- Set files with the portreserve_var_run_t type, if you want to store the portreserve files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux portreserve policy is very flexible allowing users to setup their portreserve processes in as secure a method as possible.
+.PP 
+The following process types are defined for portreserve:
+
+.EX
+.B portreserve_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), portreserve(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/postfix_selinux.8 b/man/man8/postfix_selinux.8
new file mode 100644
index 0000000..bb778bf
--- /dev/null
+++ b/man/man8/postfix_selinux.8
@@ -0,0 +1,422 @@
+.TH  "postfix_selinux"  "8"  "postfix" "dwalsh@redhat.com" "postfix SELinux Policy documentation"
+.SH "NAME"
+postfix_selinux \- Security Enhanced Linux Policy for the postfix processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B postfix
+(Postfix email server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  postfix policy is extremely flexible and has several booleans that allow you to manipulate the policy and run postfix with the tightest access possible.
+
+
+.PP
+If you want to allow postfix_local domain full write access to mail_spool directorie, you must turn on the allow_postfix_local_write_mail_spool boolean.
+
+.EX
+.B setsebool -P allow_postfix_local_write_mail_spool 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux postfix policy is very flexible allowing users to setup their postfix processes in as secure a method as possible.
+.PP 
+The following file types are defined for postfix:
+
+
+.EX
+.PP
+.B postfix_bounce_exec_t 
+.EE
+
+- Set files with the postfix_bounce_exec_t type, if you want to transition an executable to the postfix_bounce_t domain.
+
+
+.EX
+.PP
+.B postfix_bounce_tmp_t 
+.EE
+
+- Set files with the postfix_bounce_tmp_t type, if you want to store postfix bounce temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B postfix_cleanup_exec_t 
+.EE
+
+- Set files with the postfix_cleanup_exec_t type, if you want to transition an executable to the postfix_cleanup_t domain.
+
+
+.EX
+.PP
+.B postfix_cleanup_tmp_t 
+.EE
+
+- Set files with the postfix_cleanup_tmp_t type, if you want to store postfix cleanup temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B postfix_data_t 
+.EE
+
+- Set files with the postfix_data_t type, if you want to treat the files as postfix content.
+
+
+.EX
+.PP
+.B postfix_etc_t 
+.EE
+
+- Set files with the postfix_etc_t type, if you want to store postfix files in the /etc directories.
+
+
+.EX
+.PP
+.B postfix_exec_t 
+.EE
+
+- Set files with the postfix_exec_t type, if you want to transition an executable to the postfix_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/postfix/postfix-script.*, /usr/libexec/postfix/.*
+
+.EX
+.PP
+.B postfix_initrc_exec_t 
+.EE
+
+- Set files with the postfix_initrc_exec_t type, if you want to transition an executable to the postfix_initrc_t domain.
+
+
+.EX
+.PP
+.B postfix_keytab_t 
+.EE
+
+- Set files with the postfix_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B postfix_local_exec_t 
+.EE
+
+- Set files with the postfix_local_exec_t type, if you want to transition an executable to the postfix_local_t domain.
+
+
+.EX
+.PP
+.B postfix_local_tmp_t 
+.EE
+
+- Set files with the postfix_local_tmp_t type, if you want to store postfix local temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B postfix_map_exec_t 
+.EE
+
+- Set files with the postfix_map_exec_t type, if you want to transition an executable to the postfix_map_t domain.
+
+
+.EX
+.PP
+.B postfix_map_tmp_t 
+.EE
+
+- Set files with the postfix_map_tmp_t type, if you want to store postfix map temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B postfix_master_exec_t 
+.EE
+
+- Set files with the postfix_master_exec_t type, if you want to transition an executable to the postfix_master_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/postcat, /usr/sbin/postfix, /usr/libexec/postfix/master, /usr/sbin/postkick, /usr/sbin/postsuper, /usr/sbin/postalias, /usr/sbin/postlock, /usr/sbin/postlog
+
+.EX
+.PP
+.B postfix_pickup_exec_t 
+.EE
+
+- Set files with the postfix_pickup_exec_t type, if you want to transition an executable to the postfix_pickup_t domain.
+
+
+.EX
+.PP
+.B postfix_pickup_tmp_t 
+.EE
+
+- Set files with the postfix_pickup_tmp_t type, if you want to store postfix pickup temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B postfix_pipe_exec_t 
+.EE
+
+- Set files with the postfix_pipe_exec_t type, if you want to transition an executable to the postfix_pipe_t domain.
+
+
+.EX
+.PP
+.B postfix_pipe_tmp_t 
+.EE
+
+- Set files with the postfix_pipe_tmp_t type, if you want to store postfix pipe temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B postfix_postdrop_exec_t 
+.EE
+
+- Set files with the postfix_postdrop_exec_t type, if you want to transition an executable to the postfix_postdrop_t domain.
+
+
+.EX
+.PP
+.B postfix_postqueue_exec_t 
+.EE
+
+- Set files with the postfix_postqueue_exec_t type, if you want to transition an executable to the postfix_postqueue_t domain.
+
+
+.EX
+.PP
+.B postfix_private_t 
+.EE
+
+- Set files with the postfix_private_t type, if you want to treat the files as postfix private data.
+
+
+.EX
+.PP
+.B postfix_prng_t 
+.EE
+
+- Set files with the postfix_prng_t type, if you want to treat the files as postfix prng data.
+
+
+.EX
+.PP
+.B postfix_public_t 
+.EE
+
+- Set files with the postfix_public_t type, if you want to treat the files as postfix public data.
+
+
+.EX
+.PP
+.B postfix_qmgr_exec_t 
+.EE
+
+- Set files with the postfix_qmgr_exec_t type, if you want to transition an executable to the postfix_qmgr_t domain.
+
+
+.EX
+.PP
+.B postfix_qmgr_tmp_t 
+.EE
+
+- Set files with the postfix_qmgr_tmp_t type, if you want to store postfix qmgr temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B postfix_showq_exec_t 
+.EE
+
+- Set files with the postfix_showq_exec_t type, if you want to transition an executable to the postfix_showq_t domain.
+
+
+.EX
+.PP
+.B postfix_smtp_exec_t 
+.EE
+
+- Set files with the postfix_smtp_exec_t type, if you want to transition an executable to the postfix_smtp_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/libexec/postfix/smtp, /usr/libexec/postfix/scache, /usr/libexec/postfix/lmtp
+
+.EX
+.PP
+.B postfix_smtp_tmp_t 
+.EE
+
+- Set files with the postfix_smtp_tmp_t type, if you want to store postfix smtp temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B postfix_smtpd_exec_t 
+.EE
+
+- Set files with the postfix_smtpd_exec_t type, if you want to transition an executable to the postfix_smtpd_t domain.
+
+
+.EX
+.PP
+.B postfix_smtpd_tmp_t 
+.EE
+
+- Set files with the postfix_smtpd_tmp_t type, if you want to store postfix smtpd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B postfix_spool_bounce_t 
+.EE
+
+- Set files with the postfix_spool_bounce_t type, if you want to treat the files as postfix spool bounce data.
+
+
+.EX
+.PP
+.B postfix_spool_flush_t 
+.EE
+
+- Set files with the postfix_spool_flush_t type, if you want to treat the files as postfix spool flush data.
+
+
+.EX
+.PP
+.B postfix_spool_maildrop_t 
+.EE
+
+- Set files with the postfix_spool_maildrop_t type, if you want to treat the files as postfix spool maildrop data.
+
+.br
+.TP 5
+Paths: 
+/var/spool/postfix/defer(/.*)?, /var/spool/postfix/deferred(/.*)?, /var/spool/postfix/maildrop(/.*)?
+
+.EX
+.PP
+.B postfix_spool_t 
+.EE
+
+- Set files with the postfix_spool_t type, if you want to store the postfix files under the /var/spool directory.
+
+
+.EX
+.PP
+.B postfix_var_run_t 
+.EE
+
+- Set files with the postfix_var_run_t type, if you want to store the postfix files under the /run directory.
+
+
+.EX
+.PP
+.B postfix_virtual_exec_t 
+.EE
+
+- Set files with the postfix_virtual_exec_t type, if you want to transition an executable to the postfix_virtual_t domain.
+
+
+.EX
+.PP
+.B postfix_virtual_tmp_t 
+.EE
+
+- Set files with the postfix_virtual_tmp_t type, if you want to store postfix virtual temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux postfix policy is very flexible allowing users to setup their postfix processes in as secure a method as possible.
+.PP 
+The following port types are defined for postfix:
+
+.EX
+.TP 5
+.B postfix_policyd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux postfix policy is very flexible allowing users to setup their postfix processes in as secure a method as possible.
+.PP 
+The following process types are defined for postfix:
+
+.EX
+.B postfix_bounce_t, postfix_cleanup_t, postfix_showq_t, postfix_virtual_t, postfix_postdrop_t, postfix_postqueue_t, postfix_pipe_t, postfix_master_t, postfix_pickup_t, postfix_local_t, postfix_smtpd_t, postfix_qmgr_t, postfix_smtp_t, postfix_map_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), postfix(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/postgresql_selinux.8 b/man/man8/postgresql_selinux.8
new file mode 100644
index 0000000..da21d07
--- /dev/null
+++ b/man/man8/postgresql_selinux.8
@@ -0,0 +1,194 @@
+.TH  "postgresql_selinux"  "8"  "postgresql" "dwalsh@redhat.com" "postgresql SELinux Policy documentation"
+.SH "NAME"
+postgresql_selinux \- Security Enhanced Linux Policy for the postgresql processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B postgresql
+(PostgreSQL relational database)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  postgresql policy is extremely flexible and has several booleans that allow you to manipulate the policy and run postgresql with the tightest access possible.
+
+
+.PP
+If you want to allow users to connect to PostgreSQ, you must turn on the allow_user_postgresql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_postgresql_connect 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux postgresql policy is very flexible allowing users to setup their postgresql processes in as secure a method as possible.
+.PP 
+The following file types are defined for postgresql:
+
+
+.EX
+.PP
+.B postgresql_db_t 
+.EE
+
+- Set files with the postgresql_db_t type, if you want to treat the files as postgresql database content.
+
+.br
+.TP 5
+Paths: 
+/var/lib/pgsql/data(/.*)?, /usr/share/jonas/pgsql(/.*)?, /var/lib/postgres(ql)?(/.*)?, /var/lib/sepgsql(/.*)?, /usr/lib/pgsql/test/regress(/.*)?
+
+.EX
+.PP
+.B postgresql_etc_t 
+.EE
+
+- Set files with the postgresql_etc_t type, if you want to store postgresql files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/sysconfig/pgsql(/.*)?, /etc/postgresql(/.*)?
+
+.EX
+.PP
+.B postgresql_exec_t 
+.EE
+
+- Set files with the postgresql_exec_t type, if you want to transition an executable to the postgresql_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/(se)?postgres, /usr/lib/postgresql/bin/.*, /usr/lib/pgsql/test/regress/pg_regress, /usr/bin/initdb(\.sepgsql)?
+
+.EX
+.PP
+.B postgresql_initrc_exec_t 
+.EE
+
+- Set files with the postgresql_initrc_exec_t type, if you want to transition an executable to the postgresql_initrc_t domain.
+
+
+.EX
+.PP
+.B postgresql_lock_t 
+.EE
+
+- Set files with the postgresql_lock_t type, if you want to treat the files as postgresql lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B postgresql_log_t 
+.EE
+
+- Set files with the postgresql_log_t type, if you want to treat the data as postgresql log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/pgsql/logfile(/.*)?, /var/lib/pgsql/pgstartup\.log, /var/log/postgresql(/.*)?, /var/log/postgres\.log.*, /var/lib/sepgsql/pgstartup\.log, /var/log/rhdb/rhdb(/.*)?, /var/log/sepostgresql\.log.*
+
+.EX
+.PP
+.B postgresql_tmp_t 
+.EE
+
+- Set files with the postgresql_tmp_t type, if you want to store postgresql temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B postgresql_var_run_t 
+.EE
+
+- Set files with the postgresql_var_run_t type, if you want to store the postgresql files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/postmaster.*, /var/run/postgresql(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux postgresql policy is very flexible allowing users to setup their postgresql processes in as secure a method as possible.
+.PP 
+The following port types are defined for postgresql:
+
+.EX
+.TP 5
+.B postgresql_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux postgresql policy is very flexible allowing users to setup their postgresql processes in as secure a method as possible.
+.PP 
+The following process types are defined for postgresql:
+
+.EX
+.B postgresql_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), postgresql(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/postgrey_selinux.8 b/man/man8/postgrey_selinux.8
new file mode 100644
index 0000000..0d3079a
--- /dev/null
+++ b/man/man8/postgrey_selinux.8
@@ -0,0 +1,147 @@
+.TH  "postgrey_selinux"  "8"  "postgrey" "dwalsh@redhat.com" "postgrey SELinux Policy documentation"
+.SH "NAME"
+postgrey_selinux \- Security Enhanced Linux Policy for the postgrey processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B postgrey
+(Postfix grey-listing server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux postgrey policy is very flexible allowing users to setup their postgrey processes in as secure a method as possible.
+.PP 
+The following file types are defined for postgrey:
+
+
+.EX
+.PP
+.B postgrey_etc_t 
+.EE
+
+- Set files with the postgrey_etc_t type, if you want to store postgrey files in the /etc directories.
+
+
+.EX
+.PP
+.B postgrey_exec_t 
+.EE
+
+- Set files with the postgrey_exec_t type, if you want to transition an executable to the postgrey_t domain.
+
+
+.EX
+.PP
+.B postgrey_initrc_exec_t 
+.EE
+
+- Set files with the postgrey_initrc_exec_t type, if you want to transition an executable to the postgrey_initrc_t domain.
+
+
+.EX
+.PP
+.B postgrey_spool_t 
+.EE
+
+- Set files with the postgrey_spool_t type, if you want to store the postgrey files under the /var/spool directory.
+
+
+.EX
+.PP
+.B postgrey_var_lib_t 
+.EE
+
+- Set files with the postgrey_var_lib_t type, if you want to store the postgrey files under the /var/lib directory.
+
+
+.EX
+.PP
+.B postgrey_var_run_t 
+.EE
+
+- Set files with the postgrey_var_run_t type, if you want to store the postgrey files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/postgrey\.pid, /var/run/postgrey(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux postgrey policy is very flexible allowing users to setup their postgrey processes in as secure a method as possible.
+.PP 
+The following port types are defined for postgrey:
+
+.EX
+.TP 5
+.B postgrey_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux postgrey policy is very flexible allowing users to setup their postgrey processes in as secure a method as possible.
+.PP 
+The following process types are defined for postgrey:
+
+.EX
+.B postgrey_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), postgrey(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/pppd_selinux.8 b/man/man8/pppd_selinux.8
new file mode 100644
index 0000000..7b27311
--- /dev/null
+++ b/man/man8/pppd_selinux.8
@@ -0,0 +1,189 @@
+.TH  "pppd_selinux"  "8"  "pppd" "dwalsh@redhat.com" "pppd SELinux Policy documentation"
+.SH "NAME"
+pppd_selinux \- Security Enhanced Linux Policy for the pppd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  pppd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run pppd with the tightest access possible.
+
+
+.PP
+If you want to allow pppd to be run for a regular use, you must turn on the pppd_for_user boolean.
+
+.EX
+.B setsebool -P pppd_for_user 1
+.EE
+
+.PP
+If you want to allow pppd to load kernel modules for certain modem, you must turn on the pppd_can_insmod boolean.
+
+.EX
+.B setsebool -P pppd_can_insmod 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux pppd policy is very flexible allowing users to setup their pppd processes in as secure a method as possible.
+.PP 
+The following file types are defined for pppd:
+
+
+.EX
+.PP
+.B pppd_etc_rw_t 
+.EE
+
+- Set files with the pppd_etc_rw_t type, if you want to treat the files as pppd etc read/write content.
+
+.br
+.TP 5
+Paths: 
+/etc/ppp(/.*)?, /etc/ppp/peers(/.*)?, /etc/ppp/resolv\.conf
+
+.EX
+.PP
+.B pppd_etc_t 
+.EE
+
+- Set files with the pppd_etc_t type, if you want to store pppd files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/ppp, /root/.ppprc
+
+.EX
+.PP
+.B pppd_exec_t 
+.EE
+
+- Set files with the pppd_exec_t type, if you want to transition an executable to the pppd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/pppd, /usr/sbin/ipppd, /usr/sbin/pppoe-server, /usr/sbin/ppp-watch, /sbin/pppoe-server, /sbin/ppp-watch
+
+.EX
+.PP
+.B pppd_initrc_exec_t 
+.EE
+
+- Set files with the pppd_initrc_exec_t type, if you want to transition an executable to the pppd_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/ppp, /etc/ppp/(auth|ip(v6|x)?)-(up|down)
+
+.EX
+.PP
+.B pppd_lock_t 
+.EE
+
+- Set files with the pppd_lock_t type, if you want to treat the files as pppd lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B pppd_log_t 
+.EE
+
+- Set files with the pppd_log_t type, if you want to treat the data as pppd log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/ppp(/.*)?, /var/log/ppp-connect-errors.*
+
+.EX
+.PP
+.B pppd_secret_t 
+.EE
+
+- Set files with the pppd_secret_t type, if you want to treat the files as pppd se secret data.
+
+
+.EX
+.PP
+.B pppd_tmp_t 
+.EE
+
+- Set files with the pppd_tmp_t type, if you want to store pppd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B pppd_unit_file_t 
+.EE
+
+- Set files with the pppd_unit_file_t type, if you want to treat the files as pppd unit content.
+
+
+.EX
+.PP
+.B pppd_var_run_t 
+.EE
+
+- Set files with the pppd_var_run_t type, if you want to store the pppd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/pppd[0-9]*\.tdb, /var/run/ppp(/.*)?, /var/run/(i)?ppp.*pid[^/]*
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux pppd policy is very flexible allowing users to setup their pppd processes in as secure a method as possible.
+.PP 
+The following process types are defined for pppd:
+
+.EX
+.B pppd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), pppd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/pptp_selinux.8 b/man/man8/pptp_selinux.8
new file mode 100644
index 0000000..4f2fc1c
--- /dev/null
+++ b/man/man8/pptp_selinux.8
@@ -0,0 +1,113 @@
+.TH  "pptp_selinux"  "8"  "pptp" "dwalsh@redhat.com" "pptp SELinux Policy documentation"
+.SH "NAME"
+pptp_selinux \- Security Enhanced Linux Policy for the pptp processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux pptp policy is very flexible allowing users to setup their pptp processes in as secure a method as possible.
+.PP 
+The following file types are defined for pptp:
+
+
+.EX
+.PP
+.B pptp_exec_t 
+.EE
+
+- Set files with the pptp_exec_t type, if you want to transition an executable to the pptp_t domain.
+
+
+.EX
+.PP
+.B pptp_log_t 
+.EE
+
+- Set files with the pptp_log_t type, if you want to treat the data as pptp log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B pptp_var_run_t 
+.EE
+
+- Set files with the pptp_var_run_t type, if you want to store the pptp files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux pptp policy is very flexible allowing users to setup their pptp processes in as secure a method as possible.
+.PP 
+The following port types are defined for pptp:
+
+.EX
+.TP 5
+.B pptp_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux pptp policy is very flexible allowing users to setup their pptp processes in as secure a method as possible.
+.PP 
+The following process types are defined for pptp:
+
+.EX
+.B pptp_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), pptp(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/prelink_selinux.8 b/man/man8/prelink_selinux.8
new file mode 100644
index 0000000..0be2626
--- /dev/null
+++ b/man/man8/prelink_selinux.8
@@ -0,0 +1,133 @@
+.TH  "prelink_selinux"  "8"  "prelink" "dwalsh@redhat.com" "prelink SELinux Policy documentation"
+.SH "NAME"
+prelink_selinux \- Security Enhanced Linux Policy for the prelink processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B prelink
+(Prelink ELF shared library mappings)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux prelink policy is very flexible allowing users to setup their prelink processes in as secure a method as possible.
+.PP 
+The following file types are defined for prelink:
+
+
+.EX
+.PP
+.B prelink_cache_t 
+.EE
+
+- Set files with the prelink_cache_t type, if you want to store the files under the /var/cache directory.
+
+
+.EX
+.PP
+.B prelink_cron_system_exec_t 
+.EE
+
+- Set files with the prelink_cron_system_exec_t type, if you want to transition an executable to the prelink_cron_system_t domain.
+
+
+.EX
+.PP
+.B prelink_exec_t 
+.EE
+
+- Set files with the prelink_exec_t type, if you want to transition an executable to the prelink_t domain.
+
+
+.EX
+.PP
+.B prelink_log_t 
+.EE
+
+- Set files with the prelink_log_t type, if you want to treat the data as prelink log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/prelink(/.*)?, /var/log/prelink\.log
+
+.EX
+.PP
+.B prelink_tmp_t 
+.EE
+
+- Set files with the prelink_tmp_t type, if you want to store prelink temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B prelink_tmpfs_t 
+.EE
+
+- Set files with the prelink_tmpfs_t type, if you want to store prelink files on a tmpfs file system.
+
+
+.EX
+.PP
+.B prelink_var_lib_t 
+.EE
+
+- Set files with the prelink_var_lib_t type, if you want to store the prelink files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/prelink(/.*)?, /var/lib/misc/prelink.*
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux prelink policy is very flexible allowing users to setup their prelink processes in as secure a method as possible.
+.PP 
+The following process types are defined for prelink:
+
+.EX
+.B prelink_cron_system_t, prelink_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), prelink(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/prelude_selinux.8 b/man/man8/prelude_selinux.8
new file mode 100644
index 0000000..3955442
--- /dev/null
+++ b/man/man8/prelude_selinux.8
@@ -0,0 +1,211 @@
+.TH  "prelude_selinux"  "8"  "prelude" "dwalsh@redhat.com" "prelude SELinux Policy documentation"
+.SH "NAME"
+prelude_selinux \- Security Enhanced Linux Policy for the prelude processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B prelude
+(Prelude hybrid intrusion detection system)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux prelude policy is very flexible allowing users to setup their prelude processes in as secure a method as possible.
+.PP 
+The following file types are defined for prelude:
+
+
+.EX
+.PP
+.B prelude_audisp_exec_t 
+.EE
+
+- Set files with the prelude_audisp_exec_t type, if you want to transition an executable to the prelude_audisp_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/audisp-prelude, /usr/sbin/audisp-prelude
+
+.EX
+.PP
+.B prelude_audisp_var_run_t 
+.EE
+
+- Set files with the prelude_audisp_var_run_t type, if you want to store the prelude audisp files under the /run directory.
+
+
+.EX
+.PP
+.B prelude_correlator_config_t 
+.EE
+
+- Set files with the prelude_correlator_config_t type, if you want to treat the files as prelude correlator configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B prelude_correlator_exec_t 
+.EE
+
+- Set files with the prelude_correlator_exec_t type, if you want to transition an executable to the prelude_correlator_t domain.
+
+
+.EX
+.PP
+.B prelude_exec_t 
+.EE
+
+- Set files with the prelude_exec_t type, if you want to transition an executable to the prelude_t domain.
+
+
+.EX
+.PP
+.B prelude_initrc_exec_t 
+.EE
+
+- Set files with the prelude_initrc_exec_t type, if you want to transition an executable to the prelude_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/prelude-correlator, /etc/rc\.d/init\.d/prelude-manager, /etc/rc\.d/init\.d/prelude-lml
+
+.EX
+.PP
+.B prelude_lml_exec_t 
+.EE
+
+- Set files with the prelude_lml_exec_t type, if you want to transition an executable to the prelude_lml_t domain.
+
+
+.EX
+.PP
+.B prelude_lml_tmp_t 
+.EE
+
+- Set files with the prelude_lml_tmp_t type, if you want to store prelude lml temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B prelude_lml_var_run_t 
+.EE
+
+- Set files with the prelude_lml_var_run_t type, if you want to store the prelude lml files under the /run directory.
+
+
+.EX
+.PP
+.B prelude_log_t 
+.EE
+
+- Set files with the prelude_log_t type, if you want to treat the data as prelude log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B prelude_spool_t 
+.EE
+
+- Set files with the prelude_spool_t type, if you want to store the prelude files under the /var/spool directory.
+
+.br
+.TP 5
+Paths: 
+/var/spool/prelude(/.*)?, /var/spool/prelude-manager(/.*)?
+
+.EX
+.PP
+.B prelude_var_lib_t 
+.EE
+
+- Set files with the prelude_var_lib_t type, if you want to store the prelude files under the /var/lib directory.
+
+
+.EX
+.PP
+.B prelude_var_run_t 
+.EE
+
+- Set files with the prelude_var_run_t type, if you want to store the prelude files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux prelude policy is very flexible allowing users to setup their prelude processes in as secure a method as possible.
+.PP 
+The following port types are defined for prelude:
+
+.EX
+.TP 5
+.B prelude_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux prelude policy is very flexible allowing users to setup their prelude processes in as secure a method as possible.
+.PP 
+The following process types are defined for prelude:
+
+.EX
+.B prelude_lml_t, prelude_t, prelude_audisp_t, prelude_correlator_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), prelude(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/privoxy_selinux.8 b/man/man8/privoxy_selinux.8
new file mode 100644
index 0000000..4371077
--- /dev/null
+++ b/man/man8/privoxy_selinux.8
@@ -0,0 +1,124 @@
+.TH  "privoxy_selinux"  "8"  "privoxy" "dwalsh@redhat.com" "privoxy SELinux Policy documentation"
+.SH "NAME"
+privoxy_selinux \- Security Enhanced Linux Policy for the privoxy processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B privoxy
+(Privacy enhancing web proxy)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  privoxy policy is extremely flexible and has several booleans that allow you to manipulate the policy and run privoxy with the tightest access possible.
+
+
+.PP
+If you want to allow privoxy to connect to all ports, not just HTTP, FTP, and Gopher ports, you must turn on the privoxy_connect_any boolean.
+
+.EX
+.B setsebool -P privoxy_connect_any 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux privoxy policy is very flexible allowing users to setup their privoxy processes in as secure a method as possible.
+.PP 
+The following file types are defined for privoxy:
+
+
+.EX
+.PP
+.B privoxy_etc_rw_t 
+.EE
+
+- Set files with the privoxy_etc_rw_t type, if you want to treat the files as privoxy etc read/write content.
+
+
+.EX
+.PP
+.B privoxy_exec_t 
+.EE
+
+- Set files with the privoxy_exec_t type, if you want to transition an executable to the privoxy_t domain.
+
+
+.EX
+.PP
+.B privoxy_initrc_exec_t 
+.EE
+
+- Set files with the privoxy_initrc_exec_t type, if you want to transition an executable to the privoxy_initrc_t domain.
+
+
+.EX
+.PP
+.B privoxy_log_t 
+.EE
+
+- Set files with the privoxy_log_t type, if you want to treat the data as privoxy log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B privoxy_var_run_t 
+.EE
+
+- Set files with the privoxy_var_run_t type, if you want to store the privoxy files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux privoxy policy is very flexible allowing users to setup their privoxy processes in as secure a method as possible.
+.PP 
+The following process types are defined for privoxy:
+
+.EX
+.B privoxy_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), privoxy(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/procmail_selinux.8 b/man/man8/procmail_selinux.8
new file mode 100644
index 0000000..7a080ee
--- /dev/null
+++ b/man/man8/procmail_selinux.8
@@ -0,0 +1,105 @@
+.TH  "procmail_selinux"  "8"  "procmail" "dwalsh@redhat.com" "procmail SELinux Policy documentation"
+.SH "NAME"
+procmail_selinux \- Security Enhanced Linux Policy for the procmail processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B procmail
+(Procmail mail delivery agent)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux procmail policy is very flexible allowing users to setup their procmail processes in as secure a method as possible.
+.PP 
+The following file types are defined for procmail:
+
+
+.EX
+.PP
+.B procmail_exec_t 
+.EE
+
+- Set files with the procmail_exec_t type, if you want to transition an executable to the procmail_t domain.
+
+
+.EX
+.PP
+.B procmail_home_t 
+.EE
+
+- Set files with the procmail_home_t type, if you want to store procmail files in the users home directory.
+
+
+.EX
+.PP
+.B procmail_log_t 
+.EE
+
+- Set files with the procmail_log_t type, if you want to treat the data as procmail log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/procmail\.log.*, /var/log/procmail(/.*)?
+
+.EX
+.PP
+.B procmail_tmp_t 
+.EE
+
+- Set files with the procmail_tmp_t type, if you want to store procmail temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux procmail policy is very flexible allowing users to setup their procmail processes in as secure a method as possible.
+.PP 
+The following process types are defined for procmail:
+
+.EX
+.B procmail_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), procmail(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/psad_selinux.8 b/man/man8/psad_selinux.8
new file mode 100644
index 0000000..f5331cf
--- /dev/null
+++ b/man/man8/psad_selinux.8
@@ -0,0 +1,125 @@
+.TH  "psad_selinux"  "8"  "psad" "dwalsh@redhat.com" "psad SELinux Policy documentation"
+.SH "NAME"
+psad_selinux \- Security Enhanced Linux Policy for the psad processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B psad
+(Intrusion Detection and Log Analysis with iptables)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux psad policy is very flexible allowing users to setup their psad processes in as secure a method as possible.
+.PP 
+The following file types are defined for psad:
+
+
+.EX
+.PP
+.B psad_etc_t 
+.EE
+
+- Set files with the psad_etc_t type, if you want to store psad files in the /etc directories.
+
+
+.EX
+.PP
+.B psad_exec_t 
+.EE
+
+- Set files with the psad_exec_t type, if you want to transition an executable to the psad_t domain.
+
+
+.EX
+.PP
+.B psad_initrc_exec_t 
+.EE
+
+- Set files with the psad_initrc_exec_t type, if you want to transition an executable to the psad_initrc_t domain.
+
+
+.EX
+.PP
+.B psad_tmp_t 
+.EE
+
+- Set files with the psad_tmp_t type, if you want to store psad temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B psad_var_lib_t 
+.EE
+
+- Set files with the psad_var_lib_t type, if you want to store the psad files under the /var/lib directory.
+
+
+.EX
+.PP
+.B psad_var_log_t 
+.EE
+
+- Set files with the psad_var_log_t type, if you want to treat the data as psad var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B psad_var_run_t 
+.EE
+
+- Set files with the psad_var_run_t type, if you want to store the psad files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux psad policy is very flexible allowing users to setup their psad processes in as secure a method as possible.
+.PP 
+The following process types are defined for psad:
+
+.EX
+.B psad_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), psad(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/ptal_selinux.8 b/man/man8/ptal_selinux.8
new file mode 100644
index 0000000..679eb3c
--- /dev/null
+++ b/man/man8/ptal_selinux.8
@@ -0,0 +1,121 @@
+.TH  "ptal_selinux"  "8"  "ptal" "dwalsh@redhat.com" "ptal SELinux Policy documentation"
+.SH "NAME"
+ptal_selinux \- Security Enhanced Linux Policy for the ptal processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ptal policy is very flexible allowing users to setup their ptal processes in as secure a method as possible.
+.PP 
+The following file types are defined for ptal:
+
+
+.EX
+.PP
+.B ptal_etc_t 
+.EE
+
+- Set files with the ptal_etc_t type, if you want to store ptal files in the /etc directories.
+
+
+.EX
+.PP
+.B ptal_exec_t 
+.EE
+
+- Set files with the ptal_exec_t type, if you want to transition an executable to the ptal_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/ptal-photod, /usr/sbin/ptal-mlcd, /usr/sbin/ptal-printd
+
+.EX
+.PP
+.B ptal_var_run_t 
+.EE
+
+- Set files with the ptal_var_run_t type, if you want to store the ptal files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/ptal-mlcd(/.*)?, /var/run/ptal-printd(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux ptal policy is very flexible allowing users to setup their ptal processes in as secure a method as possible.
+.PP 
+The following port types are defined for ptal:
+
+.EX
+.TP 5
+.B ptal_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ptal policy is very flexible allowing users to setup their ptal processes in as secure a method as possible.
+.PP 
+The following process types are defined for ptal:
+
+.EX
+.B ptal_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ptal(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/ptchown_selinux.8 b/man/man8/ptchown_selinux.8
new file mode 100644
index 0000000..3e1f7ab
--- /dev/null
+++ b/man/man8/ptchown_selinux.8
@@ -0,0 +1,77 @@
+.TH  "ptchown_selinux"  "8"  "ptchown" "dwalsh@redhat.com" "ptchown SELinux Policy documentation"
+.SH "NAME"
+ptchown_selinux \- Security Enhanced Linux Policy for the ptchown processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B ptchown
+(helper function for grantpt(3), changes ownship and permissions of pseudotty)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ptchown policy is very flexible allowing users to setup their ptchown processes in as secure a method as possible.
+.PP 
+The following file types are defined for ptchown:
+
+
+.EX
+.PP
+.B ptchown_exec_t 
+.EE
+
+- Set files with the ptchown_exec_t type, if you want to transition an executable to the ptchown_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ptchown policy is very flexible allowing users to setup their ptchown processes in as secure a method as possible.
+.PP 
+The following process types are defined for ptchown:
+
+.EX
+.B ptchown_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ptchown(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/publicfile_selinux.8 b/man/man8/publicfile_selinux.8
new file mode 100644
index 0000000..0235c45
--- /dev/null
+++ b/man/man8/publicfile_selinux.8
@@ -0,0 +1,89 @@
+.TH  "publicfile_selinux"  "8"  "publicfile" "dwalsh@redhat.com" "publicfile SELinux Policy documentation"
+.SH "NAME"
+publicfile_selinux \- Security Enhanced Linux Policy for the publicfile processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B publicfile
+(publicfile supplies files to the public through HTTP and FTP)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux publicfile policy is very flexible allowing users to setup their publicfile processes in as secure a method as possible.
+.PP 
+The following file types are defined for publicfile:
+
+
+.EX
+.PP
+.B publicfile_content_t 
+.EE
+
+- Set files with the publicfile_content_t type, if you want to treat the files as publicfile content.
+
+
+.EX
+.PP
+.B publicfile_exec_t 
+.EE
+
+- Set files with the publicfile_exec_t type, if you want to transition an executable to the publicfile_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/httpd, /usr/bin/ftpd
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux publicfile policy is very flexible allowing users to setup their publicfile processes in as secure a method as possible.
+.PP 
+The following process types are defined for publicfile:
+
+.EX
+.B publicfile_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), publicfile(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/pulseaudio_selinux.8 b/man/man8/pulseaudio_selinux.8
new file mode 100644
index 0000000..8ca72d3
--- /dev/null
+++ b/man/man8/pulseaudio_selinux.8
@@ -0,0 +1,139 @@
+.TH  "pulseaudio_selinux"  "8"  "pulseaudio" "dwalsh@redhat.com" "pulseaudio SELinux Policy documentation"
+.SH "NAME"
+pulseaudio_selinux \- Security Enhanced Linux Policy for the pulseaudio processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B pulseaudio
+(Pulseaudio network sound server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux pulseaudio policy is very flexible allowing users to setup their pulseaudio processes in as secure a method as possible.
+.PP 
+The following file types are defined for pulseaudio:
+
+
+.EX
+.PP
+.B pulseaudio_exec_t 
+.EE
+
+- Set files with the pulseaudio_exec_t type, if you want to transition an executable to the pulseaudio_t domain.
+
+
+.EX
+.PP
+.B pulseaudio_home_t 
+.EE
+
+- Set files with the pulseaudio_home_t type, if you want to store pulseaudio files in the users home directory.
+
+.br
+.TP 5
+Paths: 
+/root/\.pulse-cookie, /root/\.pulse(/.*)?
+
+.EX
+.PP
+.B pulseaudio_tmpfs_t 
+.EE
+
+- Set files with the pulseaudio_tmpfs_t type, if you want to store pulseaudio files on a tmpfs file system.
+
+
+.EX
+.PP
+.B pulseaudio_var_lib_t 
+.EE
+
+- Set files with the pulseaudio_var_lib_t type, if you want to store the pulseaudio files under the /var/lib directory.
+
+
+.EX
+.PP
+.B pulseaudio_var_run_t 
+.EE
+
+- Set files with the pulseaudio_var_run_t type, if you want to store the pulseaudio files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux pulseaudio policy is very flexible allowing users to setup their pulseaudio processes in as secure a method as possible.
+.PP 
+The following port types are defined for pulseaudio:
+
+.EX
+.TP 5
+.B pulseaudio_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux pulseaudio policy is very flexible allowing users to setup their pulseaudio processes in as secure a method as possible.
+.PP 
+The following process types are defined for pulseaudio:
+
+.EX
+.B pulseaudio_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), pulseaudio(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/puppet_selinux.8 b/man/man8/puppet_selinux.8
new file mode 100644
index 0000000..c558047
--- /dev/null
+++ b/man/man8/puppet_selinux.8
@@ -0,0 +1,205 @@
+.TH  "puppet_selinux"  "8"  "puppet" "dwalsh@redhat.com" "puppet SELinux Policy documentation"
+.SH "NAME"
+puppet_selinux \- Security Enhanced Linux Policy for the puppet processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B puppet
+(Puppet client daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  puppet policy is extremely flexible and has several booleans that allow you to manipulate the policy and run puppet with the tightest access possible.
+
+
+.PP
+If you want to allow Puppet client to manage all file types, you must turn on the puppet_manage_all_files boolean.
+
+.EX
+.B setsebool -P puppet_manage_all_files 1
+.EE
+
+.PP
+If you want to allow Puppet master to use connect to MySQL and PostgreSQL databas, you must turn on the puppetmaster_use_db boolean.
+
+.EX
+.B setsebool -P puppetmaster_use_db 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux puppet policy is very flexible allowing users to setup their puppet processes in as secure a method as possible.
+.PP 
+The following file types are defined for puppet:
+
+
+.EX
+.PP
+.B puppet_etc_t 
+.EE
+
+- Set files with the puppet_etc_t type, if you want to store puppet files in the /etc directories.
+
+
+.EX
+.PP
+.B puppet_exec_t 
+.EE
+
+- Set files with the puppet_exec_t type, if you want to transition an executable to the puppet_t domain.
+
+
+.EX
+.PP
+.B puppet_initrc_exec_t 
+.EE
+
+- Set files with the puppet_initrc_exec_t type, if you want to transition an executable to the puppet_initrc_t domain.
+
+
+.EX
+.PP
+.B puppet_log_t 
+.EE
+
+- Set files with the puppet_log_t type, if you want to treat the data as puppet log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B puppet_tmp_t 
+.EE
+
+- Set files with the puppet_tmp_t type, if you want to store puppet temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B puppet_var_lib_t 
+.EE
+
+- Set files with the puppet_var_lib_t type, if you want to store the puppet files under the /var/lib directory.
+
+
+.EX
+.PP
+.B puppet_var_run_t 
+.EE
+
+- Set files with the puppet_var_run_t type, if you want to store the puppet files under the /run directory.
+
+
+.EX
+.PP
+.B puppetca_exec_t 
+.EE
+
+- Set files with the puppetca_exec_t type, if you want to transition an executable to the puppetca_t domain.
+
+
+.EX
+.PP
+.B puppetmaster_exec_t 
+.EE
+
+- Set files with the puppetmaster_exec_t type, if you want to transition an executable to the puppetmaster_t domain.
+
+
+.EX
+.PP
+.B puppetmaster_initrc_exec_t 
+.EE
+
+- Set files with the puppetmaster_initrc_exec_t type, if you want to transition an executable to the puppetmaster_initrc_t domain.
+
+
+.EX
+.PP
+.B puppetmaster_tmp_t 
+.EE
+
+- Set files with the puppetmaster_tmp_t type, if you want to store puppetmaster temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux puppet policy is very flexible allowing users to setup their puppet processes in as secure a method as possible.
+.PP 
+The following port types are defined for puppet:
+
+.EX
+.TP 5
+.B puppet_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux puppet policy is very flexible allowing users to setup their puppet processes in as secure a method as possible.
+.PP 
+The following process types are defined for puppet:
+
+.EX
+.B puppet_t, puppetmaster_t, puppetca_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), puppet(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/puppetca_selinux.8 b/man/man8/puppetca_selinux.8
new file mode 100644
index 0000000..eb647c7
--- /dev/null
+++ b/man/man8/puppetca_selinux.8
@@ -0,0 +1,71 @@
+.TH  "puppetca_selinux"  "8"  "puppetca" "dwalsh@redhat.com" "puppetca SELinux Policy documentation"
+.SH "NAME"
+puppetca_selinux \- Security Enhanced Linux Policy for the puppetca processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux puppetca policy is very flexible allowing users to setup their puppetca processes in as secure a method as possible.
+.PP 
+The following file types are defined for puppetca:
+
+
+.EX
+.PP
+.B puppetca_exec_t 
+.EE
+
+- Set files with the puppetca_exec_t type, if you want to transition an executable to the puppetca_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux puppetca policy is very flexible allowing users to setup their puppetca processes in as secure a method as possible.
+.PP 
+The following process types are defined for puppetca:
+
+.EX
+.B puppetca_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), puppetca(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/puppetmaster_selinux.8 b/man/man8/puppetmaster_selinux.8
new file mode 100644
index 0000000..5d07daa
--- /dev/null
+++ b/man/man8/puppetmaster_selinux.8
@@ -0,0 +1,102 @@
+.TH  "puppetmaster_selinux"  "8"  "puppetmaster" "dwalsh@redhat.com" "puppetmaster SELinux Policy documentation"
+.SH "NAME"
+puppetmaster_selinux \- Security Enhanced Linux Policy for the puppetmaster processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  puppetmaster policy is extremely flexible and has several booleans that allow you to manipulate the policy and run puppetmaster with the tightest access possible.
+
+
+.PP
+If you want to allow Puppet master to use connect to MySQL and PostgreSQL databas, you must turn on the puppetmaster_use_db boolean.
+
+.EX
+.B setsebool -P puppetmaster_use_db 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux puppetmaster policy is very flexible allowing users to setup their puppetmaster processes in as secure a method as possible.
+.PP 
+The following file types are defined for puppetmaster:
+
+
+.EX
+.PP
+.B puppetmaster_exec_t 
+.EE
+
+- Set files with the puppetmaster_exec_t type, if you want to transition an executable to the puppetmaster_t domain.
+
+
+.EX
+.PP
+.B puppetmaster_initrc_exec_t 
+.EE
+
+- Set files with the puppetmaster_initrc_exec_t type, if you want to transition an executable to the puppetmaster_initrc_t domain.
+
+
+.EX
+.PP
+.B puppetmaster_tmp_t 
+.EE
+
+- Set files with the puppetmaster_tmp_t type, if you want to store puppetmaster temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux puppetmaster policy is very flexible allowing users to setup their puppetmaster processes in as secure a method as possible.
+.PP 
+The following process types are defined for puppetmaster:
+
+.EX
+.B puppetmaster_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), puppetmaster(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/pyicqt_selinux.8 b/man/man8/pyicqt_selinux.8
new file mode 100644
index 0000000..7c291ab
--- /dev/null
+++ b/man/man8/pyicqt_selinux.8
@@ -0,0 +1,101 @@
+.TH  "pyicqt_selinux"  "8"  "pyicqt" "dwalsh@redhat.com" "pyicqt SELinux Policy documentation"
+.SH "NAME"
+pyicqt_selinux \- Security Enhanced Linux Policy for the pyicqt processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B pyicqt
+(PyICQt is an ICQ transport for XMPP server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux pyicqt policy is very flexible allowing users to setup their pyicqt processes in as secure a method as possible.
+.PP 
+The following file types are defined for pyicqt:
+
+
+.EX
+.PP
+.B pyicqt_exec_t 
+.EE
+
+- Set files with the pyicqt_exec_t type, if you want to transition an executable to the pyicqt_t domain.
+
+
+.EX
+.PP
+.B pyicqt_log_t 
+.EE
+
+- Set files with the pyicqt_log_t type, if you want to treat the data as pyicqt log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B pyicqt_var_run_t 
+.EE
+
+- Set files with the pyicqt_var_run_t type, if you want to store the pyicqt files under the /run directory.
+
+
+.EX
+.PP
+.B pyicqt_var_spool_t 
+.EE
+
+- Set files with the pyicqt_var_spool_t type, if you want to store the pyicqt var files under the /var/spool directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux pyicqt policy is very flexible allowing users to setup their pyicqt processes in as secure a method as possible.
+.PP 
+The following process types are defined for pyicqt:
+
+.EX
+.B pyicqt_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), pyicqt(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/qdiskd_selinux.8 b/man/man8/qdiskd_selinux.8
new file mode 100644
index 0000000..fe306cf
--- /dev/null
+++ b/man/man8/qdiskd_selinux.8
@@ -0,0 +1,103 @@
+.TH  "qdiskd_selinux"  "8"  "qdiskd" "dwalsh@redhat.com" "qdiskd SELinux Policy documentation"
+.SH "NAME"
+qdiskd_selinux \- Security Enhanced Linux Policy for the qdiskd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux qdiskd policy is very flexible allowing users to setup their qdiskd processes in as secure a method as possible.
+.PP 
+The following file types are defined for qdiskd:
+
+
+.EX
+.PP
+.B qdiskd_exec_t 
+.EE
+
+- Set files with the qdiskd_exec_t type, if you want to transition an executable to the qdiskd_t domain.
+
+
+.EX
+.PP
+.B qdiskd_tmpfs_t 
+.EE
+
+- Set files with the qdiskd_tmpfs_t type, if you want to store qdiskd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B qdiskd_var_lib_t 
+.EE
+
+- Set files with the qdiskd_var_lib_t type, if you want to store the qdiskd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B qdiskd_var_log_t 
+.EE
+
+- Set files with the qdiskd_var_log_t type, if you want to treat the data as qdiskd var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B qdiskd_var_run_t 
+.EE
+
+- Set files with the qdiskd_var_run_t type, if you want to store the qdiskd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux qdiskd policy is very flexible allowing users to setup their qdiskd processes in as secure a method as possible.
+.PP 
+The following process types are defined for qdiskd:
+
+.EX
+.B qdiskd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), qdiskd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/qemu_selinux.8 b/man/man8/qemu_selinux.8
new file mode 100644
index 0000000..1ca4c43
--- /dev/null
+++ b/man/man8/qemu_selinux.8
@@ -0,0 +1,151 @@
+.TH  "qemu_selinux"  "8"  "qemu" "dwalsh@redhat.com" "qemu SELinux Policy documentation"
+.SH "NAME"
+qemu_selinux \- Security Enhanced Linux Policy for the qemu processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B qemu
+(QEMU machine emulator and virtualizer)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  qemu policy is extremely flexible and has several booleans that allow you to manipulate the policy and run qemu with the tightest access possible.
+
+
+.PP
+If you want to allow qemu to use cifs/Samba file system, you must turn on the qemu_use_cifs boolean.
+
+.EX
+.B setsebool -P qemu_use_cifs 1
+.EE
+
+.PP
+If you want to allow qemu to use serial/parallel communication port, you must turn on the qemu_use_comm boolean.
+
+.EX
+.B setsebool -P qemu_use_comm 1
+.EE
+
+.PP
+If you want to allow qemu to use nfs file system, you must turn on the qemu_use_nfs boolean.
+
+.EX
+.B setsebool -P qemu_use_nfs 1
+.EE
+
+.PP
+If you want to allow qemu to use usb device, you must turn on the qemu_use_usb boolean.
+
+.EX
+.B setsebool -P qemu_use_usb 1
+.EE
+
+.PP
+If you want to allow qemu to connect fully to the networ, you must turn on the qemu_full_network boolean.
+
+.EX
+.B setsebool -P qemu_full_network 1
+.EE
+
+.PP
+If you want to allow xend to run qemu-dm. Not required if using paravirt and no vfb, you must turn on the xend_run_qemu boolean.
+
+.EX
+.B setsebool -P xend_run_qemu 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux qemu policy is very flexible allowing users to setup their qemu processes in as secure a method as possible.
+.PP 
+The following file types are defined for qemu:
+
+
+.EX
+.PP
+.B qemu_dm_exec_t 
+.EE
+
+- Set files with the qemu_dm_exec_t type, if you want to transition an executable to the qemu_dm_t domain.
+
+
+.EX
+.PP
+.B qemu_exec_t 
+.EE
+
+- Set files with the qemu_exec_t type, if you want to transition an executable to the qemu_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/qemu-system-.*, /usr/libexec/qemu.*, /usr/bin/qemu, /usr/bin/qemu-kvm
+
+.EX
+.PP
+.B qemu_var_run_t 
+.EE
+
+- Set files with the qemu_var_run_t type, if you want to store the qemu files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/libvirt/qemu(/.*)?, /var/lib/libvirt/qemu(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux qemu policy is very flexible allowing users to setup their qemu processes in as secure a method as possible.
+.PP 
+The following process types are defined for qemu:
+
+.EX
+.B qemu_dm_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), qemu(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/qmail_selinux.8 b/man/man8/qmail_selinux.8
new file mode 100644
index 0000000..d0f7752
--- /dev/null
+++ b/man/man8/qmail_selinux.8
@@ -0,0 +1,213 @@
+.TH  "qmail_selinux"  "8"  "qmail" "dwalsh@redhat.com" "qmail SELinux Policy documentation"
+.SH "NAME"
+qmail_selinux \- Security Enhanced Linux Policy for the qmail processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B qmail
+(Qmail Mail Server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux qmail policy is very flexible allowing users to setup their qmail processes in as secure a method as possible.
+.PP 
+The following file types are defined for qmail:
+
+
+.EX
+.PP
+.B qmail_alias_home_t 
+.EE
+
+- Set files with the qmail_alias_home_t type, if you want to store qmail alias files in the users home directory.
+
+.br
+.TP 5
+Paths: 
+/var/qmail/alias, /var/qmail/alias(/.*)?
+
+.EX
+.PP
+.B qmail_clean_exec_t 
+.EE
+
+- Set files with the qmail_clean_exec_t type, if you want to transition an executable to the qmail_clean_t domain.
+
+
+.EX
+.PP
+.B qmail_etc_t 
+.EE
+
+- Set files with the qmail_etc_t type, if you want to store qmail files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/var/qmail/owners(/.*)?, /var/qmail/control(/.*)?
+
+.EX
+.PP
+.B qmail_exec_t 
+.EE
+
+- Set files with the qmail_exec_t type, if you want to transition an executable to the qmail_t domain.
+
+
+.EX
+.PP
+.B qmail_inject_exec_t 
+.EE
+
+- Set files with the qmail_inject_exec_t type, if you want to transition an executable to the qmail_inject_t domain.
+
+
+.EX
+.PP
+.B qmail_keytab_t 
+.EE
+
+- Set files with the qmail_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B qmail_local_exec_t 
+.EE
+
+- Set files with the qmail_local_exec_t type, if you want to transition an executable to the qmail_local_t domain.
+
+
+.EX
+.PP
+.B qmail_lspawn_exec_t 
+.EE
+
+- Set files with the qmail_lspawn_exec_t type, if you want to transition an executable to the qmail_lspawn_t domain.
+
+
+.EX
+.PP
+.B qmail_queue_exec_t 
+.EE
+
+- Set files with the qmail_queue_exec_t type, if you want to transition an executable to the qmail_queue_t domain.
+
+
+.EX
+.PP
+.B qmail_remote_exec_t 
+.EE
+
+- Set files with the qmail_remote_exec_t type, if you want to transition an executable to the qmail_remote_t domain.
+
+
+.EX
+.PP
+.B qmail_rspawn_exec_t 
+.EE
+
+- Set files with the qmail_rspawn_exec_t type, if you want to transition an executable to the qmail_rspawn_t domain.
+
+
+.EX
+.PP
+.B qmail_send_exec_t 
+.EE
+
+- Set files with the qmail_send_exec_t type, if you want to transition an executable to the qmail_send_t domain.
+
+
+.EX
+.PP
+.B qmail_smtpd_exec_t 
+.EE
+
+- Set files with the qmail_smtpd_exec_t type, if you want to transition an executable to the qmail_smtpd_t domain.
+
+
+.EX
+.PP
+.B qmail_splogger_exec_t 
+.EE
+
+- Set files with the qmail_splogger_exec_t type, if you want to transition an executable to the qmail_splogger_t domain.
+
+
+.EX
+.PP
+.B qmail_spool_t 
+.EE
+
+- Set files with the qmail_spool_t type, if you want to store the qmail files under the /var/spool directory.
+
+
+.EX
+.PP
+.B qmail_start_exec_t 
+.EE
+
+- Set files with the qmail_start_exec_t type, if you want to transition an executable to the qmail_start_t domain.
+
+
+.EX
+.PP
+.B qmail_tcp_env_exec_t 
+.EE
+
+- Set files with the qmail_tcp_env_exec_t type, if you want to transition an executable to the qmail_tcp_env_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux qmail policy is very flexible allowing users to setup their qmail processes in as secure a method as possible.
+.PP 
+The following process types are defined for qmail:
+
+.EX
+.B qmail_tcp_env_t, qmail_rspawn_t, qmail_inject_t, qmail_lspawn_t, qmail_clean_t, qmail_local_t, qmail_smtpd_t, qmail_start_t, qmail_send_t, qmail_remote_t, qmail_queue_t, qmail_splogger_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), qmail(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/qpidd_selinux.8 b/man/man8/qpidd_selinux.8
new file mode 100644
index 0000000..712a06e
--- /dev/null
+++ b/man/man8/qpidd_selinux.8
@@ -0,0 +1,107 @@
+.TH  "qpidd_selinux"  "8"  "qpidd" "dwalsh@redhat.com" "qpidd SELinux Policy documentation"
+.SH "NAME"
+qpidd_selinux \- Security Enhanced Linux Policy for the qpidd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux qpidd policy is very flexible allowing users to setup their qpidd processes in as secure a method as possible.
+.PP 
+The following file types are defined for qpidd:
+
+
+.EX
+.PP
+.B qpidd_exec_t 
+.EE
+
+- Set files with the qpidd_exec_t type, if you want to transition an executable to the qpidd_t domain.
+
+
+.EX
+.PP
+.B qpidd_initrc_exec_t 
+.EE
+
+- Set files with the qpidd_initrc_exec_t type, if you want to transition an executable to the qpidd_initrc_t domain.
+
+
+.EX
+.PP
+.B qpidd_tmpfs_t 
+.EE
+
+- Set files with the qpidd_tmpfs_t type, if you want to store qpidd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B qpidd_var_lib_t 
+.EE
+
+- Set files with the qpidd_var_lib_t type, if you want to store the qpidd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B qpidd_var_run_t 
+.EE
+
+- Set files with the qpidd_var_run_t type, if you want to store the qpidd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/qpidd(/.*)?, /var/run/qpidd\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux qpidd policy is very flexible allowing users to setup their qpidd processes in as secure a method as possible.
+.PP 
+The following process types are defined for qpidd:
+
+.EX
+.B qpidd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), qpidd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/quantum_selinux.8 b/man/man8/quantum_selinux.8
new file mode 100644
index 0000000..779196e
--- /dev/null
+++ b/man/man8/quantum_selinux.8
@@ -0,0 +1,107 @@
+.TH  "quantum_selinux"  "8"  "quantum" "dwalsh@redhat.com" "quantum SELinux Policy documentation"
+.SH "NAME"
+quantum_selinux \- Security Enhanced Linux Policy for the quantum processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux quantum policy is very flexible allowing users to setup their quantum processes in as secure a method as possible.
+.PP 
+The following file types are defined for quantum:
+
+
+.EX
+.PP
+.B quantum_exec_t 
+.EE
+
+- Set files with the quantum_exec_t type, if you want to transition an executable to the quantum_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/quantum-server, /usr/bin/quantum-ryu-agent, /usr/bin/quantum-linuxbridge-agent, /usr/bin/quantum-openvswitch-agent
+
+.EX
+.PP
+.B quantum_log_t 
+.EE
+
+- Set files with the quantum_log_t type, if you want to treat the data as quantum log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B quantum_tmp_t 
+.EE
+
+- Set files with the quantum_tmp_t type, if you want to store quantum temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B quantum_unit_file_t 
+.EE
+
+- Set files with the quantum_unit_file_t type, if you want to treat the files as quantum unit content.
+
+
+.EX
+.PP
+.B quantum_var_lib_t 
+.EE
+
+- Set files with the quantum_var_lib_t type, if you want to store the quantum files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux quantum policy is very flexible allowing users to setup their quantum processes in as secure a method as possible.
+.PP 
+The following process types are defined for quantum:
+
+.EX
+.B quantum_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), quantum(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/quota_selinux.8 b/man/man8/quota_selinux.8
new file mode 100644
index 0000000..b90411d
--- /dev/null
+++ b/man/man8/quota_selinux.8
@@ -0,0 +1,117 @@
+.TH  "quota_selinux"  "8"  "quota" "dwalsh@redhat.com" "quota SELinux Policy documentation"
+.SH "NAME"
+quota_selinux \- Security Enhanced Linux Policy for the quota processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B quota
+(File system quota management)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux quota policy is very flexible allowing users to setup their quota processes in as secure a method as possible.
+.PP 
+The following file types are defined for quota:
+
+
+.EX
+.PP
+.B quota_db_t 
+.EE
+
+- Set files with the quota_db_t type, if you want to treat the files as quota database content.
+
+.br
+.TP 5
+Paths: 
+/boot/a?quota\.(user|group), /etc/a?quota\.(user|group), /var/lib/stickshift/a?quota\.(user|group), /a?quota\.(user|group), /var/a?quota\.(user|group), /var/spool/(.*/)?a?quota\.(user|group)
+
+.EX
+.PP
+.B quota_exec_t 
+.EE
+
+- Set files with the quota_exec_t type, if you want to transition an executable to the quota_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/convertquota, /usr/sbin/quota(check|on), /sbin/quota(check|on)
+
+.EX
+.PP
+.B quota_flag_t 
+.EE
+
+- Set files with the quota_flag_t type, if you want to treat the files as quota flag data.
+
+
+.EX
+.PP
+.B quota_nld_exec_t 
+.EE
+
+- Set files with the quota_nld_exec_t type, if you want to transition an executable to the quota_nld_t domain.
+
+
+.EX
+.PP
+.B quota_nld_var_run_t 
+.EE
+
+- Set files with the quota_nld_var_run_t type, if you want to store the quota nld files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux quota policy is very flexible allowing users to setup their quota processes in as secure a method as possible.
+.PP 
+The following process types are defined for quota:
+
+.EX
+.B quota_t, quota_nld_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), quota(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/rabbitmq_selinux.8 b/man/man8/rabbitmq_selinux.8
new file mode 100644
index 0000000..dc1fda5
--- /dev/null
+++ b/man/man8/rabbitmq_selinux.8
@@ -0,0 +1,101 @@
+.TH  "rabbitmq_selinux"  "8"  "rabbitmq" "dwalsh@redhat.com" "rabbitmq SELinux Policy documentation"
+.SH "NAME"
+rabbitmq_selinux \- Security Enhanced Linux Policy for the rabbitmq processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B rabbitmq
+(policy for rabbitmq)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rabbitmq policy is very flexible allowing users to setup their rabbitmq processes in as secure a method as possible.
+.PP 
+The following file types are defined for rabbitmq:
+
+
+.EX
+.PP
+.B rabbitmq_beam_exec_t 
+.EE
+
+- Set files with the rabbitmq_beam_exec_t type, if you want to transition an executable to the rabbitmq_beam_t domain.
+
+
+.EX
+.PP
+.B rabbitmq_epmd_exec_t 
+.EE
+
+- Set files with the rabbitmq_epmd_exec_t type, if you want to transition an executable to the rabbitmq_epmd_t domain.
+
+
+.EX
+.PP
+.B rabbitmq_var_lib_t 
+.EE
+
+- Set files with the rabbitmq_var_lib_t type, if you want to store the rabbitmq files under the /var/lib directory.
+
+
+.EX
+.PP
+.B rabbitmq_var_log_t 
+.EE
+
+- Set files with the rabbitmq_var_log_t type, if you want to treat the data as rabbitmq var log data, usually stored under the /var/log directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rabbitmq policy is very flexible allowing users to setup their rabbitmq processes in as secure a method as possible.
+.PP 
+The following process types are defined for rabbitmq:
+
+.EX
+.B rabbitmq_beam_t, rabbitmq_epmd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rabbitmq(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/racoon_selinux.8 b/man/man8/racoon_selinux.8
new file mode 100644
index 0000000..d573221
--- /dev/null
+++ b/man/man8/racoon_selinux.8
@@ -0,0 +1,94 @@
+.TH  "racoon_selinux"  "8"  "racoon" "dwalsh@redhat.com" "racoon SELinux Policy documentation"
+.SH "NAME"
+racoon_selinux \- Security Enhanced Linux Policy for the racoon processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  racoon policy is extremely flexible and has several booleans that allow you to manipulate the policy and run racoon with the tightest access possible.
+
+
+.PP
+If you want to allow racoon to read shado, you must turn on the racoon_read_shadow boolean.
+
+.EX
+.B setsebool -P racoon_read_shadow 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux racoon policy is very flexible allowing users to setup their racoon processes in as secure a method as possible.
+.PP 
+The following file types are defined for racoon:
+
+
+.EX
+.PP
+.B racoon_exec_t 
+.EE
+
+- Set files with the racoon_exec_t type, if you want to transition an executable to the racoon_t domain.
+
+
+.EX
+.PP
+.B racoon_tmp_t 
+.EE
+
+- Set files with the racoon_tmp_t type, if you want to store racoon temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux racoon policy is very flexible allowing users to setup their racoon processes in as secure a method as possible.
+.PP 
+The following process types are defined for racoon:
+
+.EX
+.B racoon_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), racoon(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/radiusd_selinux.8 b/man/man8/radiusd_selinux.8
new file mode 100644
index 0000000..6494aab
--- /dev/null
+++ b/man/man8/radiusd_selinux.8
@@ -0,0 +1,172 @@
+.TH  "radiusd_selinux"  "8"  "radiusd" "dwalsh@redhat.com" "radiusd SELinux Policy documentation"
+.SH "NAME"
+radiusd_selinux \- Security Enhanced Linux Policy for the radiusd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  radiusd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run radiusd with the tightest access possible.
+
+
+.PP
+If you want to allow users to login using a radius serve, you must turn on the authlogin_radius boolean.
+
+.EX
+.B setsebool -P authlogin_radius 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux radiusd policy is very flexible allowing users to setup their radiusd processes in as secure a method as possible.
+.PP 
+The following file types are defined for radiusd:
+
+
+.EX
+.PP
+.B radiusd_etc_rw_t 
+.EE
+
+- Set files with the radiusd_etc_rw_t type, if you want to treat the files as radiusd etc read/write content.
+
+
+.EX
+.PP
+.B radiusd_etc_t 
+.EE
+
+- Set files with the radiusd_etc_t type, if you want to store radiusd files in the /etc directories.
+
+
+.EX
+.PP
+.B radiusd_exec_t 
+.EE
+
+- Set files with the radiusd_exec_t type, if you want to transition an executable to the radiusd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/freeradius, /etc/cron\.(daily|monthly)/radiusd, /usr/sbin/radiusd, /etc/cron\.(daily|weekly|monthly)/freeradius
+
+.EX
+.PP
+.B radiusd_initrc_exec_t 
+.EE
+
+- Set files with the radiusd_initrc_exec_t type, if you want to transition an executable to the radiusd_initrc_t domain.
+
+
+.EX
+.PP
+.B radiusd_log_t 
+.EE
+
+- Set files with the radiusd_log_t type, if you want to treat the data as radiusd log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/radacct(/.*)?, /var/log/radiusd-freeradius(/.*)?, /var/log/radius\.log.*, /var/log/radutmp, /var/log/radwtmp.*, /var/log/radius(/.*)?, /var/log/freeradius(/.*)?
+
+.EX
+.PP
+.B radiusd_var_lib_t 
+.EE
+
+- Set files with the radiusd_var_lib_t type, if you want to store the radiusd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B radiusd_var_run_t 
+.EE
+
+- Set files with the radiusd_var_run_t type, if you want to store the radiusd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/radiusd\.pid, /var/run/radiusd(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux radiusd policy is very flexible allowing users to setup their radiusd processes in as secure a method as possible.
+.PP 
+The following port types are defined for radiusd:
+
+.EX
+.TP 5
+.B radius_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux radiusd policy is very flexible allowing users to setup their radiusd processes in as secure a method as possible.
+.PP 
+The following process types are defined for radiusd:
+
+.EX
+.B radiusd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), radiusd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/radvd_selinux.8 b/man/man8/radvd_selinux.8
new file mode 100644
index 0000000..e7f45e9
--- /dev/null
+++ b/man/man8/radvd_selinux.8
@@ -0,0 +1,105 @@
+.TH  "radvd_selinux"  "8"  "radvd" "dwalsh@redhat.com" "radvd SELinux Policy documentation"
+.SH "NAME"
+radvd_selinux \- Security Enhanced Linux Policy for the radvd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B radvd
+(IPv6 router advertisement daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux radvd policy is very flexible allowing users to setup their radvd processes in as secure a method as possible.
+.PP 
+The following file types are defined for radvd:
+
+
+.EX
+.PP
+.B radvd_etc_t 
+.EE
+
+- Set files with the radvd_etc_t type, if you want to store radvd files in the /etc directories.
+
+
+.EX
+.PP
+.B radvd_exec_t 
+.EE
+
+- Set files with the radvd_exec_t type, if you want to transition an executable to the radvd_t domain.
+
+
+.EX
+.PP
+.B radvd_initrc_exec_t 
+.EE
+
+- Set files with the radvd_initrc_exec_t type, if you want to transition an executable to the radvd_initrc_t domain.
+
+
+.EX
+.PP
+.B radvd_var_run_t 
+.EE
+
+- Set files with the radvd_var_run_t type, if you want to store the radvd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/radvd(/.*)?, /var/run/radvd\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux radvd policy is very flexible allowing users to setup their radvd processes in as secure a method as possible.
+.PP 
+The following process types are defined for radvd:
+
+.EX
+.B radvd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), radvd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/rdisc_selinux.8 b/man/man8/rdisc_selinux.8
new file mode 100644
index 0000000..f04f9bd
--- /dev/null
+++ b/man/man8/rdisc_selinux.8
@@ -0,0 +1,81 @@
+.TH  "rdisc_selinux"  "8"  "rdisc" "dwalsh@redhat.com" "rdisc SELinux Policy documentation"
+.SH "NAME"
+rdisc_selinux \- Security Enhanced Linux Policy for the rdisc processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B rdisc
+(Network router discovery daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rdisc policy is very flexible allowing users to setup their rdisc processes in as secure a method as possible.
+.PP 
+The following file types are defined for rdisc:
+
+
+.EX
+.PP
+.B rdisc_exec_t 
+.EE
+
+- Set files with the rdisc_exec_t type, if you want to transition an executable to the rdisc_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/rdisc, /usr/sbin/rdisc
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rdisc policy is very flexible allowing users to setup their rdisc processes in as secure a method as possible.
+.PP 
+The following process types are defined for rdisc:
+
+.EX
+.B rdisc_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rdisc(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/readahead_selinux.8 b/man/man8/readahead_selinux.8
new file mode 100644
index 0000000..7966b58
--- /dev/null
+++ b/man/man8/readahead_selinux.8
@@ -0,0 +1,101 @@
+.TH  "readahead_selinux"  "8"  "readahead" "dwalsh@redhat.com" "readahead SELinux Policy documentation"
+.SH "NAME"
+readahead_selinux \- Security Enhanced Linux Policy for the readahead processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B readahead
+(Readahead, read files into page cache for improved performance)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux readahead policy is very flexible allowing users to setup their readahead processes in as secure a method as possible.
+.PP 
+The following file types are defined for readahead:
+
+
+.EX
+.PP
+.B readahead_exec_t 
+.EE
+
+- Set files with the readahead_exec_t type, if you want to transition an executable to the readahead_t domain.
+
+.br
+.TP 5
+Paths: 
+/lib/systemd/systemd-readahead.*, /sbin/readahead.*, /usr/lib/systemd/systemd-readahead.*, /usr/sbin/readahead.*
+
+.EX
+.PP
+.B readahead_var_lib_t 
+.EE
+
+- Set files with the readahead_var_lib_t type, if you want to store the readahead files under the /var/lib directory.
+
+
+.EX
+.PP
+.B readahead_var_run_t 
+.EE
+
+- Set files with the readahead_var_run_t type, if you want to store the readahead files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/systemd/readahead(/.*)?, /dev/\.systemd/readahead(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux readahead policy is very flexible allowing users to setup their readahead processes in as secure a method as possible.
+.PP 
+The following process types are defined for readahead:
+
+.EX
+.B readahead_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), readahead(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/regex_selinux.8 b/man/man8/regex_selinux.8
new file mode 100644
index 0000000..529dc44
--- /dev/null
+++ b/man/man8/regex_selinux.8
@@ -0,0 +1,79 @@
+.TH  "regex_selinux"  "8"  "regex" "dwalsh@redhat.com" "regex SELinux Policy documentation"
+.SH "NAME"
+regex_selinux \- Security Enhanced Linux Policy for the regex processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux regex policy is very flexible allowing users to setup their regex processes in as secure a method as possible.
+.PP 
+The following file types are defined for regex:
+
+
+.EX
+.PP
+.B regex_milter_data_t 
+.EE
+
+- Set files with the regex_milter_data_t type, if you want to treat the files as regex milter content.
+
+
+.EX
+.PP
+.B regex_milter_exec_t 
+.EE
+
+- Set files with the regex_milter_exec_t type, if you want to transition an executable to the regex_milter_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux regex policy is very flexible allowing users to setup their regex processes in as secure a method as possible.
+.PP 
+The following process types are defined for regex:
+
+.EX
+.B regex_milter_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), regex(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/restorecond_selinux.8 b/man/man8/restorecond_selinux.8
new file mode 100644
index 0000000..5258999
--- /dev/null
+++ b/man/man8/restorecond_selinux.8
@@ -0,0 +1,79 @@
+.TH  "restorecond_selinux"  "8"  "restorecond" "dwalsh@redhat.com" "restorecond SELinux Policy documentation"
+.SH "NAME"
+restorecond_selinux \- Security Enhanced Linux Policy for the restorecond processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux restorecond policy is very flexible allowing users to setup their restorecond processes in as secure a method as possible.
+.PP 
+The following file types are defined for restorecond:
+
+
+.EX
+.PP
+.B restorecond_exec_t 
+.EE
+
+- Set files with the restorecond_exec_t type, if you want to transition an executable to the restorecond_t domain.
+
+
+.EX
+.PP
+.B restorecond_var_run_t 
+.EE
+
+- Set files with the restorecond_var_run_t type, if you want to store the restorecond files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux restorecond policy is very flexible allowing users to setup their restorecond processes in as secure a method as possible.
+.PP 
+The following process types are defined for restorecond:
+
+.EX
+.B restorecond_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), restorecond(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/rgmanager_selinux.8 b/man/man8/rgmanager_selinux.8
new file mode 100644
index 0000000..b003935
--- /dev/null
+++ b/man/man8/rgmanager_selinux.8
@@ -0,0 +1,136 @@
+.TH  "rgmanager_selinux"  "8"  "rgmanager" "dwalsh@redhat.com" "rgmanager SELinux Policy documentation"
+.SH "NAME"
+rgmanager_selinux \- Security Enhanced Linux Policy for the rgmanager processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B rgmanager
+(rgmanager - Resource Group Manager)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  rgmanager policy is extremely flexible and has several booleans that allow you to manipulate the policy and run rgmanager with the tightest access possible.
+
+
+.PP
+If you want to allow rgmanager domain to connect to the network using TCP, you must turn on the rgmanager_can_network_connect boolean.
+
+.EX
+.B setsebool -P rgmanager_can_network_connect 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rgmanager policy is very flexible allowing users to setup their rgmanager processes in as secure a method as possible.
+.PP 
+The following file types are defined for rgmanager:
+
+
+.EX
+.PP
+.B rgmanager_exec_t 
+.EE
+
+- Set files with the rgmanager_exec_t type, if you want to transition an executable to the rgmanager_t domain.
+
+
+.EX
+.PP
+.B rgmanager_initrc_exec_t 
+.EE
+
+- Set files with the rgmanager_initrc_exec_t type, if you want to transition an executable to the rgmanager_initrc_t domain.
+
+
+.EX
+.PP
+.B rgmanager_tmp_t 
+.EE
+
+- Set files with the rgmanager_tmp_t type, if you want to store rgmanager temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B rgmanager_tmpfs_t 
+.EE
+
+- Set files with the rgmanager_tmpfs_t type, if you want to store rgmanager files on a tmpfs file system.
+
+
+.EX
+.PP
+.B rgmanager_var_log_t 
+.EE
+
+- Set files with the rgmanager_var_log_t type, if you want to treat the data as rgmanager var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B rgmanager_var_run_t 
+.EE
+
+- Set files with the rgmanager_var_run_t type, if you want to store the rgmanager files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/rgmanager\.pid, /var/run/cluster/rgmanager\.sk
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rgmanager policy is very flexible allowing users to setup their rgmanager processes in as secure a method as possible.
+.PP 
+The following process types are defined for rgmanager:
+
+.EX
+.B rgmanager_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rgmanager(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/rhev_selinux.8 b/man/man8/rhev_selinux.8
new file mode 100644
index 0000000..36bcd5b
--- /dev/null
+++ b/man/man8/rhev_selinux.8
@@ -0,0 +1,117 @@
+.TH  "rhev_selinux"  "8"  "rhev" "dwalsh@redhat.com" "rhev SELinux Policy documentation"
+.SH "NAME"
+rhev_selinux \- Security Enhanced Linux Policy for the rhev processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B rhev
+(rhev polic module contains policies for rhev apps)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rhev policy is very flexible allowing users to setup their rhev processes in as secure a method as possible.
+.PP 
+The following file types are defined for rhev:
+
+
+.EX
+.PP
+.B rhev_agentd_exec_t 
+.EE
+
+- Set files with the rhev_agentd_exec_t type, if you want to transition an executable to the rhev_agentd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/share/rhev-agent/rhev-agentd\.py, /usr/share/ovirt-guest-agent
+
+.EX
+.PP
+.B rhev_agentd_log_t 
+.EE
+
+- Set files with the rhev_agentd_log_t type, if you want to treat the data as rhev agentd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B rhev_agentd_tmp_t 
+.EE
+
+- Set files with the rhev_agentd_tmp_t type, if you want to store rhev agentd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B rhev_agentd_unit_file_t 
+.EE
+
+- Set files with the rhev_agentd_unit_file_t type, if you want to treat the files as rhev agentd unit content.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/systemd/system/ovirt-guest-agent\.serviceservice, /lib/systemd/system/ovirt-guest-agent\.service
+
+.EX
+.PP
+.B rhev_agentd_var_run_t 
+.EE
+
+- Set files with the rhev_agentd_var_run_t type, if you want to store the rhev agentd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rhev policy is very flexible allowing users to setup their rhev processes in as secure a method as possible.
+.PP 
+The following process types are defined for rhev:
+
+.EX
+.B rhev_agentd_t, rhev_agentd_consolehelper_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rhev(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/rhgb_selinux.8 b/man/man8/rhgb_selinux.8
new file mode 100644
index 0000000..af7a010
--- /dev/null
+++ b/man/man8/rhgb_selinux.8
@@ -0,0 +1,85 @@
+.TH  "rhgb_selinux"  "8"  "rhgb" "dwalsh@redhat.com" "rhgb SELinux Policy documentation"
+.SH "NAME"
+rhgb_selinux \- Security Enhanced Linux Policy for the rhgb processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B rhgb
+( Red Hat Graphical Boot )
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rhgb policy is very flexible allowing users to setup their rhgb processes in as secure a method as possible.
+.PP 
+The following file types are defined for rhgb:
+
+
+.EX
+.PP
+.B rhgb_exec_t 
+.EE
+
+- Set files with the rhgb_exec_t type, if you want to transition an executable to the rhgb_t domain.
+
+
+.EX
+.PP
+.B rhgb_tmpfs_t 
+.EE
+
+- Set files with the rhgb_tmpfs_t type, if you want to store rhgb files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rhgb policy is very flexible allowing users to setup their rhgb processes in as secure a method as possible.
+.PP 
+The following process types are defined for rhgb:
+
+.EX
+.B rhgb_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rhgb(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/rhsmcertd_selinux.8 b/man/man8/rhsmcertd_selinux.8
new file mode 100644
index 0000000..0ba79be
--- /dev/null
+++ b/man/man8/rhsmcertd_selinux.8
@@ -0,0 +1,117 @@
+.TH  "rhsmcertd_selinux"  "8"  "rhsmcertd" "dwalsh@redhat.com" "rhsmcertd SELinux Policy documentation"
+.SH "NAME"
+rhsmcertd_selinux \- Security Enhanced Linux Policy for the rhsmcertd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B rhsmcertd
+(Subscription Management Certificate Daemon policy)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rhsmcertd policy is very flexible allowing users to setup their rhsmcertd processes in as secure a method as possible.
+.PP 
+The following file types are defined for rhsmcertd:
+
+
+.EX
+.PP
+.B rhsmcertd_exec_t 
+.EE
+
+- Set files with the rhsmcertd_exec_t type, if you want to transition an executable to the rhsmcertd_t domain.
+
+
+.EX
+.PP
+.B rhsmcertd_initrc_exec_t 
+.EE
+
+- Set files with the rhsmcertd_initrc_exec_t type, if you want to transition an executable to the rhsmcertd_initrc_t domain.
+
+
+.EX
+.PP
+.B rhsmcertd_lock_t 
+.EE
+
+- Set files with the rhsmcertd_lock_t type, if you want to treat the files as rhsmcertd lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B rhsmcertd_log_t 
+.EE
+
+- Set files with the rhsmcertd_log_t type, if you want to treat the data as rhsmcertd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B rhsmcertd_var_lib_t 
+.EE
+
+- Set files with the rhsmcertd_var_lib_t type, if you want to store the rhsmcertd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B rhsmcertd_var_run_t 
+.EE
+
+- Set files with the rhsmcertd_var_run_t type, if you want to store the rhsmcertd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rhsmcertd policy is very flexible allowing users to setup their rhsmcertd processes in as secure a method as possible.
+.PP 
+The following process types are defined for rhsmcertd:
+
+.EX
+.B rhsmcertd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rhsmcertd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/ricci_selinux.8 b/man/man8/ricci_selinux.8
new file mode 100644
index 0000000..3a36033
--- /dev/null
+++ b/man/man8/ricci_selinux.8
@@ -0,0 +1,246 @@
+.TH  "ricci_selinux"  "8"  "ricci" "dwalsh@redhat.com" "ricci SELinux Policy documentation"
+.SH "NAME"
+ricci_selinux \- Security Enhanced Linux Policy for the ricci processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B ricci
+(Ricci cluster management agent)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ricci policy is very flexible allowing users to setup their ricci processes in as secure a method as possible.
+.PP 
+The following file types are defined for ricci:
+
+
+.EX
+.PP
+.B ricci_exec_t 
+.EE
+
+- Set files with the ricci_exec_t type, if you want to transition an executable to the ricci_t domain.
+
+
+.EX
+.PP
+.B ricci_initrc_exec_t 
+.EE
+
+- Set files with the ricci_initrc_exec_t type, if you want to transition an executable to the ricci_initrc_t domain.
+
+
+.EX
+.PP
+.B ricci_modcluster_exec_t 
+.EE
+
+- Set files with the ricci_modcluster_exec_t type, if you want to transition an executable to the ricci_modcluster_t domain.
+
+
+.EX
+.PP
+.B ricci_modcluster_var_lib_t 
+.EE
+
+- Set files with the ricci_modcluster_var_lib_t type, if you want to store the ricci modcluster files under the /var/lib directory.
+
+
+.EX
+.PP
+.B ricci_modcluster_var_log_t 
+.EE
+
+- Set files with the ricci_modcluster_var_log_t type, if you want to treat the data as ricci modcluster var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B ricci_modcluster_var_run_t 
+.EE
+
+- Set files with the ricci_modcluster_var_run_t type, if you want to store the ricci modcluster files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/modclusterd\.pid, /var/run/clumond\.sock
+
+.EX
+.PP
+.B ricci_modclusterd_exec_t 
+.EE
+
+- Set files with the ricci_modclusterd_exec_t type, if you want to transition an executable to the ricci_modclusterd_t domain.
+
+
+.EX
+.PP
+.B ricci_modclusterd_tmpfs_t 
+.EE
+
+- Set files with the ricci_modclusterd_tmpfs_t type, if you want to store ricci modclusterd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B ricci_modlog_exec_t 
+.EE
+
+- Set files with the ricci_modlog_exec_t type, if you want to transition an executable to the ricci_modlog_t domain.
+
+
+.EX
+.PP
+.B ricci_modrpm_exec_t 
+.EE
+
+- Set files with the ricci_modrpm_exec_t type, if you want to transition an executable to the ricci_modrpm_t domain.
+
+
+.EX
+.PP
+.B ricci_modservice_exec_t 
+.EE
+
+- Set files with the ricci_modservice_exec_t type, if you want to transition an executable to the ricci_modservice_t domain.
+
+
+.EX
+.PP
+.B ricci_modstorage_exec_t 
+.EE
+
+- Set files with the ricci_modstorage_exec_t type, if you want to transition an executable to the ricci_modstorage_t domain.
+
+
+.EX
+.PP
+.B ricci_modstorage_lock_t 
+.EE
+
+- Set files with the ricci_modstorage_lock_t type, if you want to treat the files as ricci modstorage lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B ricci_tmp_t 
+.EE
+
+- Set files with the ricci_tmp_t type, if you want to store ricci temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B ricci_var_lib_t 
+.EE
+
+- Set files with the ricci_var_lib_t type, if you want to store the ricci files under the /var/lib directory.
+
+
+.EX
+.PP
+.B ricci_var_log_t 
+.EE
+
+- Set files with the ricci_var_log_t type, if you want to treat the data as ricci var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B ricci_var_run_t 
+.EE
+
+- Set files with the ricci_var_run_t type, if you want to store the ricci files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux ricci policy is very flexible allowing users to setup their ricci processes in as secure a method as possible.
+.PP 
+The following port types are defined for ricci:
+
+.EX
+.TP 5
+.B ricci_modcluster_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B ricci_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ricci policy is very flexible allowing users to setup their ricci processes in as secure a method as possible.
+.PP 
+The following process types are defined for ricci:
+
+.EX
+.B ricci_t, ricci_modservice_t, ricci_modstorage_t, ricci_modclusterd_t, ricci_modlog_t, ricci_modrpm_t, ricci_modcluster_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ricci(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/rlogind_selinux.8 b/man/man8/rlogind_selinux.8
new file mode 100644
index 0000000..b86f39b
--- /dev/null
+++ b/man/man8/rlogind_selinux.8
@@ -0,0 +1,137 @@
+.TH  "rlogind_selinux"  "8"  "rlogind" "dwalsh@redhat.com" "rlogind SELinux Policy documentation"
+.SH "NAME"
+rlogind_selinux \- Security Enhanced Linux Policy for the rlogind processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rlogind policy is very flexible allowing users to setup their rlogind processes in as secure a method as possible.
+.PP 
+The following file types are defined for rlogind:
+
+
+.EX
+.PP
+.B rlogind_exec_t 
+.EE
+
+- Set files with the rlogind_exec_t type, if you want to transition an executable to the rlogind_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/telnetlogin, /usr/kerberos/sbin/klogind, /usr/sbin/in\.rlogind
+
+.EX
+.PP
+.B rlogind_home_t 
+.EE
+
+- Set files with the rlogind_home_t type, if you want to store rlogind files in the users home directory.
+
+.br
+.TP 5
+Paths: 
+/root/\.rlogin, /root/\.rhosts
+
+.EX
+.PP
+.B rlogind_keytab_t 
+.EE
+
+- Set files with the rlogind_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B rlogind_tmp_t 
+.EE
+
+- Set files with the rlogind_tmp_t type, if you want to store rlogind temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B rlogind_var_run_t 
+.EE
+
+- Set files with the rlogind_var_run_t type, if you want to store the rlogind files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux rlogind policy is very flexible allowing users to setup their rlogind processes in as secure a method as possible.
+.PP 
+The following port types are defined for rlogind:
+
+.EX
+.TP 5
+.B rlogind_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rlogind policy is very flexible allowing users to setup their rlogind processes in as secure a method as possible.
+.PP 
+The following process types are defined for rlogind:
+
+.EX
+.B rlogind_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rlogind(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/roundup_selinux.8 b/man/man8/roundup_selinux.8
new file mode 100644
index 0000000..5269077
--- /dev/null
+++ b/man/man8/roundup_selinux.8
@@ -0,0 +1,101 @@
+.TH  "roundup_selinux"  "8"  "roundup" "dwalsh@redhat.com" "roundup SELinux Policy documentation"
+.SH "NAME"
+roundup_selinux \- Security Enhanced Linux Policy for the roundup processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B roundup
+(Roundup Issue Tracking System policy)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux roundup policy is very flexible allowing users to setup their roundup processes in as secure a method as possible.
+.PP 
+The following file types are defined for roundup:
+
+
+.EX
+.PP
+.B roundup_exec_t 
+.EE
+
+- Set files with the roundup_exec_t type, if you want to transition an executable to the roundup_t domain.
+
+
+.EX
+.PP
+.B roundup_initrc_exec_t 
+.EE
+
+- Set files with the roundup_initrc_exec_t type, if you want to transition an executable to the roundup_initrc_t domain.
+
+
+.EX
+.PP
+.B roundup_var_lib_t 
+.EE
+
+- Set files with the roundup_var_lib_t type, if you want to store the roundup files under the /var/lib directory.
+
+
+.EX
+.PP
+.B roundup_var_run_t 
+.EE
+
+- Set files with the roundup_var_run_t type, if you want to store the roundup files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux roundup policy is very flexible allowing users to setup their roundup processes in as secure a method as possible.
+.PP 
+The following process types are defined for roundup:
+
+.EX
+.B roundup_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), roundup(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/rpcbind_selinux.8 b/man/man8/rpcbind_selinux.8
new file mode 100644
index 0000000..8fdfc21
--- /dev/null
+++ b/man/man8/rpcbind_selinux.8
@@ -0,0 +1,113 @@
+.TH  "rpcbind_selinux"  "8"  "rpcbind" "dwalsh@redhat.com" "rpcbind SELinux Policy documentation"
+.SH "NAME"
+rpcbind_selinux \- Security Enhanced Linux Policy for the rpcbind processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B rpcbind
+(Universal Addresses to RPC Program Number Mapper)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rpcbind policy is very flexible allowing users to setup their rpcbind processes in as secure a method as possible.
+.PP 
+The following file types are defined for rpcbind:
+
+
+.EX
+.PP
+.B rpcbind_exec_t 
+.EE
+
+- Set files with the rpcbind_exec_t type, if you want to transition an executable to the rpcbind_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/rpcbind, /sbin/rpcbind
+
+.EX
+.PP
+.B rpcbind_initrc_exec_t 
+.EE
+
+- Set files with the rpcbind_initrc_exec_t type, if you want to transition an executable to the rpcbind_initrc_t domain.
+
+
+.EX
+.PP
+.B rpcbind_var_lib_t 
+.EE
+
+- Set files with the rpcbind_var_lib_t type, if you want to store the rpcbind files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/rpcbind(/.*)?, /var/cache/rpcbind(/.*)?
+
+.EX
+.PP
+.B rpcbind_var_run_t 
+.EE
+
+- Set files with the rpcbind_var_run_t type, if you want to store the rpcbind files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/rpcbind\.sock, /var/run/rpcbind\.lock, /var/run/rpc.statd\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rpcbind policy is very flexible allowing users to setup their rpcbind processes in as secure a method as possible.
+.PP 
+The following process types are defined for rpcbind:
+
+.EX
+.B rpcbind_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rpcbind(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/rpcd_selinux.8 b/man/man8/rpcd_selinux.8
new file mode 100644
index 0000000..f86ef74
--- /dev/null
+++ b/man/man8/rpcd_selinux.8
@@ -0,0 +1,119 @@
+.TH  "rpcd_selinux"  "8"  "rpcd" "dwalsh@redhat.com" "rpcd SELinux Policy documentation"
+.SH "NAME"
+rpcd_selinux \- Security Enhanced Linux Policy for the rpcd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rpcd policy is very flexible allowing users to setup their rpcd processes in as secure a method as possible.
+.PP 
+The following file types are defined for rpcd:
+
+
+.EX
+.PP
+.B rpc_pipefs_t 
+.EE
+
+- Set files with the rpc_pipefs_t type, if you want to treat the files as rpc pipefs data.
+
+
+.EX
+.PP
+.B rpcd_exec_t 
+.EE
+
+- Set files with the rpcd_exec_t type, if you want to transition an executable to the rpcd_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/sm-notify, /usr/sbin/rpc\..*, /usr/sbin/rpc\.idmapd, /usr/sbin/sm-notify, /usr/sbin/rpc\.rquotad, /sbin/rpc\..*
+
+.EX
+.PP
+.B rpcd_initrc_exec_t 
+.EE
+
+- Set files with the rpcd_initrc_exec_t type, if you want to transition an executable to the rpcd_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/nfslock, /etc/rc\.d/init\.d/rpcidmapd
+
+.EX
+.PP
+.B rpcd_unit_file_t 
+.EE
+
+- Set files with the rpcd_unit_file_t type, if you want to treat the files as rpcd unit content.
+
+.br
+.TP 5
+Paths: 
+/lib/systemd/system/rpc.*, /usr/lib/systemd/system/rpc.*
+
+.EX
+.PP
+.B rpcd_var_run_t 
+.EE
+
+- Set files with the rpcd_var_run_t type, if you want to store the rpcd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/rpc\.statd(/.*)?, /var/run/rpc\.statd\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rpcd policy is very flexible allowing users to setup their rpcd processes in as secure a method as possible.
+.PP 
+The following process types are defined for rpcd:
+
+.EX
+.B rpcd_t, rpcbind_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rpcd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/rpm_selinux.8 b/man/man8/rpm_selinux.8
new file mode 100644
index 0000000..2c01fa3
--- /dev/null
+++ b/man/man8/rpm_selinux.8
@@ -0,0 +1,177 @@
+.TH  "rpm_selinux"  "8"  "rpm" "dwalsh@redhat.com" "rpm SELinux Policy documentation"
+.SH "NAME"
+rpm_selinux \- Security Enhanced Linux Policy for the rpm processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B rpm
+(Policy for the RPM package manager)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rpm policy is very flexible allowing users to setup their rpm processes in as secure a method as possible.
+.PP 
+The following file types are defined for rpm:
+
+
+.EX
+.PP
+.B rpm_exec_t 
+.EE
+
+- Set files with the rpm_exec_t type, if you want to transition an executable to the rpm_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/apt-get, /usr/libexec/yumDBUSBackend.py, /usr/sbin/rhn_check, /usr/bin/rpmdev-rmdevelrpms, /usr/sbin/synaptic, /usr/share/yumex/yumex-yum-backend, /usr/sbin/yum-updatesd, /usr/sbin/pup, /usr/libexec/packagekitd, /usr/bin/apt-shell, /usr/sbin/pirut, /usr/bin/package-cleanup, /usr/bin/fedora-rmdevelrpms, /bin/rpm, /usr/bin/yum, /usr/sbin/system-install-packages, /usr/bin/zif, /usr/bin/rpm, /usr/sbin/yum-complete-transaction, /usr/bin/smart, /usr/sbin/packagekitd, /usr/sbin/rhnreg_ks, /usr/share/yumex/yum_childtask\.py, /usr/sbin/up2date
+
+.EX
+.PP
+.B rpm_file_t 
+.EE
+
+- Set files with the rpm_file_t type, if you want to treat the files as rpm content.
+
+
+.EX
+.PP
+.B rpm_log_t 
+.EE
+
+- Set files with the rpm_log_t type, if you want to treat the data as rpm log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/yum\.log.*, /var/log/rpmpkgs.*
+
+.EX
+.PP
+.B rpm_script_exec_t 
+.EE
+
+- Set files with the rpm_script_exec_t type, if you want to transition an executable to the rpm_script_t domain.
+
+
+.EX
+.PP
+.B rpm_script_tmp_t 
+.EE
+
+- Set files with the rpm_script_tmp_t type, if you want to store rpm script temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B rpm_script_tmpfs_t 
+.EE
+
+- Set files with the rpm_script_tmpfs_t type, if you want to store rpm script files on a tmpfs file system.
+
+
+.EX
+.PP
+.B rpm_tmp_t 
+.EE
+
+- Set files with the rpm_tmp_t type, if you want to store rpm temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B rpm_tmpfs_t 
+.EE
+
+- Set files with the rpm_tmpfs_t type, if you want to store rpm files on a tmpfs file system.
+
+
+.EX
+.PP
+.B rpm_var_cache_t 
+.EE
+
+- Set files with the rpm_var_cache_t type, if you want to store the files under the /var/cache directory.
+
+.br
+.TP 5
+Paths: 
+/var/cache/PackageKit(/.*)?, /var/cache/yum(/.*)?, /var/spool/up2date(/.*)?
+
+.EX
+.PP
+.B rpm_var_lib_t 
+.EE
+
+- Set files with the rpm_var_lib_t type, if you want to store the rpm files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/yum(/.*)?, /var/lib/rpm(/.*)?, /var/lib/alternatives(/.*)?
+
+.EX
+.PP
+.B rpm_var_run_t 
+.EE
+
+- Set files with the rpm_var_run_t type, if you want to store the rpm files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/PackageKit(/.*)?, /var/run/yum.*
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rpm policy is very flexible allowing users to setup their rpm processes in as secure a method as possible.
+.PP 
+The following process types are defined for rpm:
+
+.EX
+.B rpm_t, rpm_script_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rpm(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/rshd_selinux.8 b/man/man8/rshd_selinux.8
new file mode 100644
index 0000000..929f616
--- /dev/null
+++ b/man/man8/rshd_selinux.8
@@ -0,0 +1,115 @@
+.TH  "rshd_selinux"  "8"  "rshd" "dwalsh@redhat.com" "rshd SELinux Policy documentation"
+.SH "NAME"
+rshd_selinux \- Security Enhanced Linux Policy for the rshd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B rshd
+(Remote shell service)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rshd policy is very flexible allowing users to setup their rshd processes in as secure a method as possible.
+.PP 
+The following file types are defined for rshd:
+
+
+.EX
+.PP
+.B rshd_exec_t 
+.EE
+
+- Set files with the rshd_exec_t type, if you want to transition an executable to the rshd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/in\.rshd, /usr/kerberos/sbin/kshd, /usr/sbin/in\.rexecd
+
+.EX
+.PP
+.B rshd_keytab_t 
+.EE
+
+- Set files with the rshd_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux rshd policy is very flexible allowing users to setup their rshd processes in as secure a method as possible.
+.PP 
+The following port types are defined for rshd:
+
+.EX
+.TP 5
+.B rsh_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rshd policy is very flexible allowing users to setup their rshd processes in as secure a method as possible.
+.PP 
+The following process types are defined for rshd:
+
+.EX
+.B rshd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rshd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/rssh_selinux.8 b/man/man8/rssh_selinux.8
new file mode 100644
index 0000000..fea92f8
--- /dev/null
+++ b/man/man8/rssh_selinux.8
@@ -0,0 +1,101 @@
+.TH  "rssh_selinux"  "8"  "rssh" "dwalsh@redhat.com" "rssh SELinux Policy documentation"
+.SH "NAME"
+rssh_selinux \- Security Enhanced Linux Policy for the rssh processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B rssh
+(Restricted (scp/sftp) only shell)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rssh policy is very flexible allowing users to setup their rssh processes in as secure a method as possible.
+.PP 
+The following file types are defined for rssh:
+
+
+.EX
+.PP
+.B rssh_chroot_helper_exec_t 
+.EE
+
+- Set files with the rssh_chroot_helper_exec_t type, if you want to transition an executable to the rssh_chroot_helper_t domain.
+
+
+.EX
+.PP
+.B rssh_exec_t 
+.EE
+
+- Set files with the rssh_exec_t type, if you want to transition an executable to the rssh_t domain.
+
+
+.EX
+.PP
+.B rssh_ro_t 
+.EE
+
+- Set files with the rssh_ro_t type, if you want to treat the files as rssh read/only content.
+
+
+.EX
+.PP
+.B rssh_rw_t 
+.EE
+
+- Set files with the rssh_rw_t type, if you want to treat the files as rssh read/write content.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rssh policy is very flexible allowing users to setup their rssh processes in as secure a method as possible.
+.PP 
+The following process types are defined for rssh:
+
+.EX
+.B rssh_t, rssh_chroot_helper_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rssh(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/rsync_selinux.8 b/man/man8/rsync_selinux.8
index ad9ccf5..65a1b3e 100644
--- a/man/man8/rsync_selinux.8
+++ b/man/man8/rsync_selinux.8
@@ -1,52 +1,205 @@
-.TH  "rsync_selinux"  "8"  "17 Jan 2005" "dwalsh@redhat.com" "rsync Selinux Policy documentation"
-.de EX
-.nf
-.ft CW
-..
-.de EE
-.ft R
-.fi
-..
+.TH  "rsync_selinux"  "8"  "rsync" "dwalsh@redhat.com" "rsync SELinux Policy documentation"
 .SH "NAME"
-rsync_selinux \- Security Enhanced Linux Policy for the rsync daemon
+rsync_selinux \- Security Enhanced Linux Policy for the rsync processes
 .SH "DESCRIPTION"
 
-Security-Enhanced Linux secures the rsync server via flexible mandatory access
+
+SELinux Linux secures
+.B rsync
+(Fast incremental file transfer for synchronization)
+processes via flexible mandatory access
 control.  
-.SH FILE_CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
-Policy governs the access daemons have to these files. 
-If you want to share files using the rsync daemon, you must label the files and directories public_content_t.  So if you created a special directory /var/rsync, you 
-would need to label the directory with the chcon tool.
-.TP
-chcon -t public_content_t /var/rsync
-.TP
-.TP
-To make this change permanent (survive a relabel), use the semanage command to add the change to file context configuration:
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  rsync policy is extremely flexible and has several booleans that allow you to manipulate the policy and run rsync with the tightest access possible.
+
+
+.PP
+If you want to allow rsync to run as a clien, you must turn on the rsync_client boolean.
+
+.EX
+.B setsebool -P rsync_client 1
+.EE
+
+.PP
+If you want to allow rsync to export any files/directories read only, you must turn on the rsync_export_all_ro boolean.
+
+.EX
+.B setsebool -P rsync_export_all_ro 1
+.EE
+
+.PP
+If you want to allow rsync servers to share nfs files system, you must turn on the rsync_use_nfs boolean.
+
+.EX
+.B setsebool -P rsync_use_nfs 1
+.EE
+
+.PP
+If you want to allow rsync servers to share cifs files system, you must turn on the rsync_use_cifs boolean.
+
+.EX
+.B setsebool -P rsync_use_cifs 1
+.EE
+
+.SH SHARING FILES
+If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
 .TP
+Allow rsync servers to read the /var/rsync directory by adding the public_content_t file type to the directory and by restoring the file type.
+.PP
+.B
 semanage fcontext -a -t public_content_t "/var/rsync(/.*)?"
+.br
+.B restorecon -F -R -v /var/rsync
+.pp
 .TP
-This command adds the following entry to /etc/selinux/POLICYTYPE/contexts/files/file_contexts.local:
-.TP
-/var/rsync(/.*)? system_u:object_r:publix_content_t:s0
-.TP
-Run the restorecon command to apply the changes:
-.TP
-restorecon -R -v /var/rsync/
+Allow rsync servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_rsync_anon_write boolean to be set.
+.PP
+.B
+semanage fcontext -a -t public_content_rw_t "/var/rsync/incoming(/.*)?"
+.br
+.B restorecon -F -R -v /var/rsync/incoming
+
+
+.PP
+If you want to allow rsync to modify public files used for public file transfer services.  Files/Directories must be labeled public_content_rw_t., you must turn on the allow_rsync_anon_write boolean.
+
+.EX
+.B setsebool -P allow_rsync_anon_write 1
 .EE
 
-.SH SHARING FILES
-If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.  allow_DOMAIN_anon_write.  So for rsync you would execute:
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rsync policy is very flexible allowing users to setup their rsync processes in as secure a method as possible.
+.PP 
+The following file types are defined for rsync:
+
 
 .EX
-setsebool -P allow_rsync_anon_write=1
+.PP
+.B rsync_data_t 
 .EE
 
-.SH BOOLEANS
-.TP
-system-config-selinux is a GUI tool available to customize SELinux policy settings.
+- Set files with the rsync_data_t type, if you want to treat the files as rsync content.
+
+
+.EX
+.PP
+.B rsync_etc_t 
+.EE
+
+- Set files with the rsync_etc_t type, if you want to store rsync files in the /etc directories.
+
+
+.EX
+.PP
+.B rsync_exec_t 
+.EE
+
+- Set files with the rsync_exec_t type, if you want to transition an executable to the rsync_t domain.
+
+
+.EX
+.PP
+.B rsync_log_t 
+.EE
+
+- Set files with the rsync_log_t type, if you want to treat the data as rsync log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B rsync_tmp_t 
+.EE
+
+- Set files with the rsync_tmp_t type, if you want to store rsync temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B rsync_var_run_t 
+.EE
+
+- Set files with the rsync_var_run_t type, if you want to store the rsync files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux rsync policy is very flexible allowing users to setup their rsync processes in as secure a method as possible.
+.PP 
+The following port types are defined for rsync:
+
+.EX
+.TP 5
+.B rsync_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rsync policy is very flexible allowing users to setup their rsync processes in as secure a method as possible.
+.PP 
+The following process types are defined for rsync:
+
+.EX
+.B rsync_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
 .SH AUTHOR	
-This manual page was written by Dan Walsh <dwalsh@redhat.com>.
+This manual page was autogenerated by genman.py.
 
 .SH "SEE ALSO"
-selinux(8), rsync(1), chcon(1), setsebool(8), semanage(8)
+selinux(8), rsync(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/rtkit_selinux.8 b/man/man8/rtkit_selinux.8
new file mode 100644
index 0000000..50cb948
--- /dev/null
+++ b/man/man8/rtkit_selinux.8
@@ -0,0 +1,77 @@
+.TH  "rtkit_selinux"  "8"  "rtkit" "dwalsh@redhat.com" "rtkit SELinux Policy documentation"
+.SH "NAME"
+rtkit_selinux \- Security Enhanced Linux Policy for the rtkit processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B rtkit
+(Realtime scheduling for user processes)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rtkit policy is very flexible allowing users to setup their rtkit processes in as secure a method as possible.
+.PP 
+The following file types are defined for rtkit:
+
+
+.EX
+.PP
+.B rtkit_daemon_exec_t 
+.EE
+
+- Set files with the rtkit_daemon_exec_t type, if you want to transition an executable to the rtkit_daemon_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rtkit policy is very flexible allowing users to setup their rtkit processes in as secure a method as possible.
+.PP 
+The following process types are defined for rtkit:
+
+.EX
+.B rtkit_daemon_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rtkit(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/run_selinux.8 b/man/man8/run_selinux.8
new file mode 100644
index 0000000..75796ad
--- /dev/null
+++ b/man/man8/run_selinux.8
@@ -0,0 +1,100 @@
+.TH  "run_selinux"  "8"  "run" "dwalsh@redhat.com" "run SELinux Policy documentation"
+.SH "NAME"
+run_selinux \- Security Enhanced Linux Policy for the run processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  run policy is extremely flexible and has several booleans that allow you to manipulate the policy and run run with the tightest access possible.
+
+
+.PP
+If you want to allow xend to run qemu-dm. Not required if using paravirt and no vfb, you must turn on the xend_run_qemu boolean.
+
+.EX
+.B setsebool -P xend_run_qemu 1
+.EE
+
+.PP
+If you want to allow xend to run blktapctrl/tapdisk. Not required if using dedicated logical volumes for disk images, you must turn on the xend_run_blktap boolean.
+
+.EX
+.B setsebool -P xend_run_blktap 1
+.EE
+
+.PP
+If you want to allow samba to run unconfined script, you must turn on the samba_run_unconfined boolean.
+
+.EX
+.B setsebool -P samba_run_unconfined 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux run policy is very flexible allowing users to setup their run processes in as secure a method as possible.
+.PP 
+The following file types are defined for run:
+
+
+.EX
+.PP
+.B run_init_exec_t 
+.EE
+
+- Set files with the run_init_exec_t type, if you want to transition an executable to the run_init_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux run policy is very flexible allowing users to setup their run processes in as secure a method as possible.
+.PP 
+The following process types are defined for run:
+
+.EX
+.B run_init_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), run(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/rwho_selinux.8 b/man/man8/rwho_selinux.8
new file mode 100644
index 0000000..65c182c
--- /dev/null
+++ b/man/man8/rwho_selinux.8
@@ -0,0 +1,127 @@
+.TH  "rwho_selinux"  "8"  "rwho" "dwalsh@redhat.com" "rwho SELinux Policy documentation"
+.SH "NAME"
+rwho_selinux \- Security Enhanced Linux Policy for the rwho processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B rwho
+(Who is logged in on other machines?)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux rwho policy is very flexible allowing users to setup their rwho processes in as secure a method as possible.
+.PP 
+The following file types are defined for rwho:
+
+
+.EX
+.PP
+.B rwho_exec_t 
+.EE
+
+- Set files with the rwho_exec_t type, if you want to transition an executable to the rwho_t domain.
+
+
+.EX
+.PP
+.B rwho_initrc_exec_t 
+.EE
+
+- Set files with the rwho_initrc_exec_t type, if you want to transition an executable to the rwho_initrc_t domain.
+
+
+.EX
+.PP
+.B rwho_log_t 
+.EE
+
+- Set files with the rwho_log_t type, if you want to treat the data as rwho log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B rwho_spool_t 
+.EE
+
+- Set files with the rwho_spool_t type, if you want to store the rwho files under the /var/spool directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux rwho policy is very flexible allowing users to setup their rwho processes in as secure a method as possible.
+.PP 
+The following port types are defined for rwho:
+
+.EX
+.TP 5
+.B rwho_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux rwho policy is very flexible allowing users to setup their rwho processes in as secure a method as possible.
+.PP 
+The following process types are defined for rwho:
+
+.EX
+.B rwho_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), rwho(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/samba_selinux.8 b/man/man8/samba_selinux.8
index ca702c7..25316f0 100644
--- a/man/man8/samba_selinux.8
+++ b/man/man8/samba_selinux.8
@@ -1,56 +1,269 @@
-.TH  "samba_selinux"  "8"  "17 Jan 2005" "dwalsh@redhat.com" "Samba Selinux Policy documentation"
+.TH  "samba_selinux"  "8"  "samba" "dwalsh@redhat.com" "samba SELinux Policy documentation"
 .SH "NAME"
-samba_selinux \- Security Enhanced Linux Policy for Samba
+samba_selinux \- Security Enhanced Linux Policy for the samba processes
 .SH "DESCRIPTION"
 
-Security-Enhanced Linux secures the Samba server via flexible mandatory access
+
+SELinux Linux secures
+.B samba
+(
+SMB and CIFS client/server programs for UNIX and
+name  Service  Switch  daemon for resolving names
+from Windows NT servers.
+)
+processes via flexible mandatory access
 control.  
-.SH FILE_CONTEXTS
-SELinux requires files to have an extended attribute to define the file type. 
-Policy governs the access daemons have to these files. 
-If you want to share files other than home directories, those files must be 
-labeled samba_share_t.  So if you created a special directory /var/eng, you 
-would need to label the directory with the chcon tool.
-.TP
-chcon -t samba_share_t /var/eng
-.TP
-To make this change permanent (survive a relabel), use the semanage command to add the change to file context configuration:
-.TP
-semanage fcontext -a -t samba_share_t "/var/eng(/.*)?"
-.TP
-This command adds the following entry to /etc/selinux/POLICYTYPE/contexts/files/file_contexts.local:
-.TP
-/var/eng(/.*)? system_u:object_r:samba_share_t:s0
-.TP
-Run the restorecon command to apply the changes:
-.TP
-restorecon -R -v /var/eng/
-
-.SH SHARING FILES
-If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.  allow_DOMAIN_anon_write.  So for samba you would execute:
-
-setsebool -P allow_smbd_anon_write=1
+
+
 
 .SH BOOLEANS
-.br 
-SELinux policy is customizable based on least access required.  So by 
-default SELinux policy turns off SELinux sharing of home directories and 
-the use of Samba shares from a remote machine as a home directory.
-.TP
-If you are setting up this machine as a Samba server and wish to share the home directories, you need to set the samba_enable_home_dirs boolean. 
+SELinux policy is customizable based on least access required.  samba policy is extremely flexible and has several booleans that allow you to manipulate the policy and run samba with the tightest access possible.
+
+
+.PP
+If you want to allow samba to act as the domain controller, add users, groups and change passwords, you must turn on the samba_domain_controller boolean.
+
+.EX
+.B setsebool -P samba_domain_controller 1
+.EE
+
+.PP
+If you want to allow samba to act as a portmappe, you must turn on the samba_portmapper boolean.
+
+.EX
+.B setsebool -P samba_portmapper 1
+.EE
+
+.PP
+If you want to allow samba to share any file/directory read only, you must turn on the samba_export_all_ro boolean.
+
+.EX
+.B setsebool -P samba_export_all_ro 1
+.EE
+
+.PP
+If you want to support SAMBA home directorie, you must turn on the use_samba_home_dirs boolean.
+
+.EX
+.B setsebool -P use_samba_home_dirs 1
+.EE
+
+.PP
+If you want to allow samba to create new home directories (e.g. via PAM, you must turn on the samba_create_home_dirs boolean.
+
+.EX
+.B setsebool -P samba_create_home_dirs 1
+.EE
+
+.PP
+If you want to allow samba to share users home directories, you must turn on the samba_enable_home_dirs boolean.
+
+.EX
+.B setsebool -P samba_enable_home_dirs 1
+.EE
+
+.PP
+If you want to allow samba to export ntfs/fusefs volumes, you must turn on the samba_share_fusefs boolean.
+
+.EX
+.B setsebool -P samba_share_fusefs 1
+.EE
+
+.PP
+If you want to allow samba to export NFS volumes, you must turn on the samba_share_nfs boolean.
+
+.EX
+.B setsebool -P samba_share_nfs 1
+.EE
+
+.PP
+If you want to allow samba to run unconfined script, you must turn on the samba_run_unconfined boolean.
+
+.EX
+.B setsebool -P samba_run_unconfined 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to manage cifs file, you must turn on the sanlock_use_samba boolean.
+
+.EX
+.B setsebool -P sanlock_use_samba 1
+.EE
+
+.PP
+If you want to allow samba to share any file/directory read/write, you must turn on the samba_export_all_rw boolean.
+
+.EX
+.B setsebool -P samba_export_all_rw 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to manage cifs file, you must turn on the virt_use_samba boolean.
+
+.EX
+.B setsebool -P virt_use_samba 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux samba policy is very flexible allowing users to setup their samba processes in as secure a method as possible.
+.PP 
+The following file types are defined for samba:
+
+
+.EX
+.PP
+.B samba_etc_t 
+.EE
+
+- Set files with the samba_etc_t type, if you want to store samba files in the /etc directories.
+
+
+.EX
+.PP
+.B samba_initrc_exec_t 
+.EE
+
+- Set files with the samba_initrc_exec_t type, if you want to transition an executable to the samba_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/nmb, /etc/rc\.d/init\.d/smb, /etc/rc\.d/init\.d/winbind
+
+.EX
+.PP
+.B samba_log_t 
+.EE
+
+- Set files with the samba_log_t type, if you want to treat the data as samba log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B samba_net_exec_t 
+.EE
+
+- Set files with the samba_net_exec_t type, if you want to transition an executable to the samba_net_t domain.
+
+
+.EX
+.PP
+.B samba_net_tmp_t 
+.EE
+
+- Set files with the samba_net_tmp_t type, if you want to store samba net temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B samba_secrets_t 
+.EE
+
+- Set files with the samba_secrets_t type, if you want to treat the files as samba secrets data.
+
+.br
+.TP 5
+Paths: 
+/etc/samba/secrets\.tdb, /etc/samba/passdb\.tdb, /etc/samba/MACHINE\.SID, /etc/samba/smbpasswd
+
+.EX
+.PP
+.B samba_share_t 
+.EE
+
+- Set files with the samba_share_t type, if you want to treat the files as samba share data.
+
+
+.EX
+.PP
+.B samba_unconfined_script_exec_t 
+.EE
+
+- Set files with the samba_unconfined_script_exec_t type, if you want to transition an executable to the samba_unconfined_script_t domain.
+
+
+.EX
+.PP
+.B samba_unit_file_t 
+.EE
+
+- Set files with the samba_unit_file_t type, if you want to treat the files as samba unit content.
+
+.br
+.TP 5
+Paths: 
+/lib/systemd/system/smb.service, /usr/lib/systemd/system/smb.service
+
+.EX
+.PP
+.B samba_var_t 
+.EE
+
+- Set files with the samba_var_t type, if you want to store the s files under the /var directory.
+
 .br
+.TP 5
+Paths: 
+/var/spool/samba(/.*)?, /var/cache/samba(/.*)?, /var/lib/samba(/.*)?
+
+.EX
+.PP
+.B sambagui_exec_t 
+.EE
+
+- Set files with the sambagui_exec_t type, if you want to transition an executable to the sambagui_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux samba policy is very flexible allowing users to setup their samba processes in as secure a method as possible.
+.PP 
+The following process types are defined for samba:
+
+.EX
+.B samba_net_t, samba_unconfined_script_t, sambagui_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
 
-setsebool -P samba_enable_home_dirs 1
-.TP
-If you want to use a remote Samba server for the home directories on this machine, you must set the use_samba_home_dirs boolean.
-.br 
+.B semanage boolean
+can also be used to manipulate the booleans
 
-setsebool -P use_samba_home_dirs 1
-.TP
-system-config-selinux is a GUI tool available to customize SELinux policy settings.
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
 
 .SH AUTHOR	
-This manual page was written by Dan Walsh <dwalsh@redhat.com>.
+This manual page was autogenerated by genman.py.
 
 .SH "SEE ALSO"
-selinux(8), samba(7), chcon(1), setsebool(8), semanage(8)
+selinux(8), samba(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/sambagui_selinux.8 b/man/man8/sambagui_selinux.8
new file mode 100644
index 0000000..763d193
--- /dev/null
+++ b/man/man8/sambagui_selinux.8
@@ -0,0 +1,77 @@
+.TH  "sambagui_selinux"  "8"  "sambagui" "dwalsh@redhat.com" "sambagui SELinux Policy documentation"
+.SH "NAME"
+sambagui_selinux \- Security Enhanced Linux Policy for the sambagui processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B sambagui
+(system-config-samba dbus service policy)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux sambagui policy is very flexible allowing users to setup their sambagui processes in as secure a method as possible.
+.PP 
+The following file types are defined for sambagui:
+
+
+.EX
+.PP
+.B sambagui_exec_t 
+.EE
+
+- Set files with the sambagui_exec_t type, if you want to transition an executable to the sambagui_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux sambagui policy is very flexible allowing users to setup their sambagui processes in as secure a method as possible.
+.PP 
+The following process types are defined for sambagui:
+
+.EX
+.B sambagui_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), sambagui(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/sandbox_selinux.8 b/man/man8/sandbox_selinux.8
new file mode 100644
index 0000000..437feff
--- /dev/null
+++ b/man/man8/sandbox_selinux.8
@@ -0,0 +1,148 @@
+.TH  "sandbox_selinux"  "8"  "sandbox" "dwalsh@redhat.com" "sandbox SELinux Policy documentation"
+.SH "NAME"
+sandbox_selinux \- Security Enhanced Linux Policy for the sandbox processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B sandbox
+(policy for sandbox)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  sandbox policy is extremely flexible and has several booleans that allow you to manipulate the policy and run sandbox with the tightest access possible.
+
+
+.PP
+If you want to allow unconfined users to transition to the chrome sandbox domains when running chrome-sandbo, you must turn on the unconfined_chrome_sandbox_transition boolean.
+
+.EX
+.B setsebool -P unconfined_chrome_sandbox_transition 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux sandbox policy is very flexible allowing users to setup their sandbox processes in as secure a method as possible.
+.PP 
+The following file types are defined for sandbox:
+
+
+.EX
+.PP
+.B sandbox_devpts_t 
+.EE
+
+- Set files with the sandbox_devpts_t type, if you want to treat the files as sandbox devpts data.
+
+
+.EX
+.PP
+.B sandbox_exec_t 
+.EE
+
+- Set files with the sandbox_exec_t type, if you want to transition an executable to the sandbox_t domain.
+
+
+.EX
+.PP
+.B sandbox_file_t 
+.EE
+
+- Set files with the sandbox_file_t type, if you want to treat the files as sandbox content.
+
+
+.EX
+.PP
+.B sandbox_min_client_tmpfs_t 
+.EE
+
+- Set files with the sandbox_min_client_tmpfs_t type, if you want to store sandbox min client files on a tmpfs file system.
+
+
+.EX
+.PP
+.B sandbox_net_client_tmpfs_t 
+.EE
+
+- Set files with the sandbox_net_client_tmpfs_t type, if you want to store sandbox net client files on a tmpfs file system.
+
+
+.EX
+.PP
+.B sandbox_web_client_tmpfs_t 
+.EE
+
+- Set files with the sandbox_web_client_tmpfs_t type, if you want to store sandbox web client files on a tmpfs file system.
+
+
+.EX
+.PP
+.B sandbox_x_client_tmpfs_t 
+.EE
+
+- Set files with the sandbox_x_client_tmpfs_t type, if you want to store sandbox x client files on a tmpfs file system.
+
+
+.EX
+.PP
+.B sandbox_xserver_tmpfs_t 
+.EE
+
+- Set files with the sandbox_xserver_tmpfs_t type, if you want to store sandbox xserver files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux sandbox policy is very flexible allowing users to setup their sandbox processes in as secure a method as possible.
+.PP 
+The following process types are defined for sandbox:
+
+.EX
+.B sandbox_x_client_t, sandbox_net_client_t, sandbox_xserver_t, sandbox_x_t, sandbox_web_client_t, sandbox_min_t, sandbox_net_t, sandbox_web_t, sandbox_min_client_t, sandbox_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), sandbox(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/sanlock_selinux.8 b/man/man8/sanlock_selinux.8
new file mode 100644
index 0000000..b15e691
--- /dev/null
+++ b/man/man8/sanlock_selinux.8
@@ -0,0 +1,130 @@
+.TH  "sanlock_selinux"  "8"  "sanlock" "dwalsh@redhat.com" "sanlock SELinux Policy documentation"
+.SH "NAME"
+sanlock_selinux \- Security Enhanced Linux Policy for the sanlock processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B sanlock
+(policy for sanlock)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  sanlock policy is extremely flexible and has several booleans that allow you to manipulate the policy and run sanlock with the tightest access possible.
+
+
+.PP
+If you want to allow confined virtual guests to interact with the sanloc, you must turn on the virt_use_sanlock boolean.
+
+.EX
+.B setsebool -P virt_use_sanlock 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to manage nfs file, you must turn on the sanlock_use_nfs boolean.
+
+.EX
+.B setsebool -P sanlock_use_nfs 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to manage cifs file, you must turn on the sanlock_use_samba boolean.
+
+.EX
+.B setsebool -P sanlock_use_samba 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux sanlock policy is very flexible allowing users to setup their sanlock processes in as secure a method as possible.
+.PP 
+The following file types are defined for sanlock:
+
+
+.EX
+.PP
+.B sanlock_exec_t 
+.EE
+
+- Set files with the sanlock_exec_t type, if you want to transition an executable to the sanlock_t domain.
+
+
+.EX
+.PP
+.B sanlock_initrc_exec_t 
+.EE
+
+- Set files with the sanlock_initrc_exec_t type, if you want to transition an executable to the sanlock_initrc_t domain.
+
+
+.EX
+.PP
+.B sanlock_log_t 
+.EE
+
+- Set files with the sanlock_log_t type, if you want to treat the data as sanlock log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B sanlock_var_run_t 
+.EE
+
+- Set files with the sanlock_var_run_t type, if you want to store the sanlock files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux sanlock policy is very flexible allowing users to setup their sanlock processes in as secure a method as possible.
+.PP 
+The following process types are defined for sanlock:
+
+.EX
+.B sanlock_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), sanlock(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/saslauthd_selinux.8 b/man/man8/saslauthd_selinux.8
new file mode 100644
index 0000000..8a922b3
--- /dev/null
+++ b/man/man8/saslauthd_selinux.8
@@ -0,0 +1,114 @@
+.TH  "saslauthd_selinux"  "8"  "saslauthd" "dwalsh@redhat.com" "saslauthd SELinux Policy documentation"
+.SH "NAME"
+saslauthd_selinux \- Security Enhanced Linux Policy for the saslauthd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  saslauthd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run saslauthd with the tightest access possible.
+
+
+.PP
+If you want to allow sasl to read shado, you must turn on the allow_saslauthd_read_shadow boolean.
+
+.EX
+.B setsebool -P allow_saslauthd_read_shadow 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux saslauthd policy is very flexible allowing users to setup their saslauthd processes in as secure a method as possible.
+.PP 
+The following file types are defined for saslauthd:
+
+
+.EX
+.PP
+.B saslauthd_exec_t 
+.EE
+
+- Set files with the saslauthd_exec_t type, if you want to transition an executable to the saslauthd_t domain.
+
+
+.EX
+.PP
+.B saslauthd_initrc_exec_t 
+.EE
+
+- Set files with the saslauthd_initrc_exec_t type, if you want to transition an executable to the saslauthd_initrc_t domain.
+
+
+.EX
+.PP
+.B saslauthd_keytab_t 
+.EE
+
+- Set files with the saslauthd_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B saslauthd_var_run_t 
+.EE
+
+- Set files with the saslauthd_var_run_t type, if you want to store the saslauthd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/sasl2(/.*)?, /var/run/saslauthd(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux saslauthd policy is very flexible allowing users to setup their saslauthd processes in as secure a method as possible.
+.PP 
+The following process types are defined for saslauthd:
+
+.EX
+.B saslauthd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), saslauthd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/sblim_selinux.8 b/man/man8/sblim_selinux.8
new file mode 100644
index 0000000..5c6807e
--- /dev/null
+++ b/man/man8/sblim_selinux.8
@@ -0,0 +1,93 @@
+.TH  "sblim_selinux"  "8"  "sblim" "dwalsh@redhat.com" "sblim SELinux Policy documentation"
+.SH "NAME"
+sblim_selinux \- Security Enhanced Linux Policy for the sblim processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B sblim
+( policy for SBLIM Gatherer )
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux sblim policy is very flexible allowing users to setup their sblim processes in as secure a method as possible.
+.PP 
+The following file types are defined for sblim:
+
+
+.EX
+.PP
+.B sblim_gatherd_exec_t 
+.EE
+
+- Set files with the sblim_gatherd_exec_t type, if you want to transition an executable to the sblim_gatherd_t domain.
+
+
+.EX
+.PP
+.B sblim_reposd_exec_t 
+.EE
+
+- Set files with the sblim_reposd_exec_t type, if you want to transition an executable to the sblim_reposd_t domain.
+
+
+.EX
+.PP
+.B sblim_var_run_t 
+.EE
+
+- Set files with the sblim_var_run_t type, if you want to store the sblim files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux sblim policy is very flexible allowing users to setup their sblim processes in as secure a method as possible.
+.PP 
+The following process types are defined for sblim:
+
+.EX
+.B sblim_reposd_t, sblim_gatherd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), sblim(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/secadm_selinux.8 b/man/man8/secadm_selinux.8
new file mode 100644
index 0000000..6bf3e2b
--- /dev/null
+++ b/man/man8/secadm_selinux.8
@@ -0,0 +1,65 @@
+.TH  "secadm_selinux"  "8"  "secadm" "mgrepl@redhat.com" "secadm SELinux Policy documentation"
+.SH "NAME"
+secadm_r \- \fBSecurity administrator role\fP - Security Enhanced Linux Policy 
+
+.SH DESCRIPTION
+
+SELinux supports Roles Based Access Control, some Linux roles are login roles, while other roles need to be transition to. 
+
+Note: The examples in the man page will user the staff_u user.
+
+Non login roles are usually used for administrative tasks.
+
+Roles usually have default types assigned to them. 
+
+The default type for the secadm_r role is secadm_t.
+
+You can use the 
+.B newrole 
+program to transition directly to this role.
+
+.B newrole -r secadm_r -t secadm_t
+
+.B sudo 
+can also be setup to transition to this role using the visudo command.
+
+USERNAME ALL=(ALL) ROLE=secadm_r TYPE=secadm_t COMMAND
+.br
+sudo will run COMMAND as staff_u:secadm_r:secadm_t:LEVEL
+
+If you want to use a non login role, you need to make sure the SELinux user you are using can reach this role.
+
+You can see all of the assigned SELinux roles using the following
+
+.B semanage user -l
+
+If you wanted to add secadm_r to the staff_u user, you would execute:
+
+.B $ semanage user -m -R 'staff_r secadm_r' staff_u 
+
+
+
+SELinux policy also controls which roles can transition to a different role.  
+You can list these rules using the following command.
+
+.B sesearch --role_allow
+
+SELinux policy allows the sysadm_r, staff_r, auditadm_r roles can transition to the secadm_r role.
+
+
+.SH "COMMANDS"
+
+.B semanage login
+can also be used to manipulate the Linux User to SELinux User mappings
+
+.B semanage user
+can also be used to manipulate SELinux user definitions.
+
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genuserman.py.
+
+.SH "SEE ALSO"
+selinux(8), semanage(8).
diff --git a/man/man8/sectoolm_selinux.8 b/man/man8/sectoolm_selinux.8
new file mode 100644
index 0000000..232ac2e
--- /dev/null
+++ b/man/man8/sectoolm_selinux.8
@@ -0,0 +1,77 @@
+.TH  "sectoolm_selinux"  "8"  "sectoolm" "dwalsh@redhat.com" "sectoolm SELinux Policy documentation"
+.SH "NAME"
+sectoolm_selinux \- Security Enhanced Linux Policy for the sectoolm processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B sectoolm
+(Sectool security audit tool)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux sectoolm policy is very flexible allowing users to setup their sectoolm processes in as secure a method as possible.
+.PP 
+The following file types are defined for sectoolm:
+
+
+.EX
+.PP
+.B sectoolm_exec_t 
+.EE
+
+- Set files with the sectoolm_exec_t type, if you want to transition an executable to the sectoolm_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux sectoolm policy is very flexible allowing users to setup their sectoolm processes in as secure a method as possible.
+.PP 
+The following process types are defined for sectoolm:
+
+.EX
+.B sectoolm_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), sectoolm(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/selinux_selinux.8 b/man/man8/selinux_selinux.8
new file mode 100644
index 0000000..42b09e3
--- /dev/null
+++ b/man/man8/selinux_selinux.8
@@ -0,0 +1,107 @@
+.TH  "selinux_selinux"  "8"  "selinux" "dwalsh@redhat.com" "selinux SELinux Policy documentation"
+.SH "NAME"
+selinux_selinux \- Security Enhanced Linux Policy for the selinux processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B selinux
+(
+Policy for kernel security interface, in particular, selinuxfs.
+)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux selinux policy is very flexible allowing users to setup their selinux processes in as secure a method as possible.
+.PP 
+The following file types are defined for selinux:
+
+
+.EX
+.PP
+.B selinux_config_t 
+.EE
+
+- Set files with the selinux_config_t type, if you want to treat the files as selinux configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/etc/selinux/([^/]*/)?users(/.*)?, /etc/selinux(/.*)?, /etc/selinux/([^/]*/)?seusers, /etc/selinux/([^/]*/)?setrans\.conf
+
+.EX
+.PP
+.B selinux_munin_plugin_exec_t 
+.EE
+
+- Set files with the selinux_munin_plugin_exec_t type, if you want to transition an executable to the selinux_munin_plugin_t domain.
+
+
+.EX
+.PP
+.B selinux_munin_plugin_tmp_t 
+.EE
+
+- Set files with the selinux_munin_plugin_tmp_t type, if you want to store selinux munin plugin temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B selinux_var_lib_t 
+.EE
+
+- Set files with the selinux_var_lib_t type, if you want to store the selinux files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux selinux policy is very flexible allowing users to setup their selinux processes in as secure a method as possible.
+.PP 
+The following process types are defined for selinux:
+
+.EX
+.B selinux_munin_plugin_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), selinux(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/semanage_selinux.8 b/man/man8/semanage_selinux.8
new file mode 100644
index 0000000..ad680da
--- /dev/null
+++ b/man/man8/semanage_selinux.8
@@ -0,0 +1,111 @@
+.TH  "semanage_selinux"  "8"  "semanage" "dwalsh@redhat.com" "semanage SELinux Policy documentation"
+.SH "NAME"
+semanage_selinux \- Security Enhanced Linux Policy for the semanage processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux semanage policy is very flexible allowing users to setup their semanage processes in as secure a method as possible.
+.PP 
+The following file types are defined for semanage:
+
+
+.EX
+.PP
+.B semanage_exec_t 
+.EE
+
+- Set files with the semanage_exec_t type, if you want to transition an executable to the semanage_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/share/system-config-selinux/system-config-selinux-dbus\.py, /usr/sbin/semanage, /usr/sbin/semodule
+
+.EX
+.PP
+.B semanage_read_lock_t 
+.EE
+
+- Set files with the semanage_read_lock_t type, if you want to treat the files as semanage read lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B semanage_store_t 
+.EE
+
+- Set files with the semanage_store_t type, if you want to treat the files as semanage store data.
+
+.br
+.TP 5
+Paths: 
+/etc/share/selinux/mls(/.*)?, /etc/selinux/([^/]*/)?modules/(active|tmp|previous)(/.*)?, /etc/selinux/([^/]*/)?policy(/.*)?, /etc/share/selinux/targeted(/.*)?
+
+.EX
+.PP
+.B semanage_tmp_t 
+.EE
+
+- Set files with the semanage_tmp_t type, if you want to store semanage temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B semanage_trans_lock_t 
+.EE
+
+- Set files with the semanage_trans_lock_t type, if you want to treat the files as semanage trans lock data, stored under the /var/lock directory
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux semanage policy is very flexible allowing users to setup their semanage processes in as secure a method as possible.
+.PP 
+The following process types are defined for semanage:
+
+.EX
+.B semanage_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), semanage(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/sendmail_selinux.8 b/man/man8/sendmail_selinux.8
new file mode 100644
index 0000000..f2e3fa2
--- /dev/null
+++ b/man/man8/sendmail_selinux.8
@@ -0,0 +1,158 @@
+.TH  "sendmail_selinux"  "8"  "sendmail" "dwalsh@redhat.com" "sendmail SELinux Policy documentation"
+.SH "NAME"
+sendmail_selinux \- Security Enhanced Linux Policy for the sendmail processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B sendmail
+(Policy for sendmail)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  sendmail policy is extremely flexible and has several booleans that allow you to manipulate the policy and run sendmail with the tightest access possible.
+
+
+.PP
+If you want to allow http daemon to send mai, you must turn on the httpd_can_sendmail boolean.
+
+.EX
+.B setsebool -P httpd_can_sendmail 1
+.EE
+
+.PP
+If you want to allow syslogd daemon to send mai, you must turn on the logging_syslogd_can_sendmail boolean.
+
+.EX
+.B setsebool -P logging_syslogd_can_sendmail 1
+.EE
+
+.PP
+If you want to allow gitisis daemon to send mai, you must turn on the gitosis_can_sendmail boolean.
+
+.EX
+.B setsebool -P gitosis_can_sendmail 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux sendmail policy is very flexible allowing users to setup their sendmail processes in as secure a method as possible.
+.PP 
+The following file types are defined for sendmail:
+
+
+.EX
+.PP
+.B sendmail_exec_t 
+.EE
+
+- Set files with the sendmail_exec_t type, if you want to transition an executable to the sendmail_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/mail(x)?, /usr/sbin/rmail, /usr/sbin/ssmtp, /usr/bin/esmtp, /var/qmail/bin/sendmail, /usr/sbin/sendmail\.postfix, /usr/lib/courier/bin/sendmail, /usr/lib/sendmail, /bin/mail(x)?, /usr/sbin/sendmail(\.sendmail)?
+
+.EX
+.PP
+.B sendmail_initrc_exec_t 
+.EE
+
+- Set files with the sendmail_initrc_exec_t type, if you want to transition an executable to the sendmail_initrc_t domain.
+
+
+.EX
+.PP
+.B sendmail_keytab_t 
+.EE
+
+- Set files with the sendmail_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B sendmail_log_t 
+.EE
+
+- Set files with the sendmail_log_t type, if you want to treat the data as sendmail log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/sendmail\.st, /var/log/mail(/.*)?
+
+.EX
+.PP
+.B sendmail_tmp_t 
+.EE
+
+- Set files with the sendmail_tmp_t type, if you want to store sendmail temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B sendmail_var_run_t 
+.EE
+
+- Set files with the sendmail_var_run_t type, if you want to store the sendmail files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/sendmail\.pid, /var/run/sm-client\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux sendmail policy is very flexible allowing users to setup their sendmail processes in as secure a method as possible.
+.PP 
+The following process types are defined for sendmail:
+
+.EX
+.B sendmail_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), sendmail(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/services_selinux.8 b/man/man8/services_selinux.8
new file mode 100644
index 0000000..08da721
--- /dev/null
+++ b/man/man8/services_selinux.8
@@ -0,0 +1,83 @@
+.TH  "services_selinux"  "8"  "services" "dwalsh@redhat.com" "services SELinux Policy documentation"
+.SH "NAME"
+services_selinux \- Security Enhanced Linux Policy for the services processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux services policy is very flexible allowing users to setup their services processes in as secure a method as possible.
+.PP 
+The following file types are defined for services:
+
+
+.EX
+.PP
+.B services_munin_plugin_exec_t 
+.EE
+
+- Set files with the services_munin_plugin_exec_t type, if you want to transition an executable to the services_munin_plugin_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/share/munin/plugins/nut.*, /usr/share/munin/plugins/named, /usr/share/munin/plugins/varnish_.*, /usr/share/munin/plugins/tomcat_.*, /usr/share/munin/plugins/postgres_.*, /usr/share/munin/plugins/asterisk_.*, /usr/share/munin/plugins/lpstat, /usr/share/munin/plugins/mysql_.*, /usr/share/munin/plugins/slapd_.*, /usr/share/munin/plugins/apache_.*, /usr/share/munin/plugins/ping_, /usr/share/munin/plugins/squid_.*, /usr/share/munin/plugins/fail2ban, /usr/share/munin/plugins/openvpn, /usr/share/munin/plugins/snmp_.*, /usr/share/munin/plugins/samba, /usr/share/munin/plugins/ntp_.*, /usr/share/munin/plugins/http_loadtime
+
+.EX
+.PP
+.B services_munin_plugin_tmp_t 
+.EE
+
+- Set files with the services_munin_plugin_tmp_t type, if you want to store services munin plugin temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux services policy is very flexible allowing users to setup their services processes in as secure a method as possible.
+.PP 
+The following process types are defined for services:
+
+.EX
+.B services_munin_plugin_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), services(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/setfiles_selinux.8 b/man/man8/setfiles_selinux.8
new file mode 100644
index 0000000..33dfb2f
--- /dev/null
+++ b/man/man8/setfiles_selinux.8
@@ -0,0 +1,75 @@
+.TH  "setfiles_selinux"  "8"  "setfiles" "dwalsh@redhat.com" "setfiles SELinux Policy documentation"
+.SH "NAME"
+setfiles_selinux \- Security Enhanced Linux Policy for the setfiles processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux setfiles policy is very flexible allowing users to setup their setfiles processes in as secure a method as possible.
+.PP 
+The following file types are defined for setfiles:
+
+
+.EX
+.PP
+.B setfiles_exec_t 
+.EE
+
+- Set files with the setfiles_exec_t type, if you want to transition an executable to the setfiles_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/setfiles.*, /sbin/restorecon, /usr/sbin/setfiles.*, /usr/sbin/restorecon
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux setfiles policy is very flexible allowing users to setup their setfiles processes in as secure a method as possible.
+.PP 
+The following process types are defined for setfiles:
+
+.EX
+.B setfiles_mac_t, setfiles_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), setfiles(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/setkey_selinux.8 b/man/man8/setkey_selinux.8
new file mode 100644
index 0000000..8a21ecc
--- /dev/null
+++ b/man/man8/setkey_selinux.8
@@ -0,0 +1,75 @@
+.TH  "setkey_selinux"  "8"  "setkey" "dwalsh@redhat.com" "setkey SELinux Policy documentation"
+.SH "NAME"
+setkey_selinux \- Security Enhanced Linux Policy for the setkey processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux setkey policy is very flexible allowing users to setup their setkey processes in as secure a method as possible.
+.PP 
+The following file types are defined for setkey:
+
+
+.EX
+.PP
+.B setkey_exec_t 
+.EE
+
+- Set files with the setkey_exec_t type, if you want to transition an executable to the setkey_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/setkey, /sbin/setkey
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux setkey policy is very flexible allowing users to setup their setkey processes in as secure a method as possible.
+.PP 
+The following process types are defined for setkey:
+
+.EX
+.B setkey_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), setkey(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/setrans_selinux.8 b/man/man8/setrans_selinux.8
new file mode 100644
index 0000000..99b5cda
--- /dev/null
+++ b/man/man8/setrans_selinux.8
@@ -0,0 +1,101 @@
+.TH  "setrans_selinux"  "8"  "setrans" "dwalsh@redhat.com" "setrans SELinux Policy documentation"
+.SH "NAME"
+setrans_selinux \- Security Enhanced Linux Policy for the setrans processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B setrans
+(SELinux MLS/MCS label translation service)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux setrans policy is very flexible allowing users to setup their setrans processes in as secure a method as possible.
+.PP 
+The following file types are defined for setrans:
+
+
+.EX
+.PP
+.B setrans_exec_t 
+.EE
+
+- Set files with the setrans_exec_t type, if you want to transition an executable to the setrans_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/mcstransd, /usr/sbin/mcstransd
+
+.EX
+.PP
+.B setrans_initrc_exec_t 
+.EE
+
+- Set files with the setrans_initrc_exec_t type, if you want to transition an executable to the setrans_initrc_t domain.
+
+
+.EX
+.PP
+.B setrans_var_run_t 
+.EE
+
+- Set files with the setrans_var_run_t type, if you want to store the setrans files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/mcstransd\.pid, /var/run/setrans(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux setrans policy is very flexible allowing users to setup their setrans processes in as secure a method as possible.
+.PP 
+The following process types are defined for setrans:
+
+.EX
+.B setrans_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), setrans(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/setroubleshoot_selinux.8 b/man/man8/setroubleshoot_selinux.8
new file mode 100644
index 0000000..cbed8e8
--- /dev/null
+++ b/man/man8/setroubleshoot_selinux.8
@@ -0,0 +1,109 @@
+.TH  "setroubleshoot_selinux"  "8"  "setroubleshoot" "dwalsh@redhat.com" "setroubleshoot SELinux Policy documentation"
+.SH "NAME"
+setroubleshoot_selinux \- Security Enhanced Linux Policy for the setroubleshoot processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B setroubleshoot
+(SELinux troubleshooting service)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux setroubleshoot policy is very flexible allowing users to setup their setroubleshoot processes in as secure a method as possible.
+.PP 
+The following file types are defined for setroubleshoot:
+
+
+.EX
+.PP
+.B setroubleshoot_fixit_exec_t 
+.EE
+
+- Set files with the setroubleshoot_fixit_exec_t type, if you want to transition an executable to the setroubleshoot_fixit_t domain.
+
+
+.EX
+.PP
+.B setroubleshoot_var_lib_t 
+.EE
+
+- Set files with the setroubleshoot_var_lib_t type, if you want to store the setroubleshoot files under the /var/lib directory.
+
+
+.EX
+.PP
+.B setroubleshoot_var_log_t 
+.EE
+
+- Set files with the setroubleshoot_var_log_t type, if you want to treat the data as setroubleshoot var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B setroubleshoot_var_run_t 
+.EE
+
+- Set files with the setroubleshoot_var_run_t type, if you want to store the setroubleshoot files under the /run directory.
+
+
+.EX
+.PP
+.B setroubleshootd_exec_t 
+.EE
+
+- Set files with the setroubleshootd_exec_t type, if you want to transition an executable to the setroubleshootd_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux setroubleshoot policy is very flexible allowing users to setup their setroubleshoot processes in as secure a method as possible.
+.PP 
+The following process types are defined for setroubleshoot:
+
+.EX
+.B setroubleshoot_fixit_t, setroubleshootd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), setroubleshoot(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/setroubleshootd_selinux.8 b/man/man8/setroubleshootd_selinux.8
new file mode 100644
index 0000000..924d3bc
--- /dev/null
+++ b/man/man8/setroubleshootd_selinux.8
@@ -0,0 +1,103 @@
+.TH  "setroubleshootd_selinux"  "8"  "setroubleshootd" "dwalsh@redhat.com" "setroubleshootd SELinux Policy documentation"
+.SH "NAME"
+setroubleshootd_selinux \- Security Enhanced Linux Policy for the setroubleshootd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux setroubleshootd policy is very flexible allowing users to setup their setroubleshootd processes in as secure a method as possible.
+.PP 
+The following file types are defined for setroubleshootd:
+
+
+.EX
+.PP
+.B setroubleshoot_fixit_exec_t 
+.EE
+
+- Set files with the setroubleshoot_fixit_exec_t type, if you want to transition an executable to the setroubleshoot_fixit_t domain.
+
+
+.EX
+.PP
+.B setroubleshoot_var_lib_t 
+.EE
+
+- Set files with the setroubleshoot_var_lib_t type, if you want to store the setroubleshoot files under the /var/lib directory.
+
+
+.EX
+.PP
+.B setroubleshoot_var_log_t 
+.EE
+
+- Set files with the setroubleshoot_var_log_t type, if you want to treat the data as setroubleshoot var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B setroubleshoot_var_run_t 
+.EE
+
+- Set files with the setroubleshoot_var_run_t type, if you want to store the setroubleshoot files under the /run directory.
+
+
+.EX
+.PP
+.B setroubleshootd_exec_t 
+.EE
+
+- Set files with the setroubleshootd_exec_t type, if you want to transition an executable to the setroubleshootd_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux setroubleshootd policy is very flexible allowing users to setup their setroubleshootd processes in as secure a method as possible.
+.PP 
+The following process types are defined for setroubleshootd:
+
+.EX
+.B setroubleshoot_fixit_t, setroubleshootd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), setroubleshootd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/setsebool_selinux.8 b/man/man8/setsebool_selinux.8
new file mode 100644
index 0000000..0b850e8
--- /dev/null
+++ b/man/man8/setsebool_selinux.8
@@ -0,0 +1,71 @@
+.TH  "setsebool_selinux"  "8"  "setsebool" "dwalsh@redhat.com" "setsebool SELinux Policy documentation"
+.SH "NAME"
+setsebool_selinux \- Security Enhanced Linux Policy for the setsebool processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux setsebool policy is very flexible allowing users to setup their setsebool processes in as secure a method as possible.
+.PP 
+The following file types are defined for setsebool:
+
+
+.EX
+.PP
+.B setsebool_exec_t 
+.EE
+
+- Set files with the setsebool_exec_t type, if you want to transition an executable to the setsebool_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux setsebool policy is very flexible allowing users to setup their setsebool processes in as secure a method as possible.
+.PP 
+The following process types are defined for setsebool:
+
+.EX
+.B setsebool_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), setsebool(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/sge_selinux.8 b/man/man8/sge_selinux.8
new file mode 100644
index 0000000..636d762
--- /dev/null
+++ b/man/man8/sge_selinux.8
@@ -0,0 +1,124 @@
+.TH  "sge_selinux"  "8"  "sge" "dwalsh@redhat.com" "sge SELinux Policy documentation"
+.SH "NAME"
+sge_selinux \- Security Enhanced Linux Policy for the sge processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B sge
+(Policy for gridengine MPI jobs)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  sge policy is extremely flexible and has several booleans that allow you to manipulate the policy and run sge with the tightest access possible.
+
+
+.PP
+If you want to allow sge to access nfs file systems, you must turn on the sge_use_nfs boolean.
+
+.EX
+.B setsebool -P sge_use_nfs 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux sge policy is very flexible allowing users to setup their sge processes in as secure a method as possible.
+.PP 
+The following file types are defined for sge:
+
+
+.EX
+.PP
+.B sge_execd_exec_t 
+.EE
+
+- Set files with the sge_execd_exec_t type, if you want to transition an executable to the sge_execd_t domain.
+
+
+.EX
+.PP
+.B sge_job_exec_t 
+.EE
+
+- Set files with the sge_job_exec_t type, if you want to transition an executable to the sge_job_t domain.
+
+
+.EX
+.PP
+.B sge_shepherd_exec_t 
+.EE
+
+- Set files with the sge_shepherd_exec_t type, if you want to transition an executable to the sge_shepherd_t domain.
+
+
+.EX
+.PP
+.B sge_spool_t 
+.EE
+
+- Set files with the sge_spool_t type, if you want to store the sge files under the /var/spool directory.
+
+
+.EX
+.PP
+.B sge_tmp_t 
+.EE
+
+- Set files with the sge_tmp_t type, if you want to store sge temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux sge policy is very flexible allowing users to setup their sge processes in as secure a method as possible.
+.PP 
+The following process types are defined for sge:
+
+.EX
+.B sge_execd_t, sge_job_ssh_t, sge_shepherd_t, sge_job_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), sge(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/shorewall_selinux.8 b/man/man8/shorewall_selinux.8
new file mode 100644
index 0000000..b02195e
--- /dev/null
+++ b/man/man8/shorewall_selinux.8
@@ -0,0 +1,141 @@
+.TH  "shorewall_selinux"  "8"  "shorewall" "dwalsh@redhat.com" "shorewall SELinux Policy documentation"
+.SH "NAME"
+shorewall_selinux \- Security Enhanced Linux Policy for the shorewall processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B shorewall
+(Shoreline Firewall high-level tool for configuring netfilter)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux shorewall policy is very flexible allowing users to setup their shorewall processes in as secure a method as possible.
+.PP 
+The following file types are defined for shorewall:
+
+
+.EX
+.PP
+.B shorewall_etc_t 
+.EE
+
+- Set files with the shorewall_etc_t type, if you want to store shorewall files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/shorewall-lite(/.*)?, /etc/shorewall(/.*)?
+
+.EX
+.PP
+.B shorewall_exec_t 
+.EE
+
+- Set files with the shorewall_exec_t type, if you want to transition an executable to the shorewall_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/shorewall6?, /sbin/shorewall-lite, /usr/sbin/shorewall-lite, /usr/sbin/shorewall6?
+
+.EX
+.PP
+.B shorewall_initrc_exec_t 
+.EE
+
+- Set files with the shorewall_initrc_exec_t type, if you want to transition an executable to the shorewall_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/shorewall, /etc/rc\.d/init\.d/shorewall-lite
+
+.EX
+.PP
+.B shorewall_lock_t 
+.EE
+
+- Set files with the shorewall_lock_t type, if you want to treat the files as shorewall lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B shorewall_log_t 
+.EE
+
+- Set files with the shorewall_log_t type, if you want to treat the data as shorewall log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B shorewall_tmp_t 
+.EE
+
+- Set files with the shorewall_tmp_t type, if you want to store shorewall temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B shorewall_var_lib_t 
+.EE
+
+- Set files with the shorewall_var_lib_t type, if you want to store the shorewall files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/shorewall-lite(/.*)?, /var/lib/shorewall(/.*)?, /var/lib/shorewall6(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux shorewall policy is very flexible allowing users to setup their shorewall processes in as secure a method as possible.
+.PP 
+The following process types are defined for shorewall:
+
+.EX
+.B shorewall_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), shorewall(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/showmount_selinux.8 b/man/man8/showmount_selinux.8
new file mode 100644
index 0000000..df89321
--- /dev/null
+++ b/man/man8/showmount_selinux.8
@@ -0,0 +1,71 @@
+.TH  "showmount_selinux"  "8"  "showmount" "dwalsh@redhat.com" "showmount SELinux Policy documentation"
+.SH "NAME"
+showmount_selinux \- Security Enhanced Linux Policy for the showmount processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux showmount policy is very flexible allowing users to setup their showmount processes in as secure a method as possible.
+.PP 
+The following file types are defined for showmount:
+
+
+.EX
+.PP
+.B showmount_exec_t 
+.EE
+
+- Set files with the showmount_exec_t type, if you want to transition an executable to the showmount_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux showmount policy is very flexible allowing users to setup their showmount processes in as secure a method as possible.
+.PP 
+The following process types are defined for showmount:
+
+.EX
+.B showmount_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), showmount(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/shutdown_selinux.8 b/man/man8/shutdown_selinux.8
new file mode 100644
index 0000000..733dd9c
--- /dev/null
+++ b/man/man8/shutdown_selinux.8
@@ -0,0 +1,97 @@
+.TH  "shutdown_selinux"  "8"  "shutdown" "dwalsh@redhat.com" "shutdown SELinux Policy documentation"
+.SH "NAME"
+shutdown_selinux \- Security Enhanced Linux Policy for the shutdown processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B shutdown
+(System shutdown command)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux shutdown policy is very flexible allowing users to setup their shutdown processes in as secure a method as possible.
+.PP 
+The following file types are defined for shutdown:
+
+
+.EX
+.PP
+.B shutdown_etc_t 
+.EE
+
+- Set files with the shutdown_etc_t type, if you want to store shutdown files in the /etc directories.
+
+
+.EX
+.PP
+.B shutdown_exec_t 
+.EE
+
+- Set files with the shutdown_exec_t type, if you want to transition an executable to the shutdown_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/shutdown, /usr/sbin/shutdown, /usr/lib/upstart/shutdown, /lib/upstart/shutdown
+
+.EX
+.PP
+.B shutdown_var_run_t 
+.EE
+
+- Set files with the shutdown_var_run_t type, if you want to store the shutdown files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux shutdown policy is very flexible allowing users to setup their shutdown processes in as secure a method as possible.
+.PP 
+The following process types are defined for shutdown:
+
+.EX
+.B shutdown_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), shutdown(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/slapd_selinux.8 b/man/man8/slapd_selinux.8
new file mode 100644
index 0000000..4031380
--- /dev/null
+++ b/man/man8/slapd_selinux.8
@@ -0,0 +1,175 @@
+.TH  "slapd_selinux"  "8"  "slapd" "dwalsh@redhat.com" "slapd SELinux Policy documentation"
+.SH "NAME"
+slapd_selinux \- Security Enhanced Linux Policy for the slapd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux slapd policy is very flexible allowing users to setup their slapd processes in as secure a method as possible.
+.PP 
+The following file types are defined for slapd:
+
+
+.EX
+.PP
+.B slapd_cert_t 
+.EE
+
+- Set files with the slapd_cert_t type, if you want to treat the files as slapd certificate data.
+
+
+.EX
+.PP
+.B slapd_db_t 
+.EE
+
+- Set files with the slapd_db_t type, if you want to treat the files as slapd database content.
+
+.br
+.TP 5
+Paths: 
+/etc/openldap/slapd\.d(/.*)?, /var/lib/ldap(/.*)?
+
+.EX
+.PP
+.B slapd_etc_t 
+.EE
+
+- Set files with the slapd_etc_t type, if you want to store slapd files in the /etc directories.
+
+
+.EX
+.PP
+.B slapd_exec_t 
+.EE
+
+- Set files with the slapd_exec_t type, if you want to transition an executable to the slapd_t domain.
+
+
+.EX
+.PP
+.B slapd_initrc_exec_t 
+.EE
+
+- Set files with the slapd_initrc_exec_t type, if you want to transition an executable to the slapd_initrc_t domain.
+
+
+.EX
+.PP
+.B slapd_keytab_t 
+.EE
+
+- Set files with the slapd_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B slapd_lock_t 
+.EE
+
+- Set files with the slapd_lock_t type, if you want to treat the files as slapd lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B slapd_log_t 
+.EE
+
+- Set files with the slapd_log_t type, if you want to treat the data as slapd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B slapd_replog_t 
+.EE
+
+- Set files with the slapd_replog_t type, if you want to treat the files as slapd replog data.
+
+
+.EX
+.PP
+.B slapd_tmp_t 
+.EE
+
+- Set files with the slapd_tmp_t type, if you want to store slapd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B slapd_tmpfs_t 
+.EE
+
+- Set files with the slapd_tmpfs_t type, if you want to store slapd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B slapd_unit_file_t 
+.EE
+
+- Set files with the slapd_unit_file_t type, if you want to treat the files as slapd unit content.
+
+
+.EX
+.PP
+.B slapd_var_run_t 
+.EE
+
+- Set files with the slapd_var_run_t type, if you want to store the slapd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/slapd\.args, /var/run/openldap(/.*)?, /var/run/slapd\.pid, /var/run/ldapi, /var/run/slapd.*
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux slapd policy is very flexible allowing users to setup their slapd processes in as secure a method as possible.
+.PP 
+The following process types are defined for slapd:
+
+.EX
+.B slapd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), slapd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/smbcontrol_selinux.8 b/man/man8/smbcontrol_selinux.8
new file mode 100644
index 0000000..1f4a491
--- /dev/null
+++ b/man/man8/smbcontrol_selinux.8
@@ -0,0 +1,71 @@
+.TH  "smbcontrol_selinux"  "8"  "smbcontrol" "dwalsh@redhat.com" "smbcontrol SELinux Policy documentation"
+.SH "NAME"
+smbcontrol_selinux \- Security Enhanced Linux Policy for the smbcontrol processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux smbcontrol policy is very flexible allowing users to setup their smbcontrol processes in as secure a method as possible.
+.PP 
+The following file types are defined for smbcontrol:
+
+
+.EX
+.PP
+.B smbcontrol_exec_t 
+.EE
+
+- Set files with the smbcontrol_exec_t type, if you want to transition an executable to the smbcontrol_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux smbcontrol policy is very flexible allowing users to setup their smbcontrol processes in as secure a method as possible.
+.PP 
+The following process types are defined for smbcontrol:
+
+.EX
+.B smbcontrol_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), smbcontrol(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/smbd_selinux.8 b/man/man8/smbd_selinux.8
new file mode 100644
index 0000000..78125d2
--- /dev/null
+++ b/man/man8/smbd_selinux.8
@@ -0,0 +1,151 @@
+.TH  "smbd_selinux"  "8"  "smbd" "dwalsh@redhat.com" "smbd SELinux Policy documentation"
+.SH "NAME"
+smbd_selinux \- Security Enhanced Linux Policy for the smbd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH SHARING FILES
+If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
+.TP
+Allow smbd servers to read the /var/smbd directory by adding the public_content_t file type to the directory and by restoring the file type.
+.PP
+.B
+semanage fcontext -a -t public_content_t "/var/smbd(/.*)?"
+.br
+.B restorecon -F -R -v /var/smbd
+.pp
+.TP
+Allow smbd servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_smbd_anon_write boolean to be set.
+.PP
+.B
+semanage fcontext -a -t public_content_rw_t "/var/smbd/incoming(/.*)?"
+.br
+.B restorecon -F -R -v /var/smbd/incoming
+
+
+.PP
+If you want to allow samba to modify public files used for public file transfer services.  Files/Directories must be labeled public_content_rw_t., you must turn on the allow_smbd_anon_write boolean.
+
+.EX
+.B setsebool -P allow_smbd_anon_write 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux smbd policy is very flexible allowing users to setup their smbd processes in as secure a method as possible.
+.PP 
+The following file types are defined for smbd:
+
+
+.EX
+.PP
+.B smbd_exec_t 
+.EE
+
+- Set files with the smbd_exec_t type, if you want to transition an executable to the smbd_t domain.
+
+
+.EX
+.PP
+.B smbd_keytab_t 
+.EE
+
+- Set files with the smbd_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B smbd_tmp_t 
+.EE
+
+- Set files with the smbd_tmp_t type, if you want to store smbd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B smbd_var_run_t 
+.EE
+
+- Set files with the smbd_var_run_t type, if you want to store the smbd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/samba/gencache\.tdb, /var/run/samba/share_info\.tdb, /var/run/samba(/.*)?, /var/run/samba/locking\.tdb, /var/run/samba/connections\.tdb, /var/run/samba/smbd\.pid, /var/run/samba/sessionid\.tdb, /var/run/samba/brlock\.tdb
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux smbd policy is very flexible allowing users to setup their smbd processes in as secure a method as possible.
+.PP 
+The following port types are defined for smbd:
+
+.EX
+.TP 5
+.B smbd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux smbd policy is very flexible allowing users to setup their smbd processes in as secure a method as possible.
+.PP 
+The following process types are defined for smbd:
+
+.EX
+.B smbcontrol_t, smbmount_t, smbd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), smbd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/smbmount_selinux.8 b/man/man8/smbmount_selinux.8
new file mode 100644
index 0000000..e5fd258
--- /dev/null
+++ b/man/man8/smbmount_selinux.8
@@ -0,0 +1,75 @@
+.TH  "smbmount_selinux"  "8"  "smbmount" "dwalsh@redhat.com" "smbmount SELinux Policy documentation"
+.SH "NAME"
+smbmount_selinux \- Security Enhanced Linux Policy for the smbmount processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux smbmount policy is very flexible allowing users to setup their smbmount processes in as secure a method as possible.
+.PP 
+The following file types are defined for smbmount:
+
+
+.EX
+.PP
+.B smbmount_exec_t 
+.EE
+
+- Set files with the smbmount_exec_t type, if you want to transition an executable to the smbmount_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/smbmnt, /usr/bin/smbmount
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux smbmount policy is very flexible allowing users to setup their smbmount processes in as secure a method as possible.
+.PP 
+The following process types are defined for smbmount:
+
+.EX
+.B smbmount_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), smbmount(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/smokeping_selinux.8 b/man/man8/smokeping_selinux.8
new file mode 100644
index 0000000..6eb81ca
--- /dev/null
+++ b/man/man8/smokeping_selinux.8
@@ -0,0 +1,101 @@
+.TH  "smokeping_selinux"  "8"  "smokeping" "dwalsh@redhat.com" "smokeping SELinux Policy documentation"
+.SH "NAME"
+smokeping_selinux \- Security Enhanced Linux Policy for the smokeping processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B smokeping
+(Smokeping network latency measurement)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux smokeping policy is very flexible allowing users to setup their smokeping processes in as secure a method as possible.
+.PP 
+The following file types are defined for smokeping:
+
+
+.EX
+.PP
+.B smokeping_exec_t 
+.EE
+
+- Set files with the smokeping_exec_t type, if you want to transition an executable to the smokeping_t domain.
+
+
+.EX
+.PP
+.B smokeping_initrc_exec_t 
+.EE
+
+- Set files with the smokeping_initrc_exec_t type, if you want to transition an executable to the smokeping_initrc_t domain.
+
+
+.EX
+.PP
+.B smokeping_var_lib_t 
+.EE
+
+- Set files with the smokeping_var_lib_t type, if you want to store the smokeping files under the /var/lib directory.
+
+
+.EX
+.PP
+.B smokeping_var_run_t 
+.EE
+
+- Set files with the smokeping_var_run_t type, if you want to store the smokeping files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux smokeping policy is very flexible allowing users to setup their smokeping processes in as secure a method as possible.
+.PP 
+The following process types are defined for smokeping:
+
+.EX
+.B smokeping_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), smokeping(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/smoltclient_selinux.8 b/man/man8/smoltclient_selinux.8
new file mode 100644
index 0000000..7290f4e
--- /dev/null
+++ b/man/man8/smoltclient_selinux.8
@@ -0,0 +1,85 @@
+.TH  "smoltclient_selinux"  "8"  "smoltclient" "dwalsh@redhat.com" "smoltclient SELinux Policy documentation"
+.SH "NAME"
+smoltclient_selinux \- Security Enhanced Linux Policy for the smoltclient processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B smoltclient
+(The Fedora hardware profiler client)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux smoltclient policy is very flexible allowing users to setup their smoltclient processes in as secure a method as possible.
+.PP 
+The following file types are defined for smoltclient:
+
+
+.EX
+.PP
+.B smoltclient_exec_t 
+.EE
+
+- Set files with the smoltclient_exec_t type, if you want to transition an executable to the smoltclient_t domain.
+
+
+.EX
+.PP
+.B smoltclient_tmp_t 
+.EE
+
+- Set files with the smoltclient_tmp_t type, if you want to store smoltclient temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux smoltclient policy is very flexible allowing users to setup their smoltclient processes in as secure a method as possible.
+.PP 
+The following process types are defined for smoltclient:
+
+.EX
+.B smoltclient_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), smoltclient(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/snmpd_selinux.8 b/man/man8/snmpd_selinux.8
new file mode 100644
index 0000000..ce8506a
--- /dev/null
+++ b/man/man8/snmpd_selinux.8
@@ -0,0 +1,141 @@
+.TH  "snmpd_selinux"  "8"  "snmpd" "dwalsh@redhat.com" "snmpd SELinux Policy documentation"
+.SH "NAME"
+snmpd_selinux \- Security Enhanced Linux Policy for the snmpd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux snmpd policy is very flexible allowing users to setup their snmpd processes in as secure a method as possible.
+.PP 
+The following file types are defined for snmpd:
+
+
+.EX
+.PP
+.B snmpd_exec_t 
+.EE
+
+- Set files with the snmpd_exec_t type, if you want to transition an executable to the snmpd_t domain.
+
+
+.EX
+.PP
+.B snmpd_initrc_exec_t 
+.EE
+
+- Set files with the snmpd_initrc_exec_t type, if you want to transition an executable to the snmpd_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/snmpd, /etc/rc\.d/init\.d/snmptrapd
+
+.EX
+.PP
+.B snmpd_log_t 
+.EE
+
+- Set files with the snmpd_log_t type, if you want to treat the data as snmpd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B snmpd_var_lib_t 
+.EE
+
+- Set files with the snmpd_var_lib_t type, if you want to store the snmpd files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/agentx(/.*)?, /usr/share/snmp/mibs/\.index, /var/net-snmp(/.*)?, /var/lib/net-snmp(/.*)?, /var/lib/snmp(/.*)?
+
+.EX
+.PP
+.B snmpd_var_run_t 
+.EE
+
+- Set files with the snmpd_var_run_t type, if you want to store the snmpd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/net-snmpd(/.*)?, /var/run/snmpd\.pid, /var/run/snmpd(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux snmpd policy is very flexible allowing users to setup their snmpd processes in as secure a method as possible.
+.PP 
+The following port types are defined for snmpd:
+
+.EX
+.TP 5
+.B snmp_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux snmpd policy is very flexible allowing users to setup their snmpd processes in as secure a method as possible.
+.PP 
+The following process types are defined for snmpd:
+
+.EX
+.B snmpd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), snmpd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/snort_selinux.8 b/man/man8/snort_selinux.8
new file mode 100644
index 0000000..4a3cd80
--- /dev/null
+++ b/man/man8/snort_selinux.8
@@ -0,0 +1,121 @@
+.TH  "snort_selinux"  "8"  "snort" "dwalsh@redhat.com" "snort SELinux Policy documentation"
+.SH "NAME"
+snort_selinux \- Security Enhanced Linux Policy for the snort processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B snort
+(Snort network intrusion detection system)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux snort policy is very flexible allowing users to setup their snort processes in as secure a method as possible.
+.PP 
+The following file types are defined for snort:
+
+
+.EX
+.PP
+.B snort_etc_t 
+.EE
+
+- Set files with the snort_etc_t type, if you want to store snort files in the /etc directories.
+
+
+.EX
+.PP
+.B snort_exec_t 
+.EE
+
+- Set files with the snort_exec_t type, if you want to transition an executable to the snort_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/snort-plain, /usr/s?bin/snort
+
+.EX
+.PP
+.B snort_initrc_exec_t 
+.EE
+
+- Set files with the snort_initrc_exec_t type, if you want to transition an executable to the snort_initrc_t domain.
+
+
+.EX
+.PP
+.B snort_log_t 
+.EE
+
+- Set files with the snort_log_t type, if you want to treat the data as snort log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B snort_tmp_t 
+.EE
+
+- Set files with the snort_tmp_t type, if you want to store snort temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B snort_var_run_t 
+.EE
+
+- Set files with the snort_var_run_t type, if you want to store the snort files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux snort policy is very flexible allowing users to setup their snort processes in as secure a method as possible.
+.PP 
+The following process types are defined for snort:
+
+.EX
+.B snort_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), snort(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/sosreport_selinux.8 b/man/man8/sosreport_selinux.8
new file mode 100644
index 0000000..d92aa21
--- /dev/null
+++ b/man/man8/sosreport_selinux.8
@@ -0,0 +1,93 @@
+.TH  "sosreport_selinux"  "8"  "sosreport" "dwalsh@redhat.com" "sosreport SELinux Policy documentation"
+.SH "NAME"
+sosreport_selinux \- Security Enhanced Linux Policy for the sosreport processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B sosreport
+(sosreport - Generate debugging information for system)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux sosreport policy is very flexible allowing users to setup their sosreport processes in as secure a method as possible.
+.PP 
+The following file types are defined for sosreport:
+
+
+.EX
+.PP
+.B sosreport_exec_t 
+.EE
+
+- Set files with the sosreport_exec_t type, if you want to transition an executable to the sosreport_t domain.
+
+
+.EX
+.PP
+.B sosreport_tmp_t 
+.EE
+
+- Set files with the sosreport_tmp_t type, if you want to store sosreport temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B sosreport_tmpfs_t 
+.EE
+
+- Set files with the sosreport_tmpfs_t type, if you want to store sosreport files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux sosreport policy is very flexible allowing users to setup their sosreport processes in as secure a method as possible.
+.PP 
+The following process types are defined for sosreport:
+
+.EX
+.B sosreport_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), sosreport(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/soundd_selinux.8 b/man/man8/soundd_selinux.8
new file mode 100644
index 0000000..4c912c3
--- /dev/null
+++ b/man/man8/soundd_selinux.8
@@ -0,0 +1,157 @@
+.TH  "soundd_selinux"  "8"  "soundd" "dwalsh@redhat.com" "soundd SELinux Policy documentation"
+.SH "NAME"
+soundd_selinux \- Security Enhanced Linux Policy for the soundd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux soundd policy is very flexible allowing users to setup their soundd processes in as secure a method as possible.
+.PP 
+The following file types are defined for soundd:
+
+
+.EX
+.PP
+.B soundd_etc_t 
+.EE
+
+- Set files with the soundd_etc_t type, if you want to store soundd files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/yiff(/.*)?, /etc/nas(/.*)?
+
+.EX
+.PP
+.B soundd_exec_t 
+.EE
+
+- Set files with the soundd_exec_t type, if you want to transition an executable to the soundd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/gpe-soundserver, /usr/sbin/yiff, /usr/bin/nasd
+
+.EX
+.PP
+.B soundd_initrc_exec_t 
+.EE
+
+- Set files with the soundd_initrc_exec_t type, if you want to transition an executable to the soundd_initrc_t domain.
+
+
+.EX
+.PP
+.B soundd_state_t 
+.EE
+
+- Set files with the soundd_state_t type, if you want to treat the files as soundd state data.
+
+
+.EX
+.PP
+.B soundd_tmp_t 
+.EE
+
+- Set files with the soundd_tmp_t type, if you want to store soundd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B soundd_tmpfs_t 
+.EE
+
+- Set files with the soundd_tmpfs_t type, if you want to store soundd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B soundd_var_run_t 
+.EE
+
+- Set files with the soundd_var_run_t type, if you want to store the soundd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/nasd(/.*)?, /var/run/yiff-[0-9]+\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux soundd policy is very flexible allowing users to setup their soundd processes in as secure a method as possible.
+.PP 
+The following port types are defined for soundd:
+
+.EX
+.TP 5
+.B soundd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux soundd policy is very flexible allowing users to setup their soundd processes in as secure a method as possible.
+.PP 
+The following process types are defined for soundd:
+
+.EX
+.B soundd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), soundd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/spamass_selinux.8 b/man/man8/spamass_selinux.8
new file mode 100644
index 0000000..3285cb1
--- /dev/null
+++ b/man/man8/spamass_selinux.8
@@ -0,0 +1,106 @@
+.TH  "spamass_selinux"  "8"  "spamass" "dwalsh@redhat.com" "spamass SELinux Policy documentation"
+.SH "NAME"
+spamass_selinux \- Security Enhanced Linux Policy for the spamass processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  spamass policy is extremely flexible and has several booleans that allow you to manipulate the policy and run spamass with the tightest access possible.
+
+
+.PP
+If you want to allow user spamassassin clients to use the network, you must turn on the spamassassin_can_network boolean.
+
+.EX
+.B setsebool -P spamassassin_can_network 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux spamass policy is very flexible allowing users to setup their spamass processes in as secure a method as possible.
+.PP 
+The following file types are defined for spamass:
+
+
+.EX
+.PP
+.B spamass_milter_data_t 
+.EE
+
+- Set files with the spamass_milter_data_t type, if you want to treat the files as spamass milter content.
+
+.br
+.TP 5
+Paths: 
+/var/run/spamass-milter(/.*)?, /var/run/spamass-milter\.pid
+
+.EX
+.PP
+.B spamass_milter_exec_t 
+.EE
+
+- Set files with the spamass_milter_exec_t type, if you want to transition an executable to the spamass_milter_t domain.
+
+
+.EX
+.PP
+.B spamass_milter_state_t 
+.EE
+
+- Set files with the spamass_milter_state_t type, if you want to treat the files as spamass milter state data.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux spamass policy is very flexible allowing users to setup their spamass processes in as secure a method as possible.
+.PP 
+The following process types are defined for spamass:
+
+.EX
+.B spamass_milter_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), spamass(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/spamc_selinux.8 b/man/man8/spamc_selinux.8
new file mode 100644
index 0000000..3be61d7
--- /dev/null
+++ b/man/man8/spamc_selinux.8
@@ -0,0 +1,95 @@
+.TH  "spamc_selinux"  "8"  "spamc" "dwalsh@redhat.com" "spamc SELinux Policy documentation"
+.SH "NAME"
+spamc_selinux \- Security Enhanced Linux Policy for the spamc processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux spamc policy is very flexible allowing users to setup their spamc processes in as secure a method as possible.
+.PP 
+The following file types are defined for spamc:
+
+
+.EX
+.PP
+.B spamc_exec_t 
+.EE
+
+- Set files with the spamc_exec_t type, if you want to transition an executable to the spamc_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/spamc, /usr/bin/razor.*, /usr/bin/sa-learn, /usr/bin/spamassassin
+
+.EX
+.PP
+.B spamc_home_t 
+.EE
+
+- Set files with the spamc_home_t type, if you want to store spamc files in the users home directory.
+
+.br
+.TP 5
+Paths: 
+/root/\.razor(/.*)?, /root/\.spamassassin(/.*)?
+
+.EX
+.PP
+.B spamc_tmp_t 
+.EE
+
+- Set files with the spamc_tmp_t type, if you want to store spamc temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux spamc policy is very flexible allowing users to setup their spamc processes in as secure a method as possible.
+.PP 
+The following process types are defined for spamc:
+
+.EX
+.B spamc_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), spamc(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/spamd_selinux.8 b/man/man8/spamd_selinux.8
new file mode 100644
index 0000000..cb40498
--- /dev/null
+++ b/man/man8/spamd_selinux.8
@@ -0,0 +1,222 @@
+.TH  "spamd_selinux"  "8"  "spamd" "dwalsh@redhat.com" "spamd SELinux Policy documentation"
+.SH "NAME"
+spamd_selinux \- Security Enhanced Linux Policy for the spamd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  spamd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run spamd with the tightest access possible.
+
+
+.PP
+If you want to allow user spamassassin clients to use the network, you must turn on the spamassassin_can_network boolean.
+
+.EX
+.B setsebool -P spamassassin_can_network 1
+.EE
+
+.PP
+If you want to allow spamd to read/write user home directories, you must turn on the spamd_enable_home_dirs boolean.
+
+.EX
+.B setsebool -P spamd_enable_home_dirs 1
+.EE
+
+.PP
+If you want to allow http daemon to check spa, you must turn on the httpd_can_check_spam boolean.
+
+.EX
+.B setsebool -P httpd_can_check_spam 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux spamd policy is very flexible allowing users to setup their spamd processes in as secure a method as possible.
+.PP 
+The following file types are defined for spamd:
+
+
+.EX
+.PP
+.B spamd_compiled_t 
+.EE
+
+- Set files with the spamd_compiled_t type, if you want to treat the files as spamd compiled data.
+
+
+.EX
+.PP
+.B spamd_etc_t 
+.EE
+
+- Set files with the spamd_etc_t type, if you want to store spamd files in the /etc directories.
+
+
+.EX
+.PP
+.B spamd_exec_t 
+.EE
+
+- Set files with the spamd_exec_t type, if you want to transition an executable to the spamd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/spamd, /usr/bin/mimedefang-multiplexor, /usr/bin/spamd, /usr/bin/mimedefang
+
+.EX
+.PP
+.B spamd_initrc_exec_t 
+.EE
+
+- Set files with the spamd_initrc_exec_t type, if you want to transition an executable to the spamd_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/spamd, /etc/rc\.d/init\.d/mimedefang.*
+
+.EX
+.PP
+.B spamd_log_t 
+.EE
+
+- Set files with the spamd_log_t type, if you want to treat the data as spamd log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/razor-agent\.log, /var/log/spamd\.log, /var/log/mimedefang
+
+.EX
+.PP
+.B spamd_spool_t 
+.EE
+
+- Set files with the spamd_spool_t type, if you want to store the spamd files under the /var/spool directory.
+
+.br
+.TP 5
+Paths: 
+/var/spool/spamd(/.*)?, /var/spool/spamassassin(/.*)?
+
+.EX
+.PP
+.B spamd_tmp_t 
+.EE
+
+- Set files with the spamd_tmp_t type, if you want to store spamd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B spamd_update_exec_t 
+.EE
+
+- Set files with the spamd_update_exec_t type, if you want to transition an executable to the spamd_update_t domain.
+
+
+.EX
+.PP
+.B spamd_var_lib_t 
+.EE
+
+- Set files with the spamd_var_lib_t type, if you want to store the spamd files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/spamassassin(/.*)?, /var/lib/razor(/.*)?
+
+.EX
+.PP
+.B spamd_var_run_t 
+.EE
+
+- Set files with the spamd_var_run_t type, if you want to store the spamd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/spamassassin(/.*)?, /var/spool/MIMEDefang(/.*)?, /var/spool/MD-Quarantine(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux spamd policy is very flexible allowing users to setup their spamd processes in as secure a method as possible.
+.PP 
+The following port types are defined for spamd:
+
+.EX
+.TP 5
+.B spamd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux spamd policy is very flexible allowing users to setup their spamd processes in as secure a method as possible.
+.PP 
+The following process types are defined for spamd:
+
+.EX
+.B spamc_t, spamd_t, spamd_update_t, spamass_milter_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), spamd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/squid_selinux.8 b/man/man8/squid_selinux.8
new file mode 100644
index 0000000..5d1acc2
--- /dev/null
+++ b/man/man8/squid_selinux.8
@@ -0,0 +1,185 @@
+.TH  "squid_selinux"  "8"  "squid" "dwalsh@redhat.com" "squid SELinux Policy documentation"
+.SH "NAME"
+squid_selinux \- Security Enhanced Linux Policy for the squid processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B squid
+(Squid caching http proxy server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  squid policy is extremely flexible and has several booleans that allow you to manipulate the policy and run squid with the tightest access possible.
+
+
+.PP
+If you want to allow squid to run as a transparent proxy (TPROXY, you must turn on the squid_use_tproxy boolean.
+
+.EX
+.B setsebool -P squid_use_tproxy 1
+.EE
+
+.PP
+If you want to allow squid to connect to all ports, not just HTTP, FTP, and Gopher ports, you must turn on the squid_connect_any boolean.
+
+.EX
+.B setsebool -P squid_connect_any 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux squid policy is very flexible allowing users to setup their squid processes in as secure a method as possible.
+.PP 
+The following file types are defined for squid:
+
+
+.EX
+.PP
+.B squid_cache_t 
+.EE
+
+- Set files with the squid_cache_t type, if you want to store the files under the /var/cache directory.
+
+.br
+.TP 5
+Paths: 
+/var/cache/squid(/.*)?, /var/spool/squid(/.*)?, /var/squidGuard(/.*)?
+
+.EX
+.PP
+.B squid_conf_t 
+.EE
+
+- Set files with the squid_conf_t type, if you want to treat the files as squid configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/etc/squid(/.*)?, /usr/share/squid(/.*)?
+
+.EX
+.PP
+.B squid_exec_t 
+.EE
+
+- Set files with the squid_exec_t type, if you want to transition an executable to the squid_t domain.
+
+
+.EX
+.PP
+.B squid_initrc_exec_t 
+.EE
+
+- Set files with the squid_initrc_exec_t type, if you want to transition an executable to the squid_initrc_t domain.
+
+
+.EX
+.PP
+.B squid_log_t 
+.EE
+
+- Set files with the squid_log_t type, if you want to treat the data as squid log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/squid(/.*)?, /var/log/squidGuard(/.*)?
+
+.EX
+.PP
+.B squid_tmpfs_t 
+.EE
+
+- Set files with the squid_tmpfs_t type, if you want to store squid files on a tmpfs file system.
+
+
+.EX
+.PP
+.B squid_var_run_t 
+.EE
+
+- Set files with the squid_var_run_t type, if you want to store the squid files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux squid policy is very flexible allowing users to setup their squid processes in as secure a method as possible.
+.PP 
+The following port types are defined for squid:
+
+.EX
+.TP 5
+.B squid_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux squid policy is very flexible allowing users to setup their squid processes in as secure a method as possible.
+.PP 
+The following process types are defined for squid:
+
+.EX
+.B squid_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), squid(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/srvsvcd_selinux.8 b/man/man8/srvsvcd_selinux.8
new file mode 100644
index 0000000..036f028
--- /dev/null
+++ b/man/man8/srvsvcd_selinux.8
@@ -0,0 +1,95 @@
+.TH  "srvsvcd_selinux"  "8"  "srvsvcd" "dwalsh@redhat.com" "srvsvcd SELinux Policy documentation"
+.SH "NAME"
+srvsvcd_selinux \- Security Enhanced Linux Policy for the srvsvcd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux srvsvcd policy is very flexible allowing users to setup their srvsvcd processes in as secure a method as possible.
+.PP 
+The following file types are defined for srvsvcd:
+
+
+.EX
+.PP
+.B srvsvcd_exec_t 
+.EE
+
+- Set files with the srvsvcd_exec_t type, if you want to transition an executable to the srvsvcd_t domain.
+
+
+.EX
+.PP
+.B srvsvcd_var_lib_t 
+.EE
+
+- Set files with the srvsvcd_var_lib_t type, if you want to store the srvsvcd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B srvsvcd_var_run_t 
+.EE
+
+- Set files with the srvsvcd_var_run_t type, if you want to store the srvsvcd files under the /run directory.
+
+
+.EX
+.PP
+.B srvsvcd_var_socket_t 
+.EE
+
+- Set files with the srvsvcd_var_socket_t type, if you want to treat the files as srvsvcd var socket data.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux srvsvcd policy is very flexible allowing users to setup their srvsvcd processes in as secure a method as possible.
+.PP 
+The following process types are defined for srvsvcd:
+
+.EX
+.B srvsvcd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), srvsvcd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/ssh_selinux.8 b/man/man8/ssh_selinux.8
new file mode 100644
index 0000000..a3beeec
--- /dev/null
+++ b/man/man8/ssh_selinux.8
@@ -0,0 +1,254 @@
+.TH  "ssh_selinux"  "8"  "ssh" "dwalsh@redhat.com" "ssh SELinux Policy documentation"
+.SH "NAME"
+ssh_selinux \- Security Enhanced Linux Policy for the ssh processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B ssh
+(Secure shell client and server policy)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  ssh policy is extremely flexible and has several booleans that allow you to manipulate the policy and run ssh with the tightest access possible.
+
+
+.PP
+If you want to allow ssh with chroot env to read and write files in the user home directorie, you must turn on the ssh_chroot_rw_homedirs boolean.
+
+.EX
+.B setsebool -P ssh_chroot_rw_homedirs 1
+.EE
+
+.PP
+If you want to allow ssh logins as sysadm_r:sysadm_, you must turn on the ssh_sysadm_login boolean.
+
+.EX
+.B setsebool -P ssh_sysadm_login 1
+.EE
+
+.PP
+If you want to allow host key based authenticatio, you must turn on the allow_ssh_keysign boolean.
+
+.EX
+.B setsebool -P allow_ssh_keysign 1
+.EE
+
+.PP
+If you want to allow fenced domain to execute ssh, you must turn on the fenced_can_ssh boolean.
+
+.EX
+.B setsebool -P fenced_can_ssh 1
+.EE
+
+.PP
+If you want to allow internal-sftp to read and write files in the user ssh home directories, you must turn on the sftpd_write_ssh_home boolean.
+
+.EX
+.B setsebool -P sftpd_write_ssh_home 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ssh policy is very flexible allowing users to setup their ssh processes in as secure a method as possible.
+.PP 
+The following file types are defined for ssh:
+
+
+.EX
+.PP
+.B ssh_agent_exec_t 
+.EE
+
+- Set files with the ssh_agent_exec_t type, if you want to transition an executable to the ssh_agent_t domain.
+
+
+.EX
+.PP
+.B ssh_agent_tmp_t 
+.EE
+
+- Set files with the ssh_agent_tmp_t type, if you want to store ssh agent temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B ssh_exec_t 
+.EE
+
+- Set files with the ssh_exec_t type, if you want to transition an executable to the ssh_t domain.
+
+
+.EX
+.PP
+.B ssh_home_t 
+.EE
+
+- Set files with the ssh_home_t type, if you want to store ssh files in the users home directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/nocpulse/\.ssh(/.*)?, /var/lib/gitolite/\.ssh(/.*)?, /root/\.shosts, /var/lib/amanda/\.ssh(/.*)?, /root/\.ssh(/.*)?, /var/lib/stickshift/.*/\.ssh(/.*)?
+
+.EX
+.PP
+.B ssh_keygen_exec_t 
+.EE
+
+- Set files with the ssh_keygen_exec_t type, if you want to transition an executable to the ssh_keygen_t domain.
+
+
+.EX
+.PP
+.B ssh_keysign_exec_t 
+.EE
+
+- Set files with the ssh_keysign_exec_t type, if you want to transition an executable to the ssh_keysign_t domain.
+
+
+.EX
+.PP
+.B ssh_tmpfs_t 
+.EE
+
+- Set files with the ssh_tmpfs_t type, if you want to store ssh files on a tmpfs file system.
+
+
+.EX
+.PP
+.B sshd_exec_t 
+.EE
+
+- Set files with the sshd_exec_t type, if you want to transition an executable to the sshd_t domain.
+
+
+.EX
+.PP
+.B sshd_initrc_exec_t 
+.EE
+
+- Set files with the sshd_initrc_exec_t type, if you want to transition an executable to the sshd_initrc_t domain.
+
+
+.EX
+.PP
+.B sshd_key_t 
+.EE
+
+- Set files with the sshd_key_t type, if you want to treat the files as sshd key data.
+
+.br
+.TP 5
+Paths: 
+/etc/ssh/ssh_host_rsa_key, /etc/ssh/ssh_host_rsa_key.pub, /etc/ssh/ssh_host_dsa_key.pub, /etc/ssh/ssh_host_key, /etc/ssh/ssh_host_key.pub, /etc/ssh/ssh_host_dsa_key, /etc/ssh/primes
+
+.EX
+.PP
+.B sshd_keytab_t 
+.EE
+
+- Set files with the sshd_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B sshd_tmpfs_t 
+.EE
+
+- Set files with the sshd_tmpfs_t type, if you want to store sshd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B sshd_var_run_t 
+.EE
+
+- Set files with the sshd_var_run_t type, if you want to store the sshd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/sshd\.init\.pid, /var/run/sshd\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux ssh policy is very flexible allowing users to setup their ssh processes in as secure a method as possible.
+.PP 
+The following port types are defined for ssh:
+
+.EX
+.TP 5
+.B ssh_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ssh policy is very flexible allowing users to setup their ssh processes in as secure a method as possible.
+.PP 
+The following process types are defined for ssh:
+
+.EX
+.B sshd_sandbox_t, ssh_keysign_t, ssh_keygen_t, ssh_t, sshd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ssh(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/sshd_selinux.8 b/man/man8/sshd_selinux.8
new file mode 100644
index 0000000..b78c331
--- /dev/null
+++ b/man/man8/sshd_selinux.8
@@ -0,0 +1,248 @@
+.TH  "sshd_selinux"  "8"  "sshd" "dwalsh@redhat.com" "sshd SELinux Policy documentation"
+.SH "NAME"
+sshd_selinux \- Security Enhanced Linux Policy for the sshd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  sshd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run sshd with the tightest access possible.
+
+
+.PP
+If you want to allow ssh with chroot env to read and write files in the user home directorie, you must turn on the ssh_chroot_rw_homedirs boolean.
+
+.EX
+.B setsebool -P ssh_chroot_rw_homedirs 1
+.EE
+
+.PP
+If you want to allow ssh logins as sysadm_r:sysadm_, you must turn on the ssh_sysadm_login boolean.
+
+.EX
+.B setsebool -P ssh_sysadm_login 1
+.EE
+
+.PP
+If you want to allow host key based authenticatio, you must turn on the allow_ssh_keysign boolean.
+
+.EX
+.B setsebool -P allow_ssh_keysign 1
+.EE
+
+.PP
+If you want to allow fenced domain to execute ssh, you must turn on the fenced_can_ssh boolean.
+
+.EX
+.B setsebool -P fenced_can_ssh 1
+.EE
+
+.PP
+If you want to allow internal-sftp to read and write files in the user ssh home directories, you must turn on the sftpd_write_ssh_home boolean.
+
+.EX
+.B setsebool -P sftpd_write_ssh_home 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux sshd policy is very flexible allowing users to setup their sshd processes in as secure a method as possible.
+.PP 
+The following file types are defined for sshd:
+
+
+.EX
+.PP
+.B ssh_agent_exec_t 
+.EE
+
+- Set files with the ssh_agent_exec_t type, if you want to transition an executable to the ssh_agent_t domain.
+
+
+.EX
+.PP
+.B ssh_agent_tmp_t 
+.EE
+
+- Set files with the ssh_agent_tmp_t type, if you want to store ssh agent temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B ssh_exec_t 
+.EE
+
+- Set files with the ssh_exec_t type, if you want to transition an executable to the ssh_t domain.
+
+
+.EX
+.PP
+.B ssh_home_t 
+.EE
+
+- Set files with the ssh_home_t type, if you want to store ssh files in the users home directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/nocpulse/\.ssh(/.*)?, /var/lib/gitolite/\.ssh(/.*)?, /root/\.shosts, /var/lib/amanda/\.ssh(/.*)?, /root/\.ssh(/.*)?, /var/lib/stickshift/.*/\.ssh(/.*)?
+
+.EX
+.PP
+.B ssh_keygen_exec_t 
+.EE
+
+- Set files with the ssh_keygen_exec_t type, if you want to transition an executable to the ssh_keygen_t domain.
+
+
+.EX
+.PP
+.B ssh_keysign_exec_t 
+.EE
+
+- Set files with the ssh_keysign_exec_t type, if you want to transition an executable to the ssh_keysign_t domain.
+
+
+.EX
+.PP
+.B ssh_tmpfs_t 
+.EE
+
+- Set files with the ssh_tmpfs_t type, if you want to store ssh files on a tmpfs file system.
+
+
+.EX
+.PP
+.B sshd_exec_t 
+.EE
+
+- Set files with the sshd_exec_t type, if you want to transition an executable to the sshd_t domain.
+
+
+.EX
+.PP
+.B sshd_initrc_exec_t 
+.EE
+
+- Set files with the sshd_initrc_exec_t type, if you want to transition an executable to the sshd_initrc_t domain.
+
+
+.EX
+.PP
+.B sshd_key_t 
+.EE
+
+- Set files with the sshd_key_t type, if you want to treat the files as sshd key data.
+
+.br
+.TP 5
+Paths: 
+/etc/ssh/ssh_host_rsa_key, /etc/ssh/ssh_host_rsa_key.pub, /etc/ssh/ssh_host_dsa_key.pub, /etc/ssh/ssh_host_key, /etc/ssh/ssh_host_key.pub, /etc/ssh/ssh_host_dsa_key, /etc/ssh/primes
+
+.EX
+.PP
+.B sshd_keytab_t 
+.EE
+
+- Set files with the sshd_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B sshd_tmpfs_t 
+.EE
+
+- Set files with the sshd_tmpfs_t type, if you want to store sshd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B sshd_var_run_t 
+.EE
+
+- Set files with the sshd_var_run_t type, if you want to store the sshd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/sshd\.init\.pid, /var/run/sshd\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux sshd policy is very flexible allowing users to setup their sshd processes in as secure a method as possible.
+.PP 
+The following port types are defined for sshd:
+
+.EX
+.TP 5
+.B ssh_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux sshd policy is very flexible allowing users to setup their sshd processes in as secure a method as possible.
+.PP 
+The following process types are defined for sshd:
+
+.EX
+.B sshd_sandbox_t, ssh_keysign_t, ssh_keygen_t, ssh_t, sshd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), sshd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/sssd_selinux.8 b/man/man8/sssd_selinux.8
new file mode 100644
index 0000000..d9a7d4a
--- /dev/null
+++ b/man/man8/sssd_selinux.8
@@ -0,0 +1,117 @@
+.TH  "sssd_selinux"  "8"  "sssd" "dwalsh@redhat.com" "sssd SELinux Policy documentation"
+.SH "NAME"
+sssd_selinux \- Security Enhanced Linux Policy for the sssd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B sssd
+(System Security Services Daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux sssd policy is very flexible allowing users to setup their sssd processes in as secure a method as possible.
+.PP 
+The following file types are defined for sssd:
+
+
+.EX
+.PP
+.B sssd_exec_t 
+.EE
+
+- Set files with the sssd_exec_t type, if you want to transition an executable to the sssd_t domain.
+
+
+.EX
+.PP
+.B sssd_initrc_exec_t 
+.EE
+
+- Set files with the sssd_initrc_exec_t type, if you want to transition an executable to the sssd_initrc_t domain.
+
+
+.EX
+.PP
+.B sssd_public_t 
+.EE
+
+- Set files with the sssd_public_t type, if you want to treat the files as sssd public data.
+
+
+.EX
+.PP
+.B sssd_var_lib_t 
+.EE
+
+- Set files with the sssd_var_lib_t type, if you want to store the sssd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B sssd_var_log_t 
+.EE
+
+- Set files with the sssd_var_log_t type, if you want to treat the data as sssd var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B sssd_var_run_t 
+.EE
+
+- Set files with the sssd_var_run_t type, if you want to store the sssd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux sssd policy is very flexible allowing users to setup their sssd processes in as secure a method as possible.
+.PP 
+The following process types are defined for sssd:
+
+.EX
+.B sssd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), sssd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/staff_selinux.8 b/man/man8/staff_selinux.8
new file mode 100644
index 0000000..039dc00
--- /dev/null
+++ b/man/man8/staff_selinux.8
@@ -0,0 +1,244 @@
+.TH  "staff_selinux"  "8"  "staff" "mgrepl@redhat.com" "staff SELinux Policy documentation"
+.SH "NAME"
+staff_u \- \fBAdministrator's unprivileged user role\fP - Security Enhanced Linux Policy 
+
+.SH DESCRIPTION
+
+\fBstaff_u\fP is an SELinux User defined in the SELinux
+policy. SELinux users have default roles, \fBstaff_r\fP.  The
+default role has a default type, \fBstaff_t\fP, associated with it.
+
+The SELinux user will usually login to a system with a context that looks like:
+
+.B staff_u:staff_r:staff_u:s0-s0:c0.c1023
+
+Linux users are automatically assigned an SELinux users at login.  
+Login programs use the SELinux User to assign initial context to the user's shell.
+
+SELinux policy uses the context to control the user's access.
+
+By default all users are assigned to the SELinux user via the \fB__default__\fP flag
+
+On Targeted policy systems the \fB__default__\fP user is assigned to the \fBunconfined_u\fP SELinux user.
+
+You can list all Linux User to SELinux user mapping using:
+
+.B semanage login -l
+
+If you wanted to change the default user mapping to use the staff_u user, you would execute:
+
+.B semanage login -m -s staff_u __default__
+
+
+If you want to map the one Linux user (joe) to the SELinux user staff, you would execute:
+
+.B $ semanage login -a -s staff_u joe
+
+
+.SH USER DESCRIPTION
+
+The SELinux user staff_u is defined in policy as a unprivileged user. SELinux prevents unprivileged users from doing administration tasks without transitioning to a different role.
+
+.SH SUDO
+
+The SELinux user staff can execute sudo. 
+
+You can set up sudo to allow staff to transition to an administrative domain:
+
+Add one or more of the following record to sudoers using visudo.
+
+
+USERNAME ALL=(ALL) ROLE=ftpadmin_r TYPE=ftpadmin_t COMMAND
+.br
+sudo will run COMMAND as staff_u:ftpadmin_r:ftpadmin_t:LEVEL
+
+USERNAME ALL=(ALL) ROLE=auditadm_r TYPE=auditadm_t COMMAND
+.br
+sudo will run COMMAND as staff_u:auditadm_r:auditadm_t:LEVEL
+
+USERNAME ALL=(ALL) ROLE=dbadm_r TYPE=dbadm_t COMMAND
+.br
+sudo will run COMMAND as staff_u:dbadm_r:dbadm_t:LEVEL
+
+USERNAME ALL=(ALL) ROLE=logadm_r TYPE=logadm_t COMMAND
+.br
+sudo will run COMMAND as staff_u:logadm_r:logadm_t:LEVEL
+
+USERNAME ALL=(ALL) ROLE=secadm_r TYPE=secadm_t COMMAND
+.br
+sudo will run COMMAND as staff_u:secadm_r:secadm_t:LEVEL
+
+USERNAME ALL=(ALL) ROLE=sysadm_r TYPE=sysadm_t COMMAND
+.br
+sudo will run COMMAND as staff_u:sysadm_r:sysadm_t:LEVEL
+
+USERNAME ALL=(ALL) ROLE=unconfined_r TYPE=unconfined_t COMMAND
+.br
+sudo will run COMMAND as staff_u:unconfined_r:unconfined_t:LEVEL
+
+USERNAME ALL=(ALL) ROLE=webadm_r TYPE=webadm_t COMMAND
+.br
+sudo will run COMMAND as staff_u:webadm_r:webadm_t:LEVEL
+
+You might also need to add one or more of these new roles to your SELinux user record.
+
+List the SELinux roles your SELinux user can reach by executing:
+
+.B $ semanage user -l |grep selinux_name
+
+Modify the roles list and add staff_r to this list.
+
+.B $ semanage user -m -R 'staff_r ftpadmin_r auditadm_r dbadm_r logadm_r secadm_r sysadm_r unconfined_r webadm_r' staff_u 
+
+For more details you can see semanage man page.
+
+
+.SH X WINDOWS LOGIN
+
+The SELinux user staff_u is able to X Windows login.
+
+.SH TERMINAL LOGIN
+
+The SELinux user staff_u is able to terminal login.
+
+.SH NETWORK
+
+.TP
+The SELinux user staff_u is able to listen on the following tcp ports.
+
+.B xserver_port_t: 6000-6020
+
+.TP
+The SELinux user staff_u is able to listen on the following udp ports.
+
+.B all ports with out defined types
+
+.TP
+The SELinux user staff_u is able to connect to the following tcp ports.
+
+.B all ports
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  staff_t policy is extremely flexible and has several booleans that allow you to manipulate the policy and run staff_t with the tightest access possible.
+
+
+.PP
+If you want to allow users to connect to the local mysql server, you must turn on the allow_user_mysql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_mysql_connect 1
+.EE
+
+.PP
+If you want to control users use of ping and traceroute, you must turn on the user_ping boolean.
+
+.EX
+.B setsebool -P user_ping 1
+.EE
+
+.PP
+If you want to allow w to display everyone, you must turn on the user_ttyfile_stat boolean.
+
+.EX
+.B setsebool -P user_ttyfile_stat 1
+.EE
+
+.PP
+If you want to allow user music sharing, you must turn on the user_share_music boolean.
+
+.EX
+.B setsebool -P user_share_music 1
+.EE
+
+.PP
+If you want to allow regular users direct dri device access, you must turn on the user_direct_dri boolean.
+
+.EX
+.B setsebool -P user_direct_dri 1
+.EE
+
+.PP
+If you want to allow user to r/w files on filesystems that do not have extended attributes (FAT, CDROM, FLOPPY), you must turn on the user_rw_noexattrfile boolean.
+
+.EX
+.B setsebool -P user_rw_noexattrfile 1
+.EE
+
+.PP
+If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the user_tcp_server boolean.
+
+.EX
+.B setsebool -P user_tcp_server 1
+.EE
+
+.PP
+If you want to allow regular users direct mouse access, you must turn on the user_direct_mouse boolean.
+
+.EX
+.B setsebool -P user_direct_mouse 1
+.EE
+
+.PP
+If you want to allow user processes to change their priority, you must turn on the user_setrlimit boolean.
+
+.EX
+.B setsebool -P user_setrlimit 1
+.EE
+
+.PP
+If you want to allow users to connect to PostgreSQL, you must turn on the allow_user_postgresql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_postgresql_connect 1
+.EE
+
+.PP
+If you want to allow users to read system messages, you must turn on the user_dmesg boolean.
+
+.EX
+.B setsebool -P user_dmesg 1
+.EE
+
+.SH HOME_EXEC
+
+The SELinux user staff_u is able execute home content files.
+
+.SH TRANSITIONS
+
+Three things can happen when staff_t attempts to execute a program.
+
+\fB1.\fP SELinux Policy can deny staff_t from executing the program.
+
+.TP
+
+\fB2.\fP SELinux Policy can allow staff_t to execute the program in the current user type.
+
+Execute the following to see the types that the SELinux user staff_t can execute without transitioning:
+
+.B sesearch -A -s staff_t -c file -p execute_no_trans
+
+.TP
+
+\fB3.\fP SELinux can allow staff_t to execute the program and transition to a new type.
+
+Execute the following to see the types that the SELinux user staff_t can execute and transition:
+
+.B $ sesearch -A -s staff_t -c process -p transition
+
+
+.SH "COMMANDS"
+
+.B semanage login
+can also be used to manipulate the Linux User to SELinux User mappings
+
+.B semanage user
+can also be used to manipulate SELinux user definitions.
+
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genuserman.py.
+
+.SH "SEE ALSO"
+selinux(8), semanage(8).
diff --git a/man/man8/stunnel_selinux.8 b/man/man8/stunnel_selinux.8
new file mode 100644
index 0000000..0af68a0
--- /dev/null
+++ b/man/man8/stunnel_selinux.8
@@ -0,0 +1,131 @@
+.TH  "stunnel_selinux"  "8"  "stunnel" "dwalsh@redhat.com" "stunnel SELinux Policy documentation"
+.SH "NAME"
+stunnel_selinux \- Security Enhanced Linux Policy for the stunnel processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B stunnel
+(SSL Tunneling Proxy)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux stunnel policy is very flexible allowing users to setup their stunnel processes in as secure a method as possible.
+.PP 
+The following file types are defined for stunnel:
+
+
+.EX
+.PP
+.B stunnel_etc_t 
+.EE
+
+- Set files with the stunnel_etc_t type, if you want to store stunnel files in the /etc directories.
+
+
+.EX
+.PP
+.B stunnel_exec_t 
+.EE
+
+- Set files with the stunnel_exec_t type, if you want to transition an executable to the stunnel_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/stunnel, /usr/bin/stunnel
+
+.EX
+.PP
+.B stunnel_tmp_t 
+.EE
+
+- Set files with the stunnel_tmp_t type, if you want to store stunnel temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B stunnel_var_run_t 
+.EE
+
+- Set files with the stunnel_var_run_t type, if you want to store the stunnel files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux stunnel policy is very flexible allowing users to setup their stunnel processes in as secure a method as possible.
+.PP 
+The following port types are defined for stunnel:
+
+.EX
+.TP 5
+.B stunnel_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux stunnel policy is very flexible allowing users to setup their stunnel processes in as secure a method as possible.
+.PP 
+The following process types are defined for stunnel:
+
+.EX
+.B stunnel_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), stunnel(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/sulogin_selinux.8 b/man/man8/sulogin_selinux.8
new file mode 100644
index 0000000..6cff947
--- /dev/null
+++ b/man/man8/sulogin_selinux.8
@@ -0,0 +1,75 @@
+.TH  "sulogin_selinux"  "8"  "sulogin" "dwalsh@redhat.com" "sulogin SELinux Policy documentation"
+.SH "NAME"
+sulogin_selinux \- Security Enhanced Linux Policy for the sulogin processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux sulogin policy is very flexible allowing users to setup their sulogin processes in as secure a method as possible.
+.PP 
+The following file types are defined for sulogin:
+
+
+.EX
+.PP
+.B sulogin_exec_t 
+.EE
+
+- Set files with the sulogin_exec_t type, if you want to transition an executable to the sulogin_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/sushell, /sbin/sulogin, /usr/sbin/sulogin, /sbin/sushell
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux sulogin policy is very flexible allowing users to setup their sulogin processes in as secure a method as possible.
+.PP 
+The following process types are defined for sulogin:
+
+.EX
+.B sulogin_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), sulogin(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/svc_selinux.8 b/man/man8/svc_selinux.8
new file mode 100644
index 0000000..1c06ece
--- /dev/null
+++ b/man/man8/svc_selinux.8
@@ -0,0 +1,127 @@
+.TH  "svc_selinux"  "8"  "svc" "dwalsh@redhat.com" "svc SELinux Policy documentation"
+.SH "NAME"
+svc_selinux \- Security Enhanced Linux Policy for the svc processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux svc policy is very flexible allowing users to setup their svc processes in as secure a method as possible.
+.PP 
+The following file types are defined for svc:
+
+
+.EX
+.PP
+.B svc_conf_t 
+.EE
+
+- Set files with the svc_conf_t type, if you want to treat the files as svc configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/var/dnscache/env(/.*)?, /var/tinydns/env(/.*)?, /var/axfrdns/env(/.*)?, /var/service/.*/env(/.*)?
+
+.EX
+.PP
+.B svc_log_t 
+.EE
+
+- Set files with the svc_log_t type, if you want to treat the data as svc log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B svc_multilog_exec_t 
+.EE
+
+- Set files with the svc_multilog_exec_t type, if you want to transition an executable to the svc_multilog_t domain.
+
+
+.EX
+.PP
+.B svc_run_exec_t 
+.EE
+
+- Set files with the svc_run_exec_t type, if you want to transition an executable to the svc_run_t domain.
+
+.br
+.TP 5
+Paths: 
+/var/tinydns/run, /var/qmail/supervise/.*/run, /var/axfrdns/log/run, /usr/bin/setuidgid, /usr/bin/fghack, /var/tinydns/log/run, /var/service/.*/log/run, /var/axfrdns/run, /var/qmail/supervise/.*/log/run, /usr/bin/envuidgid, /usr/bin/envdir, /var/dnscache/run, /usr/bin/softlimit, /var/service/.*/run.*, /usr/bin/pgrphack, /var/dnscache/log/run, /usr/bin/setlock
+
+.EX
+.PP
+.B svc_start_exec_t 
+.EE
+
+- Set files with the svc_start_exec_t type, if you want to transition an executable to the svc_start_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/svok, /usr/bin/svscan, /usr/bin/svc, /usr/bin/svscanboot, /usr/bin/supervise
+
+.EX
+.PP
+.B svc_svc_t 
+.EE
+
+- Set files with the svc_svc_t type, if you want to treat the files as svc svc data.
+
+.br
+.TP 5
+Paths: 
+/service, /var/tinydns(/.*)?, /service/.*, /var/service/.*, /var/qmail/supervise(/.*)?, /var/dnscache(/.*)?, /var/axfrdns(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux svc policy is very flexible allowing users to setup their svc processes in as secure a method as possible.
+.PP 
+The following process types are defined for svc:
+
+.EX
+.B svc_multilog_t, svc_start_t, svc_run_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), svc(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/swat_selinux.8 b/man/man8/swat_selinux.8
new file mode 100644
index 0000000..bd9a083
--- /dev/null
+++ b/man/man8/swat_selinux.8
@@ -0,0 +1,113 @@
+.TH  "swat_selinux"  "8"  "swat" "dwalsh@redhat.com" "swat SELinux Policy documentation"
+.SH "NAME"
+swat_selinux \- Security Enhanced Linux Policy for the swat processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux swat policy is very flexible allowing users to setup their swat processes in as secure a method as possible.
+.PP 
+The following file types are defined for swat:
+
+
+.EX
+.PP
+.B swat_exec_t 
+.EE
+
+- Set files with the swat_exec_t type, if you want to transition an executable to the swat_t domain.
+
+
+.EX
+.PP
+.B swat_tmp_t 
+.EE
+
+- Set files with the swat_tmp_t type, if you want to store swat temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B swat_var_run_t 
+.EE
+
+- Set files with the swat_var_run_t type, if you want to store the swat files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux swat policy is very flexible allowing users to setup their swat processes in as secure a method as possible.
+.PP 
+The following port types are defined for swat:
+
+.EX
+.TP 5
+.B swat_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux swat policy is very flexible allowing users to setup their swat processes in as secure a method as possible.
+.PP 
+The following process types are defined for swat:
+
+.EX
+.B swat_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), swat(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/sysadm_selinux.8 b/man/man8/sysadm_selinux.8
new file mode 100644
index 0000000..679f836
--- /dev/null
+++ b/man/man8/sysadm_selinux.8
@@ -0,0 +1,230 @@
+.TH  "sysadm_selinux"  "8"  "sysadm" "mgrepl@redhat.com" "sysadm SELinux Policy documentation"
+.SH "NAME"
+sysadm_u \- \fBGeneral system administration role\fP - Security Enhanced Linux Policy 
+
+.SH DESCRIPTION
+
+\fBsysadm_u\fP is an SELinux User defined in the SELinux
+policy. SELinux users have default roles, \fBsysadm_r\fP.  The
+default role has a default type, \fBsysadm_t\fP, associated with it.
+
+The SELinux user will usually login to a system with a context that looks like:
+
+.B sysadm_u:sysadm_r:sysadm_u:s0-s0:c0.c1023
+
+Linux users are automatically assigned an SELinux users at login.  
+Login programs use the SELinux User to assign initial context to the user's shell.
+
+SELinux policy uses the context to control the user's access.
+
+By default all users are assigned to the SELinux user via the \fB__default__\fP flag
+
+On Targeted policy systems the \fB__default__\fP user is assigned to the \fBunconfined_u\fP SELinux user.
+
+You can list all Linux User to SELinux user mapping using:
+
+.B semanage login -l
+
+If you wanted to change the default user mapping to use the sysadm_u user, you would execute:
+
+.B semanage login -m -s sysadm_u __default__
+
+
+If you want to map the one Linux user (joe) to the SELinux user sysadm, you would execute:
+
+.B $ semanage login -a -s sysadm_u joe
+
+
+.SH USER DESCRIPTION
+
+The SELinux user sysadm_u is an admin user. It means that a mapped Linux user to this SELinux user is intended for administrative actions. Usually this is assigned to a root Linux user.  
+
+.SH SUDO
+
+The SELinux user sysadm can execute sudo. 
+
+You can set up sudo to allow sysadm to transition to an administrative domain:
+
+Add one or more of the following record to sudoers using visudo.
+
+
+USERNAME ALL=(ALL) ROLE=auditadm_r TYPE=auditadm_t COMMAND
+.br
+sudo will run COMMAND as sysadm_u:auditadm_r:auditadm_t:LEVEL
+
+USERNAME ALL=(ALL) ROLE=secadm_r TYPE=secadm_t COMMAND
+.br
+sudo will run COMMAND as sysadm_u:secadm_r:secadm_t:LEVEL
+
+USERNAME ALL=(ALL) ROLE=staff_r TYPE=staff_t COMMAND
+.br
+sudo will run COMMAND as sysadm_u:staff_r:staff_t:LEVEL
+
+USERNAME ALL=(ALL) ROLE=user_r TYPE=user_t COMMAND
+.br
+sudo will run COMMAND as sysadm_u:user_r:user_t:LEVEL
+
+You might also need to add one or more of these new roles to your SELinux user record.
+
+List the SELinux roles your SELinux user can reach by executing:
+
+.B $ semanage user -l |grep selinux_name
+
+Modify the roles list and add sysadm_r to this list.
+
+.B $ semanage user -m -R 'sysadm_r auditadm_r secadm_r staff_r user_r' sysadm_u 
+
+For more details you can see semanage man page.
+
+
+.SH X WINDOWS LOGIN
+
+The SELinux user sysadm_u is able to X Windows login.
+
+.SH TERMINAL LOGIN
+
+The SELinux user sysadm_u is able to terminal login.
+
+.SH NETWORK
+
+.TP
+The SELinux user sysadm_u is able to listen on the following tcp ports.
+
+.B all ports with out defined types
+
+.TP
+The SELinux user sysadm_u is able to listen on the following udp ports.
+
+.B ntp_port_t: 123
+
+.B all ports with out defined types
+
+.TP
+The SELinux user sysadm_u is able to connect to the following tcp ports.
+
+.B all ports
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  sysadm_t policy is extremely flexible and has several booleans that allow you to manipulate the policy and run sysadm_t with the tightest access possible.
+
+
+.PP
+If you want to allow users to connect to the local mysql server, you must turn on the allow_user_mysql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_mysql_connect 1
+.EE
+
+.PP
+If you want to control users use of ping and traceroute, you must turn on the user_ping boolean.
+
+.EX
+.B setsebool -P user_ping 1
+.EE
+
+.PP
+If you want to allow w to display everyone, you must turn on the user_ttyfile_stat boolean.
+
+.EX
+.B setsebool -P user_ttyfile_stat 1
+.EE
+
+.PP
+If you want to allow user music sharing, you must turn on the user_share_music boolean.
+
+.EX
+.B setsebool -P user_share_music 1
+.EE
+
+.PP
+If you want to allow regular users direct dri device access, you must turn on the user_direct_dri boolean.
+
+.EX
+.B setsebool -P user_direct_dri 1
+.EE
+
+.PP
+If you want to allow user to r/w files on filesystems that do not have extended attributes (FAT, CDROM, FLOPPY), you must turn on the user_rw_noexattrfile boolean.
+
+.EX
+.B setsebool -P user_rw_noexattrfile 1
+.EE
+
+.PP
+If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the user_tcp_server boolean.
+
+.EX
+.B setsebool -P user_tcp_server 1
+.EE
+
+.PP
+If you want to allow regular users direct mouse access, you must turn on the user_direct_mouse boolean.
+
+.EX
+.B setsebool -P user_direct_mouse 1
+.EE
+
+.PP
+If you want to allow user processes to change their priority, you must turn on the user_setrlimit boolean.
+
+.EX
+.B setsebool -P user_setrlimit 1
+.EE
+
+.PP
+If you want to allow users to connect to PostgreSQL, you must turn on the allow_user_postgresql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_postgresql_connect 1
+.EE
+
+.PP
+If you want to allow users to read system messages, you must turn on the user_dmesg boolean.
+
+.EX
+.B setsebool -P user_dmesg 1
+.EE
+
+.SH HOME_EXEC
+
+The SELinux user sysadm_u is able execute home content files.
+
+.SH TRANSITIONS
+
+Three things can happen when sysadm_t attempts to execute a program.
+
+\fB1.\fP SELinux Policy can deny sysadm_t from executing the program.
+
+.TP
+
+\fB2.\fP SELinux Policy can allow sysadm_t to execute the program in the current user type.
+
+Execute the following to see the types that the SELinux user sysadm_t can execute without transitioning:
+
+.B sesearch -A -s sysadm_t -c file -p execute_no_trans
+
+.TP
+
+\fB3.\fP SELinux can allow sysadm_t to execute the program and transition to a new type.
+
+Execute the following to see the types that the SELinux user sysadm_t can execute and transition:
+
+.B $ sesearch -A -s sysadm_t -c process -p transition
+
+
+.SH "COMMANDS"
+
+.B semanage login
+can also be used to manipulate the Linux User to SELinux User mappings
+
+.B semanage user
+can also be used to manipulate SELinux user definitions.
+
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genuserman.py.
+
+.SH "SEE ALSO"
+selinux(8), semanage(8).
diff --git a/man/man8/syslogd_selinux.8 b/man/man8/syslogd_selinux.8
new file mode 100644
index 0000000..875440a
--- /dev/null
+++ b/man/man8/syslogd_selinux.8
@@ -0,0 +1,182 @@
+.TH  "syslogd_selinux"  "8"  "syslogd" "dwalsh@redhat.com" "syslogd SELinux Policy documentation"
+.SH "NAME"
+syslogd_selinux \- Security Enhanced Linux Policy for the syslogd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  syslogd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run syslogd with the tightest access possible.
+
+
+.PP
+If you want to determine whether Polipo session daemon can send syslog messages, you must turn on the polipo_session_send_syslog_msg boolean.
+
+.EX
+.B setsebool -P polipo_session_send_syslog_msg 1
+.EE
+
+.PP
+If you want to allow syslogd daemon to send mai, you must turn on the logging_syslogd_can_sendmail boolean.
+
+.EX
+.B setsebool -P logging_syslogd_can_sendmail 1
+.EE
+
+.PP
+If you want to allow syslogd the ability to read/write terminal, you must turn on the logging_syslogd_use_tty boolean.
+
+.EX
+.B setsebool -P logging_syslogd_use_tty 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux syslogd policy is very flexible allowing users to setup their syslogd processes in as secure a method as possible.
+.PP 
+The following file types are defined for syslogd:
+
+
+.EX
+.PP
+.B syslog_conf_t 
+.EE
+
+- Set files with the syslog_conf_t type, if you want to treat the files as syslog configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/etc/rsyslog.conf, /etc/syslog.conf
+
+.EX
+.PP
+.B syslogd_exec_t 
+.EE
+
+- Set files with the syslogd_exec_t type, if you want to transition an executable to the syslogd_t domain.
+
+.br
+.TP 5
+Paths: 
+/lib/systemd/systemd-kmsg-syslogd, /usr/sbin/rsyslogd, /usr/sbin/syslog-ng, /usr/lib/systemd/systemd-kmsg-syslogd, /usr/sbin/metalog, /usr/lib/systemd/systemd-journald, /usr/sbin/syslogd, /usr/sbin/minilogd, /sbin/rsyslogd, /sbin/syslogd, /sbin/syslog-ng, /sbin/minilogd, /lib/systemd/systemd-journald
+
+.EX
+.PP
+.B syslogd_initrc_exec_t 
+.EE
+
+- Set files with the syslogd_initrc_exec_t type, if you want to transition an executable to the syslogd_initrc_t domain.
+
+
+.EX
+.PP
+.B syslogd_tmp_t 
+.EE
+
+- Set files with the syslogd_tmp_t type, if you want to store syslogd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B syslogd_var_lib_t 
+.EE
+
+- Set files with the syslogd_var_lib_t type, if you want to store the syslogd files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/syslog-ng.persist, /var/lib/r?syslog(/.*)?, /var/lib/syslog-ng(/.*)?
+
+.EX
+.PP
+.B syslogd_var_run_t 
+.EE
+
+- Set files with the syslogd_var_run_t type, if you want to store the syslogd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/syslog-ng(/.*)?, /var/run/syslog-ng(/.*)?, /var/run/metalog\.pid, /var/run/syslogd\.pid, /var/run/log(/.*)?, /var/run/syslog-ng.ctl
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux syslogd policy is very flexible allowing users to setup their syslogd processes in as secure a method as possible.
+.PP 
+The following port types are defined for syslogd:
+
+.EX
+.TP 5
+.B syslogd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux syslogd policy is very flexible allowing users to setup their syslogd processes in as secure a method as possible.
+.PP 
+The following process types are defined for syslogd:
+
+.EX
+.B syslogd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), syslogd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/sysstat_selinux.8 b/man/man8/sysstat_selinux.8
new file mode 100644
index 0000000..79ea311
--- /dev/null
+++ b/man/man8/sysstat_selinux.8
@@ -0,0 +1,93 @@
+.TH  "sysstat_selinux"  "8"  "sysstat" "dwalsh@redhat.com" "sysstat SELinux Policy documentation"
+.SH "NAME"
+sysstat_selinux \- Security Enhanced Linux Policy for the sysstat processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B sysstat
+(Policy for sysstat. Reports on various system states)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux sysstat policy is very flexible allowing users to setup their sysstat processes in as secure a method as possible.
+.PP 
+The following file types are defined for sysstat:
+
+
+.EX
+.PP
+.B sysstat_exec_t 
+.EE
+
+- Set files with the sysstat_exec_t type, if you want to transition an executable to the sysstat_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/sa/sa.*, /usr/lib/sysstat/sa.*, /usr/lib/atsar/atsa.*
+
+.EX
+.PP
+.B sysstat_log_t 
+.EE
+
+- Set files with the sysstat_log_t type, if you want to treat the data as sysstat log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/sysstat(/.*)?, /var/log/sa(/.*)?, /var/log/atsar(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux sysstat policy is very flexible allowing users to setup their sysstat processes in as secure a method as possible.
+.PP 
+The following process types are defined for sysstat:
+
+.EX
+.B sysstat_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), sysstat(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/system_selinux.8 b/man/man8/system_selinux.8
new file mode 100644
index 0000000..a08a3e0
--- /dev/null
+++ b/man/man8/system_selinux.8
@@ -0,0 +1,339 @@
+.TH  "system_selinux"  "8"  "system" "dwalsh@redhat.com" "system SELinux Policy documentation"
+.SH "NAME"
+system_selinux \- Security Enhanced Linux Policy for the system processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  system policy is extremely flexible and has several booleans that allow you to manipulate the policy and run system with the tightest access possible.
+
+
+.PP
+If you want to allow Git daemon system to access cifs file systems, you must turn on the git_system_use_cifs boolean.
+
+.EX
+.B setsebool -P git_system_use_cifs 1
+.EE
+
+.PP
+If you want to allow Git daemon system to search home directories, you must turn on the git_system_enable_homedirs boolean.
+
+.EX
+.B setsebool -P git_system_enable_homedirs 1
+.EE
+
+.PP
+If you want to allow Git daemon system to access nfs file systems, you must turn on the git_system_use_nfs boolean.
+
+.EX
+.B setsebool -P git_system_use_nfs 1
+.EE
+
+.PP
+If you want to enable support for systemd as the init program, you must turn on the init_systemd boolean.
+
+.EX
+.B setsebool -P init_systemd 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux system policy is very flexible allowing users to setup their system processes in as secure a method as possible.
+.PP 
+The following file types are defined for system:
+
+
+.EX
+.PP
+.B system_conf_t 
+.EE
+
+- Set files with the system_conf_t type, if you want to treat the files as system configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/etc/sysctl\.conf(\.old)?, /etc/sysconfig/ipvsadm.*, /etc/sysconfig/ebtables.*, /etc/sysconfig/ip6?tables.*, /etc/sysconfig/system-config-firewall.*
+
+.EX
+.PP
+.B system_cron_spool_t 
+.EE
+
+- Set files with the system_cron_spool_t type, if you want to store the system cron files under the /var/spool directory.
+
+.br
+.TP 5
+Paths: 
+/etc/crontab, /var/spool/anacron(/.*)?, /etc/cron\.d(/.*)?, /var/spool/fcron/systab\.orig, /var/spool/fcron/new\.systab, /var/spool/fcron/systab
+
+.EX
+.PP
+.B system_cronjob_lock_t 
+.EE
+
+- Set files with the system_cronjob_lock_t type, if you want to treat the files as system cronjob lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B system_cronjob_tmp_t 
+.EE
+
+- Set files with the system_cronjob_tmp_t type, if you want to store system cronjob temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B system_cronjob_var_lib_t 
+.EE
+
+- Set files with the system_cronjob_var_lib_t type, if you want to store the system cronjob files under the /var/lib directory.
+
+
+.EX
+.PP
+.B system_cronjob_var_run_t 
+.EE
+
+- Set files with the system_cronjob_var_run_t type, if you want to store the system cronjob files under the /run directory.
+
+
+.EX
+.PP
+.B system_dbusd_tmp_t 
+.EE
+
+- Set files with the system_dbusd_tmp_t type, if you want to store system dbusd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B system_dbusd_var_lib_t 
+.EE
+
+- Set files with the system_dbusd_var_lib_t type, if you want to store the system dbusd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B system_dbusd_var_run_t 
+.EE
+
+- Set files with the system_dbusd_var_run_t type, if you want to store the system dbusd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/named/chroot/var/run/dbus(/.*)?, /var/run/dbus(/.*)?
+
+.EX
+.PP
+.B system_mail_tmp_t 
+.EE
+
+- Set files with the system_mail_tmp_t type, if you want to store system mail temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B system_map_t 
+.EE
+
+- Set files with the system_map_t type, if you want to treat the files as system map data.
+
+.br
+.TP 5
+Paths: 
+/boot/System\.map(-.*)?, /boot/efi(/.*)?/System\.map(-.*)?
+
+.EX
+.PP
+.B system_munin_plugin_exec_t 
+.EE
+
+- Set files with the system_munin_plugin_exec_t type, if you want to transition an executable to the system_munin_plugin_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/share/munin/plugins/proc_pri, /usr/share/munin/plugins/swap, /usr/share/munin/plugins/interrupts, /usr/share/munin/plugins/cpu.*, /usr/share/munin/plugins/yum, /usr/share/munin/plugins/load, /usr/share/munin/plugins/irqstats, /usr/share/munin/plugins/processes, /usr/share/munin/plugins/iostat.*, /usr/share/munin/plugins/nfs.*, /usr/share/munin/plugins/munin_.*, /usr/share/munin/plugins/threads, /usr/share/munin/plugins/netstat, /usr/share/munin/plugins/acpi, /usr/share/munin/plugins/forks, /usr/share/munin/plugins/uptime, /usr/share/munin/plugins/users, /usr/share/munin/plugins/memory, /usr/share/munin/plugins/if_.*, /usr/share/munin/plugins/open_files
+
+.EX
+.PP
+.B system_munin_plugin_tmp_t 
+.EE
+
+- Set files with the system_munin_plugin_tmp_t type, if you want to store system munin plugin temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B systemd_logger_exec_t 
+.EE
+
+- Set files with the systemd_logger_exec_t type, if you want to transition an executable to the systemd_logger_t domain.
+
+.br
+.TP 5
+Paths: 
+/lib/systemd/systemd-logger, /usr/lib/systemd/systemd-logger
+
+.EX
+.PP
+.B systemd_logind_exec_t 
+.EE
+
+- Set files with the systemd_logind_exec_t type, if you want to transition an executable to the systemd_logind_t domain.
+
+.br
+.TP 5
+Paths: 
+/lib/systemd/systemd-logind, /usr/lib/systemd/systemd-logind
+
+.EX
+.PP
+.B systemd_logind_sessions_t 
+.EE
+
+- Set files with the systemd_logind_sessions_t type, if you want to treat the files as systemd logind sessions data.
+
+
+.EX
+.PP
+.B systemd_logind_var_run_t 
+.EE
+
+- Set files with the systemd_logind_var_run_t type, if you want to store the systemd logind files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/systemd/users(/.*)?, /var/run/systemd/seats(/.*)?
+
+.EX
+.PP
+.B systemd_notify_exec_t 
+.EE
+
+- Set files with the systemd_notify_exec_t type, if you want to transition an executable to the systemd_notify_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/systemd-notify, /bin/systemd-notify
+
+.EX
+.PP
+.B systemd_passwd_agent_exec_t 
+.EE
+
+- Set files with the systemd_passwd_agent_exec_t type, if you want to transition an executable to the systemd_passwd_agent_t domain.
+
+.br
+.TP 5
+Paths: 
+/bin/systemd-tty-ask-password-agent, /usr/bin/systemd-gnome-ask-password-agent, /usr/bin/systemd-tty-ask-password-agent
+
+.EX
+.PP
+.B systemd_passwd_var_run_t 
+.EE
+
+- Set files with the systemd_passwd_var_run_t type, if you want to store the systemd passwd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/systemd/ask-password(/.*)?, /var/run/systemd/ask-password-block(/.*)?
+
+.EX
+.PP
+.B systemd_systemctl_exec_t 
+.EE
+
+- Set files with the systemd_systemctl_exec_t type, if you want to transition an executable to the systemd_systemctl_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/systemctl, /bin/systemctl
+
+.EX
+.PP
+.B systemd_tmpfiles_exec_t 
+.EE
+
+- Set files with the systemd_tmpfiles_exec_t type, if you want to transition an executable to the systemd_tmpfiles_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/systemd-tmpfiles, /bin/systemd-tmpfiles, /usr/lib/systemd/systemd-tmpfiles, /lib/systemd/systemd-tmpfiles
+
+.EX
+.PP
+.B systemd_unit_file_t 
+.EE
+
+- Set files with the systemd_unit_file_t type, if you want to treat the files as systemd unit content.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/systemd/system(/.*)?, /lib/systemd/system(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux system policy is very flexible allowing users to setup their system processes in as secure a method as possible.
+.PP 
+The following process types are defined for system:
+
+.EX
+.B system_munin_plugin_t, systemd_logger_t, systemd_logind_t, system_cronjob_t, systemd_notify_t, system_mail_t, systemd_passwd_agent_t, system_dbusd_t, systemd_tmpfiles_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), system(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/systemd_selinux.8 b/man/man8/systemd_selinux.8
new file mode 100644
index 0000000..93fe832
--- /dev/null
+++ b/man/man8/systemd_selinux.8
@@ -0,0 +1,345 @@
+.TH  "systemd_selinux"  "8"  "systemd" "dwalsh@redhat.com" "systemd SELinux Policy documentation"
+.SH "NAME"
+systemd_selinux \- Security Enhanced Linux Policy for the systemd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B systemd
+(SELinux policy for systemd components)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  systemd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run systemd with the tightest access possible.
+
+
+.PP
+If you want to allow Git daemon system to access cifs file systems, you must turn on the git_system_use_cifs boolean.
+
+.EX
+.B setsebool -P git_system_use_cifs 1
+.EE
+
+.PP
+If you want to allow Git daemon system to search home directories, you must turn on the git_system_enable_homedirs boolean.
+
+.EX
+.B setsebool -P git_system_enable_homedirs 1
+.EE
+
+.PP
+If you want to allow Git daemon system to access nfs file systems, you must turn on the git_system_use_nfs boolean.
+
+.EX
+.B setsebool -P git_system_use_nfs 1
+.EE
+
+.PP
+If you want to enable support for systemd as the init program, you must turn on the init_systemd boolean.
+
+.EX
+.B setsebool -P init_systemd 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux systemd policy is very flexible allowing users to setup their systemd processes in as secure a method as possible.
+.PP 
+The following file types are defined for systemd:
+
+
+.EX
+.PP
+.B system_conf_t 
+.EE
+
+- Set files with the system_conf_t type, if you want to treat the files as system configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/etc/sysctl\.conf(\.old)?, /etc/sysconfig/ipvsadm.*, /etc/sysconfig/ebtables.*, /etc/sysconfig/ip6?tables.*, /etc/sysconfig/system-config-firewall.*
+
+.EX
+.PP
+.B system_cron_spool_t 
+.EE
+
+- Set files with the system_cron_spool_t type, if you want to store the system cron files under the /var/spool directory.
+
+.br
+.TP 5
+Paths: 
+/etc/crontab, /var/spool/anacron(/.*)?, /etc/cron\.d(/.*)?, /var/spool/fcron/systab\.orig, /var/spool/fcron/new\.systab, /var/spool/fcron/systab
+
+.EX
+.PP
+.B system_cronjob_lock_t 
+.EE
+
+- Set files with the system_cronjob_lock_t type, if you want to treat the files as system cronjob lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B system_cronjob_tmp_t 
+.EE
+
+- Set files with the system_cronjob_tmp_t type, if you want to store system cronjob temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B system_cronjob_var_lib_t 
+.EE
+
+- Set files with the system_cronjob_var_lib_t type, if you want to store the system cronjob files under the /var/lib directory.
+
+
+.EX
+.PP
+.B system_cronjob_var_run_t 
+.EE
+
+- Set files with the system_cronjob_var_run_t type, if you want to store the system cronjob files under the /run directory.
+
+
+.EX
+.PP
+.B system_dbusd_tmp_t 
+.EE
+
+- Set files with the system_dbusd_tmp_t type, if you want to store system dbusd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B system_dbusd_var_lib_t 
+.EE
+
+- Set files with the system_dbusd_var_lib_t type, if you want to store the system dbusd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B system_dbusd_var_run_t 
+.EE
+
+- Set files with the system_dbusd_var_run_t type, if you want to store the system dbusd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/named/chroot/var/run/dbus(/.*)?, /var/run/dbus(/.*)?
+
+.EX
+.PP
+.B system_mail_tmp_t 
+.EE
+
+- Set files with the system_mail_tmp_t type, if you want to store system mail temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B system_map_t 
+.EE
+
+- Set files with the system_map_t type, if you want to treat the files as system map data.
+
+.br
+.TP 5
+Paths: 
+/boot/System\.map(-.*)?, /boot/efi(/.*)?/System\.map(-.*)?
+
+.EX
+.PP
+.B system_munin_plugin_exec_t 
+.EE
+
+- Set files with the system_munin_plugin_exec_t type, if you want to transition an executable to the system_munin_plugin_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/share/munin/plugins/proc_pri, /usr/share/munin/plugins/swap, /usr/share/munin/plugins/interrupts, /usr/share/munin/plugins/cpu.*, /usr/share/munin/plugins/yum, /usr/share/munin/plugins/load, /usr/share/munin/plugins/irqstats, /usr/share/munin/plugins/processes, /usr/share/munin/plugins/iostat.*, /usr/share/munin/plugins/nfs.*, /usr/share/munin/plugins/munin_.*, /usr/share/munin/plugins/threads, /usr/share/munin/plugins/netstat, /usr/share/munin/plugins/acpi, /usr/share/munin/plugins/forks, /usr/share/munin/plugins/uptime, /usr/share/munin/plugins/users, /usr/share/munin/plugins/memory, /usr/share/munin/plugins/if_.*, /usr/share/munin/plugins/open_files
+
+.EX
+.PP
+.B system_munin_plugin_tmp_t 
+.EE
+
+- Set files with the system_munin_plugin_tmp_t type, if you want to store system munin plugin temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B systemd_logger_exec_t 
+.EE
+
+- Set files with the systemd_logger_exec_t type, if you want to transition an executable to the systemd_logger_t domain.
+
+.br
+.TP 5
+Paths: 
+/lib/systemd/systemd-logger, /usr/lib/systemd/systemd-logger
+
+.EX
+.PP
+.B systemd_logind_exec_t 
+.EE
+
+- Set files with the systemd_logind_exec_t type, if you want to transition an executable to the systemd_logind_t domain.
+
+.br
+.TP 5
+Paths: 
+/lib/systemd/systemd-logind, /usr/lib/systemd/systemd-logind
+
+.EX
+.PP
+.B systemd_logind_sessions_t 
+.EE
+
+- Set files with the systemd_logind_sessions_t type, if you want to treat the files as systemd logind sessions data.
+
+
+.EX
+.PP
+.B systemd_logind_var_run_t 
+.EE
+
+- Set files with the systemd_logind_var_run_t type, if you want to store the systemd logind files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/systemd/users(/.*)?, /var/run/systemd/seats(/.*)?
+
+.EX
+.PP
+.B systemd_notify_exec_t 
+.EE
+
+- Set files with the systemd_notify_exec_t type, if you want to transition an executable to the systemd_notify_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/systemd-notify, /bin/systemd-notify
+
+.EX
+.PP
+.B systemd_passwd_agent_exec_t 
+.EE
+
+- Set files with the systemd_passwd_agent_exec_t type, if you want to transition an executable to the systemd_passwd_agent_t domain.
+
+.br
+.TP 5
+Paths: 
+/bin/systemd-tty-ask-password-agent, /usr/bin/systemd-gnome-ask-password-agent, /usr/bin/systemd-tty-ask-password-agent
+
+.EX
+.PP
+.B systemd_passwd_var_run_t 
+.EE
+
+- Set files with the systemd_passwd_var_run_t type, if you want to store the systemd passwd files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/systemd/ask-password(/.*)?, /var/run/systemd/ask-password-block(/.*)?
+
+.EX
+.PP
+.B systemd_systemctl_exec_t 
+.EE
+
+- Set files with the systemd_systemctl_exec_t type, if you want to transition an executable to the systemd_systemctl_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/systemctl, /bin/systemctl
+
+.EX
+.PP
+.B systemd_tmpfiles_exec_t 
+.EE
+
+- Set files with the systemd_tmpfiles_exec_t type, if you want to transition an executable to the systemd_tmpfiles_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/systemd-tmpfiles, /bin/systemd-tmpfiles, /usr/lib/systemd/systemd-tmpfiles, /lib/systemd/systemd-tmpfiles
+
+.EX
+.PP
+.B systemd_unit_file_t 
+.EE
+
+- Set files with the systemd_unit_file_t type, if you want to treat the files as systemd unit content.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/systemd/system(/.*)?, /lib/systemd/system(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux systemd policy is very flexible allowing users to setup their systemd processes in as secure a method as possible.
+.PP 
+The following process types are defined for systemd:
+
+.EX
+.B system_munin_plugin_t, systemd_logger_t, systemd_logind_t, system_cronjob_t, systemd_notify_t, system_mail_t, systemd_passwd_agent_t, system_dbusd_t, systemd_tmpfiles_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), systemd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/tcpd_selinux.8 b/man/man8/tcpd_selinux.8
new file mode 100644
index 0000000..5543123
--- /dev/null
+++ b/man/man8/tcpd_selinux.8
@@ -0,0 +1,114 @@
+.TH  "tcpd_selinux"  "8"  "tcpd" "dwalsh@redhat.com" "tcpd SELinux Policy documentation"
+.SH "NAME"
+tcpd_selinux \- Security Enhanced Linux Policy for the tcpd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B tcpd
+(Policy for TCP daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  tcpd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run tcpd with the tightest access possible.
+
+
+.PP
+If you want to allow the Telepathy connection managers to connect to any generic TCP port, you must turn on the telepathy_tcp_connect_generic_network_ports boolean.
+
+.EX
+.B setsebool -P telepathy_tcp_connect_generic_network_ports 1
+.EE
+
+.PP
+If you want to allow all daemons to use tcp wrappers, you must turn on the allow_daemons_use_tcp_wrapper boolean.
+
+.EX
+.B setsebool -P allow_daemons_use_tcp_wrapper 1
+.EE
+
+.PP
+If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the user_tcp_server boolean.
+
+.EX
+.B setsebool -P user_tcp_server 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux tcpd policy is very flexible allowing users to setup their tcpd processes in as secure a method as possible.
+.PP 
+The following file types are defined for tcpd:
+
+
+.EX
+.PP
+.B tcpd_exec_t 
+.EE
+
+- Set files with the tcpd_exec_t type, if you want to transition an executable to the tcpd_t domain.
+
+
+.EX
+.PP
+.B tcpd_tmp_t 
+.EE
+
+- Set files with the tcpd_tmp_t type, if you want to store tcpd temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux tcpd policy is very flexible allowing users to setup their tcpd processes in as secure a method as possible.
+.PP 
+The following process types are defined for tcpd:
+
+.EX
+.B tcpd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), tcpd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/tcsd_selinux.8 b/man/man8/tcsd_selinux.8
new file mode 100644
index 0000000..514ced5
--- /dev/null
+++ b/man/man8/tcsd_selinux.8
@@ -0,0 +1,119 @@
+.TH  "tcsd_selinux"  "8"  "tcsd" "dwalsh@redhat.com" "tcsd SELinux Policy documentation"
+.SH "NAME"
+tcsd_selinux \- Security Enhanced Linux Policy for the tcsd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B tcsd
+(TSS Core Services (TCS) daemon (tcsd) policy)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux tcsd policy is very flexible allowing users to setup their tcsd processes in as secure a method as possible.
+.PP 
+The following file types are defined for tcsd:
+
+
+.EX
+.PP
+.B tcsd_exec_t 
+.EE
+
+- Set files with the tcsd_exec_t type, if you want to transition an executable to the tcsd_t domain.
+
+
+.EX
+.PP
+.B tcsd_initrc_exec_t 
+.EE
+
+- Set files with the tcsd_initrc_exec_t type, if you want to transition an executable to the tcsd_initrc_t domain.
+
+
+.EX
+.PP
+.B tcsd_var_lib_t 
+.EE
+
+- Set files with the tcsd_var_lib_t type, if you want to store the tcsd files under the /var/lib directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux tcsd policy is very flexible allowing users to setup their tcsd processes in as secure a method as possible.
+.PP 
+The following port types are defined for tcsd:
+
+.EX
+.TP 5
+.B tcs_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux tcsd policy is very flexible allowing users to setup their tcsd processes in as secure a method as possible.
+.PP 
+The following process types are defined for tcsd:
+
+.EX
+.B tcsd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), tcsd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/telepathy_selinux.8 b/man/man8/telepathy_selinux.8
new file mode 100644
index 0000000..996878a
--- /dev/null
+++ b/man/man8/telepathy_selinux.8
@@ -0,0 +1,311 @@
+.TH  "telepathy_selinux"  "8"  "telepathy" "dwalsh@redhat.com" "telepathy SELinux Policy documentation"
+.SH "NAME"
+telepathy_selinux \- Security Enhanced Linux Policy for the telepathy processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B telepathy
+(Telepathy communications framework)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  telepathy policy is extremely flexible and has several booleans that allow you to manipulate the policy and run telepathy with the tightest access possible.
+
+
+.PP
+If you want to allow the Telepathy connection managers to connect to any generic TCP port, you must turn on the telepathy_tcp_connect_generic_network_ports boolean.
+
+.EX
+.B setsebool -P telepathy_tcp_connect_generic_network_ports 1
+.EE
+
+.PP
+If you want to allow the Telepathy connection managers to connect to any network port, you must turn on the telepathy_connect_all_ports boolean.
+
+.EX
+.B setsebool -P telepathy_connect_all_ports 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux telepathy policy is very flexible allowing users to setup their telepathy processes in as secure a method as possible.
+.PP 
+The following file types are defined for telepathy:
+
+
+.EX
+.PP
+.B telepathy_cache_home_t 
+.EE
+
+- Set files with the telepathy_cache_home_t type, if you want to store telepathy cache files in the users home directory.
+
+
+.EX
+.PP
+.B telepathy_data_home_t 
+.EE
+
+- Set files with the telepathy_data_home_t type, if you want to store telepathy data files in the users home directory.
+
+
+.EX
+.PP
+.B telepathy_gabble_cache_home_t 
+.EE
+
+- Set files with the telepathy_gabble_cache_home_t type, if you want to store telepathy gabble cache files in the users home directory.
+
+
+.EX
+.PP
+.B telepathy_gabble_exec_t 
+.EE
+
+- Set files with the telepathy_gabble_exec_t type, if you want to transition an executable to the telepathy_gabble_t domain.
+
+
+.EX
+.PP
+.B telepathy_gabble_tmp_t 
+.EE
+
+- Set files with the telepathy_gabble_tmp_t type, if you want to store telepathy gabble temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B telepathy_idle_exec_t 
+.EE
+
+- Set files with the telepathy_idle_exec_t type, if you want to transition an executable to the telepathy_idle_t domain.
+
+
+.EX
+.PP
+.B telepathy_idle_tmp_t 
+.EE
+
+- Set files with the telepathy_idle_tmp_t type, if you want to store telepathy idle temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B telepathy_logger_cache_home_t 
+.EE
+
+- Set files with the telepathy_logger_cache_home_t type, if you want to store telepathy logger cache files in the users home directory.
+
+
+.EX
+.PP
+.B telepathy_logger_data_home_t 
+.EE
+
+- Set files with the telepathy_logger_data_home_t type, if you want to store telepathy logger data files in the users home directory.
+
+
+.EX
+.PP
+.B telepathy_logger_exec_t 
+.EE
+
+- Set files with the telepathy_logger_exec_t type, if you want to transition an executable to the telepathy_logger_t domain.
+
+
+.EX
+.PP
+.B telepathy_logger_tmp_t 
+.EE
+
+- Set files with the telepathy_logger_tmp_t type, if you want to store telepathy logger temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B telepathy_mission_control_cache_home_t 
+.EE
+
+- Set files with the telepathy_mission_control_cache_home_t type, if you want to store telepathy mission control cache files in the users home directory.
+
+
+.EX
+.PP
+.B telepathy_mission_control_data_home_t 
+.EE
+
+- Set files with the telepathy_mission_control_data_home_t type, if you want to store telepathy mission control data files in the users home directory.
+
+
+.EX
+.PP
+.B telepathy_mission_control_exec_t 
+.EE
+
+- Set files with the telepathy_mission_control_exec_t type, if you want to transition an executable to the telepathy_mission_control_t domain.
+
+
+.EX
+.PP
+.B telepathy_mission_control_home_t 
+.EE
+
+- Set files with the telepathy_mission_control_home_t type, if you want to store telepathy mission control files in the users home directory.
+
+
+.EX
+.PP
+.B telepathy_mission_control_tmp_t 
+.EE
+
+- Set files with the telepathy_mission_control_tmp_t type, if you want to store telepathy mission control temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B telepathy_msn_exec_t 
+.EE
+
+- Set files with the telepathy_msn_exec_t type, if you want to transition an executable to the telepathy_msn_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/libexec/telepathy-butterfly, /usr/libexec/telepathy-haze
+
+.EX
+.PP
+.B telepathy_msn_tmp_t 
+.EE
+
+- Set files with the telepathy_msn_tmp_t type, if you want to store telepathy msn temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B telepathy_salut_exec_t 
+.EE
+
+- Set files with the telepathy_salut_exec_t type, if you want to transition an executable to the telepathy_salut_t domain.
+
+
+.EX
+.PP
+.B telepathy_salut_tmp_t 
+.EE
+
+- Set files with the telepathy_salut_tmp_t type, if you want to store telepathy salut temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B telepathy_sofiasip_exec_t 
+.EE
+
+- Set files with the telepathy_sofiasip_exec_t type, if you want to transition an executable to the telepathy_sofiasip_t domain.
+
+
+.EX
+.PP
+.B telepathy_sofiasip_tmp_t 
+.EE
+
+- Set files with the telepathy_sofiasip_tmp_t type, if you want to store telepathy sofiasip temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B telepathy_stream_engine_exec_t 
+.EE
+
+- Set files with the telepathy_stream_engine_exec_t type, if you want to transition an executable to the telepathy_stream_engine_t domain.
+
+
+.EX
+.PP
+.B telepathy_stream_engine_tmp_t 
+.EE
+
+- Set files with the telepathy_stream_engine_tmp_t type, if you want to store telepathy stream engine temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B telepathy_sunshine_exec_t 
+.EE
+
+- Set files with the telepathy_sunshine_exec_t type, if you want to transition an executable to the telepathy_sunshine_t domain.
+
+
+.EX
+.PP
+.B telepathy_sunshine_home_t 
+.EE
+
+- Set files with the telepathy_sunshine_home_t type, if you want to store telepathy sunshine files in the users home directory.
+
+
+.EX
+.PP
+.B telepathy_sunshine_tmp_t 
+.EE
+
+- Set files with the telepathy_sunshine_tmp_t type, if you want to store telepathy sunshine temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux telepathy policy is very flexible allowing users to setup their telepathy processes in as secure a method as possible.
+.PP 
+The following process types are defined for telepathy:
+
+.EX
+.B telepathy_gabble_t, telepathy_sofiasip_t, telepathy_idle_t, telepathy_mission_control_t, telepathy_salut_t, telepathy_sunshine_t, telepathy_logger_t, telepathy_stream_engine_t, telepathy_msn_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), telepathy(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/telnetd_selinux.8 b/man/man8/telnetd_selinux.8
new file mode 100644
index 0000000..34d5d8c
--- /dev/null
+++ b/man/man8/telnetd_selinux.8
@@ -0,0 +1,125 @@
+.TH  "telnetd_selinux"  "8"  "telnetd" "dwalsh@redhat.com" "telnetd SELinux Policy documentation"
+.SH "NAME"
+telnetd_selinux \- Security Enhanced Linux Policy for the telnetd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux telnetd policy is very flexible allowing users to setup their telnetd processes in as secure a method as possible.
+.PP 
+The following file types are defined for telnetd:
+
+
+.EX
+.PP
+.B telnetd_exec_t 
+.EE
+
+- Set files with the telnetd_exec_t type, if you want to transition an executable to the telnetd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/kerberos/sbin/telnetd, /usr/sbin/in\.telnetd
+
+.EX
+.PP
+.B telnetd_keytab_t 
+.EE
+
+- Set files with the telnetd_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B telnetd_tmp_t 
+.EE
+
+- Set files with the telnetd_tmp_t type, if you want to store telnetd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B telnetd_var_run_t 
+.EE
+
+- Set files with the telnetd_var_run_t type, if you want to store the telnetd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux telnetd policy is very flexible allowing users to setup their telnetd processes in as secure a method as possible.
+.PP 
+The following port types are defined for telnetd:
+
+.EX
+.TP 5
+.B telnetd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux telnetd policy is very flexible allowing users to setup their telnetd processes in as secure a method as possible.
+.PP 
+The following process types are defined for telnetd:
+
+.EX
+.B telnetd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), telnetd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/tftpd_selinux.8 b/man/man8/tftpd_selinux.8
new file mode 100644
index 0000000..b7bdb6b
--- /dev/null
+++ b/man/man8/tftpd_selinux.8
@@ -0,0 +1,155 @@
+.TH  "tftpd_selinux"  "8"  "tftpd" "dwalsh@redhat.com" "tftpd SELinux Policy documentation"
+.SH "NAME"
+tftpd_selinux \- Security Enhanced Linux Policy for the tftpd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH SHARING FILES
+If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
+.TP
+Allow tftpd servers to read the /var/tftpd directory by adding the public_content_t file type to the directory and by restoring the file type.
+.PP
+.B
+semanage fcontext -a -t public_content_t "/var/tftpd(/.*)?"
+.br
+.B restorecon -F -R -v /var/tftpd
+.pp
+.TP
+Allow tftpd servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_tftpd_anon_write boolean to be set.
+.PP
+.B
+semanage fcontext -a -t public_content_rw_t "/var/tftpd/incoming(/.*)?"
+.br
+.B restorecon -F -R -v /var/tftpd/incoming
+
+
+.PP
+If you want to allow tftp to modify public files used for public file transfer services., you must turn on the tftp_anon_write boolean.
+
+.EX
+.B setsebool -P tftp_anon_write 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux tftpd policy is very flexible allowing users to setup their tftpd processes in as secure a method as possible.
+.PP 
+The following file types are defined for tftpd:
+
+
+.EX
+.PP
+.B tftpd_exec_t 
+.EE
+
+- Set files with the tftpd_exec_t type, if you want to transition an executable to the tftpd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/in\.tftpd, /usr/sbin/atftpd
+
+.EX
+.PP
+.B tftpd_var_run_t 
+.EE
+
+- Set files with the tftpd_var_run_t type, if you want to store the tftpd files under the /run directory.
+
+
+.EX
+.PP
+.B tftpdir_rw_t 
+.EE
+
+- Set files with the tftpdir_rw_t type, if you want to treat the files as tftpdir read/write content.
+
+
+.EX
+.PP
+.B tftpdir_t 
+.EE
+
+- Set files with the tftpdir_t type, if you want to treat the files as tftpdir data.
+
+.br
+.TP 5
+Paths: 
+/tftpboot/.*, /tftpboot
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux tftpd policy is very flexible allowing users to setup their tftpd processes in as secure a method as possible.
+.PP 
+The following port types are defined for tftpd:
+
+.EX
+.TP 5
+.B tftp_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux tftpd policy is very flexible allowing users to setup their tftpd processes in as secure a method as possible.
+.PP 
+The following process types are defined for tftpd:
+
+.EX
+.B tftpd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), tftpd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/tgtd_selinux.8 b/man/man8/tgtd_selinux.8
new file mode 100644
index 0000000..ed0f28a
--- /dev/null
+++ b/man/man8/tgtd_selinux.8
@@ -0,0 +1,117 @@
+.TH  "tgtd_selinux"  "8"  "tgtd" "dwalsh@redhat.com" "tgtd SELinux Policy documentation"
+.SH "NAME"
+tgtd_selinux \- Security Enhanced Linux Policy for the tgtd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B tgtd
+(Linux Target Framework Daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux tgtd policy is very flexible allowing users to setup their tgtd processes in as secure a method as possible.
+.PP 
+The following file types are defined for tgtd:
+
+
+.EX
+.PP
+.B tgtd_exec_t 
+.EE
+
+- Set files with the tgtd_exec_t type, if you want to transition an executable to the tgtd_t domain.
+
+
+.EX
+.PP
+.B tgtd_initrc_exec_t 
+.EE
+
+- Set files with the tgtd_initrc_exec_t type, if you want to transition an executable to the tgtd_initrc_t domain.
+
+
+.EX
+.PP
+.B tgtd_tmp_t 
+.EE
+
+- Set files with the tgtd_tmp_t type, if you want to store tgtd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B tgtd_tmpfs_t 
+.EE
+
+- Set files with the tgtd_tmpfs_t type, if you want to store tgtd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B tgtd_var_lib_t 
+.EE
+
+- Set files with the tgtd_var_lib_t type, if you want to store the tgtd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B tgtd_var_run_t 
+.EE
+
+- Set files with the tgtd_var_run_t type, if you want to store the tgtd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux tgtd policy is very flexible allowing users to setup their tgtd processes in as secure a method as possible.
+.PP 
+The following process types are defined for tgtd:
+
+.EX
+.B tgtd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), tgtd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/thin_selinux.8 b/man/man8/thin_selinux.8
new file mode 100644
index 0000000..c7f6423
--- /dev/null
+++ b/man/man8/thin_selinux.8
@@ -0,0 +1,79 @@
+.TH  "thin_selinux"  "8"  "thin" "dwalsh@redhat.com" "thin SELinux Policy documentation"
+.SH "NAME"
+thin_selinux \- Security Enhanced Linux Policy for the thin processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux thin policy is very flexible allowing users to setup their thin processes in as secure a method as possible.
+.PP 
+The following file types are defined for thin:
+
+
+.EX
+.PP
+.B thin_exec_t 
+.EE
+
+- Set files with the thin_exec_t type, if you want to transition an executable to the thin_t domain.
+
+
+.EX
+.PP
+.B thin_var_run_t 
+.EE
+
+- Set files with the thin_var_run_t type, if you want to store the thin files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux thin policy is very flexible allowing users to setup their thin processes in as secure a method as possible.
+.PP 
+The following process types are defined for thin:
+
+.EX
+.B thin_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), thin(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/thumb_selinux.8 b/man/man8/thumb_selinux.8
new file mode 100644
index 0000000..b03036c
--- /dev/null
+++ b/man/man8/thumb_selinux.8
@@ -0,0 +1,89 @@
+.TH  "thumb_selinux"  "8"  "thumb" "dwalsh@redhat.com" "thumb SELinux Policy documentation"
+.SH "NAME"
+thumb_selinux \- Security Enhanced Linux Policy for the thumb processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B thumb
+(policy for thumb)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux thumb policy is very flexible allowing users to setup their thumb processes in as secure a method as possible.
+.PP 
+The following file types are defined for thumb:
+
+
+.EX
+.PP
+.B thumb_exec_t 
+.EE
+
+- Set files with the thumb_exec_t type, if you want to transition an executable to the thumb_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/whaaw-thumbnailer, /usr/lib/tumbler[^/]*/tumblerd, /usr/bin/raw-thumbnailer, /usr/bin/evince-thumbnailer, /usr/bin/[^/]*thumbnailer, /usr/bin/ffmpegthumbnailer, /usr/bin/shotwell-video-thumbnailer, /usr/bin/gsf-office-thumbnailer, /usr/bin/gnome-thumbnail-font, /usr/bin/totem-video-thumbnailer, /usr/bin/gnome-[^/]*-thumbnailer(.sh)?
+
+.EX
+.PP
+.B thumb_tmp_t 
+.EE
+
+- Set files with the thumb_tmp_t type, if you want to store thumb temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux thumb policy is very flexible allowing users to setup their thumb processes in as secure a method as possible.
+.PP 
+The following process types are defined for thumb:
+
+.EX
+.B thumb_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), thumb(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/tmpreaper_selinux.8 b/man/man8/tmpreaper_selinux.8
new file mode 100644
index 0000000..53468d0
--- /dev/null
+++ b/man/man8/tmpreaper_selinux.8
@@ -0,0 +1,81 @@
+.TH  "tmpreaper_selinux"  "8"  "tmpreaper" "dwalsh@redhat.com" "tmpreaper SELinux Policy documentation"
+.SH "NAME"
+tmpreaper_selinux \- Security Enhanced Linux Policy for the tmpreaper processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B tmpreaper
+(Manage temporary directory sizes and file ages)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux tmpreaper policy is very flexible allowing users to setup their tmpreaper processes in as secure a method as possible.
+.PP 
+The following file types are defined for tmpreaper:
+
+
+.EX
+.PP
+.B tmpreaper_exec_t 
+.EE
+
+- Set files with the tmpreaper_exec_t type, if you want to transition an executable to the tmpreaper_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/tmpwatch, /usr/sbin/tmpreaper
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux tmpreaper policy is very flexible allowing users to setup their tmpreaper processes in as secure a method as possible.
+.PP 
+The following process types are defined for tmpreaper:
+
+.EX
+.B tmpreaper_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), tmpreaper(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/tor_selinux.8 b/man/man8/tor_selinux.8
new file mode 100644
index 0000000..8ec79ef
--- /dev/null
+++ b/man/man8/tor_selinux.8
@@ -0,0 +1,177 @@
+.TH  "tor_selinux"  "8"  "tor" "dwalsh@redhat.com" "tor SELinux Policy documentation"
+.SH "NAME"
+tor_selinux \- Security Enhanced Linux Policy for the tor processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B tor
+(TOR, the onion router)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  tor policy is extremely flexible and has several booleans that allow you to manipulate the policy and run tor with the tightest access possible.
+
+
+.PP
+If you want to allow tor daemon to bind tcp sockets to all unreserved ports, you must turn on the tor_bind_all_unreserved_ports boolean.
+
+.EX
+.B setsebool -P tor_bind_all_unreserved_ports 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux tor policy is very flexible allowing users to setup their tor processes in as secure a method as possible.
+.PP 
+The following file types are defined for tor:
+
+
+.EX
+.PP
+.B tor_etc_t 
+.EE
+
+- Set files with the tor_etc_t type, if you want to store tor files in the /etc directories.
+
+
+.EX
+.PP
+.B tor_exec_t 
+.EE
+
+- Set files with the tor_exec_t type, if you want to transition an executable to the tor_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/tor, /usr/bin/tor
+
+.EX
+.PP
+.B tor_initrc_exec_t 
+.EE
+
+- Set files with the tor_initrc_exec_t type, if you want to transition an executable to the tor_initrc_t domain.
+
+
+.EX
+.PP
+.B tor_var_lib_t 
+.EE
+
+- Set files with the tor_var_lib_t type, if you want to store the tor files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/tor(/.*)?, /var/lib/tor-data(/.*)?
+
+.EX
+.PP
+.B tor_var_log_t 
+.EE
+
+- Set files with the tor_var_log_t type, if you want to treat the data as tor var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B tor_var_run_t 
+.EE
+
+- Set files with the tor_var_run_t type, if you want to store the tor files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux tor policy is very flexible allowing users to setup their tor processes in as secure a method as possible.
+.PP 
+The following port types are defined for tor:
+
+.EX
+.TP 5
+.B tor_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B tor_socks_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux tor policy is very flexible allowing users to setup their tor processes in as secure a method as possible.
+.PP 
+The following process types are defined for tor:
+
+.EX
+.B tor_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), tor(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/traceroute_selinux.8 b/man/man8/traceroute_selinux.8
new file mode 100644
index 0000000..c4ea5dd
--- /dev/null
+++ b/man/man8/traceroute_selinux.8
@@ -0,0 +1,101 @@
+.TH  "traceroute_selinux"  "8"  "traceroute" "dwalsh@redhat.com" "traceroute SELinux Policy documentation"
+.SH "NAME"
+traceroute_selinux \- Security Enhanced Linux Policy for the traceroute processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux traceroute policy is very flexible allowing users to setup their traceroute processes in as secure a method as possible.
+.PP 
+The following file types are defined for traceroute:
+
+
+.EX
+.PP
+.B traceroute_exec_t 
+.EE
+
+- Set files with the traceroute_exec_t type, if you want to transition an executable to the traceroute_t domain.
+
+.br
+.TP 5
+Paths: 
+/bin/tracepath.*, /usr/bin/traceroute.*, /usr/bin/nmap, /usr/bin/lft, /bin/traceroute.*, /usr/bin/tracepath.*, /usr/sbin/traceroute.*, /usr/bin/mtr
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux traceroute policy is very flexible allowing users to setup their traceroute processes in as secure a method as possible.
+.PP 
+The following port types are defined for traceroute:
+
+.EX
+.TP 5
+.B traceroute_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux traceroute policy is very flexible allowing users to setup their traceroute processes in as secure a method as possible.
+.PP 
+The following process types are defined for traceroute:
+
+.EX
+.B traceroute_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), traceroute(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/tuned_selinux.8 b/man/man8/tuned_selinux.8
new file mode 100644
index 0000000..824c519
--- /dev/null
+++ b/man/man8/tuned_selinux.8
@@ -0,0 +1,105 @@
+.TH  "tuned_selinux"  "8"  "tuned" "dwalsh@redhat.com" "tuned SELinux Policy documentation"
+.SH "NAME"
+tuned_selinux \- Security Enhanced Linux Policy for the tuned processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B tuned
+(Dynamic adaptive system tuning daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux tuned policy is very flexible allowing users to setup their tuned processes in as secure a method as possible.
+.PP 
+The following file types are defined for tuned:
+
+
+.EX
+.PP
+.B tuned_exec_t 
+.EE
+
+- Set files with the tuned_exec_t type, if you want to transition an executable to the tuned_t domain.
+
+
+.EX
+.PP
+.B tuned_initrc_exec_t 
+.EE
+
+- Set files with the tuned_initrc_exec_t type, if you want to transition an executable to the tuned_initrc_t domain.
+
+
+.EX
+.PP
+.B tuned_log_t 
+.EE
+
+- Set files with the tuned_log_t type, if you want to treat the data as tuned log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/tuned(/.*)?, /var/log/tuned\.log
+
+.EX
+.PP
+.B tuned_var_run_t 
+.EE
+
+- Set files with the tuned_var_run_t type, if you want to store the tuned files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux tuned policy is very flexible allowing users to setup their tuned processes in as secure a method as possible.
+.PP 
+The following process types are defined for tuned:
+
+.EX
+.B tuned_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), tuned(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/tvtime_selinux.8 b/man/man8/tvtime_selinux.8
new file mode 100644
index 0000000..0694cf9
--- /dev/null
+++ b/man/man8/tvtime_selinux.8
@@ -0,0 +1,101 @@
+.TH  "tvtime_selinux"  "8"  "tvtime" "dwalsh@redhat.com" "tvtime SELinux Policy documentation"
+.SH "NAME"
+tvtime_selinux \- Security Enhanced Linux Policy for the tvtime processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B tvtime
+( tvtime - a high quality television application )
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux tvtime policy is very flexible allowing users to setup their tvtime processes in as secure a method as possible.
+.PP 
+The following file types are defined for tvtime:
+
+
+.EX
+.PP
+.B tvtime_exec_t 
+.EE
+
+- Set files with the tvtime_exec_t type, if you want to transition an executable to the tvtime_t domain.
+
+
+.EX
+.PP
+.B tvtime_home_t 
+.EE
+
+- Set files with the tvtime_home_t type, if you want to store tvtime files in the users home directory.
+
+
+.EX
+.PP
+.B tvtime_tmp_t 
+.EE
+
+- Set files with the tvtime_tmp_t type, if you want to store tvtime temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B tvtime_tmpfs_t 
+.EE
+
+- Set files with the tvtime_tmpfs_t type, if you want to store tvtime files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux tvtime policy is very flexible allowing users to setup their tvtime processes in as secure a method as possible.
+.PP 
+The following process types are defined for tvtime:
+
+.EX
+.B tvtime_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), tvtime(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/udev_selinux.8 b/man/man8/udev_selinux.8
new file mode 100644
index 0000000..e90dada
--- /dev/null
+++ b/man/man8/udev_selinux.8
@@ -0,0 +1,121 @@
+.TH  "udev_selinux"  "8"  "udev" "dwalsh@redhat.com" "udev SELinux Policy documentation"
+.SH "NAME"
+udev_selinux \- Security Enhanced Linux Policy for the udev processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B udev
+(Policy for udev)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux udev policy is very flexible allowing users to setup their udev processes in as secure a method as possible.
+.PP 
+The following file types are defined for udev:
+
+
+.EX
+.PP
+.B udev_etc_t 
+.EE
+
+- Set files with the udev_etc_t type, if you want to store udev files in the /etc directories.
+
+
+.EX
+.PP
+.B udev_exec_t 
+.EE
+
+- Set files with the udev_exec_t type, if you want to transition an executable to the udev_t domain.
+
+.br
+.TP 5
+Paths: 
+/lib/udev/udevd, /sbin/udevd, /sbin/udev, /usr/sbin/wait_for_sysfs, /sbin/udevsend, /usr/sbin/udevadm, /usr/bin/udevadm, /usr/bin/udevinfo, /usr/sbin/start_udev, /usr/sbin/udev, /usr/sbin/udevsend, /sbin/start_udev, /sbin/udevstart, /bin/udevadm, /sbin/wait_for_sysfs, /lib/udev/udev-acl, /sbin/udevadm, /usr/sbin/udevd, /usr/sbin/udevstart, /usr/lib/udev/udev-acl, /usr/lib/udev/udevd
+
+.EX
+.PP
+.B udev_helper_exec_t 
+.EE
+
+- Set files with the udev_helper_exec_t type, if you want to transition an executable to the udev_helper_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/udev/scripts/.+, /etc/hotplug\.d/default/udev.*, /etc/dev\.d/.+
+
+.EX
+.PP
+.B udev_rules_t 
+.EE
+
+- Set files with the udev_rules_t type, if you want to treat the files as udev rules data.
+
+
+.EX
+.PP
+.B udev_var_run_t 
+.EE
+
+- Set files with the udev_var_run_t type, if you want to store the udev files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/udev(/.*)?, /dev/\.udevdb, /var/run/PackageKit/udev(/.*)?, /dev/\.udev(/.*)?, /dev/udev\.tbl, /var/run/libgpod(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux udev policy is very flexible allowing users to setup their udev processes in as secure a method as possible.
+.PP 
+The following process types are defined for udev:
+
+.EX
+.B udev_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), udev(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/ulogd_selinux.8 b/man/man8/ulogd_selinux.8
new file mode 100644
index 0000000..3ab14e4
--- /dev/null
+++ b/man/man8/ulogd_selinux.8
@@ -0,0 +1,109 @@
+.TH  "ulogd_selinux"  "8"  "ulogd" "dwalsh@redhat.com" "ulogd SELinux Policy documentation"
+.SH "NAME"
+ulogd_selinux \- Security Enhanced Linux Policy for the ulogd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B ulogd
+(Iptables/netfilter userspace logging daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ulogd policy is very flexible allowing users to setup their ulogd processes in as secure a method as possible.
+.PP 
+The following file types are defined for ulogd:
+
+
+.EX
+.PP
+.B ulogd_etc_t 
+.EE
+
+- Set files with the ulogd_etc_t type, if you want to store ulogd files in the /etc directories.
+
+
+.EX
+.PP
+.B ulogd_exec_t 
+.EE
+
+- Set files with the ulogd_exec_t type, if you want to transition an executable to the ulogd_t domain.
+
+
+.EX
+.PP
+.B ulogd_initrc_exec_t 
+.EE
+
+- Set files with the ulogd_initrc_exec_t type, if you want to transition an executable to the ulogd_initrc_t domain.
+
+
+.EX
+.PP
+.B ulogd_modules_t 
+.EE
+
+- Set files with the ulogd_modules_t type, if you want to treat the files as ulogd modules.
+
+
+.EX
+.PP
+.B ulogd_var_log_t 
+.EE
+
+- Set files with the ulogd_var_log_t type, if you want to treat the data as ulogd var log data, usually stored under the /var/log directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ulogd policy is very flexible allowing users to setup their ulogd processes in as secure a method as possible.
+.PP 
+The following process types are defined for ulogd:
+
+.EX
+.B ulogd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ulogd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/uml_selinux.8 b/man/man8/uml_selinux.8
new file mode 100644
index 0000000..34355cf
--- /dev/null
+++ b/man/man8/uml_selinux.8
@@ -0,0 +1,125 @@
+.TH  "uml_selinux"  "8"  "uml" "dwalsh@redhat.com" "uml SELinux Policy documentation"
+.SH "NAME"
+uml_selinux \- Security Enhanced Linux Policy for the uml processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B uml
+(Policy for UML)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux uml policy is very flexible allowing users to setup their uml processes in as secure a method as possible.
+.PP 
+The following file types are defined for uml:
+
+
+.EX
+.PP
+.B uml_exec_t 
+.EE
+
+- Set files with the uml_exec_t type, if you want to transition an executable to the uml_t domain.
+
+
+.EX
+.PP
+.B uml_ro_t 
+.EE
+
+- Set files with the uml_ro_t type, if you want to treat the files as uml read/only content.
+
+
+.EX
+.PP
+.B uml_rw_t 
+.EE
+
+- Set files with the uml_rw_t type, if you want to treat the files as uml read/write content.
+
+
+.EX
+.PP
+.B uml_switch_exec_t 
+.EE
+
+- Set files with the uml_switch_exec_t type, if you want to transition an executable to the uml_switch_t domain.
+
+
+.EX
+.PP
+.B uml_switch_var_run_t 
+.EE
+
+- Set files with the uml_switch_var_run_t type, if you want to store the uml switch files under the /run directory.
+
+
+.EX
+.PP
+.B uml_tmp_t 
+.EE
+
+- Set files with the uml_tmp_t type, if you want to store uml temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B uml_tmpfs_t 
+.EE
+
+- Set files with the uml_tmpfs_t type, if you want to store uml files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux uml policy is very flexible allowing users to setup their uml processes in as secure a method as possible.
+.PP 
+The following process types are defined for uml:
+
+.EX
+.B uml_switch_t, uml_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), uml(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/unconfined_selinux.8 b/man/man8/unconfined_selinux.8
new file mode 100644
index 0000000..49f0e32
--- /dev/null
+++ b/man/man8/unconfined_selinux.8
@@ -0,0 +1,131 @@
+.TH  "unconfined_selinux"  "8"  "unconfined" "dwalsh@redhat.com" "unconfined SELinux Policy documentation"
+.SH "NAME"
+unconfined_selinux \- Security Enhanced Linux Policy for the unconfined processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B unconfined
+(The unconfined domain)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  unconfined policy is extremely flexible and has several booleans that allow you to manipulate the policy and run unconfined with the tightest access possible.
+
+
+.PP
+If you want to allow database admins to execute DML statemen, you must turn on the sepgsql_unconfined_dbadm boolean.
+
+.EX
+.B setsebool -P sepgsql_unconfined_dbadm 1
+.EE
+
+.PP
+If you want to allow unconfined users to transition to the Mozilla plugin domain when running xulrunner plugin-container, you must turn on the unconfined_mozilla_plugin_transition boolean.
+
+.EX
+.B setsebool -P unconfined_mozilla_plugin_transition 1
+.EE
+
+.PP
+If you want to allow a user to login as an unconfined domai, you must turn on the unconfined_login boolean.
+
+.EX
+.B setsebool -P unconfined_login 1
+.EE
+
+.PP
+If you want to allow unconfined users to transition to the chrome sandbox domains when running chrome-sandbo, you must turn on the unconfined_chrome_sandbox_transition boolean.
+
+.EX
+.B setsebool -P unconfined_chrome_sandbox_transition 1
+.EE
+
+.PP
+If you want to allow samba to run unconfined script, you must turn on the samba_run_unconfined boolean.
+
+.EX
+.B setsebool -P samba_run_unconfined 1
+.EE
+
+.PP
+If you want to allow video playing tools to run unconfine, you must turn on the unconfined_mplayer boolean.
+
+.EX
+.B setsebool -P unconfined_mplayer 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux unconfined policy is very flexible allowing users to setup their unconfined processes in as secure a method as possible.
+.PP 
+The following file types are defined for unconfined:
+
+
+.EX
+.PP
+.B unconfined_exec_t 
+.EE
+
+- Set files with the unconfined_exec_t type, if you want to transition an executable to the unconfined_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/vncserver, /usr/sbin/xrdp, /usr/sbin/xrdp-sesman
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux unconfined policy is very flexible allowing users to setup their unconfined processes in as secure a method as possible.
+.PP 
+The following process types are defined for unconfined:
+
+.EX
+.B unconfined_cronjob_t, unconfined_dbusd_t, unconfined_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), unconfined(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/update_selinux.8 b/man/man8/update_selinux.8
new file mode 100644
index 0000000..df3a1eb
--- /dev/null
+++ b/man/man8/update_selinux.8
@@ -0,0 +1,83 @@
+.TH  "update_selinux"  "8"  "update" "dwalsh@redhat.com" "update SELinux Policy documentation"
+.SH "NAME"
+update_selinux \- Security Enhanced Linux Policy for the update processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux update policy is very flexible allowing users to setup their update processes in as secure a method as possible.
+.PP 
+The following file types are defined for update:
+
+
+.EX
+.PP
+.B update_modules_exec_t 
+.EE
+
+- Set files with the update_modules_exec_t type, if you want to transition an executable to the update_modules_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/modules-update, /usr/sbin/update-modules, /sbin/modules-update, /sbin/generate-modprobe\.conf, /sbin/update-modules, /usr/sbin/generate-modprobe\.conf
+
+.EX
+.PP
+.B update_modules_tmp_t 
+.EE
+
+- Set files with the update_modules_tmp_t type, if you want to store update modules temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux update policy is very flexible allowing users to setup their update processes in as secure a method as possible.
+.PP 
+The following process types are defined for update:
+
+.EX
+.B update_modules_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), update(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/updfstab_selinux.8 b/man/man8/updfstab_selinux.8
new file mode 100644
index 0000000..17c099b
--- /dev/null
+++ b/man/man8/updfstab_selinux.8
@@ -0,0 +1,81 @@
+.TH  "updfstab_selinux"  "8"  "updfstab" "dwalsh@redhat.com" "updfstab SELinux Policy documentation"
+.SH "NAME"
+updfstab_selinux \- Security Enhanced Linux Policy for the updfstab processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B updfstab
+(Red Hat utility to change /etc/fstab)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux updfstab policy is very flexible allowing users to setup their updfstab processes in as secure a method as possible.
+.PP 
+The following file types are defined for updfstab:
+
+
+.EX
+.PP
+.B updfstab_exec_t 
+.EE
+
+- Set files with the updfstab_exec_t type, if you want to transition an executable to the updfstab_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/updfstab, /usr/sbin/fstab-sync
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux updfstab policy is very flexible allowing users to setup their updfstab processes in as secure a method as possible.
+.PP 
+The following process types are defined for updfstab:
+
+.EX
+.B updfstab_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), updfstab(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/updpwd_selinux.8 b/man/man8/updpwd_selinux.8
new file mode 100644
index 0000000..b48fb1b
--- /dev/null
+++ b/man/man8/updpwd_selinux.8
@@ -0,0 +1,75 @@
+.TH  "updpwd_selinux"  "8"  "updpwd" "dwalsh@redhat.com" "updpwd SELinux Policy documentation"
+.SH "NAME"
+updpwd_selinux \- Security Enhanced Linux Policy for the updpwd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux updpwd policy is very flexible allowing users to setup their updpwd processes in as secure a method as possible.
+.PP 
+The following file types are defined for updpwd:
+
+
+.EX
+.PP
+.B updpwd_exec_t 
+.EE
+
+- Set files with the updpwd_exec_t type, if you want to transition an executable to the updpwd_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/unix_update, /usr/sbin/unix_update
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux updpwd policy is very flexible allowing users to setup their updpwd processes in as secure a method as possible.
+.PP 
+The following process types are defined for updpwd:
+
+.EX
+.B updpwd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), updpwd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/usbmodules_selinux.8 b/man/man8/usbmodules_selinux.8
new file mode 100644
index 0000000..83e61e3
--- /dev/null
+++ b/man/man8/usbmodules_selinux.8
@@ -0,0 +1,81 @@
+.TH  "usbmodules_selinux"  "8"  "usbmodules" "dwalsh@redhat.com" "usbmodules SELinux Policy documentation"
+.SH "NAME"
+usbmodules_selinux \- Security Enhanced Linux Policy for the usbmodules processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B usbmodules
+(List kernel modules of USB devices)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux usbmodules policy is very flexible allowing users to setup their usbmodules processes in as secure a method as possible.
+.PP 
+The following file types are defined for usbmodules:
+
+
+.EX
+.PP
+.B usbmodules_exec_t 
+.EE
+
+- Set files with the usbmodules_exec_t type, if you want to transition an executable to the usbmodules_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/usbmodules, /sbin/usbmodules
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux usbmodules policy is very flexible allowing users to setup their usbmodules processes in as secure a method as possible.
+.PP 
+The following process types are defined for usbmodules:
+
+.EX
+.B usbmodules_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), usbmodules(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/usbmuxd_selinux.8 b/man/man8/usbmuxd_selinux.8
new file mode 100644
index 0000000..a8d74de
--- /dev/null
+++ b/man/man8/usbmuxd_selinux.8
@@ -0,0 +1,85 @@
+.TH  "usbmuxd_selinux"  "8"  "usbmuxd" "dwalsh@redhat.com" "usbmuxd SELinux Policy documentation"
+.SH "NAME"
+usbmuxd_selinux \- Security Enhanced Linux Policy for the usbmuxd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B usbmuxd
+(USB multiplexing daemon for communicating with Apple iPod Touch and iPhone)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux usbmuxd policy is very flexible allowing users to setup their usbmuxd processes in as secure a method as possible.
+.PP 
+The following file types are defined for usbmuxd:
+
+
+.EX
+.PP
+.B usbmuxd_exec_t 
+.EE
+
+- Set files with the usbmuxd_exec_t type, if you want to transition an executable to the usbmuxd_t domain.
+
+
+.EX
+.PP
+.B usbmuxd_var_run_t 
+.EE
+
+- Set files with the usbmuxd_var_run_t type, if you want to store the usbmuxd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux usbmuxd policy is very flexible allowing users to setup their usbmuxd processes in as secure a method as possible.
+.PP 
+The following process types are defined for usbmuxd:
+
+.EX
+.B usbmuxd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), usbmuxd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/user_selinux.8 b/man/man8/user_selinux.8
new file mode 100644
index 0000000..a2082e9
--- /dev/null
+++ b/man/man8/user_selinux.8
@@ -0,0 +1,194 @@
+.TH  "user_selinux"  "8"  "user" "mgrepl@redhat.com" "user SELinux Policy documentation"
+.SH "NAME"
+user_u \- \fBGeneric unprivileged user role\fP - Security Enhanced Linux Policy 
+
+.SH DESCRIPTION
+
+\fBuser_u\fP is an SELinux User defined in the SELinux
+policy. SELinux users have default roles, \fBuser_r\fP.  The
+default role has a default type, \fBuser_t\fP, associated with it.
+
+The SELinux user will usually login to a system with a context that looks like:
+
+.B user_u:user_r:user_u:s0-s0:c0.c1023
+
+Linux users are automatically assigned an SELinux users at login.  
+Login programs use the SELinux User to assign initial context to the user's shell.
+
+SELinux policy uses the context to control the user's access.
+
+By default all users are assigned to the SELinux user via the \fB__default__\fP flag
+
+On Targeted policy systems the \fB__default__\fP user is assigned to the \fBunconfined_u\fP SELinux user.
+
+You can list all Linux User to SELinux user mapping using:
+
+.B semanage login -l
+
+If you wanted to change the default user mapping to use the user_u user, you would execute:
+
+.B semanage login -m -s user_u __default__
+
+
+If you want to map the one Linux user (joe) to the SELinux user user, you would execute:
+
+.B $ semanage login -a -s user_u joe
+
+
+.SH USER DESCRIPTION
+
+The SELinux user user_u is defined in policy as a unprivileged user. SELinux prevents unprivileged users from doing administration tasks without transitioning to a different role.
+
+.SH SUDO
+
+The SELinux type user_t is not allowed to execute sudo. 
+
+.SH X WINDOWS LOGIN
+
+The SELinux user user_u is able to X Windows login.
+
+.SH TERMINAL LOGIN
+
+The SELinux user user_u is able to terminal login.
+
+.SH NETWORK
+
+.TP
+The SELinux user user_u is able to listen on the following tcp ports.
+
+.B xserver_port_t: 6000-6020
+
+.TP
+The SELinux user user_u is able to listen on the following udp ports.
+
+.B all ports with out defined types
+
+.TP
+The SELinux user user_u is able to connect to the following tcp ports.
+
+.B all ports
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  user_t policy is extremely flexible and has several booleans that allow you to manipulate the policy and run user_t with the tightest access possible.
+
+
+.PP
+If you want to allow users to connect to the local mysql server, you must turn on the allow_user_mysql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_mysql_connect 1
+.EE
+
+.PP
+If you want to control users use of ping and traceroute, you must turn on the user_ping boolean.
+
+.EX
+.B setsebool -P user_ping 1
+.EE
+
+.PP
+If you want to allow w to display everyone, you must turn on the user_ttyfile_stat boolean.
+
+.EX
+.B setsebool -P user_ttyfile_stat 1
+.EE
+
+.PP
+If you want to allow user music sharing, you must turn on the user_share_music boolean.
+
+.EX
+.B setsebool -P user_share_music 1
+.EE
+
+.PP
+If you want to allow regular users direct dri device access, you must turn on the user_direct_dri boolean.
+
+.EX
+.B setsebool -P user_direct_dri 1
+.EE
+
+.PP
+If you want to allow user to r/w files on filesystems that do not have extended attributes (FAT, CDROM, FLOPPY), you must turn on the user_rw_noexattrfile boolean.
+
+.EX
+.B setsebool -P user_rw_noexattrfile 1
+.EE
+
+.PP
+If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the user_tcp_server boolean.
+
+.EX
+.B setsebool -P user_tcp_server 1
+.EE
+
+.PP
+If you want to allow regular users direct mouse access, you must turn on the user_direct_mouse boolean.
+
+.EX
+.B setsebool -P user_direct_mouse 1
+.EE
+
+.PP
+If you want to allow user processes to change their priority, you must turn on the user_setrlimit boolean.
+
+.EX
+.B setsebool -P user_setrlimit 1
+.EE
+
+.PP
+If you want to allow users to connect to PostgreSQL, you must turn on the allow_user_postgresql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_postgresql_connect 1
+.EE
+
+.PP
+If you want to allow users to read system messages, you must turn on the user_dmesg boolean.
+
+.EX
+.B setsebool -P user_dmesg 1
+.EE
+
+.SH HOME_EXEC
+
+The SELinux user user_u is able execute home content files.
+
+.SH TRANSITIONS
+
+Three things can happen when user_t attempts to execute a program.
+
+\fB1.\fP SELinux Policy can deny user_t from executing the program.
+
+.TP
+
+\fB2.\fP SELinux Policy can allow user_t to execute the program in the current user type.
+
+Execute the following to see the types that the SELinux user user_t can execute without transitioning:
+
+.B sesearch -A -s user_t -c file -p execute_no_trans
+
+.TP
+
+\fB3.\fP SELinux can allow user_t to execute the program and transition to a new type.
+
+Execute the following to see the types that the SELinux user user_t can execute and transition:
+
+.B $ sesearch -A -s user_t -c process -p transition
+
+
+.SH "COMMANDS"
+
+.B semanage login
+can also be used to manipulate the Linux User to SELinux User mappings
+
+.B semanage user
+can also be used to manipulate SELinux user definitions.
+
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genuserman.py.
+
+.SH "SEE ALSO"
+selinux(8), semanage(8).
diff --git a/man/man8/useradd_selinux.8 b/man/man8/useradd_selinux.8
new file mode 100644
index 0000000..8ad5cf6
--- /dev/null
+++ b/man/man8/useradd_selinux.8
@@ -0,0 +1,75 @@
+.TH  "useradd_selinux"  "8"  "useradd" "dwalsh@redhat.com" "useradd SELinux Policy documentation"
+.SH "NAME"
+useradd_selinux \- Security Enhanced Linux Policy for the useradd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux useradd policy is very flexible allowing users to setup their useradd processes in as secure a method as possible.
+.PP 
+The following file types are defined for useradd:
+
+
+.EX
+.PP
+.B useradd_exec_t 
+.EE
+
+- Set files with the useradd_exec_t type, if you want to transition an executable to the useradd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/useradd, /usr/sbin/usermod, /usr/sbin/userdel
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux useradd policy is very flexible allowing users to setup their useradd processes in as secure a method as possible.
+.PP 
+The following process types are defined for useradd:
+
+.EX
+.B useradd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), useradd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/usernetctl_selinux.8 b/man/man8/usernetctl_selinux.8
new file mode 100644
index 0000000..8789d75
--- /dev/null
+++ b/man/man8/usernetctl_selinux.8
@@ -0,0 +1,77 @@
+.TH  "usernetctl_selinux"  "8"  "usernetctl" "dwalsh@redhat.com" "usernetctl SELinux Policy documentation"
+.SH "NAME"
+usernetctl_selinux \- Security Enhanced Linux Policy for the usernetctl processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B usernetctl
+(User network interface configuration helper)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux usernetctl policy is very flexible allowing users to setup their usernetctl processes in as secure a method as possible.
+.PP 
+The following file types are defined for usernetctl:
+
+
+.EX
+.PP
+.B usernetctl_exec_t 
+.EE
+
+- Set files with the usernetctl_exec_t type, if you want to transition an executable to the usernetctl_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux usernetctl policy is very flexible allowing users to setup their usernetctl processes in as secure a method as possible.
+.PP 
+The following process types are defined for usernetctl:
+
+.EX
+.B usernetctl_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), usernetctl(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/utempter_selinux.8 b/man/man8/utempter_selinux.8
new file mode 100644
index 0000000..a311394
--- /dev/null
+++ b/man/man8/utempter_selinux.8
@@ -0,0 +1,71 @@
+.TH  "utempter_selinux"  "8"  "utempter" "dwalsh@redhat.com" "utempter SELinux Policy documentation"
+.SH "NAME"
+utempter_selinux \- Security Enhanced Linux Policy for the utempter processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux utempter policy is very flexible allowing users to setup their utempter processes in as secure a method as possible.
+.PP 
+The following file types are defined for utempter:
+
+
+.EX
+.PP
+.B utempter_exec_t 
+.EE
+
+- Set files with the utempter_exec_t type, if you want to transition an executable to the utempter_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux utempter policy is very flexible allowing users to setup their utempter processes in as secure a method as possible.
+.PP 
+The following process types are defined for utempter:
+
+.EX
+.B utempter_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), utempter(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/uucpd_selinux.8 b/man/man8/uucpd_selinux.8
new file mode 100644
index 0000000..10de0a8
--- /dev/null
+++ b/man/man8/uucpd_selinux.8
@@ -0,0 +1,157 @@
+.TH  "uucpd_selinux"  "8"  "uucpd" "dwalsh@redhat.com" "uucpd SELinux Policy documentation"
+.SH "NAME"
+uucpd_selinux \- Security Enhanced Linux Policy for the uucpd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux uucpd policy is very flexible allowing users to setup their uucpd processes in as secure a method as possible.
+.PP 
+The following file types are defined for uucpd:
+
+
+.EX
+.PP
+.B uucpd_exec_t 
+.EE
+
+- Set files with the uucpd_exec_t type, if you want to transition an executable to the uucpd_t domain.
+
+
+.EX
+.PP
+.B uucpd_lock_t 
+.EE
+
+- Set files with the uucpd_lock_t type, if you want to treat the files as uucpd lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B uucpd_log_t 
+.EE
+
+- Set files with the uucpd_log_t type, if you want to treat the data as uucpd log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B uucpd_ro_t 
+.EE
+
+- Set files with the uucpd_ro_t type, if you want to treat the files as uucpd read/only content.
+
+
+.EX
+.PP
+.B uucpd_rw_t 
+.EE
+
+- Set files with the uucpd_rw_t type, if you want to treat the files as uucpd read/write content.
+
+
+.EX
+.PP
+.B uucpd_spool_t 
+.EE
+
+- Set files with the uucpd_spool_t type, if you want to store the uucpd files under the /var/spool directory.
+
+.br
+.TP 5
+Paths: 
+/var/spool/uucppublic(/.*)?, /var/spool/uucp(/.*)?
+
+.EX
+.PP
+.B uucpd_tmp_t 
+.EE
+
+- Set files with the uucpd_tmp_t type, if you want to store uucpd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B uucpd_var_run_t 
+.EE
+
+- Set files with the uucpd_var_run_t type, if you want to store the uucpd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux uucpd policy is very flexible allowing users to setup their uucpd processes in as secure a method as possible.
+.PP 
+The following port types are defined for uucpd:
+
+.EX
+.TP 5
+.B uucpd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux uucpd policy is very flexible allowing users to setup their uucpd processes in as secure a method as possible.
+.PP 
+The following process types are defined for uucpd:
+
+.EX
+.B uucpd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), uucpd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/uuidd_selinux.8 b/man/man8/uuidd_selinux.8
new file mode 100644
index 0000000..82a5e37
--- /dev/null
+++ b/man/man8/uuidd_selinux.8
@@ -0,0 +1,101 @@
+.TH  "uuidd_selinux"  "8"  "uuidd" "dwalsh@redhat.com" "uuidd SELinux Policy documentation"
+.SH "NAME"
+uuidd_selinux \- Security Enhanced Linux Policy for the uuidd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B uuidd
+(policy for uuidd)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux uuidd policy is very flexible allowing users to setup their uuidd processes in as secure a method as possible.
+.PP 
+The following file types are defined for uuidd:
+
+
+.EX
+.PP
+.B uuidd_exec_t 
+.EE
+
+- Set files with the uuidd_exec_t type, if you want to transition an executable to the uuidd_t domain.
+
+
+.EX
+.PP
+.B uuidd_initrc_exec_t 
+.EE
+
+- Set files with the uuidd_initrc_exec_t type, if you want to transition an executable to the uuidd_initrc_t domain.
+
+
+.EX
+.PP
+.B uuidd_var_lib_t 
+.EE
+
+- Set files with the uuidd_var_lib_t type, if you want to store the uuidd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B uuidd_var_run_t 
+.EE
+
+- Set files with the uuidd_var_run_t type, if you want to store the uuidd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux uuidd policy is very flexible allowing users to setup their uuidd processes in as secure a method as possible.
+.PP 
+The following process types are defined for uuidd:
+
+.EX
+.B uuidd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), uuidd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/uux_selinux.8 b/man/man8/uux_selinux.8
new file mode 100644
index 0000000..c1913bf
--- /dev/null
+++ b/man/man8/uux_selinux.8
@@ -0,0 +1,71 @@
+.TH  "uux_selinux"  "8"  "uux" "dwalsh@redhat.com" "uux SELinux Policy documentation"
+.SH "NAME"
+uux_selinux \- Security Enhanced Linux Policy for the uux processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux uux policy is very flexible allowing users to setup their uux processes in as secure a method as possible.
+.PP 
+The following file types are defined for uux:
+
+
+.EX
+.PP
+.B uux_exec_t 
+.EE
+
+- Set files with the uux_exec_t type, if you want to transition an executable to the uux_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux uux policy is very flexible allowing users to setup their uux processes in as secure a method as possible.
+.PP 
+The following process types are defined for uux:
+
+.EX
+.B uux_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), uux(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/varnishd_selinux.8 b/man/man8/varnishd_selinux.8
new file mode 100644
index 0000000..97d1ed5
--- /dev/null
+++ b/man/man8/varnishd_selinux.8
@@ -0,0 +1,158 @@
+.TH  "varnishd_selinux"  "8"  "varnishd" "dwalsh@redhat.com" "varnishd SELinux Policy documentation"
+.SH "NAME"
+varnishd_selinux \- Security Enhanced Linux Policy for the varnishd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B varnishd
+(Varnishd http accelerator daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  varnishd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run varnishd with the tightest access possible.
+
+
+.PP
+If you want to allow varnishd to connect to all ports, not just HTTP, you must turn on the varnishd_connect_any boolean.
+
+.EX
+.B setsebool -P varnishd_connect_any 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux varnishd policy is very flexible allowing users to setup their varnishd processes in as secure a method as possible.
+.PP 
+The following file types are defined for varnishd:
+
+
+.EX
+.PP
+.B varnishd_etc_t 
+.EE
+
+- Set files with the varnishd_etc_t type, if you want to store varnishd files in the /etc directories.
+
+
+.EX
+.PP
+.B varnishd_exec_t 
+.EE
+
+- Set files with the varnishd_exec_t type, if you want to transition an executable to the varnishd_t domain.
+
+
+.EX
+.PP
+.B varnishd_initrc_exec_t 
+.EE
+
+- Set files with the varnishd_initrc_exec_t type, if you want to transition an executable to the varnishd_initrc_t domain.
+
+
+.EX
+.PP
+.B varnishd_tmp_t 
+.EE
+
+- Set files with the varnishd_tmp_t type, if you want to store varnishd temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B varnishd_var_lib_t 
+.EE
+
+- Set files with the varnishd_var_lib_t type, if you want to store the varnishd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B varnishd_var_run_t 
+.EE
+
+- Set files with the varnishd_var_run_t type, if you want to store the varnishd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux varnishd policy is very flexible allowing users to setup their varnishd processes in as secure a method as possible.
+.PP 
+The following port types are defined for varnishd:
+
+.EX
+.TP 5
+.B varnishd_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux varnishd policy is very flexible allowing users to setup their varnishd processes in as secure a method as possible.
+.PP 
+The following process types are defined for varnishd:
+
+.EX
+.B varnishd_t, varnishlog_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), varnishd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/varnishlog_selinux.8 b/man/man8/varnishlog_selinux.8
new file mode 100644
index 0000000..a761366
--- /dev/null
+++ b/man/man8/varnishlog_selinux.8
@@ -0,0 +1,107 @@
+.TH  "varnishlog_selinux"  "8"  "varnishlog" "dwalsh@redhat.com" "varnishlog SELinux Policy documentation"
+.SH "NAME"
+varnishlog_selinux \- Security Enhanced Linux Policy for the varnishlog processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux varnishlog policy is very flexible allowing users to setup their varnishlog processes in as secure a method as possible.
+.PP 
+The following file types are defined for varnishlog:
+
+
+.EX
+.PP
+.B varnishlog_exec_t 
+.EE
+
+- Set files with the varnishlog_exec_t type, if you want to transition an executable to the varnishlog_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/varnisncsa, /usr/bin/varnishlog
+
+.EX
+.PP
+.B varnishlog_initrc_exec_t 
+.EE
+
+- Set files with the varnishlog_initrc_exec_t type, if you want to transition an executable to the varnishlog_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/varnishlog, /etc/rc\.d/init\.d/varnishncsa
+
+.EX
+.PP
+.B varnishlog_log_t 
+.EE
+
+- Set files with the varnishlog_log_t type, if you want to treat the data as varnishlog log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B varnishlog_var_run_t 
+.EE
+
+- Set files with the varnishlog_var_run_t type, if you want to store the varnishlog files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/varnishncsa\.pid, /var/run/varnishlog\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux varnishlog policy is very flexible allowing users to setup their varnishlog processes in as secure a method as possible.
+.PP 
+The following process types are defined for varnishlog:
+
+.EX
+.B varnishlog_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), varnishlog(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/vbetool_selinux.8 b/man/man8/vbetool_selinux.8
new file mode 100644
index 0000000..690e094
--- /dev/null
+++ b/man/man8/vbetool_selinux.8
@@ -0,0 +1,92 @@
+.TH  "vbetool_selinux"  "8"  "vbetool" "dwalsh@redhat.com" "vbetool SELinux Policy documentation"
+.SH "NAME"
+vbetool_selinux \- Security Enhanced Linux Policy for the vbetool processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B vbetool
+(run real-mode video BIOS code to alter hardware state)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  vbetool policy is extremely flexible and has several booleans that allow you to manipulate the policy and run vbetool with the tightest access possible.
+
+
+.PP
+If you want to ignore vbetool mmap_zero errors, you must turn on the vbetool_mmap_zero_ignore boolean.
+
+.EX
+.B setsebool -P vbetool_mmap_zero_ignore 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux vbetool policy is very flexible allowing users to setup their vbetool processes in as secure a method as possible.
+.PP 
+The following file types are defined for vbetool:
+
+
+.EX
+.PP
+.B vbetool_exec_t 
+.EE
+
+- Set files with the vbetool_exec_t type, if you want to transition an executable to the vbetool_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux vbetool policy is very flexible allowing users to setup their vbetool processes in as secure a method as possible.
+.PP 
+The following process types are defined for vbetool:
+
+.EX
+.B vbetool_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), vbetool(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/vdagent_selinux.8 b/man/man8/vdagent_selinux.8
new file mode 100644
index 0000000..ef8444d
--- /dev/null
+++ b/man/man8/vdagent_selinux.8
@@ -0,0 +1,101 @@
+.TH  "vdagent_selinux"  "8"  "vdagent" "dwalsh@redhat.com" "vdagent SELinux Policy documentation"
+.SH "NAME"
+vdagent_selinux \- Security Enhanced Linux Policy for the vdagent processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B vdagent
+(policy for vdagent)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux vdagent policy is very flexible allowing users to setup their vdagent processes in as secure a method as possible.
+.PP 
+The following file types are defined for vdagent:
+
+
+.EX
+.PP
+.B vdagent_exec_t 
+.EE
+
+- Set files with the vdagent_exec_t type, if you want to transition an executable to the vdagent_t domain.
+
+
+.EX
+.PP
+.B vdagent_log_t 
+.EE
+
+- Set files with the vdagent_log_t type, if you want to treat the data as vdagent log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/spice-vdagentd(/.*)?, /var/log/spice-vdagentd\.log
+
+.EX
+.PP
+.B vdagent_var_run_t 
+.EE
+
+- Set files with the vdagent_var_run_t type, if you want to store the vdagent files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/spice-vdagentd.\pid, /var/run/spice-vdagentd(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux vdagent policy is very flexible allowing users to setup their vdagent processes in as secure a method as possible.
+.PP 
+The following process types are defined for vdagent:
+
+.EX
+.B vdagent_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), vdagent(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/vhostmd_selinux.8 b/man/man8/vhostmd_selinux.8
new file mode 100644
index 0000000..1800dc6
--- /dev/null
+++ b/man/man8/vhostmd_selinux.8
@@ -0,0 +1,101 @@
+.TH  "vhostmd_selinux"  "8"  "vhostmd" "dwalsh@redhat.com" "vhostmd SELinux Policy documentation"
+.SH "NAME"
+vhostmd_selinux \- Security Enhanced Linux Policy for the vhostmd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B vhostmd
+(Virtual host metrics daemon)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux vhostmd policy is very flexible allowing users to setup their vhostmd processes in as secure a method as possible.
+.PP 
+The following file types are defined for vhostmd:
+
+
+.EX
+.PP
+.B vhostmd_exec_t 
+.EE
+
+- Set files with the vhostmd_exec_t type, if you want to transition an executable to the vhostmd_t domain.
+
+
+.EX
+.PP
+.B vhostmd_initrc_exec_t 
+.EE
+
+- Set files with the vhostmd_initrc_exec_t type, if you want to transition an executable to the vhostmd_initrc_t domain.
+
+
+.EX
+.PP
+.B vhostmd_tmpfs_t 
+.EE
+
+- Set files with the vhostmd_tmpfs_t type, if you want to store vhostmd files on a tmpfs file system.
+
+
+.EX
+.PP
+.B vhostmd_var_run_t 
+.EE
+
+- Set files with the vhostmd_var_run_t type, if you want to store the vhostmd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux vhostmd policy is very flexible allowing users to setup their vhostmd processes in as secure a method as possible.
+.PP 
+The following process types are defined for vhostmd:
+
+.EX
+.B vhostmd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), vhostmd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/virsh_selinux.8 b/man/man8/virsh_selinux.8
new file mode 100644
index 0000000..97dc9a2
--- /dev/null
+++ b/man/man8/virsh_selinux.8
@@ -0,0 +1,71 @@
+.TH  "virsh_selinux"  "8"  "virsh" "dwalsh@redhat.com" "virsh SELinux Policy documentation"
+.SH "NAME"
+virsh_selinux \- Security Enhanced Linux Policy for the virsh processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux virsh policy is very flexible allowing users to setup their virsh processes in as secure a method as possible.
+.PP 
+The following file types are defined for virsh:
+
+
+.EX
+.PP
+.B virsh_exec_t 
+.EE
+
+- Set files with the virsh_exec_t type, if you want to transition an executable to the virsh_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux virsh policy is very flexible allowing users to setup their virsh processes in as secure a method as possible.
+.PP 
+The following process types are defined for virsh:
+
+.EX
+.B virsh_ssh_t, virsh_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), virsh(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/virt_selinux.8 b/man/man8/virt_selinux.8
new file mode 100644
index 0000000..bc4a520
--- /dev/null
+++ b/man/man8/virt_selinux.8
@@ -0,0 +1,349 @@
+.TH  "virt_selinux"  "8"  "virt" "dwalsh@redhat.com" "virt SELinux Policy documentation"
+.SH "NAME"
+virt_selinux \- Security Enhanced Linux Policy for the virt processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B virt
+(Libvirt virtualization API)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  virt policy is extremely flexible and has several booleans that allow you to manipulate the policy and run virt with the tightest access possible.
+
+
+.PP
+If you want to allow confined virtual guests to read fuse file, you must turn on the virt_use_fusefs boolean.
+
+.EX
+.B setsebool -P virt_use_fusefs 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to manage nfs file, you must turn on the virt_use_nfs boolean.
+
+.EX
+.B setsebool -P virt_use_nfs 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to use serial/parallel communication port, you must turn on the virt_use_comm boolean.
+
+.EX
+.B setsebool -P virt_use_comm 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to interact with the xserve, you must turn on the virt_use_xserver boolean.
+
+.EX
+.B setsebool -P virt_use_xserver 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to manage device configuration, (pci, you must turn on the virt_use_sysfs boolean.
+
+.EX
+.B setsebool -P virt_use_sysfs 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to use executable memory and executable stac, you must turn on the virt_use_execmem boolean.
+
+.EX
+.B setsebool -P virt_use_execmem 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to interact with the sanloc, you must turn on the virt_use_sanlock boolean.
+
+.EX
+.B setsebool -P virt_use_sanlock 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to use usb device, you must turn on the virt_use_usb boolean.
+
+.EX
+.B setsebool -P virt_use_usb 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to manage cifs file, you must turn on the virt_use_samba boolean.
+
+.EX
+.B setsebool -P virt_use_samba 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux virt policy is very flexible allowing users to setup their virt processes in as secure a method as possible.
+.PP 
+The following file types are defined for virt:
+
+
+.EX
+.PP
+.B virt_bridgehelper_exec_t 
+.EE
+
+- Set files with the virt_bridgehelper_exec_t type, if you want to transition an executable to the virt_bridgehelper_t domain.
+
+
+.EX
+.PP
+.B virt_cache_t 
+.EE
+
+- Set files with the virt_cache_t type, if you want to store the files under the /var/cache directory.
+
+.br
+.TP 5
+Paths: 
+/var/cache/oz(/.*)?, /var/cache/libvirt(/.*)?
+
+.EX
+.PP
+.B virt_content_t 
+.EE
+
+- Set files with the virt_content_t type, if you want to treat the files as virt content.
+
+.br
+.TP 5
+Paths: 
+/var/lib/vdsm(/.*)?, /var/lib/oz/isos(/.*)?, /var/lib/libvirt/boot(/.*)?, /var/lib/libvirt/isos(/.*)?
+
+.EX
+.PP
+.B virt_etc_rw_t 
+.EE
+
+- Set files with the virt_etc_rw_t type, if you want to treat the files as virt etc read/write content.
+
+.br
+.TP 5
+Paths: 
+/etc/libvirt/.*/.*, /etc/xen/.*/.*, /etc/xen/[^/]*, /etc/libvirt/[^/]*
+
+.EX
+.PP
+.B virt_etc_t 
+.EE
+
+- Set files with the virt_etc_t type, if you want to store virt files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/libvirt/[^/]*, /etc/libvirt, /etc/xen/[^/]*, /etc/xen
+
+.EX
+.PP
+.B virt_home_t 
+.EE
+
+- Set files with the virt_home_t type, if you want to store virt files in the users home directory.
+
+
+.EX
+.PP
+.B virt_image_t 
+.EE
+
+- Set files with the virt_image_t type, if you want to treat the files as virt image data.
+
+.br
+.TP 5
+Paths: 
+/var/lib/imagefactory/images(/.*)?, /var/lib/libvirt/images(/.*)?
+
+.EX
+.PP
+.B virt_log_t 
+.EE
+
+- Set files with the virt_log_t type, if you want to treat the data as virt log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/log(/.*)?, /var/log/vdsm(/.*)?, /var/log/libvirt(/.*)?
+
+.EX
+.PP
+.B virt_qmf_exec_t 
+.EE
+
+- Set files with the virt_qmf_exec_t type, if you want to transition an executable to the virt_qmf_t domain.
+
+
+.EX
+.PP
+.B virt_tmp_t 
+.EE
+
+- Set files with the virt_tmp_t type, if you want to store virt temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B virt_var_lib_t 
+.EE
+
+- Set files with the virt_var_lib_t type, if you want to store the virt files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/oz(/.*)?, /var/lib/libvirt(/.*)?
+
+.EX
+.PP
+.B virt_var_run_t 
+.EE
+
+- Set files with the virt_var_run_t type, if you want to store the virt files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/vdsm(/.*)?, /var/vdsm(/.*)?, /var/run/libvirt(/.*)?
+
+.EX
+.PP
+.B virtd_exec_t 
+.EE
+
+- Set files with the virtd_exec_t type, if you want to transition an executable to the virtd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/condor_vm-gahp, /usr/bin/imagefactory, /usr/bin/imgfac\.py, /usr/bin/nova-compute, /usr/sbin/libvirtd
+
+.EX
+.PP
+.B virtd_initrc_exec_t 
+.EE
+
+- Set files with the virtd_initrc_exec_t type, if you want to transition an executable to the virtd_initrc_t domain.
+
+
+.EX
+.PP
+.B virtd_keytab_t 
+.EE
+
+- Set files with the virtd_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B virtd_lxc_exec_t 
+.EE
+
+- Set files with the virtd_lxc_exec_t type, if you want to transition an executable to the virtd_lxc_t domain.
+
+
+.EX
+.PP
+.B virtd_lxc_var_run_t 
+.EE
+
+- Set files with the virtd_lxc_var_run_t type, if you want to store the virtd lxc files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux virt policy is very flexible allowing users to setup their virt processes in as secure a method as possible.
+.PP 
+The following port types are defined for virt:
+
+.EX
+.TP 5
+.B virt_migration_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B virt_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux virt policy is very flexible allowing users to setup their virt processes in as secure a method as possible.
+.PP 
+The following process types are defined for virt:
+
+.EX
+.B virtd_lxc_t, virt_qmf_t, virt_bridgehelper_t, virtd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), virt(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/virtd_selinux.8 b/man/man8/virtd_selinux.8
new file mode 100644
index 0000000..40dfb33
--- /dev/null
+++ b/man/man8/virtd_selinux.8
@@ -0,0 +1,343 @@
+.TH  "virtd_selinux"  "8"  "virtd" "dwalsh@redhat.com" "virtd SELinux Policy documentation"
+.SH "NAME"
+virtd_selinux \- Security Enhanced Linux Policy for the virtd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  virtd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run virtd with the tightest access possible.
+
+
+.PP
+If you want to allow confined virtual guests to read fuse file, you must turn on the virt_use_fusefs boolean.
+
+.EX
+.B setsebool -P virt_use_fusefs 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to manage nfs file, you must turn on the virt_use_nfs boolean.
+
+.EX
+.B setsebool -P virt_use_nfs 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to use serial/parallel communication port, you must turn on the virt_use_comm boolean.
+
+.EX
+.B setsebool -P virt_use_comm 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to interact with the xserve, you must turn on the virt_use_xserver boolean.
+
+.EX
+.B setsebool -P virt_use_xserver 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to manage device configuration, (pci, you must turn on the virt_use_sysfs boolean.
+
+.EX
+.B setsebool -P virt_use_sysfs 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to use executable memory and executable stac, you must turn on the virt_use_execmem boolean.
+
+.EX
+.B setsebool -P virt_use_execmem 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to interact with the sanloc, you must turn on the virt_use_sanlock boolean.
+
+.EX
+.B setsebool -P virt_use_sanlock 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to use usb device, you must turn on the virt_use_usb boolean.
+
+.EX
+.B setsebool -P virt_use_usb 1
+.EE
+
+.PP
+If you want to allow confined virtual guests to manage cifs file, you must turn on the virt_use_samba boolean.
+
+.EX
+.B setsebool -P virt_use_samba 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux virtd policy is very flexible allowing users to setup their virtd processes in as secure a method as possible.
+.PP 
+The following file types are defined for virtd:
+
+
+.EX
+.PP
+.B virt_bridgehelper_exec_t 
+.EE
+
+- Set files with the virt_bridgehelper_exec_t type, if you want to transition an executable to the virt_bridgehelper_t domain.
+
+
+.EX
+.PP
+.B virt_cache_t 
+.EE
+
+- Set files with the virt_cache_t type, if you want to store the files under the /var/cache directory.
+
+.br
+.TP 5
+Paths: 
+/var/cache/oz(/.*)?, /var/cache/libvirt(/.*)?
+
+.EX
+.PP
+.B virt_content_t 
+.EE
+
+- Set files with the virt_content_t type, if you want to treat the files as virt content.
+
+.br
+.TP 5
+Paths: 
+/var/lib/vdsm(/.*)?, /var/lib/oz/isos(/.*)?, /var/lib/libvirt/boot(/.*)?, /var/lib/libvirt/isos(/.*)?
+
+.EX
+.PP
+.B virt_etc_rw_t 
+.EE
+
+- Set files with the virt_etc_rw_t type, if you want to treat the files as virt etc read/write content.
+
+.br
+.TP 5
+Paths: 
+/etc/libvirt/.*/.*, /etc/xen/.*/.*, /etc/xen/[^/]*, /etc/libvirt/[^/]*
+
+.EX
+.PP
+.B virt_etc_t 
+.EE
+
+- Set files with the virt_etc_t type, if you want to store virt files in the /etc directories.
+
+.br
+.TP 5
+Paths: 
+/etc/libvirt/[^/]*, /etc/libvirt, /etc/xen/[^/]*, /etc/xen
+
+.EX
+.PP
+.B virt_home_t 
+.EE
+
+- Set files with the virt_home_t type, if you want to store virt files in the users home directory.
+
+
+.EX
+.PP
+.B virt_image_t 
+.EE
+
+- Set files with the virt_image_t type, if you want to treat the files as virt image data.
+
+.br
+.TP 5
+Paths: 
+/var/lib/imagefactory/images(/.*)?, /var/lib/libvirt/images(/.*)?
+
+.EX
+.PP
+.B virt_log_t 
+.EE
+
+- Set files with the virt_log_t type, if you want to treat the data as virt log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/log(/.*)?, /var/log/vdsm(/.*)?, /var/log/libvirt(/.*)?
+
+.EX
+.PP
+.B virt_qmf_exec_t 
+.EE
+
+- Set files with the virt_qmf_exec_t type, if you want to transition an executable to the virt_qmf_t domain.
+
+
+.EX
+.PP
+.B virt_tmp_t 
+.EE
+
+- Set files with the virt_tmp_t type, if you want to store virt temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B virt_var_lib_t 
+.EE
+
+- Set files with the virt_var_lib_t type, if you want to store the virt files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/oz(/.*)?, /var/lib/libvirt(/.*)?
+
+.EX
+.PP
+.B virt_var_run_t 
+.EE
+
+- Set files with the virt_var_run_t type, if you want to store the virt files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/vdsm(/.*)?, /var/vdsm(/.*)?, /var/run/libvirt(/.*)?
+
+.EX
+.PP
+.B virtd_exec_t 
+.EE
+
+- Set files with the virtd_exec_t type, if you want to transition an executable to the virtd_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/condor_vm-gahp, /usr/bin/imagefactory, /usr/bin/imgfac\.py, /usr/bin/nova-compute, /usr/sbin/libvirtd
+
+.EX
+.PP
+.B virtd_initrc_exec_t 
+.EE
+
+- Set files with the virtd_initrc_exec_t type, if you want to transition an executable to the virtd_initrc_t domain.
+
+
+.EX
+.PP
+.B virtd_keytab_t 
+.EE
+
+- Set files with the virtd_keytab_t type, if you want to treat the files as kerberos keytab files.
+
+
+.EX
+.PP
+.B virtd_lxc_exec_t 
+.EE
+
+- Set files with the virtd_lxc_exec_t type, if you want to transition an executable to the virtd_lxc_t domain.
+
+
+.EX
+.PP
+.B virtd_lxc_var_run_t 
+.EE
+
+- Set files with the virtd_lxc_var_run_t type, if you want to store the virtd lxc files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux virtd policy is very flexible allowing users to setup their virtd processes in as secure a method as possible.
+.PP 
+The following port types are defined for virtd:
+
+.EX
+.TP 5
+.B virt_migration_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B virt_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux virtd policy is very flexible allowing users to setup their virtd processes in as secure a method as possible.
+.PP 
+The following process types are defined for virtd:
+
+.EX
+.B virtd_lxc_t, virt_qmf_t, virt_bridgehelper_t, virtd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), virtd(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/vlock_selinux.8 b/man/man8/vlock_selinux.8
new file mode 100644
index 0000000..c8e2a9e
--- /dev/null
+++ b/man/man8/vlock_selinux.8
@@ -0,0 +1,77 @@
+.TH  "vlock_selinux"  "8"  "vlock" "dwalsh@redhat.com" "vlock SELinux Policy documentation"
+.SH "NAME"
+vlock_selinux \- Security Enhanced Linux Policy for the vlock processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B vlock
+(Lock one or more sessions on the Linux console)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux vlock policy is very flexible allowing users to setup their vlock processes in as secure a method as possible.
+.PP 
+The following file types are defined for vlock:
+
+
+.EX
+.PP
+.B vlock_exec_t 
+.EE
+
+- Set files with the vlock_exec_t type, if you want to transition an executable to the vlock_t domain.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux vlock policy is very flexible allowing users to setup their vlock processes in as secure a method as possible.
+.PP 
+The following process types are defined for vlock:
+
+.EX
+.B vlock_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), vlock(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/vmware_selinux.8 b/man/man8/vmware_selinux.8
new file mode 100644
index 0000000..735cd42
--- /dev/null
+++ b/man/man8/vmware_selinux.8
@@ -0,0 +1,173 @@
+.TH  "vmware_selinux"  "8"  "vmware" "dwalsh@redhat.com" "vmware SELinux Policy documentation"
+.SH "NAME"
+vmware_selinux \- Security Enhanced Linux Policy for the vmware processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B vmware
+(VMWare Workstation virtual machines)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux vmware policy is very flexible allowing users to setup their vmware processes in as secure a method as possible.
+.PP 
+The following file types are defined for vmware:
+
+
+.EX
+.PP
+.B vmware_conf_t 
+.EE
+
+- Set files with the vmware_conf_t type, if you want to treat the files as vmware configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B vmware_exec_t 
+.EE
+
+- Set files with the vmware_exec_t type, if you want to transition an executable to the vmware_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/vmware-serverd, /usr/lib/vmware/bin/vmware-mks, /usr/lib/vmware/bin/vmplayer, /usr/bin/vmware-ping, /usr/lib/vmware/bin/vmware-ui, /usr/bin/vmware, /usr/bin/vmware-wizard
+
+.EX
+.PP
+.B vmware_file_t 
+.EE
+
+- Set files with the vmware_file_t type, if you want to treat the files as vmware content.
+
+
+.EX
+.PP
+.B vmware_host_exec_t 
+.EE
+
+- Set files with the vmware_host_exec_t type, if you want to transition an executable to the vmware_host_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/vmware-smbpasswd\.bin, /usr/bin/vmware-smbd, /usr/lib/vmware-tools/sbin64/vmware.*, /usr/bin/vmnet-dhcpd, /usr/bin/vmnet-bridge, /usr/bin/vmware-nmbd, /usr/bin/vmnet-netifup, /usr/sbin/vmware-guest.*, /usr/lib/vmware/bin/vmware-vmx, /usr/bin/vmnet-natd, /usr/bin/vmware-vmx, /usr/bin/vmware-network, /usr/bin/vmnet-sniffer, /usr/bin/vmware-smbpasswd, /usr/lib/vmware-tools/sbin32/vmware.*
+
+.EX
+.PP
+.B vmware_host_pid_t 
+.EE
+
+- Set files with the vmware_host_pid_t type, if you want to store the vmware host files under the /run directory.
+
+
+.EX
+.PP
+.B vmware_host_tmp_t 
+.EE
+
+- Set files with the vmware_host_tmp_t type, if you want to store vmware host temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B vmware_log_t 
+.EE
+
+- Set files with the vmware_log_t type, if you want to treat the data as vmware log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/vmware.*, /var/log/vnetlib.*
+
+.EX
+.PP
+.B vmware_pid_t 
+.EE
+
+- Set files with the vmware_pid_t type, if you want to store the vmware files under the /run directory.
+
+
+.EX
+.PP
+.B vmware_sys_conf_t 
+.EE
+
+- Set files with the vmware_sys_conf_t type, if you want to treat the files as vmware sys configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/vmware/config, /etc/vmware.*(/.*)?
+
+.EX
+.PP
+.B vmware_tmp_t 
+.EE
+
+- Set files with the vmware_tmp_t type, if you want to store vmware temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B vmware_tmpfs_t 
+.EE
+
+- Set files with the vmware_tmpfs_t type, if you want to store vmware files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux vmware policy is very flexible allowing users to setup their vmware processes in as secure a method as possible.
+.PP 
+The following process types are defined for vmware:
+
+.EX
+.B vmware_t, vmware_host_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), vmware(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/vnstat_selinux.8 b/man/man8/vnstat_selinux.8
new file mode 100644
index 0000000..254d3d4
--- /dev/null
+++ b/man/man8/vnstat_selinux.8
@@ -0,0 +1,95 @@
+.TH  "vnstat_selinux"  "8"  "vnstat" "dwalsh@redhat.com" "vnstat SELinux Policy documentation"
+.SH "NAME"
+vnstat_selinux \- Security Enhanced Linux Policy for the vnstat processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux vnstat policy is very flexible allowing users to setup their vnstat processes in as secure a method as possible.
+.PP 
+The following file types are defined for vnstat:
+
+
+.EX
+.PP
+.B vnstat_exec_t 
+.EE
+
+- Set files with the vnstat_exec_t type, if you want to transition an executable to the vnstat_t domain.
+
+
+.EX
+.PP
+.B vnstatd_exec_t 
+.EE
+
+- Set files with the vnstatd_exec_t type, if you want to transition an executable to the vnstatd_t domain.
+
+
+.EX
+.PP
+.B vnstatd_var_lib_t 
+.EE
+
+- Set files with the vnstatd_var_lib_t type, if you want to store the vnstatd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B vnstatd_var_run_t 
+.EE
+
+- Set files with the vnstatd_var_run_t type, if you want to store the vnstatd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux vnstat policy is very flexible allowing users to setup their vnstat processes in as secure a method as possible.
+.PP 
+The following process types are defined for vnstat:
+
+.EX
+.B vnstat_t, vnstatd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), vnstat(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/vnstatd_selinux.8 b/man/man8/vnstatd_selinux.8
new file mode 100644
index 0000000..1589eb8
--- /dev/null
+++ b/man/man8/vnstatd_selinux.8
@@ -0,0 +1,101 @@
+.TH  "vnstatd_selinux"  "8"  "vnstatd" "dwalsh@redhat.com" "vnstatd SELinux Policy documentation"
+.SH "NAME"
+vnstatd_selinux \- Security Enhanced Linux Policy for the vnstatd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B vnstatd
+(Console network traffic monitor)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux vnstatd policy is very flexible allowing users to setup their vnstatd processes in as secure a method as possible.
+.PP 
+The following file types are defined for vnstatd:
+
+
+.EX
+.PP
+.B vnstat_exec_t 
+.EE
+
+- Set files with the vnstat_exec_t type, if you want to transition an executable to the vnstat_t domain.
+
+
+.EX
+.PP
+.B vnstatd_exec_t 
+.EE
+
+- Set files with the vnstatd_exec_t type, if you want to transition an executable to the vnstatd_t domain.
+
+
+.EX
+.PP
+.B vnstatd_var_lib_t 
+.EE
+
+- Set files with the vnstatd_var_lib_t type, if you want to store the vnstatd files under the /var/lib directory.
+
+
+.EX
+.PP
+.B vnstatd_var_run_t 
+.EE
+
+- Set files with the vnstatd_var_run_t type, if you want to store the vnstatd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux vnstatd policy is very flexible allowing users to setup their vnstatd processes in as secure a method as possible.
+.PP 
+The following process types are defined for vnstatd:
+
+.EX
+.B vnstat_t, vnstatd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), vnstatd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/vpnc_selinux.8 b/man/man8/vpnc_selinux.8
new file mode 100644
index 0000000..41a5246
--- /dev/null
+++ b/man/man8/vpnc_selinux.8
@@ -0,0 +1,91 @@
+.TH  "vpnc_selinux"  "8"  "vpnc" "dwalsh@redhat.com" "vpnc SELinux Policy documentation"
+.SH "NAME"
+vpnc_selinux \- Security Enhanced Linux Policy for the vpnc processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux vpnc policy is very flexible allowing users to setup their vpnc processes in as secure a method as possible.
+.PP 
+The following file types are defined for vpnc:
+
+
+.EX
+.PP
+.B vpnc_exec_t 
+.EE
+
+- Set files with the vpnc_exec_t type, if you want to transition an executable to the vpnc_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/vpnc, /usr/bin/openconnect, /sbin/vpnc
+
+.EX
+.PP
+.B vpnc_tmp_t 
+.EE
+
+- Set files with the vpnc_tmp_t type, if you want to store vpnc temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B vpnc_var_run_t 
+.EE
+
+- Set files with the vpnc_var_run_t type, if you want to store the vpnc files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux vpnc policy is very flexible allowing users to setup their vpnc processes in as secure a method as possible.
+.PP 
+The following process types are defined for vpnc:
+
+.EX
+.B vpnc_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), vpnc(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/wdmd_selinux.8 b/man/man8/wdmd_selinux.8
new file mode 100644
index 0000000..a060bdb
--- /dev/null
+++ b/man/man8/wdmd_selinux.8
@@ -0,0 +1,93 @@
+.TH  "wdmd_selinux"  "8"  "wdmd" "dwalsh@redhat.com" "wdmd SELinux Policy documentation"
+.SH "NAME"
+wdmd_selinux \- Security Enhanced Linux Policy for the wdmd processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B wdmd
+(policy for wdmd)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux wdmd policy is very flexible allowing users to setup their wdmd processes in as secure a method as possible.
+.PP 
+The following file types are defined for wdmd:
+
+
+.EX
+.PP
+.B wdmd_exec_t 
+.EE
+
+- Set files with the wdmd_exec_t type, if you want to transition an executable to the wdmd_t domain.
+
+
+.EX
+.PP
+.B wdmd_initrc_exec_t 
+.EE
+
+- Set files with the wdmd_initrc_exec_t type, if you want to transition an executable to the wdmd_initrc_t domain.
+
+
+.EX
+.PP
+.B wdmd_var_run_t 
+.EE
+
+- Set files with the wdmd_var_run_t type, if you want to store the wdmd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux wdmd policy is very flexible allowing users to setup their wdmd processes in as secure a method as possible.
+.PP 
+The following process types are defined for wdmd:
+
+.EX
+.B wdmd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), wdmd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/webadm_selinux.8 b/man/man8/webadm_selinux.8
new file mode 100644
index 0000000..072a0c0
--- /dev/null
+++ b/man/man8/webadm_selinux.8
@@ -0,0 +1,65 @@
+.TH  "webadm_selinux"  "8"  "webadm" "mgrepl@redhat.com" "webadm SELinux Policy documentation"
+.SH "NAME"
+webadm_r \- \fBWeb administrator role\fP - Security Enhanced Linux Policy 
+
+.SH DESCRIPTION
+
+SELinux supports Roles Based Access Control, some Linux roles are login roles, while other roles need to be transition to. 
+
+Note: The examples in the man page will user the staff_u user.
+
+Non login roles are usually used for administrative tasks.
+
+Roles usually have default types assigned to them. 
+
+The default type for the webadm_r role is webadm_t.
+
+You can use the 
+.B newrole 
+program to transition directly to this role.
+
+.B newrole -r webadm_r -t webadm_t
+
+.B sudo 
+can also be setup to transition to this role using the visudo command.
+
+USERNAME ALL=(ALL) ROLE=webadm_r TYPE=webadm_t COMMAND
+.br
+sudo will run COMMAND as staff_u:webadm_r:webadm_t:LEVEL
+
+If you want to use a non login role, you need to make sure the SELinux user you are using can reach this role.
+
+You can see all of the assigned SELinux roles using the following
+
+.B semanage user -l
+
+If you wanted to add webadm_r to the staff_u user, you would execute:
+
+.B $ semanage user -m -R 'staff_r webadm_r' staff_u 
+
+
+
+SELinux policy also controls which roles can transition to a different role.  
+You can list these rules using the following command.
+
+.B sesearch --role_allow
+
+SELinux policy allows the staff_r role can transition to the webadm_r role.
+
+
+.SH "COMMANDS"
+
+.B semanage login
+can also be used to manipulate the Linux User to SELinux User mappings
+
+.B semanage user
+can also be used to manipulate SELinux user definitions.
+
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genuserman.py.
+
+.SH "SEE ALSO"
+selinux(8), semanage(8).
diff --git a/man/man8/webalizer_selinux.8 b/man/man8/webalizer_selinux.8
new file mode 100644
index 0000000..ba0eb02
--- /dev/null
+++ b/man/man8/webalizer_selinux.8
@@ -0,0 +1,117 @@
+.TH  "webalizer_selinux"  "8"  "webalizer" "dwalsh@redhat.com" "webalizer SELinux Policy documentation"
+.SH "NAME"
+webalizer_selinux \- Security Enhanced Linux Policy for the webalizer processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B webalizer
+(Web server log analysis)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux webalizer policy is very flexible allowing users to setup their webalizer processes in as secure a method as possible.
+.PP 
+The following file types are defined for webalizer:
+
+
+.EX
+.PP
+.B webalizer_etc_t 
+.EE
+
+- Set files with the webalizer_etc_t type, if you want to store webalizer files in the /etc directories.
+
+
+.EX
+.PP
+.B webalizer_exec_t 
+.EE
+
+- Set files with the webalizer_exec_t type, if you want to transition an executable to the webalizer_t domain.
+
+
+.EX
+.PP
+.B webalizer_tmp_t 
+.EE
+
+- Set files with the webalizer_tmp_t type, if you want to store webalizer temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B webalizer_usage_t 
+.EE
+
+- Set files with the webalizer_usage_t type, if you want to treat the files as webalizer usage data.
+
+
+.EX
+.PP
+.B webalizer_var_lib_t 
+.EE
+
+- Set files with the webalizer_var_lib_t type, if you want to store the webalizer files under the /var/lib directory.
+
+
+.EX
+.PP
+.B webalizer_write_t 
+.EE
+
+- Set files with the webalizer_write_t type, if you want to treat the files as webalizer read/write content.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux webalizer policy is very flexible allowing users to setup their webalizer processes in as secure a method as possible.
+.PP 
+The following process types are defined for webalizer:
+
+.EX
+.B webalizer_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), webalizer(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/winbind_selinux.8 b/man/man8/winbind_selinux.8
new file mode 100644
index 0000000..df63d07
--- /dev/null
+++ b/man/man8/winbind_selinux.8
@@ -0,0 +1,114 @@
+.TH  "winbind_selinux"  "8"  "winbind" "dwalsh@redhat.com" "winbind SELinux Policy documentation"
+.SH "NAME"
+winbind_selinux \- Security Enhanced Linux Policy for the winbind processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  winbind policy is extremely flexible and has several booleans that allow you to manipulate the policy and run winbind with the tightest access possible.
+
+
+.PP
+If you want to allow Apache to use mod_auth_ntlm_winbin, you must turn on the allow_httpd_mod_auth_ntlm_winbind boolean.
+
+.EX
+.B setsebool -P allow_httpd_mod_auth_ntlm_winbind 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux winbind policy is very flexible allowing users to setup their winbind processes in as secure a method as possible.
+.PP 
+The following file types are defined for winbind:
+
+
+.EX
+.PP
+.B winbind_exec_t 
+.EE
+
+- Set files with the winbind_exec_t type, if you want to transition an executable to the winbind_t domain.
+
+
+.EX
+.PP
+.B winbind_helper_exec_t 
+.EE
+
+- Set files with the winbind_helper_exec_t type, if you want to transition an executable to the winbind_helper_t domain.
+
+
+.EX
+.PP
+.B winbind_log_t 
+.EE
+
+- Set files with the winbind_log_t type, if you want to treat the data as winbind log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B winbind_var_run_t 
+.EE
+
+- Set files with the winbind_var_run_t type, if you want to store the winbind files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/cache/samba/winbindd_privileged(/.*)?, /var/lib/samba/winbindd_privileged(/.*)?, /var/run/winbindd(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux winbind policy is very flexible allowing users to setup their winbind processes in as secure a method as possible.
+.PP 
+The following process types are defined for winbind:
+
+.EX
+.B winbind_helper_t, winbind_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), winbind(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/wine_selinux.8 b/man/man8/wine_selinux.8
new file mode 100644
index 0000000..c2107f1
--- /dev/null
+++ b/man/man8/wine_selinux.8
@@ -0,0 +1,104 @@
+.TH  "wine_selinux"  "8"  "wine" "dwalsh@redhat.com" "wine SELinux Policy documentation"
+.SH "NAME"
+wine_selinux \- Security Enhanced Linux Policy for the wine processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B wine
+(Wine Is Not an Emulator.  Run Windows programs in Linux)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  wine policy is extremely flexible and has several booleans that allow you to manipulate the policy and run wine with the tightest access possible.
+
+
+.PP
+If you want to ignore wine mmap_zero errors, you must turn on the wine_mmap_zero_ignore boolean.
+
+.EX
+.B setsebool -P wine_mmap_zero_ignore 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux wine policy is very flexible allowing users to setup their wine processes in as secure a method as possible.
+.PP 
+The following file types are defined for wine:
+
+
+.EX
+.PP
+.B wine_exec_t 
+.EE
+
+- Set files with the wine_exec_t type, if you want to transition an executable to the wine_t domain.
+
+.br
+.TP 5
+Paths: 
+/opt/google/picasa(/.*)?/bin/msiexec, /usr/bin/regedit, /opt/google/picasa(/.*)?/bin/wine.*, /opt/google/picasa(/.*)?/bin/notepad, /opt/google/picasa(/.*)?/bin/regedit, /usr/bin/regsvr32, /usr/bin/uninstaller, /opt/google/picasa(/.*)?/bin/uninstaller, /opt/google/picasa(/.*)?/bin/wdi, /opt/google/picasa(/.*)?/bin/regsvr32, /usr/bin/msiexec, /opt/google/picasa(/.*)?/Picasa3/.*exe, /opt/teamviewer(/.*)?/bin/wine.*, /usr/bin/wine.*, /opt/google/picasa(/.*)?/bin/progman, /opt/picasa/wine/bin/wine.*, /usr/bin/notepad, /opt/cxoffice/bin/wine.*
+
+.EX
+.PP
+.B wine_tmp_t 
+.EE
+
+- Set files with the wine_tmp_t type, if you want to store wine temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux wine policy is very flexible allowing users to setup their wine processes in as secure a method as possible.
+.PP 
+The following process types are defined for wine:
+
+.EX
+.B wine_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), wine(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/wireshark_selinux.8 b/man/man8/wireshark_selinux.8
new file mode 100644
index 0000000..4536946
--- /dev/null
+++ b/man/man8/wireshark_selinux.8
@@ -0,0 +1,101 @@
+.TH  "wireshark_selinux"  "8"  "wireshark" "dwalsh@redhat.com" "wireshark SELinux Policy documentation"
+.SH "NAME"
+wireshark_selinux \- Security Enhanced Linux Policy for the wireshark processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B wireshark
+(Wireshark packet capture tool)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux wireshark policy is very flexible allowing users to setup their wireshark processes in as secure a method as possible.
+.PP 
+The following file types are defined for wireshark:
+
+
+.EX
+.PP
+.B wireshark_exec_t 
+.EE
+
+- Set files with the wireshark_exec_t type, if you want to transition an executable to the wireshark_t domain.
+
+
+.EX
+.PP
+.B wireshark_home_t 
+.EE
+
+- Set files with the wireshark_home_t type, if you want to store wireshark files in the users home directory.
+
+
+.EX
+.PP
+.B wireshark_tmp_t 
+.EE
+
+- Set files with the wireshark_tmp_t type, if you want to store wireshark temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B wireshark_tmpfs_t 
+.EE
+
+- Set files with the wireshark_tmpfs_t type, if you want to store wireshark files on a tmpfs file system.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux wireshark policy is very flexible allowing users to setup their wireshark processes in as secure a method as possible.
+.PP 
+The following process types are defined for wireshark:
+
+.EX
+.B wireshark_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), wireshark(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/wpa_selinux.8 b/man/man8/wpa_selinux.8
new file mode 100644
index 0000000..e8a5a9f
--- /dev/null
+++ b/man/man8/wpa_selinux.8
@@ -0,0 +1,75 @@
+.TH  "wpa_selinux"  "8"  "wpa" "dwalsh@redhat.com" "wpa SELinux Policy documentation"
+.SH "NAME"
+wpa_selinux \- Security Enhanced Linux Policy for the wpa processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux wpa policy is very flexible allowing users to setup their wpa processes in as secure a method as possible.
+.PP 
+The following file types are defined for wpa:
+
+
+.EX
+.PP
+.B wpa_cli_exec_t 
+.EE
+
+- Set files with the wpa_cli_exec_t type, if you want to transition an executable to the wpa_cli_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/wpa_cli, /sbin/wpa_cli
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux wpa policy is very flexible allowing users to setup their wpa processes in as secure a method as possible.
+.PP 
+The following process types are defined for wpa:
+
+.EX
+.B wpa_cli_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), wpa(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/xauth_selinux.8 b/man/man8/xauth_selinux.8
new file mode 100644
index 0000000..85c91f3
--- /dev/null
+++ b/man/man8/xauth_selinux.8
@@ -0,0 +1,95 @@
+.TH  "xauth_selinux"  "8"  "xauth" "dwalsh@redhat.com" "xauth SELinux Policy documentation"
+.SH "NAME"
+xauth_selinux \- Security Enhanced Linux Policy for the xauth processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux xauth policy is very flexible allowing users to setup their xauth processes in as secure a method as possible.
+.PP 
+The following file types are defined for xauth:
+
+
+.EX
+.PP
+.B xauth_exec_t 
+.EE
+
+- Set files with the xauth_exec_t type, if you want to transition an executable to the xauth_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/xauth, /usr/X11R6/bin/xauth
+
+.EX
+.PP
+.B xauth_home_t 
+.EE
+
+- Set files with the xauth_home_t type, if you want to store xauth files in the users home directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/nxserver/home/\.xauth.*, /root/\.Xauth.*, /var/lib/nxserver/home/\.Xauthority.*, /root/\.Xauthority.*, /root/\.serverauth.*, /var/lib/pqsql/\.Xauthority.*, /root/\.xauth.*, /var/lib/pqsql/\.xauth.*
+
+.EX
+.PP
+.B xauth_tmp_t 
+.EE
+
+- Set files with the xauth_tmp_t type, if you want to store xauth temporary files in the /tmp directories.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux xauth policy is very flexible allowing users to setup their xauth processes in as secure a method as possible.
+.PP 
+The following process types are defined for xauth:
+
+.EX
+.B xauth_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), xauth(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/xdm_selinux.8 b/man/man8/xdm_selinux.8
new file mode 100644
index 0000000..e377b25
--- /dev/null
+++ b/man/man8/xdm_selinux.8
@@ -0,0 +1,223 @@
+.TH  "xdm_selinux"  "8"  "xdm" "dwalsh@redhat.com" "xdm SELinux Policy documentation"
+.SH "NAME"
+xdm_selinux \- Security Enhanced Linux Policy for the xdm processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  xdm policy is extremely flexible and has several booleans that allow you to manipulate the policy and run xdm with the tightest access possible.
+
+
+.PP
+If you want to allow the graphical login program to login directly as sysadm_r:sysadm_, you must turn on the xdm_sysadm_login boolean.
+
+.EX
+.B setsebool -P xdm_sysadm_login 1
+.EE
+
+.PP
+If you want to allow the graphical login program to execute bootloade, you must turn on the xdm_exec_bootloader boolean.
+
+.EX
+.B setsebool -P xdm_exec_bootloader 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux xdm policy is very flexible allowing users to setup their xdm processes in as secure a method as possible.
+.PP 
+The following file types are defined for xdm:
+
+
+.EX
+.PP
+.B xdm_etc_t 
+.EE
+
+- Set files with the xdm_etc_t type, if you want to store xdm files in the /etc directories.
+
+
+.EX
+.PP
+.B xdm_exec_t 
+.EE
+
+- Set files with the xdm_exec_t type, if you want to transition an executable to the xdm_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/[xgkw]dm, /usr/bin/slim, /usr/sbin/[xgkw]dm, /usr/X11R6/bin/[xgkw]dm, /usr/sbin/lxdm, /usr/sbin/lxdm-binary, /usr/bin/lxdm-binary, /usr/bin/gpe-dm, /usr/bin/gdm-binary, /usr/bin/lxdm, /opt/kde3/bin/kdm, /usr/sbin/gdm-binary
+
+.EX
+.PP
+.B xdm_home_t 
+.EE
+
+- Set files with the xdm_home_t type, if you want to store xdm files in the users home directory.
+
+.br
+.TP 5
+Paths: 
+/root/\.xsession-errors.*, /root/\.dmrc.*
+
+.EX
+.PP
+.B xdm_lock_t 
+.EE
+
+- Set files with the xdm_lock_t type, if you want to treat the files as xdm lock data, stored under the /var/lock directory
+
+
+.EX
+.PP
+.B xdm_log_t 
+.EE
+
+- Set files with the xdm_log_t type, if you want to treat the data as xdm log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/slim\.log.*, /var/log/(l)?xdm\.log.*, /var/log/gdm(/.*)?
+
+.EX
+.PP
+.B xdm_rw_etc_t 
+.EE
+
+- Set files with the xdm_rw_etc_t type, if you want to store xdm rw files in the /etc directories.
+
+
+.EX
+.PP
+.B xdm_spool_t 
+.EE
+
+- Set files with the xdm_spool_t type, if you want to store the xdm files under the /var/spool directory.
+
+
+.EX
+.PP
+.B xdm_tmp_t 
+.EE
+
+- Set files with the xdm_tmp_t type, if you want to store xdm temporary files in the /tmp directories.
+
+.br
+.TP 5
+Paths: 
+/tmp/\.X0-lock, /tmp/\.X11-unix(/.*)?, /tmp/\.ICE-unix(/.*)?
+
+.EX
+.PP
+.B xdm_tmpfs_t 
+.EE
+
+- Set files with the xdm_tmpfs_t type, if you want to store xdm files on a tmpfs file system.
+
+
+.EX
+.PP
+.B xdm_var_lib_t 
+.EE
+
+- Set files with the xdm_var_lib_t type, if you want to store the xdm files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/[gxkw]dm(/.*)?, /var/cache/gdm(/.*)?, /var/lib/lxdm(/.*)?
+
+.EX
+.PP
+.B xdm_var_run_t 
+.EE
+
+- Set files with the xdm_var_run_t type, if you want to store the xdm files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/kdm(/.*)?, /var/run/slim.*, /var/run/lxdm(/.*)?, /var/run/gdm(/.*)?, /usr/lib/qt-.*/etc/settings(/.*)?, /var/run/lxdm\.auth, /var/run/xauth(/.*)?, /var/run/xdmctl(/.*)?, /var/run/[gx]dm\.pid, /var/run/slim(/.*)?, /var/run/gdm_socket, /etc/kde3?/kdm/backgroundrc, /var/run/lxdm\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux xdm policy is very flexible allowing users to setup their xdm processes in as secure a method as possible.
+.PP 
+The following port types are defined for xdm:
+
+.EX
+.TP 5
+.B xdmcp_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux xdm policy is very flexible allowing users to setup their xdm processes in as secure a method as possible.
+.PP 
+The following process types are defined for xdm:
+
+.EX
+.B xdm_t, xdm_dbusd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), xdm(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/xenconsoled_selinux.8 b/man/man8/xenconsoled_selinux.8
new file mode 100644
index 0000000..94ba970
--- /dev/null
+++ b/man/man8/xenconsoled_selinux.8
@@ -0,0 +1,79 @@
+.TH  "xenconsoled_selinux"  "8"  "xenconsoled" "dwalsh@redhat.com" "xenconsoled SELinux Policy documentation"
+.SH "NAME"
+xenconsoled_selinux \- Security Enhanced Linux Policy for the xenconsoled processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux xenconsoled policy is very flexible allowing users to setup their xenconsoled processes in as secure a method as possible.
+.PP 
+The following file types are defined for xenconsoled:
+
+
+.EX
+.PP
+.B xenconsoled_exec_t 
+.EE
+
+- Set files with the xenconsoled_exec_t type, if you want to transition an executable to the xenconsoled_t domain.
+
+
+.EX
+.PP
+.B xenconsoled_var_run_t 
+.EE
+
+- Set files with the xenconsoled_var_run_t type, if you want to store the xenconsoled files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux xenconsoled policy is very flexible allowing users to setup their xenconsoled processes in as secure a method as possible.
+.PP 
+The following process types are defined for xenconsoled:
+
+.EX
+.B xenconsoled_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), xenconsoled(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/xend_selinux.8 b/man/man8/xend_selinux.8
new file mode 100644
index 0000000..ef97b9c
--- /dev/null
+++ b/man/man8/xend_selinux.8
@@ -0,0 +1,190 @@
+.TH  "xend_selinux"  "8"  "xend" "dwalsh@redhat.com" "xend SELinux Policy documentation"
+.SH "NAME"
+xend_selinux \- Security Enhanced Linux Policy for the xend processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  xend policy is extremely flexible and has several booleans that allow you to manipulate the policy and run xend with the tightest access possible.
+
+
+.PP
+If you want to allow xen to manage nfs file, you must turn on the xen_use_nfs boolean.
+
+.EX
+.B setsebool -P xen_use_nfs 1
+.EE
+
+.PP
+If you want to allow xend to run qemu-dm. Not required if using paravirt and no vfb, you must turn on the xend_run_qemu boolean.
+
+.EX
+.B setsebool -P xend_run_qemu 1
+.EE
+
+.PP
+If you want to allow xend to run blktapctrl/tapdisk. Not required if using dedicated logical volumes for disk images, you must turn on the xend_run_blktap boolean.
+
+.EX
+.B setsebool -P xend_run_blktap 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux xend policy is very flexible allowing users to setup their xend processes in as secure a method as possible.
+.PP 
+The following file types are defined for xend:
+
+
+.EX
+.PP
+.B xen_devpts_t 
+.EE
+
+- Set files with the xen_devpts_t type, if you want to treat the files as xen devpts data.
+
+
+.EX
+.PP
+.B xen_image_t 
+.EE
+
+- Set files with the xen_image_t type, if you want to treat the files as xen image data.
+
+.br
+.TP 5
+Paths: 
+/xen(/.*)?, /var/lib/xen/images(/.*)?
+
+.EX
+.PP
+.B xend_exec_t 
+.EE
+
+- Set files with the xend_exec_t type, if you want to transition an executable to the xend_t domain.
+
+
+.EX
+.PP
+.B xend_tmp_t 
+.EE
+
+- Set files with the xend_tmp_t type, if you want to store xend temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B xend_var_lib_t 
+.EE
+
+- Set files with the xend_var_lib_t type, if you want to store the xend files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/xen(/.*)?, /var/lib/xend(/.*)?
+
+.EX
+.PP
+.B xend_var_log_t 
+.EE
+
+- Set files with the xend_var_log_t type, if you want to treat the data as xend var log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/xen(/.*)?, /var/log/xen-hotplug\.log, /var/log/xend\.log, /var/log/xend-debug\.log
+
+.EX
+.PP
+.B xend_var_run_t 
+.EE
+
+- Set files with the xend_var_run_t type, if you want to store the xend files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/xenner(/.*)?, /var/run/xend(/.*)?, /var/run/xend\.pid
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux xend policy is very flexible allowing users to setup their xend processes in as secure a method as possible.
+.PP 
+The following port types are defined for xend:
+
+.EX
+.TP 5
+.B xen_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux xend policy is very flexible allowing users to setup their xend processes in as secure a method as possible.
+.PP 
+The following process types are defined for xend:
+
+.EX
+.B xend_t, xenstored_t, xenconsoled_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), xend(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/xenstored_selinux.8 b/man/man8/xenstored_selinux.8
new file mode 100644
index 0000000..0cf576a
--- /dev/null
+++ b/man/man8/xenstored_selinux.8
@@ -0,0 +1,107 @@
+.TH  "xenstored_selinux"  "8"  "xenstored" "dwalsh@redhat.com" "xenstored SELinux Policy documentation"
+.SH "NAME"
+xenstored_selinux \- Security Enhanced Linux Policy for the xenstored processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux xenstored policy is very flexible allowing users to setup their xenstored processes in as secure a method as possible.
+.PP 
+The following file types are defined for xenstored:
+
+
+.EX
+.PP
+.B xenstored_exec_t 
+.EE
+
+- Set files with the xenstored_exec_t type, if you want to transition an executable to the xenstored_t domain.
+
+
+.EX
+.PP
+.B xenstored_tmp_t 
+.EE
+
+- Set files with the xenstored_tmp_t type, if you want to store xenstored temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B xenstored_var_lib_t 
+.EE
+
+- Set files with the xenstored_var_lib_t type, if you want to store the xenstored files under the /var/lib directory.
+
+
+.EX
+.PP
+.B xenstored_var_log_t 
+.EE
+
+- Set files with the xenstored_var_log_t type, if you want to treat the data as xenstored var log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B xenstored_var_run_t 
+.EE
+
+- Set files with the xenstored_var_run_t type, if you want to store the xenstored files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/xenstore\.pid, /var/run/xenstored(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux xenstored policy is very flexible allowing users to setup their xenstored processes in as secure a method as possible.
+.PP 
+The following process types are defined for xenstored:
+
+.EX
+.B xenstored_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), xenstored(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/xguest_selinux.8 b/man/man8/xguest_selinux.8
new file mode 100644
index 0000000..2478817
--- /dev/null
+++ b/man/man8/xguest_selinux.8
@@ -0,0 +1,231 @@
+.TH  "xguest_selinux"  "8"  "xguest" "mgrepl@redhat.com" "xguest SELinux Policy documentation"
+.SH "NAME"
+xguest_u \- \fBLeast privledge xwindows user role\fP - Security Enhanced Linux Policy 
+
+.SH DESCRIPTION
+
+\fBxguest_u\fP is an SELinux User defined in the SELinux
+policy. SELinux users have default roles, \fBxguest_r\fP.  The
+default role has a default type, \fBxguest_t\fP, associated with it.
+
+The SELinux user will usually login to a system with a context that looks like:
+
+.B xguest_u:xguest_r:xguest_u:s0-s0:c0.c1023
+
+Linux users are automatically assigned an SELinux users at login.  
+Login programs use the SELinux User to assign initial context to the user's shell.
+
+SELinux policy uses the context to control the user's access.
+
+By default all users are assigned to the SELinux user via the \fB__default__\fP flag
+
+On Targeted policy systems the \fB__default__\fP user is assigned to the \fBunconfined_u\fP SELinux user.
+
+You can list all Linux User to SELinux user mapping using:
+
+.B semanage login -l
+
+If you wanted to change the default user mapping to use the xguest_u user, you would execute:
+
+.B semanage login -m -s xguest_u __default__
+
+
+If you want to map the one Linux user (joe) to the SELinux user xguest, you would execute:
+
+.B $ semanage login -a -s xguest_u joe
+
+
+.SH USER DESCRIPTION
+
+The SELinux user xguest_u is defined in policy as a unprivileged user. SELinux prevents unprivileged users from doing administration tasks without transitioning to a different role.
+
+.SH SUDO
+
+The SELinux type xguest_t is not allowed to execute sudo. 
+
+.SH X WINDOWS LOGIN
+
+The SELinux user xguest_u is able to X Windows login.
+
+.SH TERMINAL LOGIN
+
+The SELinux user xguest_u is able to terminal login.
+
+.SH NETWORK
+
+.TP
+The SELinux user xguest_u is able to connect to the following tcp ports.
+
+.B dns_port_t: 53
+
+.B ipp_port_t: 631,8610-8614
+
+.B transproxy_port_t: 8081
+
+.B ocsp_port_t: 9080
+
+.B kerberos_port_t: 88,750,4444
+
+.B all ports with out defined types
+
+.B ftp_port_t: 21,990
+
+.B speech_port_t: 8036
+
+.B squid_port_t: 3128,3401,4827
+
+.B http_cache_port_t: 8080,8118,8123,10001-10010
+
+.B http_port_t: 80,443,488,8008,8009,8443
+
+.B flash_port_t: 843,1935
+
+.B pulseaudio_port_t: 4713
+
+.B soundd_port_t: 8000,9433,16001
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  xguest_t policy is extremely flexible and has several booleans that allow you to manipulate the policy and run xguest_t with the tightest access possible.
+
+
+.PP
+If you want to allow xguest users to configure Network Manager and connect to apache ports, you must turn on the xguest_connect_network boolean.
+
+.EX
+.B setsebool -P xguest_connect_network 1
+.EE
+
+.PP
+If you want to allow users to connect to the local mysql server, you must turn on the allow_user_mysql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_mysql_connect 1
+.EE
+
+.PP
+If you want to control users use of ping and traceroute, you must turn on the user_ping boolean.
+
+.EX
+.B setsebool -P user_ping 1
+.EE
+
+.PP
+If you want to allow w to display everyone, you must turn on the user_ttyfile_stat boolean.
+
+.EX
+.B setsebool -P user_ttyfile_stat 1
+.EE
+
+.PP
+If you want to allow user music sharing, you must turn on the user_share_music boolean.
+
+.EX
+.B setsebool -P user_share_music 1
+.EE
+
+.PP
+If you want to allow regular users direct dri device access, you must turn on the user_direct_dri boolean.
+
+.EX
+.B setsebool -P user_direct_dri 1
+.EE
+
+.PP
+If you want to allow xguest users to use blue tooth devices, you must turn on the xguest_use_bluetooth boolean.
+
+.EX
+.B setsebool -P xguest_use_bluetooth 1
+.EE
+
+.PP
+If you want to allow user to r/w files on filesystems that do not have extended attributes (FAT, CDROM, FLOPPY), you must turn on the user_rw_noexattrfile boolean.
+
+.EX
+.B setsebool -P user_rw_noexattrfile 1
+.EE
+
+.PP
+If you want to allow users to run TCP servers (bind to ports and accept connection from the same domain and outside users)  disabling this forces FTP passive mode and may change other protocols, you must turn on the user_tcp_server boolean.
+
+.EX
+.B setsebool -P user_tcp_server 1
+.EE
+
+.PP
+If you want to allow regular users direct mouse access, you must turn on the user_direct_mouse boolean.
+
+.EX
+.B setsebool -P user_direct_mouse 1
+.EE
+
+.PP
+If you want to allow user processes to change their priority, you must turn on the user_setrlimit boolean.
+
+.EX
+.B setsebool -P user_setrlimit 1
+.EE
+
+.PP
+If you want to allow users to connect to PostgreSQL, you must turn on the allow_user_postgresql_connect boolean.
+
+.EX
+.B setsebool -P allow_user_postgresql_connect 1
+.EE
+
+.PP
+If you want to allow xguest users to mount removable media, you must turn on the xguest_mount_media boolean.
+
+.EX
+.B setsebool -P xguest_mount_media 1
+.EE
+
+.PP
+If you want to allow users to read system messages, you must turn on the user_dmesg boolean.
+
+.EX
+.B setsebool -P user_dmesg 1
+.EE
+
+.SH HOME_EXEC
+
+The SELinux user xguest_u is able execute home content files.
+
+.SH TRANSITIONS
+
+Three things can happen when xguest_t attempts to execute a program.
+
+\fB1.\fP SELinux Policy can deny xguest_t from executing the program.
+
+.TP
+
+\fB2.\fP SELinux Policy can allow xguest_t to execute the program in the current user type.
+
+Execute the following to see the types that the SELinux user xguest_t can execute without transitioning:
+
+.B sesearch -A -s xguest_t -c file -p execute_no_trans
+
+.TP
+
+\fB3.\fP SELinux can allow xguest_t to execute the program and transition to a new type.
+
+Execute the following to see the types that the SELinux user xguest_t can execute and transition:
+
+.B $ sesearch -A -s xguest_t -c process -p transition
+
+
+.SH "COMMANDS"
+
+.B semanage login
+can also be used to manipulate the Linux User to SELinux User mappings
+
+.B semanage user
+can also be used to manipulate SELinux user definitions.
+
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genuserman.py.
+
+.SH "SEE ALSO"
+selinux(8), semanage(8).
diff --git a/man/man8/xserver_selinux.8 b/man/man8/xserver_selinux.8
new file mode 100644
index 0000000..868120f
--- /dev/null
+++ b/man/man8/xserver_selinux.8
@@ -0,0 +1,176 @@
+.TH  "xserver_selinux"  "8"  "xserver" "dwalsh@redhat.com" "xserver SELinux Policy documentation"
+.SH "NAME"
+xserver_selinux \- Security Enhanced Linux Policy for the xserver processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B xserver
+(X Windows Server)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  xserver policy is extremely flexible and has several booleans that allow you to manipulate the policy and run xserver with the tightest access possible.
+
+
+.PP
+If you want to allow confined virtual guests to interact with the xserve, you must turn on the virt_use_xserver boolean.
+
+.EX
+.B setsebool -P virt_use_xserver 1
+.EE
+
+.PP
+If you want to support X userspace object manage, you must turn on the xserver_object_manager boolean.
+
+.EX
+.B setsebool -P xserver_object_manager 1
+.EE
+
+.PP
+If you want to allows XServer to execute writable memor, you must turn on the allow_xserver_execmem boolean.
+
+.EX
+.B setsebool -P allow_xserver_execmem 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux xserver policy is very flexible allowing users to setup their xserver processes in as secure a method as possible.
+.PP 
+The following file types are defined for xserver:
+
+
+.EX
+.PP
+.B xserver_exec_t 
+.EE
+
+- Set files with the xserver_exec_t type, if you want to transition an executable to the xserver_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/Xair, /usr/bin/Xephyr, /usr/X11R6/bin/Xwrapper, /usr/X11R6/bin/XFree86, /etc/init\.d/xfree86-common, /usr/X11R6/bin/Xorg, /usr/X11R6/bin/Xipaq, /usr/bin/Xorg, /usr/X11R6/bin/X
+
+.EX
+.PP
+.B xserver_log_t 
+.EE
+
+- Set files with the xserver_log_t type, if you want to treat the data as xserver log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/usr/var/[xgkw]dm(/.*)?, /var/[xgk]dm(/.*)?, /var/log/nvidia-installer\.log.*, /var/log/XFree86.*, /var/log/Xorg.*, /var/log/[kw]dm\.log.*
+
+.EX
+.PP
+.B xserver_tmpfs_t 
+.EE
+
+- Set files with the xserver_tmpfs_t type, if you want to store xserver files on a tmpfs file system.
+
+
+.EX
+.PP
+.B xserver_var_lib_t 
+.EE
+
+- Set files with the xserver_var_lib_t type, if you want to store the xserver files under the /var/lib directory.
+
+
+.EX
+.PP
+.B xserver_var_run_t 
+.EE
+
+- Set files with the xserver_var_run_t type, if you want to store the xserver files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/xorg(/.*)?, /var/run/video.rom
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux xserver policy is very flexible allowing users to setup their xserver processes in as secure a method as possible.
+.PP 
+The following port types are defined for xserver:
+
+.EX
+.TP 5
+.B xserver_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux xserver policy is very flexible allowing users to setup their xserver processes in as secure a method as possible.
+.PP 
+The following process types are defined for xserver:
+
+.EX
+.B xserver_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), xserver(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/ypbind_selinux.8 b/man/man8/ypbind_selinux.8
index 5061a5f..22c9968 100644
--- a/man/man8/ypbind_selinux.8
+++ b/man/man8/ypbind_selinux.8
@@ -1,19 +1,118 @@
-.TH  "ypbind_selinux"  "8"  "17 Jan 2005" "dwalsh@redhat.com" "ypbind Selinux Policy documentation"
+.TH  "ypbind_selinux"  "8"  "ypbind" "dwalsh@redhat.com" "ypbind SELinux Policy documentation"
 .SH "NAME"
-ypbind_selinux \- Security Enhanced Linux Policy for NIS.
+ypbind_selinux \- Security Enhanced Linux Policy for the ypbind processes
 .SH "DESCRIPTION"
 
-Security-Enhanced Linux secures the system via flexible mandatory access
-control. SELinux can be setup deny NIS from working, since it requires daemons to be allowed greater access to the network.  
+
+
+
 .SH BOOLEANS
-.TP
-You must set the allow_ypbind boolean to allow your system to work properly in a NIS environment.
-.TP
-setsebool -P allow_ypbind 1
-.TP
-system-config-selinux is a GUI tool available to customize SELinux policy settings.
+SELinux policy is customizable based on least access required.  ypbind policy is extremely flexible and has several booleans that allow you to manipulate the policy and run ypbind with the tightest access possible.
+
+
+.PP
+If you want to allow system to run with NI, you must turn on the allow_ypbind boolean.
+
+.EX
+.B setsebool -P allow_ypbind 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ypbind policy is very flexible allowing users to setup their ypbind processes in as secure a method as possible.
+.PP 
+The following file types are defined for ypbind:
+
+
+.EX
+.PP
+.B ypbind_exec_t 
+.EE
+
+- Set files with the ypbind_exec_t type, if you want to transition an executable to the ypbind_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/ypbind, /sbin/ypbind
+
+.EX
+.PP
+.B ypbind_initrc_exec_t 
+.EE
+
+- Set files with the ypbind_initrc_exec_t type, if you want to transition an executable to the ypbind_initrc_t domain.
+
+
+.EX
+.PP
+.B ypbind_unit_file_t 
+.EE
+
+- Set files with the ypbind_unit_file_t type, if you want to treat the files as ypbind unit content.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/systemd/system/ypbind\.service, /lib/systemd/system/ypbind\.service
+
+.EX
+.PP
+.B ypbind_var_run_t 
+.EE
+
+- Set files with the ypbind_var_run_t type, if you want to store the ypbind files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ypbind policy is very flexible allowing users to setup their ypbind processes in as secure a method as possible.
+.PP 
+The following process types are defined for ypbind:
+
+.EX
+.B ypbind_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
 .SH AUTHOR	
-This manual page was written by Dan Walsh <dwalsh@redhat.com>.
+This manual page was autogenerated by genman.py.
 
 .SH "SEE ALSO"
-selinux(8), ypbind(8), chcon(1), setsebool(8)
+selinux(8), ypbind(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/yppasswdd_selinux.8 b/man/man8/yppasswdd_selinux.8
new file mode 100644
index 0000000..4b570b3
--- /dev/null
+++ b/man/man8/yppasswdd_selinux.8
@@ -0,0 +1,79 @@
+.TH  "yppasswdd_selinux"  "8"  "yppasswdd" "dwalsh@redhat.com" "yppasswdd SELinux Policy documentation"
+.SH "NAME"
+yppasswdd_selinux \- Security Enhanced Linux Policy for the yppasswdd processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux yppasswdd policy is very flexible allowing users to setup their yppasswdd processes in as secure a method as possible.
+.PP 
+The following file types are defined for yppasswdd:
+
+
+.EX
+.PP
+.B yppasswdd_exec_t 
+.EE
+
+- Set files with the yppasswdd_exec_t type, if you want to transition an executable to the yppasswdd_t domain.
+
+
+.EX
+.PP
+.B yppasswdd_var_run_t 
+.EE
+
+- Set files with the yppasswdd_var_run_t type, if you want to store the yppasswdd files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux yppasswdd policy is very flexible allowing users to setup their yppasswdd processes in as secure a method as possible.
+.PP 
+The following process types are defined for yppasswdd:
+
+.EX
+.B yppasswdd_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), yppasswdd(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/ypserv_selinux.8 b/man/man8/ypserv_selinux.8
new file mode 100644
index 0000000..b5da81b
--- /dev/null
+++ b/man/man8/ypserv_selinux.8
@@ -0,0 +1,87 @@
+.TH  "ypserv_selinux"  "8"  "ypserv" "dwalsh@redhat.com" "ypserv SELinux Policy documentation"
+.SH "NAME"
+ypserv_selinux \- Security Enhanced Linux Policy for the ypserv processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ypserv policy is very flexible allowing users to setup their ypserv processes in as secure a method as possible.
+.PP 
+The following file types are defined for ypserv:
+
+
+.EX
+.PP
+.B ypserv_conf_t 
+.EE
+
+- Set files with the ypserv_conf_t type, if you want to treat the files as ypserv configuration data, usually stored under the /etc directory.
+
+
+.EX
+.PP
+.B ypserv_exec_t 
+.EE
+
+- Set files with the ypserv_exec_t type, if you want to transition an executable to the ypserv_t domain.
+
+
+.EX
+.PP
+.B ypserv_var_run_t 
+.EE
+
+- Set files with the ypserv_var_run_t type, if you want to store the ypserv files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ypserv policy is very flexible allowing users to setup their ypserv processes in as secure a method as possible.
+.PP 
+The following process types are defined for ypserv:
+
+.EX
+.B ypserv_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ypserv(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/ypxfr_selinux.8 b/man/man8/ypxfr_selinux.8
new file mode 100644
index 0000000..3e761eb
--- /dev/null
+++ b/man/man8/ypxfr_selinux.8
@@ -0,0 +1,83 @@
+.TH  "ypxfr_selinux"  "8"  "ypxfr" "dwalsh@redhat.com" "ypxfr SELinux Policy documentation"
+.SH "NAME"
+ypxfr_selinux \- Security Enhanced Linux Policy for the ypxfr processes
+.SH "DESCRIPTION"
+
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux ypxfr policy is very flexible allowing users to setup their ypxfr processes in as secure a method as possible.
+.PP 
+The following file types are defined for ypxfr:
+
+
+.EX
+.PP
+.B ypxfr_exec_t 
+.EE
+
+- Set files with the ypxfr_exec_t type, if you want to transition an executable to the ypxfr_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/lib/yp/ypxfr, /usr/sbin/rpc\.ypxfrd
+
+.EX
+.PP
+.B ypxfr_var_run_t 
+.EE
+
+- Set files with the ypxfr_var_run_t type, if you want to store the ypxfr files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux ypxfr policy is very flexible allowing users to setup their ypxfr processes in as secure a method as possible.
+.PP 
+The following process types are defined for ypxfr:
+
+.EX
+.B ypxfr_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), ypxfr(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/zabbix_selinux.8 b/man/man8/zabbix_selinux.8
new file mode 100644
index 0000000..6f79276
--- /dev/null
+++ b/man/man8/zabbix_selinux.8
@@ -0,0 +1,200 @@
+.TH  "zabbix_selinux"  "8"  "zabbix" "dwalsh@redhat.com" "zabbix SELinux Policy documentation"
+.SH "NAME"
+zabbix_selinux \- Security Enhanced Linux Policy for the zabbix processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B zabbix
+(Distributed infrastructure monitoring)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  zabbix policy is extremely flexible and has several booleans that allow you to manipulate the policy and run zabbix with the tightest access possible.
+
+
+.PP
+If you want to allow zabbix to connect to unreserved port, you must turn on the zabbix_can_network boolean.
+
+.EX
+.B setsebool -P zabbix_can_network 1
+.EE
+
+.PP
+If you want to allow http daemon to connect to zabbi, you must turn on the httpd_can_connect_zabbix boolean.
+
+.EX
+.B setsebool -P httpd_can_connect_zabbix 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux zabbix policy is very flexible allowing users to setup their zabbix processes in as secure a method as possible.
+.PP 
+The following file types are defined for zabbix:
+
+
+.EX
+.PP
+.B zabbix_agent_exec_t 
+.EE
+
+- Set files with the zabbix_agent_exec_t type, if you want to transition an executable to the zabbix_agent_t domain.
+
+
+.EX
+.PP
+.B zabbix_agent_initrc_exec_t 
+.EE
+
+- Set files with the zabbix_agent_initrc_exec_t type, if you want to transition an executable to the zabbix_agent_initrc_t domain.
+
+
+.EX
+.PP
+.B zabbix_exec_t 
+.EE
+
+- Set files with the zabbix_exec_t type, if you want to transition an executable to the zabbix_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/zabbix_server_sqlite3, /usr/sbin/zabbix_server_mysql, /usr/sbin/zabbix_server_pgsql, /usr/sbin/zabbix_server
+
+.EX
+.PP
+.B zabbix_initrc_exec_t 
+.EE
+
+- Set files with the zabbix_initrc_exec_t type, if you want to transition an executable to the zabbix_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/zabbix-server, /etc/rc\.d/init\.d/zabbix
+
+.EX
+.PP
+.B zabbix_log_t 
+.EE
+
+- Set files with the zabbix_log_t type, if you want to treat the data as zabbix log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B zabbix_tmp_t 
+.EE
+
+- Set files with the zabbix_tmp_t type, if you want to store zabbix temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B zabbix_tmpfs_t 
+.EE
+
+- Set files with the zabbix_tmpfs_t type, if you want to store zabbix files on a tmpfs file system.
+
+
+.EX
+.PP
+.B zabbix_var_run_t 
+.EE
+
+- Set files with the zabbix_var_run_t type, if you want to store the zabbix files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux zabbix policy is very flexible allowing users to setup their zabbix processes in as secure a method as possible.
+.PP 
+The following port types are defined for zabbix:
+
+.EX
+.TP 5
+.B zabbix_agent_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+
+.EX
+.TP 5
+.B zabbix_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux zabbix policy is very flexible allowing users to setup their zabbix processes in as secure a method as possible.
+.PP 
+The following process types are defined for zabbix:
+
+.EX
+.B zabbix_agent_t, zabbix_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), zabbix(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/zarafa_selinux.8 b/man/man8/zarafa_selinux.8
new file mode 100644
index 0000000..928b3c1
--- /dev/null
+++ b/man/man8/zarafa_selinux.8
@@ -0,0 +1,319 @@
+.TH  "zarafa_selinux"  "8"  "zarafa" "dwalsh@redhat.com" "zarafa SELinux Policy documentation"
+.SH "NAME"
+zarafa_selinux \- Security Enhanced Linux Policy for the zarafa processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B zarafa
+(Zarafa collaboration platform)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux zarafa policy is very flexible allowing users to setup their zarafa processes in as secure a method as possible.
+.PP 
+The following file types are defined for zarafa:
+
+
+.EX
+.PP
+.B zarafa_deliver_exec_t 
+.EE
+
+- Set files with the zarafa_deliver_exec_t type, if you want to transition an executable to the zarafa_deliver_t domain.
+
+
+.EX
+.PP
+.B zarafa_deliver_log_t 
+.EE
+
+- Set files with the zarafa_deliver_log_t type, if you want to treat the data as zarafa deliver log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B zarafa_deliver_tmp_t 
+.EE
+
+- Set files with the zarafa_deliver_tmp_t type, if you want to store zarafa deliver temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B zarafa_deliver_var_run_t 
+.EE
+
+- Set files with the zarafa_deliver_var_run_t type, if you want to store the zarafa deliver files under the /run directory.
+
+
+.EX
+.PP
+.B zarafa_etc_t 
+.EE
+
+- Set files with the zarafa_etc_t type, if you want to store zarafa files in the /etc directories.
+
+
+.EX
+.PP
+.B zarafa_gateway_exec_t 
+.EE
+
+- Set files with the zarafa_gateway_exec_t type, if you want to transition an executable to the zarafa_gateway_t domain.
+
+
+.EX
+.PP
+.B zarafa_gateway_log_t 
+.EE
+
+- Set files with the zarafa_gateway_log_t type, if you want to treat the data as zarafa gateway log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B zarafa_gateway_var_run_t 
+.EE
+
+- Set files with the zarafa_gateway_var_run_t type, if you want to store the zarafa gateway files under the /run directory.
+
+
+.EX
+.PP
+.B zarafa_ical_exec_t 
+.EE
+
+- Set files with the zarafa_ical_exec_t type, if you want to transition an executable to the zarafa_ical_t domain.
+
+
+.EX
+.PP
+.B zarafa_ical_log_t 
+.EE
+
+- Set files with the zarafa_ical_log_t type, if you want to treat the data as zarafa ical log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B zarafa_ical_var_run_t 
+.EE
+
+- Set files with the zarafa_ical_var_run_t type, if you want to store the zarafa ical files under the /run directory.
+
+
+.EX
+.PP
+.B zarafa_indexer_exec_t 
+.EE
+
+- Set files with the zarafa_indexer_exec_t type, if you want to transition an executable to the zarafa_indexer_t domain.
+
+
+.EX
+.PP
+.B zarafa_indexer_log_t 
+.EE
+
+- Set files with the zarafa_indexer_log_t type, if you want to treat the data as zarafa indexer log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B zarafa_indexer_tmp_t 
+.EE
+
+- Set files with the zarafa_indexer_tmp_t type, if you want to store zarafa indexer temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B zarafa_indexer_var_run_t 
+.EE
+
+- Set files with the zarafa_indexer_var_run_t type, if you want to store the zarafa indexer files under the /run directory.
+
+
+.EX
+.PP
+.B zarafa_monitor_exec_t 
+.EE
+
+- Set files with the zarafa_monitor_exec_t type, if you want to transition an executable to the zarafa_monitor_t domain.
+
+
+.EX
+.PP
+.B zarafa_monitor_log_t 
+.EE
+
+- Set files with the zarafa_monitor_log_t type, if you want to treat the data as zarafa monitor log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B zarafa_monitor_var_run_t 
+.EE
+
+- Set files with the zarafa_monitor_var_run_t type, if you want to store the zarafa monitor files under the /run directory.
+
+
+.EX
+.PP
+.B zarafa_server_exec_t 
+.EE
+
+- Set files with the zarafa_server_exec_t type, if you want to transition an executable to the zarafa_server_t domain.
+
+
+.EX
+.PP
+.B zarafa_server_log_t 
+.EE
+
+- Set files with the zarafa_server_log_t type, if you want to treat the data as zarafa server log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B zarafa_server_tmp_t 
+.EE
+
+- Set files with the zarafa_server_tmp_t type, if you want to store zarafa server temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B zarafa_server_var_run_t 
+.EE
+
+- Set files with the zarafa_server_var_run_t type, if you want to store the zarafa server files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/zarafa, /var/run/zarafa-server\.pid
+
+.EX
+.PP
+.B zarafa_share_t 
+.EE
+
+- Set files with the zarafa_share_t type, if you want to treat the files as zarafa share data.
+
+
+.EX
+.PP
+.B zarafa_spooler_exec_t 
+.EE
+
+- Set files with the zarafa_spooler_exec_t type, if you want to transition an executable to the zarafa_spooler_t domain.
+
+
+.EX
+.PP
+.B zarafa_spooler_log_t 
+.EE
+
+- Set files with the zarafa_spooler_log_t type, if you want to treat the data as zarafa spooler log data, usually stored under the /var/log directory.
+
+
+.EX
+.PP
+.B zarafa_spooler_var_run_t 
+.EE
+
+- Set files with the zarafa_spooler_var_run_t type, if you want to store the zarafa spooler files under the /run directory.
+
+
+.EX
+.PP
+.B zarafa_var_lib_t 
+.EE
+
+- Set files with the zarafa_var_lib_t type, if you want to store the zarafa files under the /var/lib directory.
+
+.br
+.TP 5
+Paths: 
+/var/lib/zarafa-webaccess(/.*)?, /var/lib/zarafa(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux zarafa policy is very flexible allowing users to setup their zarafa processes in as secure a method as possible.
+.PP 
+The following port types are defined for zarafa:
+
+.EX
+.TP 5
+.B zarafa_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux zarafa policy is very flexible allowing users to setup their zarafa processes in as secure a method as possible.
+.PP 
+The following process types are defined for zarafa:
+
+.EX
+.B zarafa_gateway_t, zarafa_spooler_t, zarafa_deliver_t, zarafa_monitor_t, zarafa_indexer_t, zarafa_server_t, zarafa_ical_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), zarafa(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/zebra_selinux.8 b/man/man8/zebra_selinux.8
new file mode 100644
index 0000000..705cdbc
--- /dev/null
+++ b/man/man8/zebra_selinux.8
@@ -0,0 +1,178 @@
+.TH  "zebra_selinux"  "8"  "zebra" "dwalsh@redhat.com" "zebra SELinux Policy documentation"
+.SH "NAME"
+zebra_selinux \- Security Enhanced Linux Policy for the zebra processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B zebra
+(Zebra border gateway protocol network routing service)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH BOOLEANS
+SELinux policy is customizable based on least access required.  zebra policy is extremely flexible and has several booleans that allow you to manipulate the policy and run zebra with the tightest access possible.
+
+
+.PP
+If you want to allow zebra daemon to write it configuration file, you must turn on the allow_zebra_write_config boolean.
+
+.EX
+.B setsebool -P allow_zebra_write_config 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux zebra policy is very flexible allowing users to setup their zebra processes in as secure a method as possible.
+.PP 
+The following file types are defined for zebra:
+
+
+.EX
+.PP
+.B zebra_conf_t 
+.EE
+
+- Set files with the zebra_conf_t type, if you want to treat the files as zebra configuration data, usually stored under the /etc directory.
+
+.br
+.TP 5
+Paths: 
+/etc/zebra(/.*)?, /etc/quagga(/.*)?
+
+.EX
+.PP
+.B zebra_exec_t 
+.EE
+
+- Set files with the zebra_exec_t type, if you want to transition an executable to the zebra_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/sbin/zebra, /usr/sbin/rip.*, /usr/sbin/bgpd, /usr/sbin/ospf.*
+
+.EX
+.PP
+.B zebra_initrc_exec_t 
+.EE
+
+- Set files with the zebra_initrc_exec_t type, if you want to transition an executable to the zebra_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/ripngd, /etc/rc\.d/init\.d/zebra, /etc/rc\.d/init\.d/ripd, /etc/rc\.d/init\.d/bgpd, /etc/rc\.d/init\.d/ospf6d, /etc/rc\.d/init\.d/ospfd
+
+.EX
+.PP
+.B zebra_log_t 
+.EE
+
+- Set files with the zebra_log_t type, if you want to treat the data as zebra log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/quagga(/.*)?, /var/log/zebra(/.*)?
+
+.EX
+.PP
+.B zebra_tmp_t 
+.EE
+
+- Set files with the zebra_tmp_t type, if you want to store zebra temporary files in the /tmp directories.
+
+
+.EX
+.PP
+.B zebra_var_run_t 
+.EE
+
+- Set files with the zebra_var_run_t type, if you want to store the zebra files under the /run directory.
+
+.br
+.TP 5
+Paths: 
+/var/run/\.zserv, /var/run/\.zebra, /var/run/quagga(/.*)?
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PORT TYPES
+SELinux defines port types to represent TCP and UDP ports. 
+.PP
+You can see the types associated with a port by using the following command: 
+
+.B semanage port -l
+
+.PP
+Policy governs the access confined processes have to these ports. 
+SELinux zebra policy is very flexible allowing users to setup their zebra processes in as secure a method as possible.
+.PP 
+The following port types are defined for zebra:
+
+.EX
+.TP 5
+.B zebra_port_t 
+.TP 10
+.EE
+
+
+Default Defined Ports:
+tcp 8021
+.EE
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux zebra policy is very flexible allowing users to setup their zebra processes in as secure a method as possible.
+.PP 
+The following process types are defined for zebra:
+
+.EX
+.B zebra_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.B semanage port
+can also be used to manipulate the port definitions
+
+.B semanage boolean
+can also be used to manipulate the booleans
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), zebra(8), semanage(8), restorecon(8), chcon(1)
+, setsebool(8)
\ No newline at end of file
diff --git a/man/man8/zoneminder_selinux.8 b/man/man8/zoneminder_selinux.8
new file mode 100644
index 0000000..4f71f64
--- /dev/null
+++ b/man/man8/zoneminder_selinux.8
@@ -0,0 +1,163 @@
+.TH  "zoneminder_selinux"  "8"  "zoneminder" "dwalsh@redhat.com" "zoneminder SELinux Policy documentation"
+.SH "NAME"
+zoneminder_selinux \- Security Enhanced Linux Policy for the zoneminder processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B zoneminder
+(policy for zoneminder)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH SHARING FILES
+If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
+.TP
+Allow zoneminder servers to read the /var/zoneminder directory by adding the public_content_t file type to the directory and by restoring the file type.
+.PP
+.B
+semanage fcontext -a -t public_content_t "/var/zoneminder(/.*)?"
+.br
+.B restorecon -F -R -v /var/zoneminder
+.pp
+.TP
+Allow zoneminder servers to read and write /var/tmp/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  This also requires the allow_zoneminder_anon_write boolean to be set.
+.PP
+.B
+semanage fcontext -a -t public_content_rw_t "/var/zoneminder/incoming(/.*)?"
+.br
+.B restorecon -F -R -v /var/zoneminder/incoming
+
+
+.PP
+If you want to allow ZoneMinder to modify public files used for public file transfer services., you must turn on the zoneminder_anon_write boolean.
+
+.EX
+.B setsebool -P zoneminder_anon_write 1
+.EE
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux zoneminder policy is very flexible allowing users to setup their zoneminder processes in as secure a method as possible.
+.PP 
+The following file types are defined for zoneminder:
+
+
+.EX
+.PP
+.B zoneminder_exec_t 
+.EE
+
+- Set files with the zoneminder_exec_t type, if you want to transition an executable to the zoneminder_t domain.
+
+.br
+.TP 5
+Paths: 
+/usr/bin/zmpkg.pl, /usr/bin/motion
+
+.EX
+.PP
+.B zoneminder_initrc_exec_t 
+.EE
+
+- Set files with the zoneminder_initrc_exec_t type, if you want to transition an executable to the zoneminder_initrc_t domain.
+
+.br
+.TP 5
+Paths: 
+/etc/rc\.d/init\.d/motion, /etc/rc\.d/init\.d/zoneminder
+
+.EX
+.PP
+.B zoneminder_log_t 
+.EE
+
+- Set files with the zoneminder_log_t type, if you want to treat the data as zoneminder log data, usually stored under the /var/log directory.
+
+.br
+.TP 5
+Paths: 
+/var/log/motion\.log, /var/log/zoneminder(/.*)?
+
+.EX
+.PP
+.B zoneminder_spool_t 
+.EE
+
+- Set files with the zoneminder_spool_t type, if you want to store the zoneminder files under the /var/spool directory.
+
+
+.EX
+.PP
+.B zoneminder_tmpfs_t 
+.EE
+
+- Set files with the zoneminder_tmpfs_t type, if you want to store zoneminder files on a tmpfs file system.
+
+
+.EX
+.PP
+.B zoneminder_var_lib_t 
+.EE
+
+- Set files with the zoneminder_var_lib_t type, if you want to store the zoneminder files under the /var/lib directory.
+
+
+.EX
+.PP
+.B zoneminder_var_run_t 
+.EE
+
+- Set files with the zoneminder_var_run_t type, if you want to store the zoneminder files under the /run directory.
+
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux zoneminder policy is very flexible allowing users to setup their zoneminder processes in as secure a method as possible.
+.PP 
+The following process types are defined for zoneminder:
+
+.EX
+.B zoneminder_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), zoneminder(8), semanage(8), restorecon(8), chcon(1)
diff --git a/man/man8/zos_selinux.8 b/man/man8/zos_selinux.8
new file mode 100644
index 0000000..b9eb5b9
--- /dev/null
+++ b/man/man8/zos_selinux.8
@@ -0,0 +1,81 @@
+.TH  "zos_selinux"  "8"  "zos" "dwalsh@redhat.com" "zos SELinux Policy documentation"
+.SH "NAME"
+zos_selinux \- Security Enhanced Linux Policy for the zos processes
+.SH "DESCRIPTION"
+
+
+SELinux Linux secures
+.B zos
+(policy for z/OS Remote-services Audit dispatcher plugin)
+processes via flexible mandatory access
+control.  
+
+
+
+.SH FILE CONTEXTS
+SELinux requires files to have an extended attribute to define the file type. 
+.PP
+You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
+.PP
+Policy governs the access confined processes have to these files. 
+SELinux zos policy is very flexible allowing users to setup their zos processes in as secure a method as possible.
+.PP 
+The following file types are defined for zos:
+
+
+.EX
+.PP
+.B zos_remote_exec_t 
+.EE
+
+- Set files with the zos_remote_exec_t type, if you want to transition an executable to the zos_remote_t domain.
+
+.br
+.TP 5
+Paths: 
+/sbin/audispd-zos-remote, /usr/sbin/audispd-zos-remote
+
+.PP
+Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
+.B semanage fcontext 
+command.  This will modify the SELinux labeling database.  You will need to use
+.B restorecon
+to apply the labels.
+
+.SH PROCESS TYPES
+SELinux defines process types (domains) for each process running on the system
+.PP
+You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
+.PP
+Policy governs the access confined processes have to files. 
+SELinux zos policy is very flexible allowing users to setup their zos processes in as secure a method as possible.
+.PP 
+The following process types are defined for zos:
+
+.EX
+.B zos_remote_t 
+.EE
+.PP
+Note: 
+.B semanage permissive -a PROCESS_TYPE 
+can be used to make a process type permissive. Permissive process types are not denied access by SELinux. AVC messages will still be generated.
+
+.SH "COMMANDS"
+.B semanage fcontext
+can also be used to manipulate default file context mappings.
+.PP
+.B semanage permissive
+can also be used to manipulate whether or not a process type is permissive.
+.PP
+.B semanage module
+can also be used to enable/disable/install/remove policy modules.
+
+.PP
+.B system-config-selinux 
+is a GUI tool available to customize SELinux policy settings.
+
+.SH AUTHOR	
+This manual page was autogenerated by genman.py.
+
+.SH "SEE ALSO"
+selinux(8), zos(8), semanage(8), restorecon(8), chcon(1)
diff --git a/policy/constraints b/policy/constraints
index 3a45f23..f4754f0 100644
--- a/policy/constraints
+++ b/policy/constraints
@@ -105,6 +105,18 @@ constrain process { transition dyntransition noatsecure siginh rlimitinh }
 	or ( t1 == process_uncond_exempt )
 );
 
+constrain process dyntransition
+(
+	u1 == u2
+	or ( t1 == can_change_process_identity and t2 == process_user_target )
+);
+
+constrain process dyntransition
+(
+	r1 == r2
+	or ( t1 == can_change_process_identity and t2 == process_user_target )
+);
+
 # These permissions do not have ubac constraints:
 # fork
 # setexec
diff --git a/policy/flask/access_vectors b/policy/flask/access_vectors
index f462e95..d29da40 100644
--- a/policy/flask/access_vectors
+++ b/policy/flask/access_vectors
@@ -393,6 +393,10 @@ class system
 	syslog_mod
 	syslog_console
 	module_request
+	halt
+	reboot
+	status
+	undefined
 }
 
 #
@@ -445,6 +449,8 @@ class capability2
 	mac_override	# unused by SELinux
 	mac_admin	# unused by SELinux
 	syslog
+	wake_alarm
+	epolwakeup
 }
 
 #
@@ -860,3 +866,20 @@ inherits database
 	implement
 	execute
 }
+
+class service
+{
+	start
+	stop
+	status
+	reload
+	kill
+	load
+	enable
+	disable
+}
+
+class proxy
+{
+	read
+}
diff --git a/policy/flask/security_classes b/policy/flask/security_classes
index 14a4799..db2e4a0 100644
--- a/policy/flask/security_classes
+++ b/policy/flask/security_classes
@@ -131,4 +131,11 @@ class db_view			# userspace
 class db_sequence		# userspace
 class db_language		# userspace
 
+# systemd services 
+class service 
+
+# gssd services 
+class proxy
+
+
 # FLASK
diff --git a/policy/global_booleans b/policy/global_booleans
index 66e85ea..d02654d 100644
--- a/policy/global_booleans
+++ b/policy/global_booleans
@@ -6,7 +6,7 @@
 
 ## <desc>
 ## <p>
-## Enabling secure mode disallows programs, such as
+## disallow programs, such as
 ## newrole, from transitioning to administrative
 ## user domains.
 ## </p>
diff --git a/policy/global_tunables b/policy/global_tunables
index 4705ab6..cc2b436 100644
--- a/policy/global_tunables
+++ b/policy/global_tunables
@@ -6,52 +6,59 @@
 
 ## <desc>
 ## <p>
+## Allow sysadm to debug or ptrace all processes.
+## </p>
+## </desc>
+gen_tunable(deny_ptrace, false)
+
+## <desc>
+## <p>
 ## Allow unconfined executables to make their heap memory executable.  Doing this is a really bad idea. Probably indicates a badly coded executable, but could indicate an attack. This executable should be reported in bugzilla
 ## </p>
 ## </desc>
-gen_tunable(allow_execheap,false)
+gen_tunable(selinuxuser_execheap,false)
 
 ## <desc>
 ## <p>
-## Allow unconfined executables to map a memory region as both executable and writable, this is dangerous and the executable should be reported in bugzilla")
+## Deny user domains applications to map a memory region as both executable and writable, this is dangerous and the executable should be reported in bugzilla
 ## </p>
 ## </desc>
-gen_tunable(allow_execmem,false)
+gen_tunable(deny_execmem,false)
 
 ## <desc>
 ## <p>
-## Allow all unconfined executables to use libraries requiring text relocation that are not labeled textrel_shlib_t")
+## Allow all unconfined executables to use libraries requiring text relocation that are not labeled textrel_shlib_t
 ## </p>
 ## </desc>
-gen_tunable(allow_execmod,false)
+gen_tunable(selinuxuser_execmod,false)
 
 ## <desc>
 ## <p>
-## Allow unconfined executables to make their stack executable.  This should never, ever be necessary. Probably indicates a badly coded executable, but could indicate an attack. This executable should be reported in bugzilla")
+## Allow unconfined executables to make their stack executable.  This should never, ever be necessary. Probably indicates a badly coded executable, but could indicate an attack. This executable should be reported in bugzilla
 ## </p>
 ## </desc>
-gen_tunable(allow_execstack,false)
+gen_tunable(selinuxuser_execstack,false)
 
 ## <desc>
 ## <p>
 ## Enable polyinstantiated directory support.
 ## </p>
 ## </desc>
-gen_tunable(allow_polyinstantiation,false)
+gen_tunable(polyinstantiation_enabled,false)
 
 ## <desc>
 ## <p>
 ## Allow system to run with NIS
 ## </p>
 ## </desc>
-gen_tunable(allow_ypbind,false)
+gen_tunable(nis_enabled,false)
 
 ## <desc>
 ## <p>
 ## Allow logging in and using the system from /dev/console.
 ## </p>
 ## </desc>
-gen_tunable(console_login,true)
+gen_tunable(login_console_enabled,true)
 
 ## <desc>
 ## <p>
@@ -68,15 +75,6 @@ gen_tunable(global_ssp,false)
 
 ## <desc>
 ## <p>
-## Allow email client to various content.
-## nfs, samba, removable devices, and user temp
-## files
-## </p>
-## </desc>
-gen_tunable(mail_read_content,false)
-
-## <desc>
-## <p>
 ## Allow any files/directories to be exported read/write via NFS.
 ## </p>
 ## </desc>
@@ -105,9 +103,17 @@ gen_tunable(use_samba_home_dirs,false)
 
 ## <desc>
 ## <p>
+## Support fusefs home directories
+## </p>
+## </desc>
+gen_tunable(use_fusefs_home_dirs,false)
+
+## <desc>
+## <p>
 ## Allow users to run TCP servers (bind to ports and accept connection from
 ## the same domain and outside users)  disabling this forces FTP passive mode
 ## and may change other protocols.
 ## </p>
 ## </desc>
 gen_tunable(user_tcp_server,false)
+
diff --git a/policy/mcs b/policy/mcs
index f477c7f..d80599b 100644
--- a/policy/mcs
+++ b/policy/mcs
@@ -1,4 +1,6 @@
 ifdef(`enable_mcs',`
+default_range dir_file_class_set target low;
+
 #
 # Define sensitivities 
 #
@@ -69,16 +71,32 @@ gen_levels(1,mcs_num_cats)
 #  - /proc/pid operations are not constrained.
 
 mlsconstrain file { read ioctl lock execute execute_no_trans }
-	(( h1 dom h2 ) or ( t1 == mcsreadall ) or ( t2 == domain ));
+	(( h1 dom h2 ) or ( t1 == mcsreadall ) or 
+	 (( t1 != mcsuntrustedproc ) and (t2 == domain)));
 
 mlsconstrain file { write setattr append unlink link rename }
-	(( h1 dom h2 ) or ( t1 == mcswriteall ) or ( t2 == domain ));
+	(( h1 dom h2 ) or ( t1 == mcswriteall ) or
+	 (( t1 != mcsuntrustedproc ) and (t2 == domain)));
 
 mlsconstrain dir { search read ioctl lock }
-	(( h1 dom h2 ) or ( t1 == mcsreadall ) or ( t2 == domain ));
+	(( h1 dom h2 ) or ( t1 == mcsreadall ) or 
+	 (( t1 != mcsuntrustedproc ) and (t2 == domain)));
 
 mlsconstrain dir { write setattr append unlink link rename add_name remove_name }
-	(( h1 dom h2 ) or ( t1 == mcswriteall ) or ( t2 == domain ));
+	(( h1 dom h2 ) or ( t1 == mcswriteall ) or
+	 (( t1 != mcsuntrustedproc ) and (t2 == domain)));
+
+mlsconstrain fifo_file { open }
+    (( h1 dom h2 ) or ( t1 == mcsreadall ) or
+     (( t1 != mcsuntrustedproc ) and ( t2 == domain )));
+
+mlsconstrain { lnk_file chr_file blk_file sock_file } { getattr read ioctl }
+    (( h1 dom h2 ) or ( t1 == mcsreadall ) or
+     (( t1 != mcsuntrustedproc ) and (t2 == domain)));
+
+mlsconstrain { lnk_file chr_file blk_file sock_file } { write setattr }
+    (( h1 dom h2 ) or ( t1 == mcswriteall ) or
+     (( t1 != mcsuntrustedproc ) and (t2 == domain)));
 
 # New filesystem object labels must be dominated by the relabeling subject
 # clearance, also the objects are single-level.
@@ -87,10 +105,13 @@ mlsconstrain file { create relabelto }
 
 # new file labels must be dominated by the relabeling subject clearance
 mlsconstrain { dir file lnk_file chr_file blk_file sock_file fifo_file } { relabelfrom }
-	( h1 dom h2 );
+	(( h1 dom h2 ) or ( t1 == mcswriteall ));
+
+mlsconstrain { file lnk_file fifo_file } { create relabelto }
+	( l2 eq h2 );
 
 mlsconstrain { dir file lnk_file chr_file blk_file sock_file fifo_file } { create relabelto }
-	(( h1 dom h2 ) and ( l2 eq h2 ));
+	( h1 dom h2 );
 
 mlsconstrain process { transition dyntransition }
 	(( h1 dom h2 ) or ( t1 == mcssetcats ));
@@ -101,6 +122,9 @@ mlsconstrain process { ptrace }
 mlsconstrain process { sigkill sigstop }
 	(( h1 dom h2 ) or ( t1 == mcskillall ));
 
+mlsconstrain process { signal }
+	(( h1 dom h2 ) or ( t1 != mcsuntrustedproc ));
+
 #
 # MCS policy for SELinux-enabled databases
 #
@@ -144,4 +168,21 @@ mlsconstrain db_language { drop getattr setattr relabelfrom execute }
 mlsconstrain db_blob { drop getattr setattr relabelfrom read write import export }
 	( h1 dom h2 );
 
+mlsconstrain { tcp_socket udp_socket rawip_socket } node_bind
+	(( h1 dom h2 ) or ( t1 == mcsnetwrite ));
+
+# the node recvfrom/sendto ops, the recvfrom permission is a "write" operation
+# because the subject in this particular case is the remote domain which is
+# writing data out the network node which is acting as the object
+mlsconstrain { node } { recvfrom }
+	((( l1 dom l2 ) and ( l1 domby h2 )) or
+	 ( t1 == mcsnetwrite ) or
+	 ( t1 == unlabeled_t ));
+mlsconstrain { node } { sendto }
+	((( l1 dom l2 ) and ( l1 domby h2 )) or
+	 ( t1 == mcsnetwrite ));
+
+mlsconstrain packet { send recv }
+	(( h1 dom h2 ) or ( t1 == mcsnetwrite ));
+
 ') dnl end enable_mcs
diff --git a/policy/modules/admin/bootloader.fc b/policy/modules/admin/bootloader.fc
index 7a6f06f..530d2df 100644
--- a/policy/modules/admin/bootloader.fc
+++ b/policy/modules/admin/bootloader.fc
@@ -1,9 +1,14 @@
-
+/etc/default/grub	--	gen_context(system_u:object_r:bootloader_etc_t,s0)
 /etc/lilo\.conf.*	--	gen_context(system_u:object_r:bootloader_etc_t,s0)
 /etc/yaboot\.conf.*	--	gen_context(system_u:object_r:bootloader_etc_t,s0)
+/etc/zipl\.conf.*	--	gen_context(system_u:object_r:bootloader_etc_t,s0)
 
-/sbin/grub		--	gen_context(system_u:object_r:bootloader_exec_t,s0)
+/sbin/grub.*		--	gen_context(system_u:object_r:bootloader_exec_t,s0)
 /sbin/lilo.*		--	gen_context(system_u:object_r:bootloader_exec_t,s0)
 /sbin/ybin.*		--	gen_context(system_u:object_r:bootloader_exec_t,s0)
+/sbin/zipl			--	gen_context(system_u:object_r:bootloader_exec_t,s0)
 
-/usr/sbin/grub		--	gen_context(system_u:object_r:bootloader_exec_t,s0)
+/usr/sbin/grub.*	--	gen_context(system_u:object_r:bootloader_exec_t,s0)
+/usr/sbin/lilo.*	--	gen_context(system_u:object_r:bootloader_exec_t,s0)
+/usr/sbin/ybin.*	--	gen_context(system_u:object_r:bootloader_exec_t,s0)
+/usr/sbin/zipl		--	gen_context(system_u:object_r:bootloader_exec_t,s0)
diff --git a/policy/modules/admin/bootloader.if b/policy/modules/admin/bootloader.if
index a778bb1..5e914db 100644
--- a/policy/modules/admin/bootloader.if
+++ b/policy/modules/admin/bootloader.if
@@ -19,6 +19,24 @@ interface(`bootloader_domtrans',`
 	domtrans_pattern($1, bootloader_exec_t, bootloader_t)
 ')
 
+######################################
+## <summary>
+##  Execute bootloader in the caller domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`bootloader_exec',`
+    gen_require(`
+        type bootloader_exec_t;
+    ')
+
+    can_exec($1, bootloader_exec_t)
+')
+
 ########################################
 ## <summary>
 ##	Execute bootloader interactively and do
@@ -38,11 +56,21 @@ interface(`bootloader_domtrans',`
 #
 interface(`bootloader_run',`
 	gen_require(`
-		attribute_role bootloader_roles;
+		type bootloader_t;
+		#attribute_role bootloader_roles;
 	')
 
+	#bootloader_domtrans($1)
+	#roleattribute $2 bootloader_roles;
+
 	bootloader_domtrans($1)
-	roleattribute $2 bootloader_roles;
+
+        role $2 types bootloader_t;
+
+        ifdef(`distro_redhat',`
+                # for mke2fs
+		mount_run(bootloader_t, $2)
+	')
 ')
 
 ########################################
@@ -100,7 +128,7 @@ interface(`bootloader_rw_tmp_files',`
 	')
 
 	files_search_tmp($1)
-	allow $1 bootloader_tmp_t:file rw_file_perms;
+	allow $1 bootloader_tmp_t:file rw_inherited_file_perms;
 ')
 
 ########################################
@@ -122,3 +150,22 @@ interface(`bootloader_create_runtime_file',`
 	allow $1 boot_runtime_t:file { create_file_perms rw_file_perms };
 	files_boot_filetrans($1, boot_runtime_t, file)
 ')
+
+########################################
+## <summary>
+##	Type transition files created in /etc
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`bootloader_filetrans_config',`
+	gen_require(`
+		type bootloader_etc_t;
+	')
+
+	files_etc_filetrans($1,bootloader_etc_t,file, "lilo.conf")
+	files_etc_filetrans($1,bootloader_etc_t,file, "yaboot.conf")
+')
diff --git a/policy/modules/admin/bootloader.te b/policy/modules/admin/bootloader.te
index ab0439a..e717a21 100644
--- a/policy/modules/admin/bootloader.te
+++ b/policy/modules/admin/bootloader.te
@@ -5,8 +5,8 @@ policy_module(bootloader, 1.13.0)
 # Declarations
 #
 
-attribute_role bootloader_roles;
-roleattribute system_r bootloader_roles;
+#attribute_role bootloader_roles;
+#roleattribute system_r bootloader_roles;
 
 #
 # boot_runtime_t is the type for /boot/kernel.h,
@@ -19,14 +19,15 @@ files_type(boot_runtime_t)
 type bootloader_t;
 type bootloader_exec_t;
 application_domain(bootloader_t, bootloader_exec_t)
-role bootloader_roles types bootloader_t;
+#role bootloader_roles types bootloader_t;
+role system_r types bootloader_t;
 
 #
 # bootloader_etc_t is the configuration file,
 # grub.conf, lilo.conf, etc.
 #
 type bootloader_etc_t alias etc_bootloader_t;
-files_type(bootloader_etc_t)
+files_config_file(bootloader_etc_t)
 
 #
 # The temp file is used for initrd creation;
@@ -41,7 +42,7 @@ dev_node(bootloader_tmp_t)
 # bootloader local policy
 #
 
-allow bootloader_t self:capability { dac_override dac_read_search fsetid sys_rawio sys_admin mknod chown };
+allow bootloader_t self:capability { dac_override dac_read_search fsetid sys_rawio sys_admin sys_chroot mknod chown };
 allow bootloader_t self:process { signal_perms execmem };
 allow bootloader_t self:fifo_file rw_fifo_file_perms;
 
@@ -81,6 +82,7 @@ dev_rw_nvram(bootloader_t)
 
 fs_getattr_xattr_fs(bootloader_t)
 fs_getattr_tmpfs(bootloader_t)
+fs_list_hugetlbfs(bootloader_t)
 fs_read_tmpfs_symlinks(bootloader_t)
 #Needed for ia64
 fs_manage_dos_files(bootloader_t)
@@ -89,6 +91,7 @@ mls_file_read_all_levels(bootloader_t)
 mls_file_write_all_levels(bootloader_t)
 
 term_getattr_all_ttys(bootloader_t)
+term_getattr_all_ptys(bootloader_t)
 term_dontaudit_manage_pty_dirs(bootloader_t)
 
 corecmd_exec_all_executables(bootloader_t)
@@ -98,12 +101,14 @@ domain_use_interactive_fds(bootloader_t)
 files_create_boot_dirs(bootloader_t)
 files_manage_boot_files(bootloader_t)
 files_manage_boot_symlinks(bootloader_t)
+files_manage_kernel_modules(bootloader_t)
 files_read_etc_files(bootloader_t)
 files_exec_etc_files(bootloader_t)
 files_read_usr_src_files(bootloader_t)
 files_read_usr_files(bootloader_t)
 files_read_var_files(bootloader_t)
 files_read_kernel_modules(bootloader_t)
+files_read_kernel_symbol_table(bootloader_t)
 # for nscd
 files_dontaudit_search_pids(bootloader_t)
 # for blkid.tab
@@ -111,6 +116,7 @@ files_manage_etc_runtime_files(bootloader_t)
 files_etc_filetrans_etc_runtime(bootloader_t, file)
 files_dontaudit_search_home(bootloader_t)
 
+
 init_getattr_initctl(bootloader_t)
 init_use_script_ptys(bootloader_t)
 init_use_script_fds(bootloader_t)
@@ -118,8 +124,10 @@ init_rw_script_pipes(bootloader_t)
 
 libs_read_lib_files(bootloader_t)
 libs_exec_lib_files(bootloader_t)
+libs_exec_ld_so(bootloader_t)
+
+auth_use_nsswitch(bootloader_t)
 
-logging_send_syslog_msg(bootloader_t)
 logging_rw_generic_logs(bootloader_t)
 
 miscfiles_read_localization(bootloader_t)
@@ -130,7 +138,8 @@ seutil_read_bin_policy(bootloader_t)
 seutil_read_loadpolicy(bootloader_t)
 seutil_dontaudit_search_config(bootloader_t)
 
-userdom_use_user_terminals(bootloader_t)
+userdom_getattr_user_tmpfs_files(bootloader_t)
+userdom_use_inherited_user_terminals(bootloader_t)
 userdom_dontaudit_search_user_home_dirs(bootloader_t)
 
 ifdef(`distro_debian',`
@@ -166,7 +175,8 @@ ifdef(`distro_redhat',`
 	files_manage_isid_type_chr_files(bootloader_t)
 
 	# for mke2fs
-	mount_run(bootloader_t, bootloader_roles)
+	#mount_run(bootloader_t, bootloader_roles)
+	mount_domtrans(bootloader_t)
 
 	optional_policy(`
 		unconfined_domain(bootloader_t)
@@ -174,6 +184,10 @@ ifdef(`distro_redhat',`
 ')
 
 optional_policy(`
+	devicekit_dontaudit_read_pid_files(bootloader_t)
+')
+
+optional_policy(`
 	fstools_exec(bootloader_t)
 ')
 
@@ -183,6 +197,10 @@ optional_policy(`
 ')
 
 optional_policy(`
+	gpm_getattr_gpmctl(bootloader_t)
+')
+
+optional_policy(`
 	kudzu_domtrans(bootloader_t)
 ')
 
@@ -195,15 +213,13 @@ optional_policy(`
 
 optional_policy(`
 	modutils_exec_insmod(bootloader_t)
+	modutils_list_module_config(bootloader_t)
 	modutils_read_module_deps(bootloader_t)
 	modutils_read_module_config(bootloader_t)
 	modutils_exec_insmod(bootloader_t)
 	modutils_exec_depmod(bootloader_t)
 	modutils_exec_update_mods(bootloader_t)
-')
-
-optional_policy(`
-	nscd_socket_use(bootloader_t)
+	modutils_domtrans_insmod_uncond(bootloader_t)
 ')
 
 optional_policy(`
diff --git a/policy/modules/admin/consoletype.fc b/policy/modules/admin/consoletype.fc
index b7f053b..5d4fc31 100644
--- a/policy/modules/admin/consoletype.fc
+++ b/policy/modules/admin/consoletype.fc
@@ -1,2 +1,4 @@
 
 /sbin/consoletype	--	gen_context(system_u:object_r:consoletype_exec_t,s0)
+
+/usr/sbin/consoletype	--	gen_context(system_u:object_r:consoletype_exec_t,s0)
diff --git a/policy/modules/admin/consoletype.if b/policy/modules/admin/consoletype.if
index 0f57d3b..655d07f 100644
--- a/policy/modules/admin/consoletype.if
+++ b/policy/modules/admin/consoletype.if
@@ -19,10 +19,6 @@ interface(`consoletype_domtrans',`
 
 	corecmd_search_bin($1)
 	domtrans_pattern($1, consoletype_exec_t, consoletype_t)
-
-	ifdef(`hide_broken_symptoms', `
-		dontaudit consoletype_t $1:socket_class_set { read write };
-	')
 ')
 
 ########################################
diff --git a/policy/modules/admin/consoletype.te b/policy/modules/admin/consoletype.te
index cd5e005..247259a 100644
--- a/policy/modules/admin/consoletype.te
+++ b/policy/modules/admin/consoletype.te
@@ -7,8 +7,8 @@ policy_module(consoletype, 1.10.0)
 
 type consoletype_t;
 type consoletype_exec_t;
-init_domain(consoletype_t, consoletype_exec_t)
-init_system_domain(consoletype_t, consoletype_exec_t)
+application_domain(consoletype_t, consoletype_exec_t)
+role system_r types consoletype_t;
 
 ########################################
 #
@@ -47,14 +47,16 @@ fs_list_inotifyfs(consoletype_t)
 mls_file_read_all_levels(consoletype_t)
 mls_file_write_all_levels(consoletype_t)
 
-term_use_all_terms(consoletype_t)
+term_use_all_inherited_terms(consoletype_t)
+term_use_ptmx(consoletype_t)
 
 init_use_fds(consoletype_t)
 init_use_script_ptys(consoletype_t)
 init_use_script_fds(consoletype_t)
 init_rw_script_pipes(consoletype_t)
+init_rw_inherited_script_tmp_files(consoletype_t)
 
-userdom_use_user_terminals(consoletype_t)
+userdom_use_inherited_user_terminals(consoletype_t)
 
 ifdef(`distro_redhat',`
 	fs_rw_tmpfs_chr_files(consoletype_t)
@@ -79,16 +81,14 @@ optional_policy(`
 ')
 
 optional_policy(`
-	files_read_etc_files(consoletype_t)
-	firstboot_use_fds(consoletype_t)
-	firstboot_rw_pipes(consoletype_t)
+	devicekit_dontaudit_read_pid_files(consoletype_t)
+	devicekit_dontaudit_rw_log(consoletype_t)
 ')
 
 optional_policy(`
-	hal_dontaudit_use_fds(consoletype_t)
-	hal_dontaudit_rw_pipes(consoletype_t)
-	hal_dontaudit_rw_dgram_sockets(consoletype_t)
-	hal_dontaudit_write_log(consoletype_t)
+	files_read_etc_files(consoletype_t)
+	firstboot_use_fds(consoletype_t)
+	firstboot_rw_pipes(consoletype_t)
 ')
 
 optional_policy(`
@@ -114,6 +114,7 @@ optional_policy(`
 
 optional_policy(`
 	userdom_use_unpriv_users_fds(consoletype_t)
+	userdom_dontaudit_rw_dgram_socket(consoletype_t)
 ')
 
 optional_policy(`
diff --git a/policy/modules/admin/dmesg.fc b/policy/modules/admin/dmesg.fc
index d6cc2d9..0685b19 100644
--- a/policy/modules/admin/dmesg.fc
+++ b/policy/modules/admin/dmesg.fc
@@ -1,2 +1,4 @@
 
 /bin/dmesg		--		gen_context(system_u:object_r:dmesg_exec_t,s0)
+
+/usr/bin/dmesg		--		gen_context(system_u:object_r:dmesg_exec_t,s0)
diff --git a/policy/modules/admin/dmesg.te b/policy/modules/admin/dmesg.te
index 72bc6d8..1f55eba 100644
--- a/policy/modules/admin/dmesg.te
+++ b/policy/modules/admin/dmesg.te
@@ -19,6 +19,7 @@ dontaudit dmesg_t self:capability sys_tty_config;
 
 allow dmesg_t self:process signal_perms;
 
+kernel_read_system_state(dmesg_t)
 kernel_read_kernel_sysctls(dmesg_t)
 kernel_read_ring_buffer(dmesg_t)
 kernel_clear_ring_buffer(dmesg_t)
@@ -47,7 +48,11 @@ logging_write_generic_logs(dmesg_t)
 miscfiles_read_localization(dmesg_t)
 
 userdom_dontaudit_use_unpriv_user_fds(dmesg_t)
-userdom_use_user_terminals(dmesg_t)
+userdom_use_inherited_user_terminals(dmesg_t)
+
+optional_policy(`
+	abrt_manage_pid_files(dmesg_t)
+')
 
 optional_policy(`
 	seutil_sigchld_newrole(dmesg_t)
diff --git a/policy/modules/admin/netutils.fc b/policy/modules/admin/netutils.fc
index 407078f..56cc947 100644
--- a/policy/modules/admin/netutils.fc
+++ b/policy/modules/admin/netutils.fc
@@ -1,15 +1,20 @@
 /bin/ping.* 		--	gen_context(system_u:object_r:ping_exec_t,s0)
-/bin/tracepath.*		--	gen_context(system_u:object_r:traceroute_exec_t,s0)
+/bin/tracepath.*	--	gen_context(system_u:object_r:traceroute_exec_t,s0)
 /bin/traceroute.*	--	gen_context(system_u:object_r:traceroute_exec_t,s0)
 
 /sbin/arping		--	gen_context(system_u:object_r:netutils_exec_t,s0)
 
 /usr/bin/lft		--	gen_context(system_u:object_r:traceroute_exec_t,s0)
+/usr/bin/mtr		--	gen_context(system_u:object_r:traceroute_exec_t,s0)
 /usr/bin/nmap		--	gen_context(system_u:object_r:traceroute_exec_t,s0)
+/usr/bin/ping.* 	--	gen_context(system_u:object_r:ping_exec_t,s0)
+/usr/bin/tracepath.*	--	gen_context(system_u:object_r:traceroute_exec_t,s0)
 /usr/bin/traceroute.*	--	gen_context(system_u:object_r:traceroute_exec_t,s0)
 
-/usr/sbin/fping 	--	gen_context(system_u:object_r:ping_exec_t,s0)
+/usr/sbin/arping	--	gen_context(system_u:object_r:netutils_exec_t,s0)
+/usr/sbin/fping.* 	--	gen_context(system_u:object_r:ping_exec_t,s0)
 /usr/sbin/traceroute.*	--	gen_context(system_u:object_r:traceroute_exec_t,s0)
 /usr/sbin/hping2	--	gen_context(system_u:object_r:ping_exec_t,s0)
+/usr/sbin/mtr		--	gen_context(system_u:object_r:traceroute_exec_t,s0)
 /usr/sbin/send_arp	--	gen_context(system_u:object_r:ping_exec_t,s0)
 /usr/sbin/tcpdump	--	gen_context(system_u:object_r:netutils_exec_t,s0)
diff --git a/policy/modules/admin/netutils.if b/policy/modules/admin/netutils.if
index c6ca761..46e0767 100644
--- a/policy/modules/admin/netutils.if
+++ b/policy/modules/admin/netutils.if
@@ -42,6 +42,7 @@ interface(`netutils_run',`
 	')
 
 	netutils_domtrans($1)
+	allow $1 netutils_t:process { signal sigkill };
 	role $2 types netutils_t;
 ')
 
@@ -161,6 +162,7 @@ interface(`netutils_run_ping',`
 
 	netutils_domtrans_ping($1)
 	role $2 types ping_t;
+	allow $1 ping_t:process { signal sigkill };
 ')
 
 ########################################
@@ -190,6 +192,7 @@ interface(`netutils_run_ping_cond',`
 
 	if ( user_ping ) {
 		netutils_domtrans_ping($1)
+		allow $1 ping_t:process { signal sigkill };
 	}
 ')
 
@@ -254,6 +257,7 @@ interface(`netutils_run_traceroute',`
 	')
 
 	netutils_domtrans_traceroute($1)
+	allow $1 traceroute_t:process { signal sigkill };
 	role $2 types traceroute_t;
 ')
 
@@ -284,6 +288,7 @@ interface(`netutils_run_traceroute_cond',`
 
 	if( user_ping ) {
 		netutils_domtrans_traceroute($1)
+		allow $1 traceroute_t:process { signal sigkill };
 	}
 ')
 
diff --git a/policy/modules/admin/netutils.te b/policy/modules/admin/netutils.te
index e0791b9..9f49d01 100644
--- a/policy/modules/admin/netutils.te
+++ b/policy/modules/admin/netutils.te
@@ -48,6 +48,8 @@ files_tmp_filetrans(netutils_t, netutils_tmp_t, { file dir })
 
 kernel_search_proc(netutils_t)
 kernel_read_all_sysctls(netutils_t)
+kernel_read_network_state(netutils_t)
+kernel_request_load_module(netutils_t)
 
 corenet_all_recvfrom_unlabeled(netutils_t)
 corenet_all_recvfrom_netlabel(netutils_t)
@@ -64,6 +66,9 @@ corenet_sendrecv_all_client_packets(netutils_t)
 corenet_udp_bind_generic_node(netutils_t)
 
 dev_read_sysfs(netutils_t)
+dev_read_usbmon_dev(netutils_t)
+dev_write_usbmon_dev(netutils_t)
+dev_rw_generic_usb_dev(netutils_t)
 
 fs_getattr_xattr_fs(netutils_t)
 
@@ -83,7 +88,7 @@ logging_send_syslog_msg(netutils_t)
 miscfiles_read_localization(netutils_t)
 
 term_dontaudit_use_console(netutils_t)
-userdom_use_user_terminals(netutils_t)
+userdom_use_inherited_user_terminals(netutils_t)
 userdom_use_all_users_fds(netutils_t)
 
 optional_policy(`
@@ -104,6 +109,8 @@ optional_policy(`
 #
 
 allow ping_t self:capability { setuid net_raw };
+allow ping_t self:process setcap;
+
 dontaudit ping_t self:capability sys_tty_config;
 allow ping_t self:tcp_socket create_socket_perms;
 allow ping_t self:rawip_socket { create ioctl read write bind getopt setopt };
@@ -134,8 +141,6 @@ logging_send_syslog_msg(ping_t)
 
 miscfiles_read_localization(ping_t)
 
-userdom_use_user_terminals(ping_t)
-
 ifdef(`hide_broken_symptoms',`
 	init_dontaudit_use_fds(ping_t)
 
@@ -145,11 +150,25 @@ ifdef(`hide_broken_symptoms',`
 	')
 ')
 
+term_use_all_inherited_terms(ping_t)
+
+tunable_policy(`user_ping',`
+	term_use_all_ttys(ping_t)
+	term_use_all_ptys(ping_t)
+',`
+	term_dontaudit_use_all_ttys(ping_t)
+	term_dontaudit_use_all_ptys(ping_t)
+')
+
 optional_policy(`
 	munin_append_log(ping_t)
 ')
 
 optional_policy(`
+	nagios_rw_inerited_tmp_files(ping_t)
+')
+
+optional_policy(`
 	pcmcia_use_cardmgr_fds(ping_t)
 ')
 
@@ -157,6 +176,10 @@ optional_policy(`
 	hotplug_use_fds(ping_t)
 ')
 
+optional_policy(`
+	zabbix_read_tmp(ping_t)
+')
+
 ########################################
 #
 # Traceroute local policy
@@ -194,6 +217,7 @@ fs_dontaudit_getattr_xattr_fs(traceroute_t)
 domain_use_interactive_fds(traceroute_t)
 
 files_read_etc_files(traceroute_t)
+files_read_usr_files(traceroute_t)
 files_dontaudit_search_var(traceroute_t)
 
 init_use_fds(traceroute_t)
@@ -204,9 +228,16 @@ logging_send_syslog_msg(traceroute_t)
 
 miscfiles_read_localization(traceroute_t)
 
-userdom_use_user_terminals(traceroute_t)
-
 #rules needed for nmap
 dev_read_rand(traceroute_t)
 dev_read_urand(traceroute_t)
-files_read_usr_files(traceroute_t)
+
+term_use_all_inherited_terms(traceroute_t)
+
+tunable_policy(`user_ping',`
+	term_use_all_ttys(traceroute_t)
+	term_use_all_ptys(traceroute_t)
+',`
+	term_dontaudit_use_all_ttys(traceroute_t)
+	term_dontaudit_use_all_ptys(traceroute_t)
+')
diff --git a/policy/modules/admin/su.fc b/policy/modules/admin/su.fc
index 688abc2..3d89250 100644
--- a/policy/modules/admin/su.fc
+++ b/policy/modules/admin/su.fc
@@ -3,3 +3,4 @@
 
 /usr/(local/)?bin/ksu	--	gen_context(system_u:object_r:su_exec_t,s0)
 /usr/bin/kdesu		--	gen_context(system_u:object_r:su_exec_t,s0)
+/usr/bin/su		--	gen_context(system_u:object_r:su_exec_t,s0)
diff --git a/policy/modules/admin/su.if b/policy/modules/admin/su.if
index 03ec5ca..336ad27 100644
--- a/policy/modules/admin/su.if
+++ b/policy/modules/admin/su.if
@@ -119,11 +119,6 @@ template(`su_restricted_domain_template', `
 		userdom_spec_domtrans_unpriv_users($1_su_t)
 	')
 
-	ifdef(`hide_broken_symptoms',`
-		# dontaudit leaked sockets from parent
-		dontaudit $1_su_t $2:socket_class_set { read write };
-	')
-
 	optional_policy(`
 		cron_read_pipes($1_su_t)
 	')
@@ -208,7 +203,7 @@ template(`su_role_template',`
 
 	auth_domtrans_chk_passwd($1_su_t)
 	auth_dontaudit_read_shadow($1_su_t)
-	auth_use_nsswitch($1_su_t)
+	auth_use_pam($1_su_t)
 	auth_rw_faillog($1_su_t)
 
 	corecmd_search_bin($1_su_t)
@@ -232,6 +227,7 @@ template(`su_role_template',`
 
 	userdom_use_user_terminals($1_su_t)
 	userdom_search_user_home_dirs($1_su_t)
+	userdom_search_admin_dir($1_su_t)
 
 	ifdef(`distro_redhat',`
 		# RHEL5 and possibly newer releases incl. Fedora
@@ -277,12 +273,7 @@ template(`su_role_template',`
 		')
 	')
 
-	ifdef(`hide_broken_symptoms',`
-		# dontaudit leaked sockets from parent
-		dontaudit $1_su_t $3:socket_class_set { read write };
-	')
-
-	tunable_policy(`allow_polyinstantiation',`
+	tunable_policy(`polyinstantiation_enabled',`
 		fs_mount_xattr_fs($1_su_t)
 		fs_unmount_xattr_fs($1_su_t)
 	')
diff --git a/policy/modules/admin/sudo.fc b/policy/modules/admin/sudo.fc
index 7bddc02..2b59ed0 100644
--- a/policy/modules/admin/sudo.fc
+++ b/policy/modules/admin/sudo.fc
@@ -1,2 +1,4 @@
 
 /usr/bin/sudo(edit)?	--	gen_context(system_u:object_r:sudo_exec_t,s0)
+
+/var/db/sudo(/.*)?		gen_context(system_u:object_r:sudo_db_t,s0)
diff --git a/policy/modules/admin/sudo.if b/policy/modules/admin/sudo.if
index 0960199..6c2e521 100644
--- a/policy/modules/admin/sudo.if
+++ b/policy/modules/admin/sudo.if
@@ -32,6 +32,7 @@ template(`sudo_role_template',`
 
 	gen_require(`
 		type sudo_exec_t;
+		type sudo_db_t;
 		attribute sudodomain;
 	')
 
@@ -45,27 +46,13 @@ template(`sudo_role_template',`
 	domain_interactive_fd($1_sudo_t)
 	domain_role_change_exemption($1_sudo_t)
 	role $2 types $1_sudo_t;
+	userdom_home_manager($1_sudo_t)
 
-	##############################
-	#
-	# Local Policy
-	#
+	type $1_sudo_tmp_t;
+	files_tmp_file($1_sudo_tmp_t)
 
-	# Use capabilities.
-	allow $1_sudo_t self:capability { fowner setuid setgid dac_override sys_nice sys_resource };
-	allow $1_sudo_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
-	allow $1_sudo_t self:process { setexec setrlimit };
-	allow $1_sudo_t self:fd use;
-	allow $1_sudo_t self:fifo_file rw_fifo_file_perms;
-	allow $1_sudo_t self:shm create_shm_perms;
-	allow $1_sudo_t self:sem create_sem_perms;
-	allow $1_sudo_t self:msgq create_msgq_perms;
-	allow $1_sudo_t self:msg { send receive };
-	allow $1_sudo_t self:unix_dgram_socket create_socket_perms;
-	allow $1_sudo_t self:unix_stream_socket create_stream_socket_perms;
-	allow $1_sudo_t self:unix_dgram_socket sendto;
-	allow $1_sudo_t self:unix_stream_socket connectto;
-	allow $1_sudo_t self:key manage_key_perms;
+	allow $1_sudo_t $1_sudo_tmp_t:file manage_file_perms;
+	files_tmp_filetrans($1_sudo_t, $1_sudo_tmp_t, file)
 
 	allow $1_sudo_t $3:key search;
 
@@ -75,88 +62,25 @@ template(`sudo_role_template',`
 	# By default, revert to the calling domain when a shell is executed.
 	corecmd_shell_domtrans($1_sudo_t, $3)
 	corecmd_bin_domtrans($1_sudo_t, $3)
+	userdom_domtrans_user_home($1_sudo_t, $3)
+	userdom_domtrans_user_tmp($1_sudo_t, $3)
+	domain_entry_file($3, sudo_exec_t)
+	domain_auto_transition_pattern($1_sudo_t, sudo_exec_t, $3)
+
 	allow $3 $1_sudo_t:fd use;
 	allow $3 $1_sudo_t:fifo_file rw_fifo_file_perms;
 	allow $3 $1_sudo_t:process signal_perms;
 
-	kernel_read_kernel_sysctls($1_sudo_t)
-	kernel_read_system_state($1_sudo_t)
-	kernel_link_key($1_sudo_t)
-
-	corecmd_read_bin_symlinks($1_sudo_t)
-	corecmd_exec_all_executables($1_sudo_t)
-
-	dev_getattr_fs($1_sudo_t)
-	dev_read_urand($1_sudo_t)
-	dev_rw_generic_usb_dev($1_sudo_t)
-	dev_read_sysfs($1_sudo_t)
-
-	domain_use_interactive_fds($1_sudo_t)
-	domain_sigchld_interactive_fds($1_sudo_t)
-	domain_getattr_all_entry_files($1_sudo_t)
-
-	files_read_etc_files($1_sudo_t)
-	files_read_var_files($1_sudo_t)
-	files_read_usr_symlinks($1_sudo_t)
-	files_getattr_usr_files($1_sudo_t)
-	# for some PAM modules and for cwd
-	files_dontaudit_search_home($1_sudo_t)
-	files_list_tmp($1_sudo_t)
-
-	fs_search_auto_mountpoints($1_sudo_t)
-	fs_getattr_xattr_fs($1_sudo_t)
-
-	selinux_validate_context($1_sudo_t)
-	selinux_compute_relabel_context($1_sudo_t)
-
-	term_getattr_pty_fs($1_sudo_t)
-	term_relabel_all_ttys($1_sudo_t)
-	term_relabel_all_ptys($1_sudo_t)
-
 	auth_run_chk_passwd($1_sudo_t, $2)
-	# sudo stores a token in the pam_pid directory
-	auth_manage_pam_pid($1_sudo_t)
 	auth_use_nsswitch($1_sudo_t)
 
-	init_rw_utmp($1_sudo_t)
-
-	logging_send_audit_msgs($1_sudo_t)
-	logging_send_syslog_msg($1_sudo_t)
-
-	miscfiles_read_localization($1_sudo_t)
-
-	seutil_search_default_contexts($1_sudo_t)
-	seutil_libselinux_linked($1_sudo_t)
-
-	userdom_spec_domtrans_all_users($1_sudo_t)
-	userdom_create_all_users_keys($1_sudo_t)
-	userdom_manage_user_home_content_files($1_sudo_t)
-	userdom_manage_user_home_content_symlinks($1_sudo_t)
-	userdom_manage_user_tmp_files($1_sudo_t)
-	userdom_manage_user_tmp_symlinks($1_sudo_t)
-	userdom_use_user_terminals($1_sudo_t)
-	# for some PAM modules and for cwd
-	userdom_dontaudit_search_user_home_content($1_sudo_t)
-	userdom_dontaudit_search_user_home_dirs($1_sudo_t)
-
-	ifdef(`hide_broken_symptoms', `
-		dontaudit $1_sudo_t $3:socket_class_set { read write };
-	')
-
-	tunable_policy(`use_nfs_home_dirs',`
-		fs_manage_nfs_files($1_sudo_t)
-	')
-
-	tunable_policy(`use_samba_home_dirs',`
-		fs_manage_cifs_files($1_sudo_t)
-	')
-
 	optional_policy(`
-		dbus_system_bus_client($1_sudo_t)
+		mta_role($2, $1_sudo_t)
 	')
 
 	optional_policy(`
-		fprintd_dbus_chat($1_sudo_t)
+    	kerberos_manage_host_rcache($1_sudo_t)
+    	kerberos_read_config($1_sudo_t)
 	')
 
 ')
@@ -178,3 +102,22 @@ interface(`sudo_sigchld',`
 
 	allow $1 sudodomain:process sigchld;
 ')
+
+#######################################
+## <summary>
+##  Allow execute sudo in called domain.
+##  This interfaces is added for nova-stack policy.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`sudo_exec',`
+    gen_require(`
+        type sudo_exec_t;
+    ')
+
+	can_exec($1, sudo_exec_t)
+')
diff --git a/policy/modules/admin/sudo.te b/policy/modules/admin/sudo.te
index 1bd7d84..4f57935 100644
--- a/policy/modules/admin/sudo.te
+++ b/policy/modules/admin/sudo.te
@@ -7,3 +7,104 @@ attribute sudodomain;
 
 type sudo_exec_t;
 application_executable_file(sudo_exec_t)
+
+type sudo_db_t;
+files_type(sudo_db_t)
+mls_trusted_object(sudo_db_t)
+
+manage_dirs_pattern(sudodomain, sudo_db_t, sudo_db_t)
+manage_files_pattern(sudodomain, sudo_db_t, sudo_db_t)
+
+##############################
+#
+# Local Policy
+#
+
+# Use capabilities.
+allow sudodomain self:capability { chown fowner setuid setgid dac_override sys_nice sys_resource };
+allow sudodomain self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
+allow sudodomain self:process { setexec setrlimit };
+allow sudodomain self:fd use;
+allow sudodomain self:fifo_file rw_fifo_file_perms;
+allow sudodomain self:shm create_shm_perms;
+allow sudodomain self:sem create_sem_perms;
+allow sudodomain self:msgq create_msgq_perms;
+allow sudodomain self:msg { send receive };
+allow sudodomain self:unix_dgram_socket create_socket_perms;
+allow sudodomain self:unix_stream_socket create_stream_socket_perms;
+allow sudodomain self:unix_dgram_socket sendto;
+allow sudodomain self:unix_stream_socket connectto;
+allow sudodomain self:key manage_key_perms;
+
+kernel_read_kernel_sysctls(sudodomain)
+kernel_read_system_state(sudodomain)
+kernel_link_key(sudodomain)
+
+corecmd_read_bin_symlinks(sudodomain)
+corecmd_exec_all_executables(sudodomain)
+
+dev_getattr_fs(sudodomain)
+dev_read_urand(sudodomain)
+dev_rw_generic_usb_dev(sudodomain)
+dev_read_sysfs(sudodomain)
+dev_dontaudit_getattr_all(sudodomain)
+
+domain_use_interactive_fds(sudodomain)
+domain_sigchld_interactive_fds(sudodomain)
+domain_getattr_all_entry_files(sudodomain)
+
+files_read_etc_files(sudodomain)
+files_read_var_files(sudodomain)
+files_read_usr_files(sudodomain)
+# for some PAM modules and for cwd
+files_dontaudit_search_home(sudodomain)
+files_list_tmp(sudodomain)
+
+fs_search_auto_mountpoints(sudodomain)
+fs_getattr_all_fs(sudodomain)
+
+selinux_validate_context(sudodomain)
+selinux_compute_relabel_context(sudodomain)
+
+term_getattr_pty_fs(sudodomain)
+term_relabel_all_ttys(sudodomain)
+term_relabel_all_ptys(sudodomain)
+term_getattr_pty_fs(sudodomain)
+
+#auth_run_chk_passwd(sudodomain)
+# sudo stores a token in the pam_pid directory
+auth_manage_pam_pid(sudodomain)
+#auth_use_nsswitch(sudodomain)
+
+application_signal(sudodomain)
+
+init_rw_utmp(sudodomain)
+
+logging_send_audit_msgs(sudodomain)
+logging_send_syslog_msg(sudodomain)
+logging_set_audit_parameters(sudodomain)
+
+miscfiles_read_localization(sudodomain)
+
+seutil_read_default_contexts(sudodomain)
+seutil_libselinux_linked(sudodomain)
+
+userdom_spec_domtrans_all_users(sudodomain)
+userdom_manage_user_home_content_files(sudodomain)
+userdom_manage_user_home_content_symlinks(sudodomain)
+userdom_manage_user_tmp_files(sudodomain)
+userdom_manage_user_tmp_symlinks(sudodomain)
+userdom_use_user_terminals(sudodomain)
+userdom_signal_all_users(sudodomain)
+# for some PAM modules and for cwd
+userdom_search_user_home_content(sudodomain)
+userdom_search_admin_dir(sudodomain)
+userdom_manage_all_users_keys(sudodomain)
+
+optional_policy(`
+	dbus_system_bus_client(sudodomain)
+')
+
+optional_policy(`
+	fprintd_dbus_chat(sudodomain)
+')
diff --git a/policy/modules/admin/usermanage.if b/policy/modules/admin/usermanage.if
index 98b8b2d..da75471 100644
--- a/policy/modules/admin/usermanage.if
+++ b/policy/modules/admin/usermanage.if
@@ -17,10 +17,6 @@ interface(`usermanage_domtrans_chfn',`
 
 	corecmd_search_bin($1)
 	domtrans_pattern($1, chfn_exec_t, chfn_t)
-
-	ifdef(`hide_broken_symptoms',`
-		dontaudit chfn_t $1:socket_class_set { read write };
-	')
 ')
 
 ########################################
@@ -41,11 +37,16 @@ interface(`usermanage_domtrans_chfn',`
 #
 interface(`usermanage_run_chfn',`
 	gen_require(`
-		attribute_role chfn_roles;
+		#attribute_role chfn_roles;
+		type chfn_t;
 	')
 
+	#usermanage_domtrans_chfn($1)
+	#roleattribute $2 chfn_roles;
+
 	usermanage_domtrans_chfn($1)
-	roleattribute $2 chfn_roles;
+        role $2 types chfn_t;
+
 ')
 
 ########################################
@@ -65,10 +66,25 @@ interface(`usermanage_domtrans_groupadd',`
 
 	corecmd_search_bin($1)
 	domtrans_pattern($1, groupadd_exec_t, groupadd_t)
+')
 
-	ifdef(`hide_broken_symptoms',`
-		dontaudit groupadd_t $1:socket_class_set { read write };
+########################################
+## <summary>
+##	Check access to the groupadd executable.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`usermanage_access_check_groupadd',`
+	gen_require(`
+		type groupadd_exec_t;
 	')
+
+	corecmd_search_bin($1)
+	allow $1 groupadd_exec_t:file { getattr_file_perms execute };
 ')
 
 ########################################
@@ -90,11 +106,19 @@ interface(`usermanage_domtrans_groupadd',`
 #
 interface(`usermanage_run_groupadd',`
 	gen_require(`
-		attribute_role groupadd_roles;
+		type groupadd_t;
+		#attribute_role groupadd_roles;
 	')
 
+	#usermanage_domtrans_groupadd($1)
+	#roleattribute $2 groupadd_roles;
 	usermanage_domtrans_groupadd($1)
-	roleattribute $2 groupadd_roles;
+        role $2 types groupadd_t;
+
+        optional_policy(`
+                nscd_run(groupadd_t, $2)
+        ')
+
 ')
 
 ########################################
@@ -114,10 +138,6 @@ interface(`usermanage_domtrans_passwd',`
 
 	corecmd_search_bin($1)
 	domtrans_pattern($1, passwd_exec_t, passwd_t)
-
-	ifdef(`hide_broken_symptoms',`
-		dontaudit passwd_t $1:socket_class_set { read write };
-	')
 ')
 
 ########################################
@@ -156,11 +176,36 @@ interface(`usermanage_kill_passwd',`
 #
 interface(`usermanage_run_passwd',`
 	gen_require(`
-		attribute_role passwd_roles;
+		type passwd_t;
+		#attribute_role passwd_roles;
 	')
 
+	#usermanage_domtrans_passwd($1)
+	#roleattribute $2 passwd_roles;
+
 	usermanage_domtrans_passwd($1)
-	roleattribute $2 passwd_roles;
+        role $2 types passwd_t;
+        auth_run_chk_passwd(passwd_t, $2)
+
+')
+
+########################################
+## <summary>
+##	Check access to the passwd executable
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`usermanage_access_check_passwd',`
+	gen_require(`
+		type passwd_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	allow $1 passwd_exec_t:file { getattr_file_perms execute };
 ')
 
 ########################################
@@ -203,11 +248,20 @@ interface(`usermanage_domtrans_admin_passwd',`
 #
 interface(`usermanage_run_admin_passwd',`
 	gen_require(`
-		attribute_role sysadm_passwd_roles;
+		type sysadm_passwd_t;
+		#attribute_role sysadm_passwd_roles;
 	')
 
+	#usermanage_domtrans_admin_passwd($1)
+	#roleattribute $2 sysadm_passwd_roles;
+
 	usermanage_domtrans_admin_passwd($1)
-	roleattribute $2 sysadm_passwd_roles;
+        role $2 types sysadm_passwd_t;
+
+        optional_policy(`
+                nscd_run(sysadm_passwd_t, $2)
+        ')
+
 ')
 
 ########################################
@@ -245,10 +299,6 @@ interface(`usermanage_domtrans_useradd',`
 
 	corecmd_search_bin($1)
 	domtrans_pattern($1, useradd_exec_t, useradd_t)
-
-	ifdef(`hide_broken_symptoms',`
-		dontaudit useradd_t $1:socket_class_set { read write };
-	')
 ')
 
 ########################################
@@ -270,11 +320,39 @@ interface(`usermanage_domtrans_useradd',`
 #
 interface(`usermanage_run_useradd',`
 	gen_require(`
-		attribute_role useradd_roles;
+		#attribute_role useradd_roles;
+		type sysadm_passwd_t;
 	')
 
-	usermanage_domtrans_useradd($1)
-	roleattribute $2 useradd_roles;
+	#usermanage_domtrans_useradd($1)
+	#roleattribute $2 useradd_roles;
+
+	usermanage_domtrans_admin_passwd($1)
+        role $2 types sysadm_passwd_t;
+
+        optional_policy(`
+                nscd_run(sysadm_passwd_t, $2)
+        ')
+
+')
+
+########################################
+## <summary>
+##	Check access to the useradd executable.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`usermanage_access_check_useradd',`
+	gen_require(`
+		type useradd_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	allow $1 useradd_exec_t:file { getattr_file_perms execute };
 ')
 
 ########################################
diff --git a/policy/modules/admin/usermanage.te b/policy/modules/admin/usermanage.te
index 81b6608..396909c 100644
--- a/policy/modules/admin/usermanage.te
+++ b/policy/modules/admin/usermanage.te
@@ -5,18 +5,18 @@ policy_module(usermanage, 1.17.3)
 # Declarations
 #
 
-attribute_role chfn_roles;
-role system_r types chfn_t;
+#attribute_role chfn_roles;
+#role system_r types chfn_t;
 
-attribute_role groupadd_roles;
+#attribute_role groupadd_roles;
 
-attribute_role passwd_roles;
-roleattribute system_r passwd_roles;
+#attribute_role passwd_roles;
+#roleattribute system_r passwd_roles;
 
-attribute_role sysadm_passwd_roles;
-roleattribute system_r sysadm_passwd_roles;
+#attribute_role sysadm_passwd_roles;
+#roleattribute system_r sysadm_passwd_roles;
 
-attribute_role useradd_roles;
+#attribute_role useradd_roles;
 
 type admin_passwd_exec_t;
 files_type(admin_passwd_exec_t)
@@ -25,7 +25,8 @@ type chfn_t;
 type chfn_exec_t;
 domain_obj_id_change_exemption(chfn_t)
 application_domain(chfn_t, chfn_exec_t)
-role chfn_roles types chfn_t;
+#role chfn_roles types chfn_t;
+role system_r types chfn_t;
 
 type crack_t;
 type crack_exec_t;
@@ -42,18 +43,21 @@ type groupadd_t;
 type groupadd_exec_t;
 domain_obj_id_change_exemption(groupadd_t)
 init_system_domain(groupadd_t, groupadd_exec_t)
-role groupadd_roles types groupadd_t;
+#role groupadd_roles types groupadd_t;
+
 
 type passwd_t;
 type passwd_exec_t;
 domain_obj_id_change_exemption(passwd_t)
 application_domain(passwd_t, passwd_exec_t)
-role passwd_roles types passwd_t;
+#role passwd_roles types passwd_t;
+role system_r types passwd_t;
 
 type sysadm_passwd_t;
 domain_obj_id_change_exemption(sysadm_passwd_t)
 application_domain(sysadm_passwd_t, admin_passwd_exec_t)
-role sysadm_passwd_roles types sysadm_passwd_t;
+#role sysadm_passwd_roles types sysadm_passwd_t;
+role system_r types sysadm_passwd_t;
 
 type sysadm_passwd_tmp_t;
 files_tmp_file(sysadm_passwd_tmp_t)
@@ -62,7 +66,8 @@ type useradd_t;
 type useradd_exec_t;
 domain_obj_id_change_exemption(useradd_t)
 init_system_domain(useradd_t, useradd_exec_t)
-role useradd_roles types useradd_t;
+#role useradd_roles types useradd_t;
+role system_r types useradd_t;
 
 ########################################
 #
@@ -86,6 +91,7 @@ allow chfn_t self:unix_stream_socket connectto;
 
 kernel_read_system_state(chfn_t)
 kernel_read_kernel_sysctls(chfn_t)
+kernel_dontaudit_getattr_core_if(chfn_t)
 
 selinux_get_fs_mount(chfn_t)
 selinux_validate_context(chfn_t)
@@ -94,25 +100,29 @@ selinux_compute_create_context(chfn_t)
 selinux_compute_relabel_context(chfn_t)
 selinux_compute_user_contexts(chfn_t)
 
-term_use_all_ttys(chfn_t)
-term_use_all_ptys(chfn_t)
+term_use_all_inherited_ttys(chfn_t)
+term_use_all_inherited_ptys(chfn_t)
+term_getattr_all_ptys(chfn_t)
 
 fs_getattr_xattr_fs(chfn_t)
 fs_search_auto_mountpoints(chfn_t)
 
 # for SSP
 dev_read_urand(chfn_t)
+dev_dontaudit_getattr_all(chfn_t)
 
-auth_run_chk_passwd(chfn_t, chfn_roles)
-auth_dontaudit_read_shadow(chfn_t)
-auth_use_nsswitch(chfn_t)
+auth_manage_passwd(chfn_t)
+auth_use_pam(chfn_t)
+#auth_run_chk_passwd(chfn_t, chfn_roles)
+#auth_dontaudit_read_shadow(chfn_t)
+#auth_use_nsswitch(chfn_t)
 
 # allow checking if a shell is executable
 corecmd_check_exec_shell(chfn_t)
+corecmd_exec_bin(chfn_t)
 
 domain_use_interactive_fds(chfn_t)
 
-files_manage_etc_files(chfn_t)
 files_read_etc_runtime_files(chfn_t)
 files_dontaudit_search_var(chfn_t)
 files_dontaudit_search_home(chfn_t)
@@ -120,6 +130,7 @@ files_dontaudit_search_home(chfn_t)
 # /usr/bin/passwd asks for w access to utmp, but it will operate
 # correctly without it.  Do not audit write denials to utmp.
 init_dontaudit_rw_utmp(chfn_t)
+init_dontaudit_getattr_initctl(chfn_t)
 
 miscfiles_read_localization(chfn_t)
 
@@ -128,11 +139,24 @@ logging_send_syslog_msg(chfn_t)
 # uses unix_chkpwd for checking passwords
 seutil_dontaudit_search_config(chfn_t)
 
+userdom_manage_user_tmp_files(chfn_t)
+userdom_tmp_filetrans_user_tmp(chfn_t, { file })
+
 userdom_use_unpriv_users_fds(chfn_t)
 # user generally runs this from their home directory, so do not audit a search
 # on user home dir
 userdom_dontaudit_search_user_home_content(chfn_t)
 
+optional_policy(`
+	rssh_exec(chfn_t)
+')
+
+
+optional_policy(`
+	# allow to exec tmux
+	screen_exec(chfn_t)
+')
+
 ########################################
 #
 # Crack local policy
@@ -209,8 +233,8 @@ selinux_compute_create_context(groupadd_t)
 selinux_compute_relabel_context(groupadd_t)
 selinux_compute_user_contexts(groupadd_t)
 
-term_use_all_ttys(groupadd_t)
-term_use_all_ptys(groupadd_t)
+term_use_all_inherited_terms(groupadd_t)
+term_getattr_all_ptys(groupadd_t)
 
 init_use_fds(groupadd_t)
 init_read_utmp(groupadd_t)
@@ -218,8 +242,8 @@ init_dontaudit_write_utmp(groupadd_t)
 
 domain_use_interactive_fds(groupadd_t)
 
-files_manage_etc_files(groupadd_t)
 files_relabel_etc_files(groupadd_t)
+files_read_etc_files(groupadd_t)
 files_read_etc_runtime_files(groupadd_t)
 files_read_usr_symlinks(groupadd_t)
 
@@ -231,12 +255,14 @@ logging_send_syslog_msg(groupadd_t)
 
 miscfiles_read_localization(groupadd_t)
 
-auth_run_chk_passwd(groupadd_t, groupadd_roles)
+#auth_run_chk_passwd(groupadd_t, groupadd_roles)
+auth_domtrans_chk_passwd(groupadd_t)
 auth_rw_lastlog(groupadd_t)
 auth_use_nsswitch(groupadd_t)
+auth_manage_passwd(groupadd_t)
+auth_manage_shadow(groupadd_t)
 # these may be unnecessary due to the above
 # domtrans_chk_passwd() call.
-auth_manage_shadow(groupadd_t)
 auth_relabel_shadow(groupadd_t)
 auth_etc_filetrans_shadow(groupadd_t)
 
@@ -253,7 +279,8 @@ optional_policy(`
 ')
 
 optional_policy(`
-	nscd_run(groupadd_t, groupadd_roles)
+#	nscd_run(groupadd_t, groupadd_roles)
+	nscd_domtrans(groupadd_t)
 ')
 
 optional_policy(`
@@ -285,6 +312,7 @@ allow passwd_t self:shm create_shm_perms;
 allow passwd_t self:sem create_sem_perms;
 allow passwd_t self:msgq create_msgq_perms;
 allow passwd_t self:msg { send receive };
+allow passwd_t self:netlink_selinux_socket create_socket_perms;
 
 allow passwd_t crack_db_t:dir list_dir_perms;
 read_files_pattern(passwd_t, crack_db_t, crack_db_t)
@@ -293,6 +321,7 @@ kernel_read_kernel_sysctls(passwd_t)
 
 # for SSP
 dev_read_urand(passwd_t)
+dev_dontaudit_getattr_all(passwd_t)
 
 fs_getattr_xattr_fs(passwd_t)
 fs_search_auto_mountpoints(passwd_t)
@@ -307,26 +336,37 @@ selinux_compute_create_context(passwd_t)
 selinux_compute_relabel_context(passwd_t)
 selinux_compute_user_contexts(passwd_t)
 
-term_use_all_ttys(passwd_t)
-term_use_all_ptys(passwd_t)
+term_use_all_inherited_terms(passwd_t)
+term_getattr_all_ptys(passwd_t)
 
-auth_run_chk_passwd(passwd_t, passwd_roles)
+auth_manage_passwd(passwd_t)
 auth_manage_shadow(passwd_t)
 auth_relabel_shadow(passwd_t)
 auth_etc_filetrans_shadow(passwd_t)
-auth_use_nsswitch(passwd_t)
+auth_use_pam(passwd_t)
+
+#auth_run_chk_passwd(passwd_t, passwd_roles)
+#auth_manage_passwd(passwd_t)
+#auth_manage_shadow(passwd_t)
+#auth_relabel_shadow(passwd_t)
+#auth_etc_filetrans_shadow(passwd_t)
+#auth_use_nsswitch(passwd_t)
 
 # allow checking if a shell is executable
 corecmd_check_exec_shell(passwd_t)
+corecmd_exec_bin(passwd_t)
+
+corenet_tcp_connect_kerberos_password_port(passwd_t)
 
 domain_use_interactive_fds(passwd_t)
 
 files_read_etc_runtime_files(passwd_t)
-files_manage_etc_files(passwd_t)
 files_search_var(passwd_t)
 files_dontaudit_search_pids(passwd_t)
 files_relabel_etc_files(passwd_t)
 
+term_search_ptys(passwd_t)
+
 # /usr/bin/passwd asks for w access to utmp, but it will operate
 # correctly without it.  Do not audit write denials to utmp.
 init_dontaudit_rw_utmp(passwd_t)
@@ -340,7 +380,7 @@ miscfiles_read_localization(passwd_t)
 seutil_read_config(passwd_t)
 seutil_read_file_contexts(passwd_t)
 
-userdom_use_user_terminals(passwd_t)
+userdom_use_inherited_user_terminals(passwd_t)
 userdom_use_unpriv_users_fds(passwd_t)
 # make sure that getcon succeeds
 userdom_getattr_all_users(passwd_t)
@@ -349,9 +389,11 @@ userdom_read_user_tmp_files(passwd_t)
 # user generally runs this from their home directory, so do not audit a search
 # on user home dir
 userdom_dontaudit_search_user_home_content(passwd_t)
+userdom_stream_connect(passwd_t)
 
 optional_policy(`
-	nscd_run(passwd_t, passwd_roles)
+	#nscd_run(passwd_t, passwd_roles)
+	nscd_domtrans(passwd_t)
 ')
 
 ########################################
@@ -398,9 +440,10 @@ dev_read_urand(sysadm_passwd_t)
 fs_getattr_xattr_fs(sysadm_passwd_t)
 fs_search_auto_mountpoints(sysadm_passwd_t)
 
-term_use_all_ttys(sysadm_passwd_t)
-term_use_all_ptys(sysadm_passwd_t)
+term_use_all_inherited_terms(sysadm_passwd_t)
+term_getattr_all_ptys(sysadm_passwd_t)
 
+auth_manage_passwd(sysadm_passwd_t)
 auth_manage_shadow(sysadm_passwd_t)
 auth_relabel_shadow(sysadm_passwd_t)
 auth_etc_filetrans_shadow(sysadm_passwd_t)
@@ -413,7 +456,6 @@ files_read_usr_files(sysadm_passwd_t)
 
 domain_use_interactive_fds(sysadm_passwd_t)
 
-files_manage_etc_files(sysadm_passwd_t)
 files_relabel_etc_files(sysadm_passwd_t)
 files_read_etc_runtime_files(sysadm_passwd_t)
 # for nscd lookups
@@ -435,7 +477,8 @@ userdom_use_unpriv_users_fds(sysadm_passwd_t)
 userdom_dontaudit_search_user_home_content(sysadm_passwd_t)
 
 optional_policy(`
-	nscd_run(sysadm_passwd_t, sysadm_passwd_roles)
+	nscd_domtrans(sysadm_passwd_t)
+	#nscd_run(sysadm_passwd_t, sysadm_passwd_roles)
 ')
 
 ########################################
@@ -443,7 +486,8 @@ optional_policy(`
 # Useradd local policy
 #
 
-allow useradd_t self:capability { dac_override chown kill fowner fsetid setuid sys_resource };
+allow useradd_t self:capability { dac_override chown kill fowner fsetid setuid sys_ptrace sys_resource };
+
 dontaudit useradd_t self:capability sys_tty_config;
 allow useradd_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
 allow useradd_t self:process setfscreate;
@@ -465,10 +509,13 @@ corecmd_exec_shell(useradd_t)
 # Execute /usr/bin/{passwd,chfn,chsh} and /usr/sbin/{useradd,vipw}.
 corecmd_exec_bin(useradd_t)
 
+kernel_getattr_core_if(useradd_t)
+dev_dontaudit_getattr_all(useradd_t)
+
 domain_use_interactive_fds(useradd_t)
 domain_read_all_domains_state(useradd_t)
+domain_dontaudit_read_all_domains_state(useradd_t)
 
-files_manage_etc_files(useradd_t)
 files_search_var_lib(useradd_t)
 files_relabel_etc_files(useradd_t)
 files_read_etc_runtime_files(useradd_t)
@@ -477,24 +524,19 @@ fs_search_auto_mountpoints(useradd_t)
 fs_getattr_xattr_fs(useradd_t)
 
 mls_file_upgrade(useradd_t)
+mls_process_read_to_clearance(useradd_t)
 
-# Allow access to context for shadow file
-selinux_get_fs_mount(useradd_t)
-selinux_validate_context(useradd_t)
-selinux_compute_access_vector(useradd_t)
-selinux_compute_create_context(useradd_t)
-selinux_compute_relabel_context(useradd_t)
-selinux_compute_user_contexts(useradd_t)
-
-term_use_all_ttys(useradd_t)
-term_use_all_ptys(useradd_t)
+term_use_all_inherited_terms(useradd_t)
+term_getattr_all_ptys(useradd_t)
 
-auth_run_chk_passwd(useradd_t, useradd_roles)
+#auth_run_chk_passwd(useradd_t, useradd_roles)
+auth_domtrans_chk_passwd(useradd_t)
 auth_rw_lastlog(useradd_t)
 auth_rw_faillog(useradd_t)
 auth_use_nsswitch(useradd_t)
 # these may be unnecessary due to the above
 # domtrans_chk_passwd() call.
+auth_manage_passwd(useradd_t)
 auth_manage_shadow(useradd_t)
 auth_relabel_shadow(useradd_t)
 auth_etc_filetrans_shadow(useradd_t)
@@ -507,31 +549,33 @@ logging_send_syslog_msg(useradd_t)
 
 miscfiles_read_localization(useradd_t)
 
+seutil_semanage_policy(useradd_t)
+seutil_manage_file_contexts(useradd_t)
+seutil_manage_config(useradd_t)
+seutil_manage_default_contexts(useradd_t)
+
 seutil_read_config(useradd_t)
 seutil_read_file_contexts(useradd_t)
 seutil_read_default_contexts(useradd_t)
-seutil_run_semanage(useradd_t, useradd_roles)
-seutil_run_setfiles(useradd_t, useradd_roles)
+seutil_domtrans_semanage(useradd_t)
+seutil_domtrans_setfiles(useradd_t)
+seutil_domtrans_loadpolicy(useradd_t)
+#seutil_manage_bin_policy(useradd_t)
+#seutil_manage_module_store(useradd_t)
+seutil_get_semanage_trans_lock(useradd_t)
+seutil_get_semanage_read_lock(useradd_t)
+#seutil_run_semanage(useradd_t, useradd_roles)
+#seutil_run_setfiles(useradd_t, useradd_roles)
 
 userdom_use_unpriv_users_fds(useradd_t)
 # Add/remove user home directories
-userdom_manage_user_home_dirs(useradd_t)
 userdom_home_filetrans_user_home_dir(useradd_t)
-userdom_manage_user_home_content_dirs(useradd_t)
-userdom_manage_user_home_content_files(useradd_t)
-userdom_home_filetrans_user_home_dir(useradd_t)
-userdom_user_home_dir_filetrans_user_home_content(useradd_t, notdevfile_class_set)
+userdom_manage_home_role(system_r, useradd_t)
 
 optional_policy(`
 	mta_manage_spool(useradd_t)
 ')
 
-ifdef(`distro_redhat',`
-	optional_policy(`
-		unconfined_domain(useradd_t)
-	')
-')
-
 optional_policy(`
 	apache_manage_all_user_content(useradd_t)
 ')
@@ -542,7 +586,8 @@ optional_policy(`
 ')
 
 optional_policy(`
-	nscd_run(useradd_t, useradd_roles)
+	nscd_domtrans(useradd_t)
+#	nscd_run(useradd_t, useradd_roles)
 ')
 
 optional_policy(`
@@ -550,6 +595,11 @@ optional_policy(`
 ')
 
 optional_policy(`
+	rpc_list_nfs_state_data(useradd_t)
+	rpc_read_nfs_state_data(useradd_t)
+')
+
+optional_policy(`
 	tunable_policy(`samba_domain_controller',`
 		samba_append_log(useradd_t)
 	')
diff --git a/policy/modules/apps/seunshare.if b/policy/modules/apps/seunshare.if
index 1dc7a85..a01511f 100644
--- a/policy/modules/apps/seunshare.if
+++ b/policy/modules/apps/seunshare.if
@@ -43,18 +43,18 @@ interface(`seunshare_run',`
 	role $2 types seunshare_t;
 
 	allow $1 seunshare_t:process signal_perms;
-
-	ifdef(`hide_broken_symptoms', `
-		dontaudit seunshare_t $1:tcp_socket rw_socket_perms;
-		dontaudit seunshare_t $1:udp_socket rw_socket_perms;
-		dontaudit seunshare_t $1:unix_stream_socket rw_socket_perms;
-	')
 ')
 
 ########################################
 ## <summary>
-##	Role access for seunshare
+##	The role template for the seunshare module.
 ## </summary>
+## <param name="role_prefix">
+##	<summary>
+##	The prefix of the user role (e.g., user
+##	is the prefix for user_r).
+##	</summary>
+## </param>
 ## <param name="role">
 ##	<summary>
 ##	Role allowed access.
@@ -66,15 +66,30 @@ interface(`seunshare_run',`
 ##	</summary>
 ## </param>
 #
-interface(`seunshare_role',`
+interface(`seunshare_role_template',`
 	gen_require(`
-		type seunshare_t;
+		attribute seunshare_domain;
+		type seunshare_exec_t;
 	')
 
-	role $2 types seunshare_t;
+	type $1_seunshare_t, seunshare_domain;
+	application_domain($1_seunshare_t, seunshare_exec_t)
+	role $2 types $1_seunshare_t;
 
-	seunshare_domtrans($1)
+	auth_use_nsswitch($1_seunshare_t)
+	
+	mls_process_set_level($1_seunshare_t)
+
+	domtrans_pattern($3, seunshare_exec_t, $1_seunshare_t)
+	sandbox_transition($1_seunshare_t, $2)
+
+	ps_process_pattern($3, $1_seunshare_t)
+	allow $3 $1_seunshare_t:process signal_perms;
+	allow $3 $1_seunshare_t:fd use;
+
+	allow $1_seunshare_t $3:process transition;
+	dontaudit $1_seunshare_t $3:process { noatsecure siginh rlimitinh };
 
-	ps_process_pattern($2, seunshare_t)
-	allow $2 seunshare_t:process signal;
+	corecmd_bin_domtrans($1_seunshare_t, $1_t)
+	corecmd_shell_domtrans($1_seunshare_t, $1_t)
 ')
diff --git a/policy/modules/apps/seunshare.te b/policy/modules/apps/seunshare.te
index 7590165..59539e8 100644
--- a/policy/modules/apps/seunshare.te
+++ b/policy/modules/apps/seunshare.te
@@ -5,40 +5,63 @@ policy_module(seunshare, 1.1.0)
 # Declarations
 #
 
-type seunshare_t;
+attribute seunshare_domain;
 type seunshare_exec_t;
-application_domain(seunshare_t, seunshare_exec_t)
-role system_r types seunshare_t;
 
 ########################################
 #
 # seunshare local policy
 #
+allow seunshare_domain self:capability { fowner setgid setuid dac_override setpcap sys_admin sys_nice };
+allow seunshare_domain self:process { fork setexec signal getcap setcap setsched };
 
-allow seunshare_t self:capability { setuid dac_override setpcap sys_admin };
-allow seunshare_t self:process { setexec signal getcap setcap };
+allow seunshare_domain self:fifo_file rw_file_perms;
+allow seunshare_domain self:unix_stream_socket create_stream_socket_perms;
 
-allow seunshare_t self:fifo_file rw_file_perms;
-allow seunshare_t self:unix_stream_socket create_stream_socket_perms;
+kernel_read_system_state(seunshare_domain)
 
-corecmd_exec_shell(seunshare_t)
-corecmd_exec_bin(seunshare_t)
+corecmd_exec_shell(seunshare_domain)
+corecmd_exec_bin(seunshare_domain)
 
-files_read_etc_files(seunshare_t)
-files_mounton_all_poly_members(seunshare_t)
+dev_read_urand(seunshare_domain)
+dev_dontaudit_rw_dri(seunshare_domain)
 
-auth_use_nsswitch(seunshare_t)
+files_search_all(seunshare_domain)
+files_read_etc_files(seunshare_domain)
+files_mounton_all_poly_members(seunshare_domain)
+files_mounton_rootfs(seunshare_domain)
+files_manage_generic_tmp_dirs(seunshare_domain)
+files_relabelfrom_tmp_dirs(seunshare_domain)
 
-logging_send_syslog_msg(seunshare_t)
+fs_manage_cgroup_dirs(seunshare_domain)
+fs_manage_cgroup_files(seunshare_domain)
+fs_unmount_all_fs(seunshare_domain)
 
-miscfiles_read_localization(seunshare_t)
+logging_send_syslog_msg(seunshare_domain)
 
-userdom_use_user_terminals(seunshare_t)
+miscfiles_read_localization(seunshare_domain)
 
+userdom_dontaudit_rw_user_tmp_pipes(seunshare_domain)
+userdom_use_inherited_user_terminals(seunshare_domain)
+userdom_list_user_home_content(seunshare_domain)
 ifdef(`hide_broken_symptoms', `
-	fs_dontaudit_rw_anon_inodefs_files(seunshare_t)
+	fs_dontaudit_rw_anon_inodefs_files(seunshare_domain)
+ 	fs_dontaudit_list_inotifyfs(seunshare_domain)
 
 	optional_policy(`
-		mozilla_dontaudit_manage_user_home_files(seunshare_t)
+		mozilla_dontaudit_manage_user_home_files(seunshare_domain)
+		mozilla_plugin_dontaudit_leaks(seunshare_domain)
 	')
 ')
+
+tunable_policy(`use_nfs_home_dirs',`
+	fs_mounton_nfs(seunshare_domain)
+')
+
+tunable_policy(`use_samba_home_dirs',`
+	fs_mounton_cifs(seunshare_domain)
+')
+
+tunable_policy(`use_fusefs_home_dirs',`
+	fs_mounton_fusefs(seunshare_domain)
+')
diff --git a/policy/modules/kernel/corecommands.fc b/policy/modules/kernel/corecommands.fc
index db981df..cdbf6c7 100644
--- a/policy/modules/kernel/corecommands.fc
+++ b/policy/modules/kernel/corecommands.fc
@@ -1,9 +1,10 @@
 #
 # /bin
 #
-/bin				-d	gen_context(system_u:object_r:bin_t,s0)
+/bin					gen_context(system_u:object_r:bin_t,s0)
 /bin/.*					gen_context(system_u:object_r:bin_t,s0)
 /bin/d?ash			--	gen_context(system_u:object_r:shell_exec_t,s0)
+/bin/esh			--	gen_context(system_u:object_r:shell_exec_t,s0)
 /bin/bash			--	gen_context(system_u:object_r:shell_exec_t,s0)
 /bin/bash2			--	gen_context(system_u:object_r:shell_exec_t,s0)
 /bin/fish			--	gen_context(system_u:object_r:shell_exec_t,s0)
@@ -46,6 +47,7 @@ ifdef(`distro_redhat',`
 /etc/apcupsd/offbattery		--	gen_context(system_u:object_r:bin_t,s0)
 /etc/apcupsd/onbattery		--	gen_context(system_u:object_r:bin_t,s0)
 
+/etc/auto\.[^/]*		--	gen_context(system_u:object_r:bin_t,s0)
 /etc/avahi/.*\.action 		--	gen_context(system_u:object_r:bin_t,s0)
 
 /etc/cipe/ip-up.*		--	gen_context(system_u:object_r:bin_t,s0)
@@ -71,10 +73,18 @@ ifdef(`distro_redhat',`
 /etc/kde/env(/.*)?			gen_context(system_u:object_r:bin_t,s0)
 /etc/kde/shutdown(/.*)?			gen_context(system_u:object_r:bin_t,s0)
 
+/etc/redhat-lsb(/.*)?			gen_context(system_u:object_r:bin_t,s0)
+
+/etc/lxdm/LoginReady		--	gen_context(system_u:object_r:bin_t,s0)
+/etc/lxdm/Post.*		--	gen_context(system_u:object_r:bin_t,s0)
+/etc/lxdm/Pre.*			--	gen_context(system_u:object_r:bin_t,s0)
+/etc/lxdm/Xsession		--	gen_context(system_u:object_r:bin_t,s0)
+
 /etc/mail/make			--	gen_context(system_u:object_r:bin_t,s0)
 /etc/mcelog/cache-error-trigger	--	gen_context(system_u:object_r:bin_t,s0)
 /etc/mcelog/triggers(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 /etc/mgetty\+sendfax/new_fax	--	gen_context(system_u:object_r:bin_t,s0)
+/etc/munin/plugins(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 
 /etc/netplug\.d(/.*)? 	 		gen_context(system_u:object_r:bin_t,s0)
 
@@ -97,8 +107,6 @@ ifdef(`distro_redhat',`
 
 /etc/rc\.d/init\.d/functions	--	gen_context(system_u:object_r:bin_t,s0)
 
-/etc/security/namespace.init	--	gen_context(system_u:object_r:bin_t,s0)
-
 /etc/sysconfig/crond		--	gen_context(system_u:object_r:bin_t,s0)
 /etc/sysconfig/init		--	gen_context(system_u:object_r:bin_t,s0)
 /etc/sysconfig/libvirtd		--	gen_context(system_u:object_r:bin_t,s0)
@@ -130,8 +138,8 @@ ifdef(`distro_debian',`
 
 /lib/readahead(/.*)?			gen_context(system_u:object_r:bin_t,s0)
 /lib/security/pam_krb5/pam_krb5_storetmp -- gen_context(system_u:object_r:bin_t,s0)
-/lib/systemd/systemd.*		--	gen_context(system_u:object_r:bin_t,s0)
 /lib/udev/[^/]*			--	gen_context(system_u:object_r:bin_t,s0)
+/lib/udev/devices/MAKEDEV	-l	gen_context(system_u:object_r:bin_t,s0)
 /lib/udev/scsi_id		--	gen_context(system_u:object_r:bin_t,s0)
 /lib/upstart(/.*)?			gen_context(system_u:object_r:bin_t,s0)
 
@@ -147,7 +155,7 @@ ifdef(`distro_gentoo',`
 #
 # /sbin
 #
-/sbin				-d	gen_context(system_u:object_r:bin_t,s0)
+/sbin					gen_context(system_u:object_r:bin_t,s0)
 /sbin/.*				gen_context(system_u:object_r:bin_t,s0)
 /sbin/insmod_ksymoops_clean	--	gen_context(system_u:object_r:bin_t,s0)
 /sbin/mkfs\.cramfs		--	gen_context(system_u:object_r:bin_t,s0)
@@ -163,6 +171,7 @@ ifdef(`distro_gentoo',`
 /opt/(.*/)?sbin(/.*)?			gen_context(system_u:object_r:bin_t,s0)
 
 /opt/google/talkplugin(/.*)?		gen_context(system_u:object_r:bin_t,s0)
+/opt/google/chrome(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 
 /opt/gutenprint/cups/lib/filter(/.*)?	gen_context(system_u:object_r:bin_t,s0)
 
@@ -174,53 +183,77 @@ ifdef(`distro_gentoo',`
 /opt/vmware/workstation/lib/lib/wrapper-gtk24\.sh -- gen_context(system_u:object_r:bin_t,s0)
 ')
 
+/root/bin(/.*)?				gen_context(system_u:object_r:bin_t,s0)
+
 #
 # /usr
 #
+/usr/bin				-d	gen_context(system_u:object_r:bin_t,s0)
 /usr/(.*/)?Bin(/.*)?			gen_context(system_u:object_r:bin_t,s0)
 /usr/(.*/)?bin(/.*)?			gen_context(system_u:object_r:bin_t,s0)
-/usr/bin/git-shell		--	gen_context(system_u:object_r:shell_exec_t,s0)
+/usr/bin/.*					gen_context(system_u:object_r:bin_t,s0)
+/usr/bin/d?ash			--	gen_context(system_u:object_r:shell_exec_t,s0)
+/usr/bin/esh			--	gen_context(system_u:object_r:shell_exec_t,s0)
+/usr/bin/bash			--	gen_context(system_u:object_r:shell_exec_t,s0)
+/usr/bin/bash2			--	gen_context(system_u:object_r:shell_exec_t,s0)
 /usr/bin/fish			--	gen_context(system_u:object_r:shell_exec_t,s0)
-/usr/bin/scponly		--	gen_context(system_u:object_r:shell_exec_t,s0)
+/usr/bin/ksh.*			--	gen_context(system_u:object_r:shell_exec_t,s0)
+/usr/bin/mksh			--	gen_context(system_u:object_r:shell_exec_t,s0)
+/usr/bin/mountpoint			--	gen_context(system_u:object_r:bin_t,s0)
+/usr/bin/sash			--	gen_context(system_u:object_r:shell_exec_t,s0)
 /usr/bin/tcsh			--	gen_context(system_u:object_r:shell_exec_t,s0)
+/usr/bin/yash			--	gen_context(system_u:object_r:shell_exec_t,s0)
+/usr/bin/zsh.*			--	gen_context(system_u:object_r:shell_exec_t,s0)
 
-/usr/lib(.*/)?bin(/.*)?			gen_context(system_u:object_r:bin_t,s0)
+/usr/bin/git-shell		--	gen_context(system_u:object_r:shell_exec_t,s0)
+/usr/bin/scponly		--	gen_context(system_u:object_r:shell_exec_t,s0)
 
 /usr/(.*/)?sbin(/.*)?			gen_context(system_u:object_r:bin_t,s0)
 /usr/lib(.*/)?sbin(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 
+/usr/lib/jvm/java(.*/)bin(/.*)		gen_context(system_u:object_r:bin_t,s0)
+/usr/lib(.*/)?bin(/.*)?			gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/ccache/bin(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/fence(/.*)?			gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/pgsql/test/regress/.*\.sh --	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/qt.*/bin(/.*)?			gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/wicd/monitor\.py 	-- 	gen_context(system_u:object_r:bin_t, s0)
-/usr/lib/apt/methods.+		--	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/apt/methods.+	--	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/chromium-browser(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/ConsoleKit/scripts(/.*)?	gen_context(system_u:object_r:bin_t,s0)
-/usr/lib/ConsoleKit/run-session.d(/.*)? gen_context(system_u:object_r:bin_t,s0)
-/usr/lib/courier(/.*)?			gen_context(system_u:object_r:bin_t,s0)
-/usr/lib/cups(/.*)? 			gen_context(system_u:object_r:bin_t,s0)
-/usr/lib/cyrus/.*		--	gen_context(system_u:object_r:bin_t,s0)
-/usr/lib/cyrus-imapd/.*		--	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/ConsoleKit/run-session\.d(/.*)?	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/courier(/.*)?		gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/cups(/.*)? 		gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/cyrus-imapd/.*	--	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/dpkg/.+		--	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/emacsen-common/.*		gen_context(system_u:object_r:bin_t,s0)
-/usr/lib/gimp/.*/plug-ins(/.*)?		gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/gimp/.*/plug-ins(/.*)?	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/ipsec/.*		--	gen_context(system_u:object_r:bin_t,s0)
-/usr/lib/mailman/bin(/.*)?		gen_context(system_u:object_r:bin_t,s0)
-/usr/lib/mailman/mail(/.*)?		gen_context(system_u:object_r:bin_t,s0)
-/usr/lib/mediawiki/math/texvc.*		gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/mailman.*/bin(/.*)?		gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/mailman.*/mail(/.*)?	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/MailScanner(/.*)?	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/mediawiki/math/texvc.*	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/misc/sftp-server	--	gen_context(system_u:object_r:bin_t,s0)
-/usr/lib/nagios/plugins(/.*)?		gen_context(system_u:object_r:bin_t,s0)
-/usr/lib/netsaint/plugins(/.*)?		gen_context(system_u:object_r:bin_t,s0)
-/usr/lib/news/bin(/.*)?			gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/nagios/plugins(/.*)?	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/netsaint/plugins(/.*)?	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/news/bin(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/nspluginwrapper/np.*		gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/portage/bin(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/pm-utils(/.*)?			gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/readahead(/.*)?			gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/rpm/rpmd		-- 	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/rpm/rpmk		-- 	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/rpm/rpmq		-- 	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/rpm/rpmv		-- 	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/tumbler-[^/]*/tumblerd	-- 	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/security/pam_krb5/pam_krb5_storetmp -- gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/sftp-server		--	gen_context(system_u:object_r:bin_t,s0)
-/usr/lib/vte/gnome-pty-helper	--	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/vte/gnome-pty-helper 	--	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/yaboot/addnote	      	--	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/udev/[^/]*			--	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/udev/devices/MAKEDEV	-l	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/udev/scsi_id		--	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/upstart(/.*)?			gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/xfce4/exo-1/exo-compose-mail-1 -- gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/xfce4/exo-1/exo-helper-1 --	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/xfce4/panel/migrate	--	gen_context(system_u:object_r:bin_t,s0)
@@ -235,10 +268,15 @@ ifdef(`distro_gentoo',`
 /usr/lib/debug/sbin(/.*)?	--	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/debug/usr/bin(/.*)?	--	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/debug/usr/sbin(/.*)?	--	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/debug/usr/libexec(/.*)?	gen_context(system_u:object_r:bin_t,s0)
 
 /usr/lib/[^/]*thunderbird[^/]*/thunderbird -- gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/[^/]*thunderbird[^/]*/thunderbird-bin -- gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/[^/]*thunderbird[^/]*/open-browser\.sh -- gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/xulrunner[^/]*/xulrunner[^/]* --	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/xulrunner[^/]*/updater --	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/xulrunner[^/]*/crashreporter --	gen_context(system_u:object_r:bin_t,s0)
+
 /usr/lib/[^/]*/run-mozilla\.sh --	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/[^/]*/mozilla-xremote-client -- gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/thunderbird.*/mozilla-xremote-client -- gen_context(system_u:object_r:bin_t,s0)
@@ -251,11 +289,18 @@ ifdef(`distro_gentoo',`
 
 /usr/libexec/openssh/sftp-server --	gen_context(system_u:object_r:bin_t,s0)
 
-/usr/local/lib(64)?/ipsec/.*	-- 	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/xfce4(/.*)?	gen_context(system_u:object_r:bin_t,s0)
+
+/usr/local/lib/ipsec/.*	-- 	gen_context(system_u:object_r:bin_t,s0)
 /usr/local/Brother(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 /usr/local/Printer(/.*)?		gen_context(system_u:object_r:bin_t,s0)
+/usr/local/Brother/(.*/)?inf/brprintconf.* gen_context(system_u:object_r:bin_t,s0)
+/usr/local/Brother/(.*/)?inf/setup.* gen_context(system_u:object_r:bin_t,s0)
 /usr/local/linuxprinter/filters(/.*)?	gen_context(system_u:object_r:bin_t,s0)
 
+/usr/sbin/insmod_ksymoops_clean	--	gen_context(system_u:object_r:bin_t,s0)
+/usr/sbin/mkfs\.cramfs		--	gen_context(system_u:object_r:bin_t,s0)
+/usr/sbin/nologin		--	gen_context(system_u:object_r:shell_exec_t,s0)
 /usr/sbin/scponlyc		--	gen_context(system_u:object_r:shell_exec_t,s0)
 /usr/sbin/sesh			--	gen_context(system_u:object_r:shell_exec_t,s0)
 /usr/sbin/smrsh			--	gen_context(system_u:object_r:shell_exec_t,s0)
@@ -271,6 +316,10 @@ ifdef(`distro_gentoo',`
 /usr/share/cluster/.*\.sh		gen_context(system_u:object_r:bin_t,s0)
 /usr/share/cluster/ocf-shellfuncs --	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/cluster/svclib_nfslock --	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/cluster/SAPDatabase	--	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/cluster/SAPInstance	--	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/cluster/fence_scsi_check\.pl	--	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/cluster/checkquorum	--	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/e16/misc(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 /usr/share/gedit-2/plugins/externaltools/tools(/.*)? gen_context(system_u:object_r:bin_t,s0)
 /usr/share/gitolite/hooks/common/update -- gen_context(system_u:object_r:bin_t,s0)
@@ -290,15 +339,19 @@ ifdef(`distro_gentoo',`
 /usr/share/smolt/client(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 /usr/share/shorewall/compiler\.pl --	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/shorewall/configpath	--	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/shorewall/getparams  --  gen_context(system_u:object_r:bin_t,s0)
 /usr/share/shorewall-perl(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 /usr/share/shorewall-shell(/.*)?	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/shorewall-lite(/.*)? 	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/shorewall6-lite(/.*)?	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/spamassassin/sa-update\.cron gen_context(system_u:object_r:bin_t,s0)
 /usr/share/turboprint/lib(/.*)?	--	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/tucan.*/tucan.py	--	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/vhostmd/scripts(/.*)?	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/virtualbox/.*\.sh 		gen_context(system_u:object_r:bin_t,s0)
+/usr/share/wicd/daemon(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 
-/usr/X11R6/lib(64)?/X11/xkb/xkbcomp --	gen_context(system_u:object_r:bin_t,s0)
+/usr/X11R6/lib/X11/xkb/xkbcomp --	gen_context(system_u:object_r:bin_t,s0)
 
 ifdef(`distro_debian',`
 /usr/lib/ConsoleKit/.*		--	gen_context(system_u:object_r:bin_t,s0)
@@ -314,8 +367,12 @@ ifdef(`distro_redhat', `
 /etc/gdm/[^/]+			-d	gen_context(system_u:object_r:bin_t,s0)
 /etc/gdm/[^/]+/.*			gen_context(system_u:object_r:bin_t,s0)
 
+/usr/lib/.*/scripts(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/.*/program(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/bluetooth(/.*)?	--	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/nfs-utils/scripts(/.*)?	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/oracle/xe/apps(/.*)?		gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/tuned/.*/.*\.sh  		--  gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/vmware-tools/(s)?bin32(/.*)?	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/vmware-tools/(s)?bin64(/.*)?	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/authconfig/authconfig-gtk\.py -- gen_context(system_u:object_r:bin_t,s0)
@@ -325,9 +382,11 @@ ifdef(`distro_redhat', `
 /usr/share/clamav/clamd-gen	--	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/clamav/freshclam-sleep --	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/createrepo(/.*)?		gen_context(system_u:object_r:bin_t,s0)
+/usr/share/doc/ghc/html/libraries/gen_contents_index -- gen_context(system_u:object_r:bin_t,s0)	
 /usr/share/fedora-usermgmt/wrapper --	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/hplip/[^/]*		--	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/hwbrowser/hwbrowser --	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/kde4/apps/kajongg/kajongg.py --	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/pwlib/make/ptlib-config --	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/pydict/pydict\.py	--	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/rhn/rhn_applet/applet\.py -- gen_context(system_u:object_r:bin_t,s0)
@@ -376,11 +435,14 @@ ifdef(`distro_suse', `
 #
 # /var
 #
-/var/mailman/bin(/.*)?			gen_context(system_u:object_r:bin_t,s0)
+/var/mailman.*/bin(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 
 /var/ftp/bin(/.*)?			gen_context(system_u:object_r:bin_t,s0)
 
 /var/lib/asterisk/agi-bin(/.*)?		gen_context(system_u:object_r:bin_t,s0)
+/var/lib/iscan/interpreter		gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/ruby/gems(/.*)?/helper-scripts(/.*)? gen_context(system_u:object_r:bin_t,s0)
+
 /usr/lib/yp/.+			--	gen_context(system_u:object_r:bin_t,s0)
 
 /var/qmail/bin			-d	gen_context(system_u:object_r:bin_t,s0)
@@ -390,3 +452,12 @@ ifdef(`distro_suse', `
 ifdef(`distro_suse',`
 /var/lib/samba/bin/.+			gen_context(system_u:object_r:bin_t,s0)
 ')
+
+#
+# /usr/lib
+#
+
+/usr/lib/dracut(/.*)?				gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/iscan/network			--	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/ruby/gems/.*/agents(/.*)?		gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/virtualbox/VBoxManage		--	gen_context(system_u:object_r:bin_t,s0)
diff --git a/policy/modules/kernel/corecommands.if b/policy/modules/kernel/corecommands.if
index 9e9263a..ba59ffd 100644
--- a/policy/modules/kernel/corecommands.if
+++ b/policy/modules/kernel/corecommands.if
@@ -122,6 +122,7 @@ interface(`corecmd_search_bin',`
 		type bin_t;
 	')
 
+	corecmd_read_bin_symlinks($1)
 	search_dirs_pattern($1, bin_t, bin_t)
 ')
 
@@ -158,6 +159,7 @@ interface(`corecmd_list_bin',`
 		type bin_t;
 	')
 
+	corecmd_read_bin_symlinks($1)
 	list_dirs_pattern($1, bin_t, bin_t)
 ')
 
@@ -203,7 +205,7 @@ interface(`corecmd_getattr_bin_files',`
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain to not audit.
 ##	</summary>
 ## </param>
 #
@@ -231,6 +233,7 @@ interface(`corecmd_read_bin_files',`
 		type bin_t;
 	')
 
+	corecmd_read_bin_symlinks($1)
 	read_files_pattern($1, bin_t, bin_t)
 ')
 
@@ -254,6 +257,24 @@ interface(`corecmd_dontaudit_write_bin_files',`
 
 ########################################
 ## <summary>
+##	Do not audit attempts to access check bin files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`corecmd_dontaudit_access_check_bin',`
+	gen_require(`
+		type bin_t;
+	')
+
+	dontaudit $1 bin_t:file audit_access;
+')
+
+########################################
+## <summary>
 ##	Read symbolic links in bin directories.
 ## </summary>
 ## <param name="domain">
@@ -285,6 +306,7 @@ interface(`corecmd_read_bin_pipes',`
 		type bin_t;
 	')
 
+	corecmd_read_bin_symlinks(bin_t)
 	read_fifo_files_pattern($1, bin_t, bin_t)
 ')
 
@@ -303,6 +325,7 @@ interface(`corecmd_read_bin_sockets',`
 		type bin_t;
 	')
 
+	corecmd_read_bin_symlinks($1)
 	read_sock_files_pattern($1, bin_t, bin_t)
 ')
 
@@ -362,6 +385,7 @@ interface(`corecmd_manage_bin_files',`
 		type bin_t;
 	')
 
+	corecmd_read_bin_symlinks($1)
 	manage_files_pattern($1, bin_t, bin_t)
 ')
 
@@ -398,6 +422,7 @@ interface(`corecmd_mmap_bin_files',`
 		type bin_t;
 	')
 
+	corecmd_read_bin_symlinks($1)
 	mmap_files_pattern($1, bin_t, bin_t)
 ')
 
@@ -954,6 +979,24 @@ interface(`corecmd_exec_chroot',`
 
 ########################################
 ## <summary>
+##	Do not audit attempts to access check executable files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`corecmd_dontaudit_access_all_executables',`
+	gen_require(`
+		attribute exec_type;
+	')
+
+	dontaudit $1 exec_type:file audit_access;
+')
+
+########################################
+## <summary>
 ##	Get the attributes of all executable files.
 ## </summary>
 ## <param name="domain">
@@ -1049,6 +1092,7 @@ interface(`corecmd_manage_all_executables',`
 		type bin_t;
 	')
 
+	manage_dirs_pattern($1, bin_t, exec_type)
 	manage_files_pattern($1, bin_t, exec_type)
 	manage_lnk_files_pattern($1, bin_t, bin_t)
 ')
diff --git a/policy/modules/kernel/corecommands.te b/policy/modules/kernel/corecommands.te
index b4f7bc7..481ae66 100644
--- a/policy/modules/kernel/corecommands.te
+++ b/policy/modules/kernel/corecommands.te
@@ -13,7 +13,7 @@ attribute exec_type;
 #
 # bin_t is the type of files in the system bin/sbin directories.
 #
-type bin_t alias { ls_exec_t sbin_t };
+type bin_t alias { ls_exec_t sbin_t unconfined_execmem_exec_t execmem_exec_t java_exec_t mono_exec_t };
 corecmd_executable_file(bin_t)
 dev_associate(bin_t)	#For /dev/MAKEDEV
 
diff --git a/policy/modules/kernel/corenetwork.fc b/policy/modules/kernel/corenetwork.fc
index f9b25c1..9af1f7a 100644
--- a/policy/modules/kernel/corenetwork.fc
+++ b/policy/modules/kernel/corenetwork.fc
@@ -8,3 +8,6 @@
 
 /lib/udev/devices/ppp -c gen_context(system_u:object_r:ppp_device_t,s0)
 /lib/udev/devices/net/.* -c gen_context(system_u:object_r:tun_tap_device_t,s0)
+
+/usr/lib/udev/devices/ppp -c gen_context(system_u:object_r:ppp_device_t,s0)
+/usr/lib/udev/devices/net/.* -c gen_context(system_u:object_r:tun_tap_device_t,s0)
diff --git a/policy/modules/kernel/corenetwork.if.in b/policy/modules/kernel/corenetwork.if.in
index 07126bd..0ebac89 100644
--- a/policy/modules/kernel/corenetwork.if.in
+++ b/policy/modules/kernel/corenetwork.if.in
@@ -55,6 +55,7 @@ interface(`corenet_reserved_port',`
 	')
 
 	typeattribute $1 reserved_port_type;
+	corenet_port($1)
 ')
 
 ########################################
@@ -82,6 +83,7 @@ interface(`corenet_rpc_port',`
 	')
 
 	typeattribute $1 rpc_port_type;
+	corenet_port($1)
 ')
 
 ########################################
@@ -615,6 +617,24 @@ interface(`corenet_raw_sendrecv_all_if',`
 
 ########################################
 ## <summary>
+##	Send and receive DCCP network traffic on generic nodes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_dccp_sendrecv_generic_node',`
+	gen_require(`
+		type node_t;
+	')
+
+	allow $1 node_t:node { dccp_send dccp_recv sendto recvfrom };
+')
+
+########################################
+## <summary>
 ##	Send and receive TCP network traffic on generic nodes.
 ## </summary>
 ## <desc>
@@ -789,6 +809,24 @@ interface(`corenet_raw_sendrecv_generic_node',`
 
 ########################################
 ## <summary>
+##	Bind DCCP sockets to generic nodes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_dccp_bind_generic_node',`
+	gen_require(`
+		type node_t;
+	')
+
+	allow $1 node_t:dccp_socket node_bind;
+')
+
+########################################
+## <summary>
 ##	Bind TCP sockets to generic nodes.
 ## </summary>
 ## <desc>
@@ -928,6 +966,24 @@ interface(`corenet_inout_generic_node',`
 
 ########################################
 ## <summary>
+##	Send and receive DCCP network traffic on all nodes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_dccp_sendrecv_all_nodes',`
+	gen_require(`
+		attribute node_type;
+	')
+
+	allow $1 node_type:node { dccp_send dccp_recv sendto recvfrom };
+')
+
+########################################
+## <summary>
 ##	Send and receive TCP network traffic on all nodes.
 ## </summary>
 ## <param name="domain">
@@ -1102,6 +1158,24 @@ interface(`corenet_raw_sendrecv_all_nodes',`
 
 ########################################
 ## <summary>
+##	Bind DCCP sockets to all nodes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_dccp_bind_all_nodes',`
+	gen_require(`
+		attribute node_type;
+	')
+
+	allow $1 node_type:dccp_socket node_bind;
+')
+
+########################################
+## <summary>
 ##	Bind TCP sockets to all nodes.
 ## </summary>
 ## <param name="domain">
@@ -1157,6 +1231,24 @@ interface(`corenet_raw_bind_all_nodes',`
 
 ########################################
 ## <summary>
+##	Send and receive DCCP network traffic on generic ports.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_dccp_sendrecv_generic_port',`
+	gen_require(`
+		type port_t, unreserved_port_t;
+	')
+
+	allow $1 { port_t unreserved_port_t }:dccp_socket { send_msg recv_msg };
+')
+
+########################################
+## <summary>
 ##	Send and receive TCP network traffic on generic ports.
 ## </summary>
 ## <param name="domain">
@@ -1167,10 +1259,30 @@ interface(`corenet_raw_bind_all_nodes',`
 #
 interface(`corenet_tcp_sendrecv_generic_port',`
 	gen_require(`
-		type port_t;
+		type port_t, unreserved_port_t;
 	')
 
-	allow $1 port_t:tcp_socket { send_msg recv_msg };
+	allow $1 { port_t unreserved_port_t }:tcp_socket { send_msg recv_msg };
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to send and
+##	receive DCCP network traffic on
+##	generic ports.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`corenet_dontaudit_dccp_sendrecv_generic_port',`
+	gen_require(`
+		type port_t, unreserved_port_t;
+	')
+
+	dontaudit $1 { port_t unreserved_port_t }:dccp_socket { send_msg recv_msg };
 ')
 
 ########################################
@@ -1185,10 +1297,10 @@ interface(`corenet_tcp_sendrecv_generic_port',`
 #
 interface(`corenet_dontaudit_tcp_sendrecv_generic_port',`
 	gen_require(`
-		type port_t;
+		type port_t, unreserved_port_t;
 	')
 
-	dontaudit $1 port_t:tcp_socket { send_msg recv_msg };
+	dontaudit $1 { port_t unreserved_port_t }:tcp_socket { send_msg recv_msg };
 ')
 
 ########################################
@@ -1203,10 +1315,10 @@ interface(`corenet_dontaudit_tcp_sendrecv_generic_port',`
 #
 interface(`corenet_udp_send_generic_port',`
 	gen_require(`
-		type port_t;
+		type port_t, unreserved_port_t;
 	')
 
-	allow $1 port_t:udp_socket send_msg;
+	allow $1 { port_t unreserved_port_t }:udp_socket send_msg;
 ')
 
 ########################################
@@ -1221,10 +1333,10 @@ interface(`corenet_udp_send_generic_port',`
 #
 interface(`corenet_udp_receive_generic_port',`
 	gen_require(`
-		type port_t;
+		type port_t, unreserved_port_t;
 	')
 
-	allow $1 port_t:udp_socket recv_msg;
+	allow $1 { port_t unreserved_port_t }:udp_socket recv_msg;
 ')
 
 ########################################
@@ -1244,6 +1356,26 @@ interface(`corenet_udp_sendrecv_generic_port',`
 
 ########################################
 ## <summary>
+##	Bind DCCP sockets to generic ports.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_dccp_bind_generic_port',`
+	gen_require(`
+		type port_t, unreserved_port_t;
+		attribute defined_port_type;
+	')
+
+	allow $1 { port_t unreserved_port_t }:dccp_socket name_bind;
+	dontaudit $1 defined_port_type:dccp_socket name_bind;
+')
+
+########################################
+## <summary>
 ##	Bind TCP sockets to generic ports.
 ## </summary>
 ## <param name="domain">
@@ -1254,16 +1386,35 @@ interface(`corenet_udp_sendrecv_generic_port',`
 #
 interface(`corenet_tcp_bind_generic_port',`
 	gen_require(`
-		type port_t;
+		type port_t, unreserved_port_t;
 		attribute defined_port_type;
 	')
 
-	allow $1 port_t:tcp_socket name_bind;
+	allow $1 { port_t unreserved_port_t }:tcp_socket name_bind;
 	dontaudit $1 defined_port_type:tcp_socket name_bind;
 ')
 
 ########################################
 ## <summary>
+##	Do not audit attempts to bind DCCP
+##	sockets to generic ports.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`corenet_dontaudit_dccp_bind_generic_port',`
+	gen_require(`
+		type port_t, unreserved_port_t;
+	')
+
+	dontaudit $1 { port_t unreserved_port_t }:dccp_socket name_bind;
+')
+
+########################################
+## <summary>
 ##	Do not audit bind TCP sockets to generic ports.
 ## </summary>
 ## <param name="domain">
@@ -1274,10 +1425,10 @@ interface(`corenet_tcp_bind_generic_port',`
 #
 interface(`corenet_dontaudit_tcp_bind_generic_port',`
 	gen_require(`
-		type port_t;
+		type port_t, unreserved_port_t;
 	')
 
-	dontaudit $1 port_t:tcp_socket name_bind;
+	dontaudit $1 { port_t unreserved_port_t }:tcp_socket name_bind;
 ')
 
 ########################################
@@ -1292,16 +1443,34 @@ interface(`corenet_dontaudit_tcp_bind_generic_port',`
 #
 interface(`corenet_udp_bind_generic_port',`
 	gen_require(`
-		type port_t;
+		type port_t, unreserved_port_t;
 		attribute defined_port_type;
 	')
 
-	allow $1 port_t:udp_socket name_bind;
+	allow $1 { port_t unreserved_port_t }:udp_socket name_bind;
 	dontaudit $1 defined_port_type:udp_socket name_bind;
 ')
 
 ########################################
 ## <summary>
+##	Connect DCCP sockets to generic ports.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_dccp_connect_generic_port',`
+	gen_require(`
+		type port_t, unreserved_port_t;
+	')
+
+	allow $1 { port_t unreserved_port_t }:dccp_socket name_connect;
+')
+
+########################################
+## <summary>
 ##	Connect TCP sockets to generic ports.
 ## </summary>
 ## <param name="domain">
@@ -1312,10 +1481,28 @@ interface(`corenet_udp_bind_generic_port',`
 #
 interface(`corenet_tcp_connect_generic_port',`
 	gen_require(`
-		type port_t;
+		type port_t, unreserved_port_t;
 	')
 
-	allow $1 port_t:tcp_socket name_connect;
+	allow $1 { port_t unreserved_port_t }:tcp_socket name_connect;
+')
+
+########################################
+## <summary>
+##	Send and receive DCCP network traffic on all ports.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_dccp_sendrecv_all_ports',`
+	gen_require(`
+		attribute port_type;
+	')
+
+	allow $1 port_type:dccp_socket { send_msg recv_msg };
 ')
 
 ########################################
@@ -1439,6 +1626,25 @@ interface(`corenet_udp_sendrecv_all_ports',`
 
 ########################################
 ## <summary>
+##	Bind DCCP sockets to all ports.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_dccp_bind_all_ports',`
+	gen_require(`
+		attribute port_type;
+	')
+
+	allow $1 port_type:dccp_socket name_bind;
+	allow $1 self:capability net_bind_service;
+')
+
+########################################
+## <summary>
 ##	Bind TCP sockets to all ports.
 ## </summary>
 ## <param name="domain">
@@ -1458,6 +1664,24 @@ interface(`corenet_tcp_bind_all_ports',`
 
 ########################################
 ## <summary>
+##	Do not audit attepts to bind DCCP sockets to any ports.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`corenet_dontaudit_dccp_bind_all_ports',`
+	gen_require(`
+		attribute port_type;
+	')
+
+	dontaudit $1 port_type:dccp_socket name_bind;
+')
+
+########################################
+## <summary>
 ##	Do not audit attepts to bind TCP sockets to any ports.
 ## </summary>
 ## <param name="domain">
@@ -1513,6 +1737,24 @@ interface(`corenet_dontaudit_udp_bind_all_ports',`
 
 ########################################
 ## <summary>
+##	Connect DCCP sockets to all ports.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_dccp_connect_all_ports',`
+	gen_require(`
+		attribute port_type;
+	')
+
+	allow $1 port_type:dccp_socket name_connect;
+')
+
+########################################
+## <summary>
 ##	Connect TCP sockets to all ports.
 ## </summary>
 ## <desc>
@@ -1559,6 +1801,25 @@ interface(`corenet_tcp_connect_all_ports',`
 
 ########################################
 ## <summary>
+##	Do not audit attempts to connect DCCP sockets
+##	to all ports.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`corenet_dontaudit_dccp_connect_all_ports',`
+	gen_require(`
+		attribute port_type;
+	')
+
+	dontaudit $1 port_type:dccp_socket name_connect;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to connect TCP sockets
 ##	to all ports.
 ## </summary>
@@ -1578,6 +1839,24 @@ interface(`corenet_dontaudit_tcp_connect_all_ports',`
 
 ########################################
 ## <summary>
+##	Send and receive DCCP network traffic on generic reserved ports.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_dccp_sendrecv_reserved_port',`
+	gen_require(`
+		type reserved_port_t;
+	')
+
+	allow $1 reserved_port_t:dccp_socket { send_msg recv_msg };
+')
+
+########################################
+## <summary>
 ##	Send and receive TCP network traffic on generic reserved ports.
 ## </summary>
 ## <param name="domain">
@@ -1647,6 +1926,25 @@ interface(`corenet_udp_sendrecv_reserved_port',`
 
 ########################################
 ## <summary>
+##	Bind DCCP sockets to generic reserved ports.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_dccp_bind_reserved_port',`
+	gen_require(`
+		type reserved_port_t;
+	')
+
+	allow $1 reserved_port_t:dccp_socket name_bind;
+	allow $1 self:capability net_bind_service;
+')
+
+########################################
+## <summary>
 ##	Bind TCP sockets to generic reserved ports.
 ## </summary>
 ## <param name="domain">
@@ -1685,6 +1983,24 @@ interface(`corenet_udp_bind_reserved_port',`
 
 ########################################
 ## <summary>
+##	Connect DCCP sockets to generic reserved ports.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_dccp_connect_reserved_port',`
+	gen_require(`
+		type reserved_port_t;
+	')
+
+	allow $1 reserved_port_t:dccp_socket name_connect;
+')
+
+########################################
+## <summary>
 ##	Connect TCP sockets to generic reserved ports.
 ## </summary>
 ## <param name="domain">
@@ -1703,6 +2019,24 @@ interface(`corenet_tcp_connect_reserved_port',`
 
 ########################################
 ## <summary>
+##	Send and receive DCCP network traffic on all reserved ports.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_dccp_sendrecv_all_reserved_ports',`
+	gen_require(`
+		attribute reserved_port_type;
+	')
+
+	allow $1 reserved_port_type:dccp_socket { send_msg recv_msg };
+')
+
+########################################
+## <summary>
 ##	Send and receive TCP network traffic on all reserved ports.
 ## </summary>
 ## <param name="domain">
@@ -1772,7 +2106,208 @@ interface(`corenet_udp_sendrecv_all_reserved_ports',`
 
 ########################################
 ## <summary>
-##	Bind TCP sockets to all reserved ports.
+##	Bind DCCP sockets to all reserved ports.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_dccp_bind_all_reserved_ports',`
+	gen_require(`
+		attribute reserved_port_type;
+	')
+
+	allow $1 reserved_port_type:dccp_socket name_bind;
+	allow $1 self:capability net_bind_service;
+')
+
+########################################
+## <summary>
+##	Bind TCP sockets to all reserved ports.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_tcp_bind_all_reserved_ports',`
+	gen_require(`
+		attribute reserved_port_type;
+	')
+
+	allow $1 reserved_port_type:tcp_socket name_bind;
+	allow $1 self:capability net_bind_service;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to bind DCCP sockets to all reserved ports.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`corenet_dontaudit_dccp_bind_all_reserved_ports',`
+	gen_require(`
+		attribute reserved_port_type;
+	')
+
+	dontaudit $1 reserved_port_type:dccp_socket name_bind;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to bind TCP sockets to all reserved ports.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`corenet_dontaudit_tcp_bind_all_reserved_ports',`
+	gen_require(`
+		attribute reserved_port_type;
+	')
+
+	dontaudit $1 reserved_port_type:tcp_socket name_bind;
+')
+
+########################################
+## <summary>
+##	Bind UDP sockets to all reserved ports.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_udp_bind_all_reserved_ports',`
+	gen_require(`
+		attribute reserved_port_type;
+	')
+
+	allow $1 reserved_port_type:udp_socket name_bind;
+	allow $1 self:capability net_bind_service;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to bind UDP sockets to all reserved ports.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`corenet_dontaudit_udp_bind_all_reserved_ports',`
+	gen_require(`
+		attribute reserved_port_type;
+	')
+
+	dontaudit $1 reserved_port_type:udp_socket name_bind;
+')
+
+########################################
+## <summary>
+##	Bind DCCP sockets to all ports > 1024.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_dccp_bind_all_unreserved_ports',`
+	gen_require(`
+		attribute unreserved_port_type;
+	')
+
+	allow $1 unreserved_port_type:dccp_socket name_bind;
+')
+
+########################################
+## <summary>
+##	Bind TCP sockets to all ports > 1024.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_tcp_bind_all_unreserved_ports',`
+	gen_require(`
+		attribute unreserved_port_type;
+	')
+
+	allow $1 unreserved_port_type:tcp_socket name_bind;
+')
+
+########################################
+## <summary>
+##	Bind UDP sockets to all ports > 1024.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_udp_bind_all_unreserved_ports',`
+	gen_require(`
+		attribute unreserved_port_type;
+	')
+
+	allow $1 unreserved_port_type:udp_socket name_bind;
+')
+
+########################################
+## <summary>
+##	Bind TCP sockets to all ports > 32768.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_tcp_bind_all_ephemeral_ports',`
+	gen_require(`
+		attribute ephemeral_port_type;
+	')
+
+	allow $1 ephemeral_port_type:tcp_socket name_bind;
+')
+
+########################################
+## <summary>
+##	Bind UDP sockets to all ports > 32768.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_udp_bind_all_ephemeral_ports',`
+	gen_require(`
+		attribute ephemeral_port_type;
+	')
+
+	allow $1 ephemeral_port_type:udp_socket name_bind;
+')
+
+########################################
+## <summary>
+##	Connect DCCP sockets to reserved ports.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -1780,36 +2315,35 @@ interface(`corenet_udp_sendrecv_all_reserved_ports',`
 ##	</summary>
 ## </param>
 #
-interface(`corenet_tcp_bind_all_reserved_ports',`
+interface(`corenet_dccp_connect_all_reserved_ports',`
 	gen_require(`
 		attribute reserved_port_type;
 	')
 
-	allow $1 reserved_port_type:tcp_socket name_bind;
-	allow $1 self:capability net_bind_service;
+	allow $1 reserved_port_type:dccp_socket name_connect;
 ')
 
 ########################################
 ## <summary>
-##	Do not audit attempts to bind TCP sockets to all reserved ports.
+##	Connect TCP sockets to reserved ports.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain to not audit.
+##	Domain allowed access.
 ##	</summary>
 ## </param>
 #
-interface(`corenet_dontaudit_tcp_bind_all_reserved_ports',`
+interface(`corenet_tcp_connect_all_reserved_ports',`
 	gen_require(`
 		attribute reserved_port_type;
 	')
 
-	dontaudit $1 reserved_port_type:tcp_socket name_bind;
+	allow $1 reserved_port_type:tcp_socket name_connect;
 ')
 
 ########################################
 ## <summary>
-##	Bind UDP sockets to all reserved ports.
+##	Connect DCCP sockets to all ports > 1024.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -1817,36 +2351,35 @@ interface(`corenet_dontaudit_tcp_bind_all_reserved_ports',`
 ##	</summary>
 ## </param>
 #
-interface(`corenet_udp_bind_all_reserved_ports',`
+interface(`corenet_dccp_connect_all_unreserved_ports',`
 	gen_require(`
-		attribute reserved_port_type;
+		attribute unreserved_port_type;
 	')
 
-	allow $1 reserved_port_type:udp_socket name_bind;
-	allow $1 self:capability net_bind_service;
+	allow $1 unreserved_port_type:dccp_socket name_connect;
 ')
 
-########################################
+#######################################
 ## <summary>
-##	Do not audit attempts to bind UDP sockets to all reserved ports.
+##  Connect TCP sockets to ports > 1024.
 ## </summary>
 ## <param name="domain">
-##	<summary>
-##	Domain to not audit.
-##	</summary>
+##  <summary>
+##  Domain allowed access.
+##  </summary>
 ## </param>
 #
-interface(`corenet_dontaudit_udp_bind_all_reserved_ports',`
-	gen_require(`
-		attribute reserved_port_type;
-	')
+interface(`corenet_tcp_connect_unreserved_ports',`
+    gen_require(`
+        type unreserved_port_t;
+    ')
 
-	dontaudit $1 reserved_port_type:udp_socket name_bind;
+    allow $1 unreserved_port_t:tcp_socket name_connect;
 ')
 
 ########################################
 ## <summary>
-##	Bind TCP sockets to all ports > 1024.
+##	Connect TCP sockets to all ports > 1024.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -1854,17 +2387,17 @@ interface(`corenet_dontaudit_udp_bind_all_reserved_ports',`
 ##	</summary>
 ## </param>
 #
-interface(`corenet_tcp_bind_all_unreserved_ports',`
+interface(`corenet_tcp_connect_all_unreserved_ports',`
 	gen_require(`
 		attribute unreserved_port_type;
 	')
 
-	allow $1 unreserved_port_type:tcp_socket name_bind;
+	allow $1 unreserved_port_type:tcp_socket name_connect;
 ')
 
 ########################################
 ## <summary>
-##	Bind UDP sockets to all ports > 1024.
+##	Connect TCP sockets to all ports > 32768.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -1872,67 +2405,68 @@ interface(`corenet_tcp_bind_all_unreserved_ports',`
 ##	</summary>
 ## </param>
 #
-interface(`corenet_udp_bind_all_unreserved_ports',`
+interface(`corenet_tcp_connect_all_ephemeral_ports',`
 	gen_require(`
-		attribute unreserved_port_type;
+		attribute ephemeral_port_type;
 	')
 
-	allow $1 unreserved_port_type:udp_socket name_bind;
+	allow $1 ephemeral_port_type:tcp_socket name_connect;
 ')
 
 ########################################
 ## <summary>
-##	Connect TCP sockets to reserved ports.
+##	Do not audit attempts to connect DCCP sockets
+##	all reserved ports.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain to not audit.
 ##	</summary>
 ## </param>
 #
-interface(`corenet_tcp_connect_all_reserved_ports',`
+interface(`corenet_dontaudit_dccp_connect_all_reserved_ports',`
 	gen_require(`
 		attribute reserved_port_type;
 	')
 
-	allow $1 reserved_port_type:tcp_socket name_connect;
+	dontaudit $1 reserved_port_type:dccp_socket name_connect;
 ')
 
 ########################################
 ## <summary>
-##	Connect TCP sockets to all ports > 1024.
+##	Do not audit attempts to connect TCP sockets
+##	all reserved ports.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain to not audit.
 ##	</summary>
 ## </param>
 #
-interface(`corenet_tcp_connect_all_unreserved_ports',`
+interface(`corenet_dontaudit_tcp_connect_all_reserved_ports',`
 	gen_require(`
-		attribute unreserved_port_type;
+		attribute reserved_port_type;
 	')
 
-	allow $1 unreserved_port_type:tcp_socket name_connect;
+	dontaudit $1 reserved_port_type:tcp_socket name_connect;
 ')
 
 ########################################
 ## <summary>
-##	Do not audit attempts to connect TCP sockets
-##	all reserved ports.
+##	Connect DCCP sockets to rpc ports.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain to not audit.
+##	Domain allowed access.
 ##	</summary>
 ## </param>
 #
-interface(`corenet_dontaudit_tcp_connect_all_reserved_ports',`
+interface(`corenet_dccp_connect_all_rpc_ports',`
 	gen_require(`
-		attribute reserved_port_type;
+		attribute rpc_port_type;
 	')
 
-	dontaudit $1 reserved_port_type:tcp_socket name_connect;
+	allow $1 rpc_port_type:dccp_socket name_connect;
 ')
 
 ########################################
@@ -1955,6 +2489,25 @@ interface(`corenet_tcp_connect_all_rpc_ports',`
 
 ########################################
 ## <summary>
+##	Do not audit attempts to connect DCCP sockets
+##	all rpc ports.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`corenet_dontaudit_dccp_connect_all_rpc_ports',`
+	gen_require(`
+		attribute rpc_port_type;
+	')
+
+	dontaudit $1 rpc_port_type:dccp_socket name_connect;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to connect TCP sockets
 ##	all rpc ports.
 ## </summary>
@@ -1993,6 +2546,24 @@ interface(`corenet_rw_tun_tap_dev',`
 
 ########################################
 ## <summary>
+##	Read and write inherited TUN/TAP virtual network device.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_rw_inherited_tun_tap_dev',`
+	gen_require(`
+		type tun_tap_device_t;
+	')
+
+	allow $1 tun_tap_device_t:chr_file rw_inherited_chr_file_perms;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to read or write the TUN/TAP
 ##	virtual network device.
 ## </summary>
@@ -2049,6 +2620,25 @@ interface(`corenet_rw_ppp_dev',`
 
 ########################################
 ## <summary>
+##	Bind DCCP sockets to all RPC ports.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_dccp_bind_all_rpc_ports',`
+	gen_require(`
+		attribute rpc_port_type;
+	')
+
+	allow $1 rpc_port_type:dccp_socket name_bind;
+	allow $1 self:capability net_bind_service;
+')
+
+########################################
+## <summary>
 ##	Bind TCP sockets to all RPC ports.
 ## </summary>
 ## <param name="domain">
@@ -2068,6 +2658,24 @@ interface(`corenet_tcp_bind_all_rpc_ports',`
 
 ########################################
 ## <summary>
+##	Do not audit attempts to bind DCCP sockets to all RPC ports.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`corenet_dontaudit_dccp_bind_all_rpc_ports',`
+	gen_require(`
+		attribute rpc_port_type;
+	')
+
+	dontaudit $1 rpc_port_type:dccp_socket name_bind;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to bind TCP sockets to all RPC ports.
 ## </summary>
 ## <param name="domain">
@@ -2194,6 +2802,25 @@ interface(`corenet_tcp_recv_netlabel',`
 
 ########################################
 ## <summary>
+##	Receive DCCP packets from a NetLabel connection.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_dccp_recvfrom_netlabel',`
+	gen_require(`
+		type netlabel_peer_t;
+	')
+
+	allow $1 netlabel_peer_t:peer recv;
+	allow $1 netlabel_peer_t:dccp_socket recvfrom;
+')
+
+########################################
+## <summary>
 ##	Receive TCP packets from a NetLabel connection.
 ## </summary>
 ## <param name="domain">
@@ -2213,6 +2840,31 @@ interface(`corenet_tcp_recvfrom_netlabel',`
 
 ########################################
 ## <summary>
+##	Receive DCCP packets from an unlabled connection.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_dccp_recvfrom_unlabeled',`
+	gen_require(`
+		attribute corenet_unlabeled_type;
+	')
+
+	kernel_dccp_recvfrom_unlabeled($1)
+	kernel_recvfrom_unlabeled_peer($1)
+
+	typeattribute $1 corenet_unlabeled_type;
+	# XXX - at some point the oubound/send access check will be removed
+	# but for right now we need to keep this in place so as not to break
+	# older systems
+	kernel_sendrecv_unlabeled_association($1)
+')
+
+########################################
+## <summary>
 ##	Receive TCP packets from an unlabled connection.
 ## </summary>
 ## <param name="domain">
@@ -2222,9 +2874,14 @@ interface(`corenet_tcp_recvfrom_netlabel',`
 ## </param>
 #
 interface(`corenet_tcp_recvfrom_unlabeled',`
+	gen_require(`
+                attribute corenet_unlabeled_type;
+	')
+
 	kernel_tcp_recvfrom_unlabeled($1)
 	kernel_recvfrom_unlabeled_peer($1)
 
+	typeattribute $1 corenet_unlabeled_type;
 	# XXX - at some point the oubound/send access check will be removed
 	# but for right now we need to keep this in place so as not to break
 	# older systems
@@ -2249,6 +2906,26 @@ interface(`corenet_dontaudit_tcp_recv_netlabel',`
 
 ########################################
 ## <summary>
+##	Do not audit attempts to receive DCCP packets from a NetLabel
+##	connection.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`corenet_dontaudit_dccp_recvfrom_netlabel',`
+	gen_require(`
+		type netlabel_peer_t;
+	')
+
+	dontaudit $1 netlabel_peer_t:peer recv;
+	dontaudit $1 netlabel_peer_t:dccp_socket recvfrom;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to receive TCP packets from a NetLabel
 ##	connection.
 ## </summary>
@@ -2269,6 +2946,27 @@ interface(`corenet_dontaudit_tcp_recvfrom_netlabel',`
 
 ########################################
 ## <summary>
+##	Do not audit attempts to receive DCCP packets from an unlabeled
+##	connection.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`corenet_dontaudit_dccp_recvfrom_unlabeled',`
+	kernel_dontaudit_dccp_recvfrom_unlabeled($1)
+	kernel_dontaudit_recvfrom_unlabeled_peer($1)
+
+	# XXX - at some point the oubound/send access check will be removed
+	# but for right now we need to keep this in place so as not to break
+	# older systems
+	kernel_dontaudit_sendrecv_unlabeled_association($1)
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to receive TCP packets from an unlabeled
 ##	connection.
 ## </summary>
@@ -2533,6 +3231,7 @@ interface(`corenet_dontaudit_raw_recvfrom_unlabeled',`
 ## <infoflow type="read" weight="10"/>
 #
 interface(`corenet_all_recvfrom_unlabeled',`
+	kernel_dccp_recvfrom_unlabeled($1)
 	kernel_tcp_recvfrom_unlabeled($1)
 	kernel_udp_recvfrom_unlabeled($1)
 	kernel_raw_recvfrom_unlabeled($1)
@@ -2571,7 +3270,31 @@ interface(`corenet_all_recvfrom_netlabel',`
 	')
 
 	allow $1 netlabel_peer_t:peer recv;
-	allow $1 netlabel_peer_t:{ tcp_socket udp_socket rawip_socket } recvfrom;
+	allow $1 netlabel_peer_t:{ tcp_socket udp_socket rawip_socket dccp_socket } recvfrom;
+')
+
+########################################
+## <summary>
+##	Enable unlabeled net packets
+## </summary>
+## <desc>
+##	<p>
+##	Allow unlabeled_packet_t to be used by all domains that use the network
+##	</p>
+## </desc>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <infoflow type="read" weight="10"/>
+#
+interface(`corenet_enable_unlabeled_packets',`
+	gen_require(`
+		attribute corenet_unlabeled_type;
+	')
+
+	kernel_sendrecv_unlabeled_association(corenet_unlabeled_type)
 ')
 
 ########################################
@@ -2585,6 +3308,7 @@ interface(`corenet_all_recvfrom_netlabel',`
 ## </param>
 #
 interface(`corenet_dontaudit_all_recvfrom_unlabeled',`
+	kernel_dontaudit_dccp_recvfrom_unlabeled($1)
 	kernel_dontaudit_tcp_recvfrom_unlabeled($1)
 	kernel_dontaudit_udp_recvfrom_unlabeled($1)
 	kernel_dontaudit_raw_recvfrom_unlabeled($1)
@@ -2613,7 +3337,35 @@ interface(`corenet_dontaudit_all_recvfrom_netlabel',`
 	')
 
 	dontaudit $1 netlabel_peer_t:peer recv;
-	dontaudit $1 netlabel_peer_t:{ tcp_socket udp_socket rawip_socket } recvfrom;
+	dontaudit $1 netlabel_peer_t:{ tcp_socket udp_socket rawip_socket dccp_socket } recvfrom;
+')
+
+########################################
+## <summary>
+##	Rules for receiving labeled DCCP packets.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="peer_domain">
+##	<summary>
+##	Peer domain.
+##	</summary>
+## </param>
+#
+interface(`corenet_dccp_recvfrom_labeled',`
+	allow { $1 $2 } self:association sendto;
+	allow $1 $2:{ association dccp_socket } recvfrom;
+	allow $2 $1:{ association dccp_socket } recvfrom;
+
+	allow $1 $2:peer recv;
+	allow $2 $1:peer recv;
+
+	# allow receiving packets from MLS-only peers using NetLabel
+	corenet_dccp_recvfrom_netlabel($1)
+	corenet_dccp_recvfrom_netlabel($2)
 ')
 
 ########################################
@@ -2727,6 +3479,7 @@ interface(`corenet_raw_recvfrom_labeled',`
 ## </param>
 #
 interface(`corenet_all_recvfrom_labeled',`
+	corenet_dccp_recvfrom_labeled($1, $2)
 	corenet_tcp_recvfrom_labeled($1, $2)
 	corenet_udp_recvfrom_labeled($1, $2)
 	corenet_raw_recvfrom_labeled($1, $2)
@@ -3134,3 +3887,53 @@ interface(`corenet_unconfined',`
 
 	typeattribute $1 corenet_unconfined_type;
 ')
+
+########################################
+## <summary>
+##	Create all network named devices with the correct label
+## </summary>
+## <param name="domain">
+##	<summary>
+##      Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`corenet_filetrans_all_named_dev',`
+
+	gen_require(`
+		type tun_tap_device_t;
+		type ppp_device_t;
+	')
+
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap0")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap1")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap2")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap3")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap4")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap5")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap6")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap7")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap8")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap9")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap10")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap11")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap12")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap13")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap14")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap15")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap16")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap17")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap18")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap19")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap20")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap21")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap22")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap23")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap24")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap25")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap26")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap27")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap28")
+	dev_filetrans($1, tun_tap_device_t, chr_file, "tap29")
+	dev_filetrans($1, ppp_device_t, chr_file, "ppp")
+')
diff --git a/policy/modules/kernel/corenetwork.if.m4 b/policy/modules/kernel/corenetwork.if.m4
index 8e0f9cd..da3b374 100644
--- a/policy/modules/kernel/corenetwork.if.m4
+++ b/policy/modules/kernel/corenetwork.if.m4
@@ -631,6 +631,26 @@ interface(`corenet_udp_bind_$1_port',`
 
 ########################################
 ## <summary>
+##	Do not audit attempts to sbind to $1 port.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+## <infoflow type="none"/>
+#
+interface(`corenet_dontaudit_udp_bind_$1_port',`
+	gen_require(`
+		$3 $1_$2;
+	')
+
+	dontaudit dollarsone $1_$2:udp_socket name_bind;
+	$4
+')
+
+########################################
+## <summary>
 ##	Make a TCP connection to the $1 port.
 ## </summary>
 ## <param name="domain">
diff --git a/policy/modules/kernel/corenetwork.te.in b/policy/modules/kernel/corenetwork.te.in
index 97978e3..fab201e 100644
--- a/policy/modules/kernel/corenetwork.te.in
+++ b/policy/modules/kernel/corenetwork.te.in
@@ -14,12 +14,14 @@ attribute node_type;
 attribute packet_type;
 attribute port_type;
 attribute reserved_port_type;
+attribute ephemeral_port_type;
 attribute rpc_port_type;
 attribute server_packet_type;
 # This is an optimization for { port_type -reserved_port_type }
 attribute unreserved_port_type;
 
 attribute corenet_unconfined_type;
+attribute corenet_unlabeled_type;
 
 type ppp_device_t;
 dev_node(ppp_device_t)
@@ -29,6 +31,7 @@ dev_node(ppp_device_t)
 #
 type tun_tap_device_t;
 dev_node(tun_tap_device_t)
+mls_trusted_object(tun_tap_device_t)
 
 ########################################
 #
@@ -38,6 +41,18 @@ dev_node(tun_tap_device_t)
 #
 # client_packet_t is the default type of IPv4 and IPv6 client packets.
 #
+type intranet_packet_t;
+corenet_packet(intranet_packet_t)
+
+#
+# client_packet_t is the default type of IPv4 and IPv6 client packets.
+#
+type internet_packet_t;
+corenet_packet(internet_packet_t)
+
+#
+# client_packet_t is the default type of IPv4 and IPv6 client packets.
+#
 type client_packet_t, packet_type, client_packet_type;
 
 #
@@ -59,6 +74,12 @@ sid port gen_context(system_u:object_r:port_t,s0)
 type unreserved_port_t, port_type, unreserved_port_type;
 
 #
+# ephemeral_port_t is the default type of ephemeral port numbers.
+# cat /proc/sys/net/ipv4/ip_local_port_range 
+#
+type ephemeral_port_t, port_type, ephemeral_port_type;
+
+#
 # reserved_port_t is the type of INET port numbers below 1024.
 #
 type reserved_port_t, port_type, reserved_port_type;
@@ -74,30 +95,39 @@ type hi_reserved_port_t, port_type, reserved_port_type, rpc_port_type;
 type server_packet_t, packet_type, server_packet_type;
 
 network_port(afs_bos, udp,7007,s0)
+network_port(afs_client, udp,7001,s0)
 network_port(afs_fs, tcp,2040,s0, udp,7000,s0, udp,7005,s0)
 network_port(afs_ka, udp,7004,s0)
 network_port(afs_pt, udp,7002,s0)
 network_port(afs_vl, udp,7003,s0)
 network_port(agentx, udp,705,s0, tcp,705,s0)
+network_port(ajaxterm, tcp,8022,s0)
 network_port(amanda, udp,10080-10082,s0, tcp,10080-10083,s0)
 network_port(amavisd_recv, tcp,10024,s0)
 network_port(amavisd_send, tcp,10025,s0)
 network_port(amqp, udp,5671-5672,s0, tcp,5671-5672,s0)
-network_port(aol, udp,5190-5193,s0, tcp,5190-5193,s0)
+network_port(aol, udp,5190-5193,s0, tcp,5190-5193,s0) 
 network_port(apcupsd, tcp,3551,s0, udp,3551,s0)
+network_port(apertus_ldp, tcp,539,s0, udp,539,s0)
 network_port(asterisk, tcp,1720,s0, udp,2427,s0, udp,2727,s0, udp,4569,s0)
 network_port(audit, tcp,60,s0)
 network_port(auth, tcp,113,s0)
 network_port(bgp, tcp,179,s0, udp,179,s0, tcp,2605,s0, udp,2605,s0)
 network_port(boinc, tcp,31416,s0)
+network_port(boinc_client_ctrl, tcp,1043,s0)
 network_port(biff) # no defined portcon
 network_port(certmaster, tcp,51235,s0)
 network_port(chronyd, udp,323,s0)
 network_port(clamd, tcp,3310,s0)
 network_port(clockspeed, udp,4041,s0)
 network_port(cluster, tcp,5149,s0, udp,5149,s0, tcp,40040,s0, tcp,50006-50008,s0, udp,50006-50008,s0)
+network_port(cma, tcp,1050,s0, udp,1050,s0)
 network_port(cobbler, tcp,25151,s0)
+network_port(commplex, tcp,5001,s0, udp,5001,s0)
 network_port(comsat, udp,512,s0)
+network_port(condor, tcp, 9618,s0, udp, 9618,s0)
+network_port(couchdb, tcp,5984,s0, udp,5984,s0)
+network_port(ctdb, tcp,4379,s0, udp,4379,s0)
 network_port(cvs, tcp,2401,s0, udp,2401,s0)
 network_port(cyphesis, tcp,6767,s0, tcp,6769,s0, tcp,6780-6799,s0, udp,32771,s0)
 network_port(daap, tcp,3689,s0, udp,3689,s0)
@@ -108,14 +138,23 @@ network_port(dhcpc, udp,68,s0, tcp,68,s0, udp,546,s0, tcp, 546,s0)
 network_port(dhcpd, udp,67,s0, udp,547,s0, tcp, 547,s0, udp,548,s0, tcp, 548,s0, tcp,647,s0, udp,647,s0, tcp,847,s0, udp,847,s0, tcp,7911,s0)
 network_port(dict, tcp,2628,s0)
 network_port(distccd, tcp,3632,s0)
+network_port(dogtag, tcp,7390,s0)
 network_port(dns, udp,53,s0, tcp,53,s0)
+network_port(dnssec, tcp,8955,s0)
+network_port(echo, tcp,7,s0, udp,7,s0)
 network_port(epmap, tcp,135,s0, udp,135,s0)
+network_port(epmd, tcp,4369,s0, udp,4369,s0)
+network_port(festival, tcp,1314,s0)
 network_port(fingerd, tcp,79,s0)
+network_port(firebird, tcp,3050,s0, udp,3050,s0)
+network_port(flash, tcp,843,s0, tcp,1935,s0, udp,1935,s0)
+network_port(fprot, tcp,10200,s0)
 network_port(ftp, tcp,21,s0, tcp,990,s0, udp,990,s0)
 network_port(ftp_data, tcp,20,s0)
 network_port(gatekeeper, udp,1718,s0, udp,1719,s0, tcp,1721,s0, tcp,7000,s0)
 network_port(giftd, tcp,1213,s0)
 network_port(git, tcp,9418,s0, udp,9418,s0)
+network_port(glance, tcp,9292,s0, udp,9292,s0)
 network_port(glance_registry, tcp,9191,s0, udp,9191,s0)
 network_port(gopher, tcp,70,s0, udp,70,s0)
 network_port(gpsd, tcp,2947,s0)
@@ -123,13 +162,15 @@ network_port(hadoop_datanode, tcp,50010,s0)
 network_port(hadoop_namenode, tcp,8020,s0)
 network_port(hddtemp, tcp,7634,s0)
 network_port(howl, tcp,5335,s0, udp,5353,s0)
-network_port(hplip, tcp,1782,s0, tcp,2207,s0, tcp,2208,s0, tcp, 8290,s0, tcp,50000,s0, tcp,50002,s0, tcp,8292,s0, tcp,9100,s0, tcp,9101,s0, tcp,9102,s0, tcp,9220,s0, tcp,9221,s0, tcp,9222,s0, tcp,9280,s0, tcp,9281,s0, tcp,9282,s0, tcp,9290,s0, tcp,9291,s0, tcp,9292,s0)
+network_port(hplip, tcp,1782,s0, tcp,2207,s0, tcp,2208,s0, tcp, 8290,s0, tcp,50000,s0, tcp,50002,s0, tcp,8292,s0, tcp,9100,s0, tcp,9101,s0, tcp,9102,s0, tcp,9220,s0, tcp,9221,s0, tcp,9222,s0, tcp,9280,s0, tcp,9281,s0, tcp,9282,s0, tcp,9290,s0, tcp,9291,s0)
 network_port(http, tcp,80,s0, tcp,443,s0, tcp,488,s0, tcp,8008,s0, tcp,8009,s0, tcp,8443,s0) #8443 is mod_nss default port
-network_port(http_cache, tcp,3128,s0, udp,3130,s0, tcp,8080,s0, tcp,8118,s0, tcp,10001-10010,s0) # 8118 is for privoxy
+network_port(http_cache, udp,3130,s0, tcp,8080,s0, tcp,8118,s0, tcp,10001-10010,s0) # 8118 is for privoxy
 network_port(i18n_input, tcp,9010,s0)
 network_port(imaze, tcp,5323,s0, udp,5323,s0)
-network_port(inetd_child, tcp,1,s0, udp,1,s0, tcp,7,s0, udp,7,s0, tcp,9,s0, udp,9,s0, tcp,13,s0, udp,13,s0, tcp,19,s0, udp,19,s0, tcp,37,s0, udp,37,s0, tcp,512,s0, tcp,543,s0, tcp,544,s0, tcp,891,s0, udp,891,s0, tcp,892,s0, udp,892,s0, tcp,2105,s0, tcp,5666,s0)
+network_port(inetd_child, tcp,1,s0, udp,1,s0, tcp,9,s0, udp,9,s0, tcp,13,s0, udp,13,s0, tcp,19,s0, udp,19,s0, tcp,512,s0, tcp,543,s0, tcp,544,s0, tcp,891,s0, udp,891,s0, tcp,892,s0, udp,892,s0, tcp,2105,s0, tcp,5666,s0)
 network_port(innd, tcp,119,s0)
+network_port(interwise, tcp,7778,s0, udp,7778,s0)
+network_port(ionixnetmon, tcp,7410,s0, udp,7410,s0)
 network_port(ipmi, udp,623,s0, udp,664,s0)
 network_port(ipp, tcp,631,s0, udp,631,s0, tcp,8610-8614,s0, udp,8610-8614,s0)
 network_port(ipsecnat, tcp,4500,s0, udp,4500,s0)
@@ -139,22 +180,32 @@ network_port(iscsi, tcp,3260,s0)
 network_port(isns, tcp,3205,s0, udp,3205,s0)
 network_port(jabber_client, tcp,5222,s0, tcp,5223,s0)
 network_port(jabber_interserver, tcp,5269,s0)
-network_port(kerberos, tcp,88,s0, udp,88,s0, tcp,750,s0, udp,750,s0)
-network_port(kerberos_admin, tcp,464,s0, udp,464,s0, tcp,749,s0)
-network_port(kerberos_master, tcp,4444,s0, udp,4444,s0)
+network_port(jabber_router, tcp,5347,s0)
+network_port(jacorb, tcp,3528,s0, tcp,3529,s0)
+network_port(jboss_debug, tcp,8787,s0)
+network_port(jboss_messaging, tcp,5445,s0, tcp,5455,s0)
+network_port(jboss_management, tcp,4712,s0, udp,4712,s0, tcp,4447,s0, tcp,7600,s0, tcp,9123,s0, udp,9123,s0, tcp, 9990, s0, tcp, 9999, s0, tcp, 18001, s0)
+network_port(kerberos, tcp,88,s0, udp,88,s0, tcp,750,s0, udp,750,s0, tcp,4444,s0, udp,4444,s0)
+network_port(kerberos_admin, tcp,749,s0)
+network_port(kerberos_password, tcp,464,s0, udp,464,s0)
+network_port(keystone, tcp,5000,s0, udp,5000,s0)
 network_port(kismet, tcp,2501,s0)
 network_port(kprop, tcp,754,s0)
 network_port(ktalkd, udp,517,s0, udp,518,s0)
 network_port(ldap, tcp,389,s0, udp,389,s0, tcp,636,s0, udp,636,s0, tcp,3268,s0)
 network_port(lirc, tcp,8765,s0)
+network_port(luci, tcp,8084,s0)
 network_port(lmtp, tcp,24,s0, udp,24,s0)
 network_port(lrrd) # no defined portcon
+network_port(l2tp, tcp,1701,s0, udp,1701,s0)
 network_port(mail, tcp,2000,s0, tcp,3905,s0)
 network_port(matahari, tcp,49000,s0, udp,49000,s0)
 network_port(memcache, tcp,11211,s0, udp,11211,s0)
 network_port(milter) # no defined portcon
 network_port(mmcc, tcp,5050,s0, udp,5050,s0)
+network_port(mongod, tcp,27017,s0)
 network_port(monopd, tcp,1234,s0)
+network_port(movaz_ssc, tcp,5252,s0)
 network_port(mpd, tcp,6600,s0)
 network_port(msnp, tcp,1863,s0, udp,1863,s0)
 network_port(mssql, tcp,1433-1434,s0, udp,1433-1434,s0)
@@ -164,62 +215,82 @@ network_port(mysqlmanagerd, tcp,2273,s0)
 network_port(nessus, tcp,1241,s0)
 network_port(netport, tcp,3129,s0, udp,3129,s0)
 network_port(netsupport, tcp,5404,s0, udp,5404,s0, tcp,5405,s0, udp,5405,s0)
+network_port(nfs, tcp,2049,s0, udp,2049,s0, tcp,20048-20049,s0, udp,20048-20049,s0)
 network_port(nmbd, udp,137,s0, udp,138,s0)
+network_port(nodejs_debug, tcp,5858,s0, udp,5858,s0)
 network_port(ntop, tcp,3000-3001,s0, udp,3000-3001,s0)
 network_port(ntp, udp,123,s0)
-network_port(oracledb, tcp, 1521,s0,udp, 1521,s0, tcp,2483,s0,udp,2483,s0, tcp,2484,s0, udp,2484,s0)
+network_port(oracle, tcp, 1521,s0,udp, 1521,s0, tcp,2483,s0,udp,2483,s0, tcp,2484,s0, udp,2484,s0)
 network_port(ocsp, tcp,9080,s0)
 network_port(openvpn, tcp,1194,s0, udp,1194,s0)
+network_port(openhpid, tcp,4743,s0, udp,4743,s0)
+network_port(pktcable, tcp,2126,s0, udp,2126,s0, tcp,3198,s0, udp,3198,s0)
 network_port(pegasus_http, tcp,5988,s0)
 network_port(pegasus_https, tcp,5989,s0)
 network_port(pgpkeyserver, udp, 11371,s0, tcp,11371,s0)
 network_port(pingd, tcp,9125,s0)
+network_port(piranha, tcp,3636,s0)
+network_port(pki_ca, tcp, 9180, s0, tcp, 9701, s0, tcp, 9443-9447, s0)
+network_port(pki_kra, tcp, 10180, s0, tcp, 10701, s0, tcp, 10443-10446, s0)
+network_port(pki_ocsp, tcp, 11180, s0, tcp, 11701, s0, tcp, 11443-11446, s0)
+network_port(pki_tks, tcp, 13180, s0, tcp, 13701, s0, tcp, 13443-13446, s0)
+network_port(pki_ra, tcp,12888-12889,s0)
+network_port(pki_tps, tcp,7888-7889,s0)
 network_port(pop, tcp,106,s0, tcp,109,s0, tcp,110,s0, tcp,143,s0, tcp,220,s0, tcp,993,s0, tcp,995,s0, tcp,1109,s0)
 network_port(portmap, udp,111,s0, tcp,111,s0)
 network_port(postfix_policyd, tcp,10031,s0)
 network_port(postgresql, tcp,5432,s0)
 network_port(postgrey, tcp,60000,s0)
+network_port(pptp, tcp, 1723,s0, udp, 1723, s0)
 network_port(prelude, tcp,4690,s0, udp,4690,s0)
 network_port(presence, tcp,5298-5299,s0, udp,5298-5299,s0)
 network_port(printer, tcp,515,s0)
 network_port(ptal, tcp,5703,s0)
-network_port(pulseaudio, tcp,4713,s0)
+network_port(pulseaudio, tcp,4713,s0, udp,4713,s0)
 network_port(puppet, tcp, 8140, s0)
 network_port(pxe, udp,4011,s0)
 network_port(pyzor, udp,24441,s0)
+network_port(quantum, tcp,9696,s0)
 network_port(radacct, udp,1646,s0, udp,1813,s0)
 network_port(radius, udp,1645,s0, udp,1812,s0)
 network_port(radsec, tcp,2083,s0)
 network_port(razor, tcp,2703,s0)
+network_port(time, tcp,37,s0, udp,37,s0)
 network_port(repository, tcp, 6363, s0)
 network_port(ricci, tcp,11111,s0, udp,11111,s0)
 network_port(ricci_modcluster, tcp,16851,s0, udp,16851,s0)
 network_port(rlogind, tcp,513,s0)
-network_port(rndc, tcp,953,s0)
-network_port(router, udp,520,s0, udp,521,s0, tcp,521,s0)
+network_port(rndc, tcp,953,s0, tcp,8953,s0)
+network_port(router, udp,520-521,s0, tcp,521,s0)
 network_port(rsh, tcp,514,s0)
 network_port(rsync, tcp,873,s0, udp,873,s0)
 network_port(rwho, udp,513,s0)
 network_port(sap, tcp,9875,s0, udp,9875,s0)
+network_port(sametime, tcp,1533,s0, udp,1533,s0)
 network_port(sieve, tcp,4190,s0)
 network_port(sip, tcp,5060,s0, udp,5060,s0, tcp,5061,s0, udp,5061,s0)
 network_port(sixxsconfig, tcp,3874,s0, udp,3874,s0)
 network_port(smbd, tcp,137-139,s0, tcp,445,s0)
 network_port(smtp, tcp,25,s0, tcp,465,s0, tcp,587,s0)
-network_port(snmp, udp,161,s0, udp,162,s0, tcp,199,s0, tcp, 1161, s0)
-network_port(socks) # no defined portcon
+network_port(snmp, tcp,161-162,s0, udp,161-162,s0, tcp,199,s0, tcp, 1161, s0)
+type socks_port_t, port_type; dnl network_port(socks) # no defined portcon
 network_port(soundd, tcp,8000,s0, tcp,9433,s0, tcp, 16001, s0)
 network_port(spamd, tcp,783,s0)
 network_port(speech, tcp,8036,s0)
-network_port(squid, udp,3401,s0, tcp,3401,s0, udp,4827,s0, tcp,4827,s0) # snmp and htcp
+network_port(squid, tcp,3128,s0, udp,3401,s0, tcp,3401,s0, udp,4827,s0, tcp,4827,s0) # snmp and htcp
+network_port(ssdp, tcp,1900,s0, udp, 1900, s0)
 network_port(ssh, tcp,22,s0)
+network_port(streaming, tcp, 554, s0, udp, 554, s0, tcp, 1755, s0, udp, 1755, s0)
+network_port(svn, tcp,3690,s0, udp,3690,s0)
 network_port(stunnel) # no defined portcon
 network_port(swat, tcp,901,s0)
-network_port(syslogd, udp,514,s0)
+network_port(sype, tcp,9911,s0, udp,9911,s0)
+network_port(syslogd, udp,514,s0, tcp,6514,s0, udp,6514,s0)
 network_port(tcs, tcp, 30003, s0)
 network_port(telnetd, tcp,23,s0)
 network_port(tftp, udp,69,s0)
-network_port(tor, tcp, 6969, s0, tcp,9001,s0, tcp,9030,s0, tcp,9050,s0, tcp,9051,s0)
+network_port(tor, tcp, 6969, s0, tcp,9001,s0, tcp,9030,s0, tcp,9051,s0)
+network_port(tor_socks, tcp,9050,s0)
 network_port(traceroute, udp,64000-64010,s0)
 network_port(transproxy, tcp,8081,s0)
 network_port(ups, tcp,3493,s0)
@@ -228,9 +299,12 @@ network_port(uucpd, tcp,540,s0)
 network_port(varnishd, tcp,6081-6082,s0)
 network_port(virt, tcp,16509,s0, udp,16509,s0, tcp,16514,s0, udp,16514,s0)
 network_port(virt_migration, tcp,49152-49216,s0)
-network_port(vnc, tcp,5900,s0)
+network_port(vnc, tcp,5900-5983,s0, tcp,5985-5999,s0)
 network_port(wccp, udp,2048,s0)
+network_port(websm, tcp,9090,s0, udp,9090,s0)
 network_port(whois, tcp,43,s0, udp,43,s0, tcp, 4321, s0 , udp, 4321, s0 )
+network_port(winshadow, tcp, 3261, s0, udp, 3261,s0)
+network_port(wsicopy, tcp, 3378, s0, udp, 3378,s0)
 network_port(xdmcp, udp,177,s0, tcp,177,s0)
 network_port(xen, tcp,8002,s0)
 network_port(xfs, tcp,7100,s0)
@@ -242,17 +316,22 @@ network_port(zookeeper_client, tcp,2181,s0)
 network_port(zookeeper_election, tcp,3888,s0)
 network_port(zookeeper_leader, tcp,2888,s0)
 network_port(zebra, tcp,2600-2604,s0, tcp,2606,s0, udp,2600-2604,s0, udp,2606,s0)
+network_port(zented, tcp,1229,s0, udp,1229,s0)
 network_port(zope, tcp,8021,s0)
 
 # Defaults for reserved ports.	Earlier portcon entries take precedence;
 # these entries just cover any remaining reserved ports not otherwise declared.
 
-portcon udp 1024-65535 gen_context(system_u:object_r:unreserved_port_t, s0)
-portcon tcp 1024-65535 gen_context(system_u:object_r:unreserved_port_t, s0)
 portcon tcp 512-1023 gen_context(system_u:object_r:hi_reserved_port_t, s0)
 portcon udp 512-1023 gen_context(system_u:object_r:hi_reserved_port_t, s0)
 portcon tcp 1-511 gen_context(system_u:object_r:reserved_port_t, s0)
 portcon udp 1-511 gen_context(system_u:object_r:reserved_port_t, s0)
+portcon tcp 1024-32767 gen_context(system_u:object_r:unreserved_port_t, s0)
+portcon tcp 32768-61000 gen_context(system_u:object_r:ephemeral_port_t, s0)
+portcon tcp 61001-65535 gen_context(system_u:object_r:unreserved_port_t, s0)
+portcon udp 1024-32767 gen_context(system_u:object_r:unreserved_port_t, s0)
+portcon udp 32768-61000 gen_context(system_u:object_r:ephemeral_port_t, s0)
+portcon udp 61001-65535 gen_context(system_u:object_r:unreserved_port_t, s0)
 
 ########################################
 #
@@ -297,9 +376,10 @@ typealias netif_t alias { lo_netif_t netif_lo_t };
 allow corenet_unconfined_type node_type:node *;
 allow corenet_unconfined_type netif_type:netif *;
 allow corenet_unconfined_type packet_type:packet *;
+allow corenet_unconfined_type port_type:dccp_socket { send_msg recv_msg name_connect };
 allow corenet_unconfined_type port_type:tcp_socket { send_msg recv_msg name_connect };
 allow corenet_unconfined_type port_type:udp_socket { send_msg recv_msg };
 
 # Bind to any network address.
-allow corenet_unconfined_type port_type:{ tcp_socket udp_socket rawip_socket } name_bind;
-allow corenet_unconfined_type node_type:{ tcp_socket udp_socket rawip_socket } node_bind;
+allow corenet_unconfined_type port_type:{ dccp_socket tcp_socket udp_socket rawip_socket } name_bind;
+allow corenet_unconfined_type node_type:{ dccp_socket tcp_socket udp_socket rawip_socket } node_bind;
diff --git a/policy/modules/kernel/corenetwork.te.m4 b/policy/modules/kernel/corenetwork.te.m4
index 3f6e168..51ad69a 100644
--- a/policy/modules/kernel/corenetwork.te.m4
+++ b/policy/modules/kernel/corenetwork.te.m4
@@ -86,6 +86,11 @@ define(`add_port_attribute',`dnl
 ifelse(eval(range_start($2) < 1024),1,`typeattribute $1 reserved_port_type;',`typeattribute $1 unreserved_port_type;')
 ')
 
+define(`add_ephemeral_attribute',`dnl
+ifelse(eval(range_start($3) >= 32768 && range_start($3) < 61001),1,`typeattribute $1 ephemeral_port_type;
+',`ifelse(`$5',`',`',`add_ephemeral_attribute($1,shiftn(4,$*))')')dnl
+')
+
 # bindresvport in glibc starts searching for reserved ports at 512
 define(`add_rpc_attribute',`dnl
 ifelse(eval(range_start($3) >= 512 && range_start($3) < 1024),1,`typeattribute $1 rpc_port_type;
@@ -101,6 +106,7 @@ type $1_client_packet_t, packet_type, client_packet_type;
 type $1_server_packet_t, packet_type, server_packet_type;
 ifelse(`$2',`',`',`add_port_attribute($1_port_t,$3)')dnl
 ifelse(`$2',`',`',`add_rpc_attribute($1_port_t,shift($*))')dnl
+ifelse(`$2',`',`',`add_ephemeral_attribute($1_port_t,shift($*))')dnl
 ifelse(`$2',`',`',`declare_portcons($1_port_t,shift($*))')dnl
 ')
 
diff --git a/policy/modules/kernel/devices.fc b/policy/modules/kernel/devices.fc
index 02b7ac1..67183c5 100644
--- a/policy/modules/kernel/devices.fc
+++ b/policy/modules/kernel/devices.fc
@@ -15,12 +15,14 @@
 /dev/atibm		-c	gen_context(system_u:object_r:mouse_device_t,s0)
 /dev/audio.*		-c	gen_context(system_u:object_r:sound_device_t,s0)
 /dev/autofs.*		-c	gen_context(system_u:object_r:autofs_device_t,s0)
+/dev/bsr.*		-c	gen_context(system_u:object_r:cpu_device_t,s0)
 /dev/beep		-c	gen_context(system_u:object_r:sound_device_t,s0)
 /dev/btrfs-control	-c	gen_context(system_u:object_r:lvm_control_t,s0)
 /dev/controlD64		-c	gen_context(system_u:object_r:xserver_misc_device_t,s0)
 /dev/crash		-c	gen_context(system_u:object_r:crash_device_t,mls_systemhigh)
 /dev/dahdi/.*		-c	gen_context(system_u:object_r:sound_device_t,s0)
-/dev/dmfm		-c	gen_context(system_u:object_r:sound_device_t,s0)
+/dev/dlm.*		-c	gen_context(system_u:object_r:dlm_control_device_t,s0)
+/dev/dmfm.*		-c	gen_context(system_u:object_r:sound_device_t,s0)
 /dev/dmmidi.*		-c	gen_context(system_u:object_r:sound_device_t,s0)
 /dev/dsp.*		-c	gen_context(system_u:object_r:sound_device_t,s0)
 /dev/efirtc		-c	gen_context(system_u:object_r:clock_device_t,s0)
@@ -57,8 +59,10 @@
 /dev/lirc[0-9]+		-c	gen_context(system_u:object_r:lirc_device_t,s0)
 /dev/lircm		-c	gen_context(system_u:object_r:mouse_device_t,s0)
 /dev/logibm		-c	gen_context(system_u:object_r:mouse_device_t,s0)
+/dev/loop-control	-c	gen_context(system_u:object_r:loop_control_device_t,s0)
 /dev/lp.*		-c	gen_context(system_u:object_r:printer_device_t,s0)
 /dev/mcelog		-c	gen_context(system_u:object_r:kmsg_device_t,mls_systemhigh)
+/dev/media.*	-c	gen_context(system_u:object_r:v4l_device_t,s0)
 /dev/mem		-c	gen_context(system_u:object_r:memory_device_t,mls_systemhigh)
 /dev/mergemem		-c	gen_context(system_u:object_r:memory_device_t,mls_systemhigh)
 /dev/mga_vid.*		-c	gen_context(system_u:object_r:xserver_misc_device_t,s0)
@@ -126,12 +130,14 @@ ifdef(`distro_suse', `
 /dev/vttuner		-c	gen_context(system_u:object_r:v4l_device_t,s0)
 /dev/vtx.*		-c	gen_context(system_u:object_r:v4l_device_t,s0)
 /dev/watchdog		-c	gen_context(system_u:object_r:watchdog_device_t,s0)
+/dev/cdc-wdm[0-1]	-c	gen_context(system_u:object_r:modem_device_t,s0)
 /dev/winradio.		-c	gen_context(system_u:object_r:v4l_device_t,s0)
 /dev/z90crypt		-c	gen_context(system_u:object_r:crypt_device_t,s0)
 /dev/zero		-c	gen_context(system_u:object_r:zero_device_t,s0)
 
 /dev/bus/usb/.*/[0-9]+	-c	gen_context(system_u:object_r:usb_device_t,s0)
 
+/dev/ati/card.*		-c	gen_context(system_u:object_r:xserver_misc_device_t,s0)
 /dev/card.*		-c	gen_context(system_u:object_r:xserver_misc_device_t,s0)
 /dev/cmx.*		-c	gen_context(system_u:object_r:smartcard_device_t,s0)
 
@@ -195,12 +201,22 @@ ifdef(`distro_debian',`
 /lib/udev/devices/null	-c	gen_context(system_u:object_r:null_device_t,s0)
 /lib/udev/devices/zero	-c	gen_context(system_u:object_r:zero_device_t,s0)
 
-/sys(/.*)?			gen_context(system_u:object_r:sysfs_t,s0)
-
 ifdef(`distro_redhat',`
 # originally from named.fc
 /var/named/chroot/dev	-d	gen_context(system_u:object_r:device_t,s0)
 /var/named/chroot/dev/null -c	gen_context(system_u:object_r:null_device_t,s0)
 /var/named/chroot/dev/random -c	gen_context(system_u:object_r:random_device_t,s0)
 /var/named/chroot/dev/zero -c	gen_context(system_u:object_r:zero_device_t,s0)
+/var/spool/postfix/dev    -d    gen_context(system_u:object_r:device_t,s0)
 ')
+
+#
+# /sys
+#
+/sys(/.*)?			gen_context(system_u:object_r:sysfs_t,s0)
+/sys/devices/system/cpu/online	gen_context(system_u:object_r:cpu_online_t,s0)
+
+/usr/lib/udev/devices(/.*)?		gen_context(system_u:object_r:device_t,s0)
+/usr/lib/udev/devices/lp.*	-c	gen_context(system_u:object_r:printer_device_t,s0)
+/usr/lib/udev/devices/null	-c	gen_context(system_u:object_r:null_device_t,s0)
+/usr/lib/udev/devices/zero	-c	gen_context(system_u:object_r:zero_device_t,s0)
diff --git a/policy/modules/kernel/devices.if b/policy/modules/kernel/devices.if
index d820975..e236661 100644
--- a/policy/modules/kernel/devices.if
+++ b/policy/modules/kernel/devices.if
@@ -143,13 +143,32 @@ interface(`dev_relabel_all_dev_nodes',`
 		type device_t;
 	')
 
-	relabelfrom_dirs_pattern($1, device_t, device_node)
-	relabelfrom_files_pattern($1, device_t, device_node)
-	relabelfrom_lnk_files_pattern($1, device_t, { device_t device_node })
-	relabelfrom_fifo_files_pattern($1, device_t, device_node)
-	relabelfrom_sock_files_pattern($1, device_t, device_node)
-	relabel_blk_files_pattern($1, device_t, { device_t device_node })
-	relabel_chr_files_pattern($1, device_t, { device_t device_node })
+	relabel_dirs_pattern($1, device_t, device_node)
+	relabel_files_pattern($1, device_t, device_node)
+	relabel_lnk_files_pattern($1, device_t, device_node)
+	relabel_fifo_files_pattern($1, device_t,  device_node)
+	relabel_sock_files_pattern($1, device_t, device_node)
+	relabel_blk_files_pattern($1, device_t, device_node)
+	relabel_chr_files_pattern($1, device_t, device_node)
+')
+
+########################################
+## <summary>
+##	Allow full relabeling (to and from) of all device files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`dev_relabel_all_dev_files',`
+	gen_require(`
+		type device_t;
+	')
+
+	relabel_files_pattern($1, device_t, device_t)
 ')
 
 ########################################
@@ -209,6 +228,24 @@ interface(`dev_dontaudit_list_all_dev_nodes',`
 
 ########################################
 ## <summary>
+##	Dontaudit attempts to list all device nodes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`dev_dontaudit_all_access_check',`
+	gen_require(`
+		attribute device_node;
+	')
+
+	dontaudit $1 device_node:file_class_set audit_access;
+')
+
+########################################
+## <summary>
 ##	Add entries to directories in /dev.
 ## </summary>
 ## <param name="domain">
@@ -352,6 +389,24 @@ interface(`dev_read_generic_files',`
 	read_files_pattern($1, device_t, device_t)
 ')
 
+#######################################
+## <summary>
+##  Read generic files in /dev.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`dev_dontaudit_read_generic_files',`
+    gen_require(`
+        type device_t;
+    ')
+
+    dontaudit $1 device_t:file { read getattr };
+')
+
 ########################################
 ## <summary>
 ##	Read and write generic files in /dev.
@@ -462,6 +517,42 @@ interface(`dev_getattr_generic_blk_files',`
 
 ########################################
 ## <summary>
+##	Rename generic block device nodes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_rename_generic_blk_files',`
+	gen_require(`
+		type device_t;
+	')
+
+	rename_blk_files_pattern($1, device_t, device_t)
+')
+
+########################################
+## <summary>
+##	write generic sock files in /dev.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`dev_write_generic_sock_files',`
+	gen_require(`
+		type device_t;
+	')
+
+	write_sock_files_pattern($1, device_t, device_t)
+')
+
+########################################
+## <summary>
 ##	Dontaudit getattr on generic block devices.
 ## </summary>
 ## <param name="domain">
@@ -570,6 +661,24 @@ interface(`dev_dontaudit_getattr_generic_chr_files',`
 
 ########################################
 ## <summary>
+##	Rename generic character device nodes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_rename_generic_chr_files',`
+	gen_require(`
+		type device_t;
+	')
+
+	rename_chr_files_pattern($1, device_t, device_t)
+')
+
+########################################
+## <summary>
 ##	Dontaudit setattr for generic character device files.
 ## </summary>
 ## <param name="domain">
@@ -646,7 +755,7 @@ interface(`dev_rw_generic_blk_files',`
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain to dontaudit access.
+##	Domain to not audit.
 ##	</summary>
 ## </param>
 #
@@ -733,7 +842,7 @@ interface(`dev_dontaudit_setattr_generic_symlinks',`
 
 ########################################
 ## <summary>
-##	Read symbolic links in device directories.
+##	Create symbolic links in device directories.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -741,17 +850,17 @@ interface(`dev_dontaudit_setattr_generic_symlinks',`
 ##	</summary>
 ## </param>
 #
-interface(`dev_read_generic_symlinks',`
+interface(`dev_create_generic_symlinks',`
 	gen_require(`
 		type device_t;
 	')
 
-	allow $1 device_t:lnk_file read_lnk_file_perms;
+	create_lnk_files_pattern($1, device_t, device_t)
 ')
 
 ########################################
 ## <summary>
-##	Create symbolic links in device directories.
+##	Delete symbolic links in device directories.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -759,17 +868,17 @@ interface(`dev_read_generic_symlinks',`
 ##	</summary>
 ## </param>
 #
-interface(`dev_create_generic_symlinks',`
+interface(`dev_delete_generic_symlinks',`
 	gen_require(`
 		type device_t;
 	')
 
-	create_lnk_files_pattern($1, device_t, device_t)
+	delete_lnk_files_pattern($1, device_t, device_t)
 ')
 
 ########################################
 ## <summary>
-##	Delete symbolic links in device directories.
+##	Read symbolic links in device directories.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -777,12 +886,12 @@ interface(`dev_create_generic_symlinks',`
 ##	</summary>
 ## </param>
 #
-interface(`dev_delete_generic_symlinks',`
+interface(`dev_read_generic_symlinks',`
 	gen_require(`
 		type device_t;
 	')
 
-	delete_lnk_files_pattern($1, device_t, device_t)
+	allow $1 device_t:lnk_file read_lnk_file_perms;
 ')
 
 ########################################
@@ -1034,6 +1143,7 @@ interface(`dev_dontaudit_getattr_all_blk_files',`
 interface(`dev_getattr_all_chr_files',`
 	gen_require(`
 		attribute device_node;
+		type device_t;
 	')
 
 	getattr_chr_files_pattern($1, device_t, device_node)
@@ -1206,6 +1316,42 @@ interface(`dev_create_all_chr_files',`
 
 ########################################
 ## <summary>
+##	rw all inherited character device files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_rw_all_inherited_chr_files',`
+	gen_require(`
+		attribute device_node;
+	')
+
+	allow $1 device_node:chr_file rw_inherited_chr_file_perms;
+')
+
+########################################
+## <summary>
+##	rw all inherited blk device files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_rw_all_inherited_blk_files',`
+	gen_require(`
+		attribute device_node;
+	')
+
+	allow $1 device_node:blk_file rw_inherited_blk_file_perms;
+')
+
+########################################
+## <summary>
 ##	Delete all block device files.
 ## </summary>
 ## <param name="domain">
@@ -1663,6 +1809,26 @@ interface(`dev_filetrans_cardmgr',`
 
 ########################################
 ## <summary>
+##	Automatic type transition to the type
+##	for xserver misc device nodes when
+##	created in /dev.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_filetrans_xserver_misc',`
+	gen_require(`
+		type device_t, xserver_misc_device_t;
+	')
+
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file )
+')
+
+########################################
+## <summary>
 ##	Get the attributes of the CPU
 ##	microcode and id interfaces.
 ## </summary>
@@ -2383,7 +2549,97 @@ interface(`dev_filetrans_lirc',`
 
 ########################################
 ## <summary>
-##	Get the attributes of the lvm comtrol device.
+##	Get the attributes of the loop comtrol device.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_getattr_loop_control',`
+	gen_require(`
+		type device_t, loop_control_device_t;
+	')
+
+	getattr_chr_files_pattern($1, device_t, loop_control_device_t)
+')
+
+########################################
+## <summary>
+##	Read the loop comtrol device.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_read_loop_control',`
+	gen_require(`
+		type device_t, loop_control_device_t;
+	')
+
+	read_chr_files_pattern($1, device_t, loop_control_device_t)
+')
+
+########################################
+## <summary>
+##	Read and write the loop control device.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_rw_loop_control',`
+	gen_require(`
+		type device_t, loop_control_device_t;
+	')
+
+	rw_chr_files_pattern($1, device_t, loop_control_device_t)
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read and write loop control device.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`dev_dontaudit_rw_loop_control',`
+	gen_require(`
+		type loop_control_device_t;
+	')
+
+	dontaudit $1 loop_control_device_t:chr_file rw_file_perms;
+')
+
+########################################
+## <summary>
+##	Delete the loop control device.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_delete_loop_control_dev',`
+	gen_require(`
+		type device_t, loop_control_device_t;
+	')
+
+	delete_chr_files_pattern($1, device_t, loop_control_device_t)
+')
+
+########################################
+## <summary>
+##	Get the attributes of the loop comtrol device.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -2706,7 +2962,7 @@ interface(`dev_write_misc',`
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain to not audit.
 ##	</summary>
 ## </param>
 #
@@ -2956,8 +3212,8 @@ interface(`dev_dontaudit_write_mtrr',`
 		type mtrr_device_t;
 	')
 
-	dontaudit $1 mtrr_device_t:file write;
-	dontaudit $1 mtrr_device_t:chr_file write;
+	dontaudit $1 mtrr_device_t:file write_file_perms;
+	dontaudit $1 mtrr_device_t:chr_file write_chr_file_perms;
 ')
 
 ########################################
@@ -3235,7 +3491,7 @@ interface(`dev_rw_printer',`
 
 ########################################
 ## <summary>
-##	Read printk devices (e.g., /dev/kmsg /dev/mcelog)
+##	Relabel the printer device node.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -3243,12 +3499,31 @@ interface(`dev_rw_printer',`
 ##	</summary>
 ## </param>
 #
-interface(`dev_read_printk',`
+interface(`dev_relabel_printer',`
 	gen_require(`
-		type device_t, printk_device_t;
+		type printer_device_t;
 	')
 
-	read_chr_files_pattern($1, device_t, printk_device_t)
+	allow $1 printer_device_t:chr_file relabel_chr_file_perms;
+')
+
+########################################
+## <summary>
+##	Read and write the printer device.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_manage_printer',`
+	gen_require(`
+		type device_t, printer_device_t;
+	')
+
+	manage_chr_files_pattern($1, device_t, printer_device_t)
+	dev_filetrans_printer_named_dev($1)
 ')
 
 ########################################
@@ -3836,6 +4111,42 @@ interface(`dev_getattr_sysfs_dirs',`
 
 ########################################
 ## <summary>
+##	Set the attributes of sysfs directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_setattr_sysfs_dirs',`
+	gen_require(`
+		type sysfs_t;
+	')
+
+	allow $1 sysfs_t:dir setattr_dir_perms;
+')
+
+########################################
+## <summary>
+##	Get attributes of sysfs filesystems.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_getattr_sysfs_fs',`
+	gen_require(`
+		type sysfs_t;
+	')
+
+	allow $1 sysfs_t:filesystem getattr;
+')
+
+########################################
+## <summary>
 ##	Search the sysfs directories.
 ## </summary>
 ## <param name="domain">
@@ -3885,6 +4196,7 @@ interface(`dev_list_sysfs',`
 		type sysfs_t;
 	')
 
+	read_lnk_files_pattern($1, sysfs_t, sysfs_t)
 	list_dirs_pattern($1, sysfs_t, sysfs_t)
 ')
 
@@ -3927,23 +4239,49 @@ interface(`dev_dontaudit_write_sysfs_dirs',`
 
 ########################################
 ## <summary>
-##	Create, read, write, and delete sysfs
-##	directories.
+##	Read cpu online hardware state information.
 ## </summary>
+## <desc>
+##	<p>
+##	Allow the specified domain to read /sys/devices/system/cpu/online file.
+##	</p>
+## </desc>
 ## <param name="domain">
 ##	<summary>
 ##	Domain allowed access.
 ##	</summary>
 ## </param>
 #
-interface(`dev_manage_sysfs_dirs',`
+interface(`dev_read_cpu_online',`
 	gen_require(`
+		type cpu_online_t;
+	')
+
+	dev_search_sysfs($1)
+	read_files_pattern($1, cpu_online_t, cpu_online_t)
+')
+
+########################################
+## <summary>
+##	Relabel cpu online hardware state information.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_relabel_cpu_online',`
+	gen_require(`
+		type cpu_online_t;
 		type sysfs_t;
 	')
 
-	manage_dirs_pattern($1, sysfs_t, sysfs_t)
+	dev_search_sysfs($1)
+	allow $1 cpu_online_t:file relabel_file_perms;
 ')
 
+
 ########################################
 ## <summary>
 ##	Read hardware state information.
@@ -3997,6 +4335,62 @@ interface(`dev_rw_sysfs',`
 
 ########################################
 ## <summary>
+##	Relabel hardware state directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_relabel_sysfs_dirs',`
+	gen_require(`
+		type sysfs_t;
+	')
+
+	relabel_dirs_pattern($1, sysfs_t, sysfs_t)
+')
+
+########################################
+## <summary>
+##	Relabel hardware state files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_relabel_all_sysfs',`
+	gen_require(`
+		type sysfs_t;
+	')
+
+	relabel_dirs_pattern($1, sysfs_t, sysfs_t)
+	relabel_files_pattern($1, sysfs_t, sysfs_t)
+	relabel_lnk_files_pattern($1, sysfs_t, sysfs_t)
+')
+
+########################################
+## <summary>
+##	Allow caller to modify hardware state information.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_manage_sysfs_dirs',`
+	gen_require(`
+		type sysfs_t;
+	')
+
+	manage_dirs_pattern($1, sysfs_t, sysfs_t)
+')
+
+########################################
+## <summary>
 ##	Read and write the TPM device.
 ## </summary>
 ## <param name="domain">
@@ -4094,6 +4488,25 @@ interface(`dev_write_urand',`
 
 ########################################
 ## <summary>
+##	Do not audit attempts to write to pseudo
+##	random devices (e.g., /dev/urandom)
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`dev_dontaudit_write_urand',`
+	gen_require(`
+		type urandom_device_t;
+	')
+
+	dontaudit $1 urandom_device_t:chr_file write;
+')
+
+########################################
+## <summary>
 ##	Getattr generic the USB devices.
 ## </summary>
 ## <param name="domain">
@@ -4128,6 +4541,24 @@ interface(`dev_setattr_generic_usb_dev',`
 	setattr_chr_files_pattern($1, device_t, usb_device_t)
 ')
 
+######################################
+## <summary>
+##  Allow relabeling (to and from) of generic usb device
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed to relabel.
+##  </summary>
+## </param>
+#
+interface(`dev_relabel_generic_usb_dev',`
+    gen_require(`
+        type usb_device_t;
+    ')
+
+    relabel_dirs_pattern($1, usb_device_t, usb_device_t)
+')
+
 ########################################
 ## <summary>
 ##	Read generic the USB devices.
@@ -4520,6 +4951,24 @@ interface(`dev_rw_vhost',`
 
 ########################################
 ## <summary>
+##	Allow read/write inheretid the vhost net device
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_rw_inherited_vhost',`
+	gen_require(`
+		type device_t, vhost_device_t;
+	')
+
+	allow $1 vhost_device_t:chr_file rw_inherited_chr_file_perms;
+')
+
+########################################
+## <summary>
 ##	Read and write VMWare devices.
 ## </summary>
 ## <param name="domain">
@@ -4725,6 +5174,26 @@ interface(`dev_rw_xserver_misc',`
 
 ########################################
 ## <summary>
+##	Read and write X server miscellaneous devices.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_manage_xserver_misc',`
+	gen_require(`
+		type device_t, xserver_misc_device_t;
+	')
+
+	manage_chr_files_pattern($1, device_t, xserver_misc_device_t)
+
+	dev_filetrans_xserver_named_dev($1)
+')
+
+########################################
+## <summary>
 ##	Read and write to the zero device (/dev/zero).
 ## </summary>
 ## <param name="domain">
@@ -4814,3 +5283,861 @@ interface(`dev_unconfined',`
 
 	typeattribute $1 devices_unconfined_type;
 ')
+
+########################################
+## <summary>
+##	Dontaudit getattr on all device nodes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`dev_dontaudit_getattr_all',`
+	gen_require(`
+		attribute device_node;
+		type device_t;
+	')
+
+	dontaudit $1 { device_t device_node }:dir_file_class_set getattr;
+')
+
+########################################
+## <summary>
+##	Create all named devices with the correct label
+## </summary>
+## <param name="domain">
+##	<summary>
+##      Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_filetrans_printer_named_dev',`
+
+	gen_require(`
+		type printer_device_t;
+
+	')
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "irlpt0")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "irlpt1")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "irlpt2")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "irlpt3")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "irlpt4")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "irlpt5")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "irlpt6")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "irlpt7")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "irlpt8")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "irlpt9")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "lp0")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "lp1")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "lp2")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "lp3")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "lp4")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "lp5")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "lp6")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "lp7")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "lp8")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "lp9")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "par0")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "par1")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "par2")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "par3")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "par4")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "par5")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "par6")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "par7")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "par8")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "par9")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "usblp0")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "usblp1")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "usblp2")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "usblp3")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "usblp4")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "usblp5")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "usblp6")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "usblp7")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "usblp8")
+	filetrans_pattern($1, device_t, printer_device_t, chr_file, "usblp9")
+')
+
+########################################
+## <summary>
+##	Create all named devices with the correct label
+## </summary>
+## <param name="domain">
+##	<summary>
+##      Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_filetrans_all_named_dev',`
+
+gen_require(`
+	type device_t;
+	type usb_device_t;
+	type sound_device_t;
+	type apm_bios_t;
+	type mouse_device_t;
+	type autofs_device_t;
+	type lvm_control_t;
+	type crash_device_t;
+	type dlm_control_device_t;
+	type clock_device_t;
+	type v4l_device_t;
+	type event_device_t;
+	type xen_device_t;
+	type framebuf_device_t;
+	type null_device_t;
+	type random_device_t;
+	type dri_device_t;
+	type ipmi_device_t;
+	type memory_device_t;
+	type kmsg_device_t;
+	type qemu_device_t;
+	type ksm_device_t;
+	type kvm_device_t;
+	type lirc_device_t;
+	type cpu_device_t;
+	type scanner_device_t;
+	type modem_device_t;
+	type vhost_device_t;
+	type netcontrol_device_t;
+	type nvram_device_t;
+	type power_device_t;
+	type wireless_device_t;
+	type tpm_device_t;
+	type userio_device_t;
+	type urandom_device_t;
+	type usbmon_device_t;
+	type vmware_device_t;
+	type watchdog_device_t;
+	type crypt_device_t;
+	type zero_device_t;
+	type smartcard_device_t;
+	type mtrr_device_t;
+')
+
+	dev_filetrans_printer_named_dev($1)
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "admmidi0")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "admmidi1")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "admmidi2")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "admmidi3")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "admmidi4")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "admmidi5")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "admmidi6")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "admmidi7")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "admmidi8")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "admmidi9")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "adsp0")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "adsp1")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "adsp2")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "adsp3")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "adsp4")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "adsp5")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "adsp6")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "adsp7")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "adsp8")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "adsp9")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "aload0")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "aload1")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "aload2")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "aload3")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "aload4")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "aload5")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "aload6")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "aload7")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "aload8")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "aload9")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "amidi0")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "amidi1")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "amidi2")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "amidi3")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "amidi4")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "amidi5")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "amidi6")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "amidi7")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "amidi8")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "amidi9")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "amixer0")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "amixer1")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "amixer2")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "amixer3")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "amixer4")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "amixer5")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "amixer6")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "amixer7")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "amixer8")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "amixer9")
+	filetrans_pattern($1, device_t, apm_bios_t, chr_file, "apm_bios")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "atibm")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "audio0")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "audio1")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "audio2")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "audio3")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "audio4")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "audio5")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "audio6")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "audio7")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "audio8")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "audio9")
+	filetrans_pattern($1, device_t, autofs_device_t, chr_file, "autofs0")
+	filetrans_pattern($1, device_t, autofs_device_t, chr_file, "autofs1")
+	filetrans_pattern($1, device_t, autofs_device_t, chr_file, "autofs2")
+	filetrans_pattern($1, device_t, autofs_device_t, chr_file, "autofs3")
+	filetrans_pattern($1, device_t, autofs_device_t, chr_file, "autofs4")
+	filetrans_pattern($1, device_t, autofs_device_t, chr_file, "autofs5")
+	filetrans_pattern($1, device_t, autofs_device_t, chr_file, "autofs6")
+	filetrans_pattern($1, device_t, autofs_device_t, chr_file, "autofs7")
+	filetrans_pattern($1, device_t, autofs_device_t, chr_file, "autofs8")
+	filetrans_pattern($1, device_t, autofs_device_t, chr_file, "autofs9")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "beep")
+	filetrans_pattern($1, device_t, lvm_control_t, chr_file, "btrfs-control")
+	filetrans_pattern($1, device_t, crash_device_t, chr_file, "crash")
+	filetrans_pattern($1, device_t, dlm_control_device_t, chr_file, "dlm0")
+	filetrans_pattern($1, device_t, dlm_control_device_t, chr_file, "dlm1")
+	filetrans_pattern($1, device_t, dlm_control_device_t, chr_file, "dlm2")
+	filetrans_pattern($1, device_t, dlm_control_device_t, chr_file, "dlm3")
+	filetrans_pattern($1, device_t, dlm_control_device_t, chr_file, "dlm4")
+	filetrans_pattern($1, device_t, dlm_control_device_t, chr_file, "dlm5")
+	filetrans_pattern($1, device_t, dlm_control_device_t, chr_file, "dlm6")
+	filetrans_pattern($1, device_t, dlm_control_device_t, chr_file, "dlm7")
+	filetrans_pattern($1, device_t, dlm_control_device_t, chr_file, "dlm8")
+	filetrans_pattern($1, device_t, dlm_control_device_t, chr_file, "dlm9")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "dmfm")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "dmmidi0")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "dmmidi1")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "dmmidi2")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "dmmidi3")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "dmmidi4")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "dmmidi5")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "dmmidi6")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "dmmidi7")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "dmmidi8")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "dmmidi9")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "dsp0")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "dsp1")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "dsp2")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "dsp3")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "dsp4")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "dsp5")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "dsp6")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "dsp7")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "dsp8")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "dsp9")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "efirtc")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "e2201")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "em83000")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "em83001")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "em83002")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "em83003")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "em83004")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "em83005")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "em83006")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "em83007")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "em83008")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "em83009")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "event0")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "event1")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "event2")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "event3")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "event4")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "event5")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "event6")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "event7")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "event8")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "event9")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "event10")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "event11")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "event12")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "event13")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "event14")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "event15")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "event16")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "event17")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "event18")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "event19")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "event20")
+	filetrans_pattern($1, device_t, xen_device_t, chr_file, "evtchn")
+	filetrans_pattern($1, device_t, framebuf_device_t, chr_file, "fb0")
+	filetrans_pattern($1, device_t, framebuf_device_t, chr_file, "fb1")
+	filetrans_pattern($1, device_t, framebuf_device_t, chr_file, "fb2")
+	filetrans_pattern($1, device_t, framebuf_device_t, chr_file, "fb3")
+	filetrans_pattern($1, device_t, framebuf_device_t, chr_file, "fb4")
+	filetrans_pattern($1, device_t, framebuf_device_t, chr_file, "fb5")
+	filetrans_pattern($1, device_t, framebuf_device_t, chr_file, "fb6")
+	filetrans_pattern($1, device_t, framebuf_device_t, chr_file, "fb7")
+	filetrans_pattern($1, device_t, framebuf_device_t, chr_file, "fb8")
+	filetrans_pattern($1, device_t, framebuf_device_t, chr_file, "fb9")
+	filetrans_pattern($1, device_t, null_device_t, chr_file, "full")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "fw0")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "fw1")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "fw2")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "fw3")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "fw4")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "fw5")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "fw6")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "fw7")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "fw8")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "fw9")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "000")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "001")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "002")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "003")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "004")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "005")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "006")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "007")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "008")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "009")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "010")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "011")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "012")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "013")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "014")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "015")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "016")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "017")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "018")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "019")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "020")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "021")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "022")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "023")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "024")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "025")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "026")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "027")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "028")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "029")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "gtrsc0")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "gtrsc1")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "gtrsc2")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "gtrsc3")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "gtrsc4")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "gtrsc5")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "gtrsc6")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "gtrsc7")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "gtrsc8")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "gtrsc9")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "hfmodem")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "hiddev0")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "hiddev1")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "hiddev2")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "hiddev3")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "hiddev4")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "hiddev5")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "hiddev6")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "hiddev7")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "hiddev8")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "hiddev9")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "hidraw0")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "hidraw1")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "hidraw2")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "hidraw3")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "hidraw4")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "hidraw5")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "hidraw6")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "hidraw7")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "hidraw8")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "hidraw9")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "hpet")
+	filetrans_pattern($1, device_t, random_device_t, chr_file, "hw_random")
+	filetrans_pattern($1, device_t, random_device_t, chr_file, "hwrng")
+	filetrans_pattern($1, device_t, dri_device_t, chr_file, "i915")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "inportbm")
+	filetrans_pattern($1, device_t, ipmi_device_t, chr_file, "ipmi0")
+	filetrans_pattern($1, device_t, ipmi_device_t, chr_file, "ipmi1")
+	filetrans_pattern($1, device_t, ipmi_device_t, chr_file, "ipmi2")
+	filetrans_pattern($1, device_t, ipmi_device_t, chr_file, "ipmi3")
+	filetrans_pattern($1, device_t, ipmi_device_t, chr_file, "ipmi4")
+	filetrans_pattern($1, device_t, ipmi_device_t, chr_file, "ipmi5")
+	filetrans_pattern($1, device_t, ipmi_device_t, chr_file, "ipmi6")
+	filetrans_pattern($1, device_t, ipmi_device_t, chr_file, "ipmi7")
+	filetrans_pattern($1, device_t, ipmi_device_t, chr_file, "ipmi8")
+	filetrans_pattern($1, device_t, ipmi_device_t, chr_file, "ipmi9")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "jbm")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "js0")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "js1")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "js2")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "js3")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "js4")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "js5")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "js6")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "js7")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "js8")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "js9")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "mouse0")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "mouse1")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "mouse2")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "mouse3")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "mouse4")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "mouse5")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "mouse6")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "mouse7")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "mouse8")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "mouse9")
+	filetrans_pattern($1, device_t, memory_device_t, chr_file, "kmem")
+	filetrans_pattern($1, device_t, kmsg_device_t, chr_file, "kmsg")
+	filetrans_pattern($1, device_t, qemu_device_t, chr_file, "kqemu")
+	filetrans_pattern($1, device_t, ksm_device_t, chr_file, "ksm")
+	filetrans_pattern($1, device_t, kvm_device_t, chr_file, "kvm")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "lik0")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "lik1")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "lik2")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "lik3")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "lik4")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "lik5")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "lik6")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "lik7")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "lik8")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "lik9")
+	filetrans_pattern($1, device_t, lirc_device_t, chr_file, "lirc0")
+	filetrans_pattern($1, device_t, lirc_device_t, chr_file, "lirc1")
+	filetrans_pattern($1, device_t, lirc_device_t, chr_file, "lirc2")
+	filetrans_pattern($1, device_t, lirc_device_t, chr_file, "lirc3")
+	filetrans_pattern($1, device_t, lirc_device_t, chr_file, "lirc4")
+	filetrans_pattern($1, device_t, lirc_device_t, chr_file, "lirc5")
+	filetrans_pattern($1, device_t, lirc_device_t, chr_file, "lirc6")
+	filetrans_pattern($1, device_t, lirc_device_t, chr_file, "lirc7")
+	filetrans_pattern($1, device_t, lirc_device_t, chr_file, "lirc8")
+	filetrans_pattern($1, device_t, lirc_device_t, chr_file, "lirc9")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "lircm")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "logibm")
+	filetrans_pattern($1, device_t, kmsg_device_t, chr_file, "mcelog")
+	filetrans_pattern($1, device_t, memory_device_t, chr_file, "mem")
+	filetrans_pattern($1, device_t, memory_device_t, chr_file, "mergemem")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "mice")
+	filetrans_pattern($1, device_t, cpu_device_t, chr_file, "microcode")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "midi0")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "midi1")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "midi2")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "midi3")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "midi4")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "midi5")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "midi6")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "midi7")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "midi8")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "midi9")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "mixer0")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "mixer1")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "mixer2")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "mixer3")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "mixer4")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "mixer5")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "mixer6")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "mixer7")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "mixer8")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "mixer9")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "mmetfgrab")
+	filetrans_pattern($1, device_t, modem_device_t, chr_file, "modem")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "mpu4010")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "mpu4011")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "mpu4012")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "mpu4013")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "mpu4014")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "mpu4015")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "mpu4016")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "mpu4017")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "mpu4018")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "mpu4019")
+	filetrans_pattern($1, device_t, cpu_device_t, chr_file, "msr0")
+	filetrans_pattern($1, device_t, cpu_device_t, chr_file, "msr1")
+	filetrans_pattern($1, device_t, cpu_device_t, chr_file, "msr2")
+	filetrans_pattern($1, device_t, cpu_device_t, chr_file, "msr3")
+	filetrans_pattern($1, device_t, cpu_device_t, chr_file, "msr4")
+	filetrans_pattern($1, device_t, cpu_device_t, chr_file, "msr5")
+	filetrans_pattern($1, device_t, cpu_device_t, chr_file, "msr6")
+	filetrans_pattern($1, device_t, cpu_device_t, chr_file, "msr7")
+	filetrans_pattern($1, device_t, cpu_device_t, chr_file, "msr8")
+	filetrans_pattern($1, device_t, cpu_device_t, chr_file, "msr9")
+	filetrans_pattern($1, device_t, vhost_device_t, chr_file, "vhost")
+	filetrans_pattern($1, device_t, netcontrol_device_t, chr_file, "network_latency")
+	filetrans_pattern($1, device_t, netcontrol_device_t, chr_file, "network_throughput")
+	filetrans_pattern($1, device_t, modem_device_t, chr_file, "noz0")
+	filetrans_pattern($1, device_t, modem_device_t, chr_file, "noz1")
+	filetrans_pattern($1, device_t, modem_device_t, chr_file, "noz2")
+	filetrans_pattern($1, device_t, modem_device_t, chr_file, "noz3")
+	filetrans_pattern($1, device_t, modem_device_t, chr_file, "noz4")
+	filetrans_pattern($1, device_t, modem_device_t, chr_file, "noz5")
+	filetrans_pattern($1, device_t, modem_device_t, chr_file, "noz6")
+	filetrans_pattern($1, device_t, modem_device_t, chr_file, "noz7")
+	filetrans_pattern($1, device_t, modem_device_t, chr_file, "noz8")
+	filetrans_pattern($1, device_t, modem_device_t, chr_file, "noz9")
+	filetrans_pattern($1, device_t, null_device_t, chr_file, "null")
+	filetrans_pattern($1, device_t, nvram_device_t, chr_file, "nvram")
+	filetrans_pattern($1, device_t, memory_device_t, chr_file, "oldmem")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "pc110pad")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "pcfclock0")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "pcfclock1")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "pcfclock2")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "pcfclock3")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "pcfclock4")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "pcfclock5")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "pcfclock6")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "pcfclock7")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "pcfclock8")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "pcfclock9")
+	filetrans_pattern($1, device_t, power_device_t, chr_file, "pmu")
+	filetrans_pattern($1, device_t, memory_device_t, chr_file, "port")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "pps0")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "pps1")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "pps2")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "pps3")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "pps4")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "pps5")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "pps6")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "pps7")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "pps8")
+	filetrans_pattern($1, device_t, clock_device_t, chr_file, "pps9")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "rmidi0")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "rmidi1")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "rmidi2")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "rmidi3")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "rmidi4")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "rmidi5")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "rmidi6")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "rmidi7")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "rmidi8")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "rmidi9")
+	filetrans_pattern($1, device_t, dri_device_t, chr_file, "radeon")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "radio0")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "radio1")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "radio2")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "radio3")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "radio4")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "radio5")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "radio6")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "radio7")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "radio8")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "radio9")
+	filetrans_pattern($1, device_t, random_device_t, chr_file, "random")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "raw13940")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "raw13941")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "raw13942")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "raw13943")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "raw13944")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "raw13945")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "raw13946")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "raw13947")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "raw13948")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "raw13949")
+	filetrans_pattern($1, device_t, modem_device_t, chr_file, "cdc-wdm0")
+	filetrans_pattern($1, device_t, modem_device_t, chr_file, "cdc-wdm1")
+	filetrans_pattern($1, device_t, wireless_device_t, chr_file, "rfkill")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "sequencer")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "sequencer2")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "smpte0")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "smpte1")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "smpte2")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "smpte3")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "smpte4")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "smpte5")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "smpte6")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "smpte7")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "smpte8")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "smpte9")
+	filetrans_pattern($1, device_t, power_device_t, chr_file, "smu")
+	filetrans_pattern($1, device_t, apm_bios_t, chr_file, "snapshot")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "sndstat")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "sonypi")
+	filetrans_pattern($1, device_t, tpm_device_t, chr_file, "tpm0")
+	filetrans_pattern($1, device_t, tpm_device_t, chr_file, "tpm1")
+	filetrans_pattern($1, device_t, tpm_device_t, chr_file, "tpm2")
+	filetrans_pattern($1, device_t, tpm_device_t, chr_file, "tpm3")
+	filetrans_pattern($1, device_t, tpm_device_t, chr_file, "tpm4")
+	filetrans_pattern($1, device_t, tpm_device_t, chr_file, "tpm5")
+	filetrans_pattern($1, device_t, tpm_device_t, chr_file, "tpm6")
+	filetrans_pattern($1, device_t, tpm_device_t, chr_file, "tpm7")
+	filetrans_pattern($1, device_t, tpm_device_t, chr_file, "tpm8")
+	filetrans_pattern($1, device_t, tpm_device_t, chr_file, "tpm9")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "uinput")
+	filetrans_pattern($1, device_t, userio_device_t, chr_file, "uio0")
+	filetrans_pattern($1, device_t, userio_device_t, chr_file, "uio1")
+	filetrans_pattern($1, device_t, userio_device_t, chr_file, "uio2")
+	filetrans_pattern($1, device_t, userio_device_t, chr_file, "uio3")
+	filetrans_pattern($1, device_t, userio_device_t, chr_file, "uio4")
+	filetrans_pattern($1, device_t, userio_device_t, chr_file, "uio5")
+	filetrans_pattern($1, device_t, userio_device_t, chr_file, "uio6")
+	filetrans_pattern($1, device_t, userio_device_t, chr_file, "uio7")
+	filetrans_pattern($1, device_t, userio_device_t, chr_file, "uio8")
+	filetrans_pattern($1, device_t, userio_device_t, chr_file, "uio9")
+	filetrans_pattern($1, device_t, urandom_device_t, chr_file, "urandom")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "usb0")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "usb1")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "usb2")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "usb3")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "usb4")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "usb5")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "usb6")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "usb7")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "usb8")
+	filetrans_pattern($1, device_t, usbmon_device_t, chr_file, "usbmon0")
+	filetrans_pattern($1, device_t, usbmon_device_t, chr_file, "usbmon1")
+	filetrans_pattern($1, device_t, usbmon_device_t, chr_file, "usbmon2")
+	filetrans_pattern($1, device_t, usbmon_device_t, chr_file, "usbmon3")
+	filetrans_pattern($1, device_t, usbmon_device_t, chr_file, "usbmon4")
+	filetrans_pattern($1, device_t, usbmon_device_t, chr_file, "usbmon5")
+	filetrans_pattern($1, device_t, usbmon_device_t, chr_file, "usbmon6")
+	filetrans_pattern($1, device_t, usbmon_device_t, chr_file, "usbmon7")
+	filetrans_pattern($1, device_t, usbmon_device_t, chr_file, "usbmon8")
+	filetrans_pattern($1, device_t, usbmon_device_t, chr_file, "usbmon9")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "usbscanner")
+	filetrans_pattern($1, device_t, vhost_device_t, chr_file, "vhost-net")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "vbi0")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "vbi1")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "vbi2")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "vbi3")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "vbi4")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "vbi5")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "vbi6")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "vbi7")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "vbi8")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "vbi9")
+	filetrans_pattern($1, device_t, vmware_device_t, chr_file, "vmmon")
+	filetrans_pattern($1, device_t, vmware_device_t, chr_file, "vmnet0")
+	filetrans_pattern($1, device_t, vmware_device_t, chr_file, "vmnet1")
+	filetrans_pattern($1, device_t, vmware_device_t, chr_file, "vmnet2")
+	filetrans_pattern($1, device_t, vmware_device_t, chr_file, "vmnet3")
+	filetrans_pattern($1, device_t, vmware_device_t, chr_file, "vmnet4")
+	filetrans_pattern($1, device_t, vmware_device_t, chr_file, "vmnet5")
+	filetrans_pattern($1, device_t, vmware_device_t, chr_file, "vmnet6")
+	filetrans_pattern($1, device_t, vmware_device_t, chr_file, "vmnet7")
+	filetrans_pattern($1, device_t, vmware_device_t, chr_file, "vmnet8")
+	filetrans_pattern($1, device_t, vmware_device_t, chr_file, "vmnet9")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "media0")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "media1")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "media2")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "media3")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "media4")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "media5")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "media6")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "media7")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "media8")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "media9")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "video0")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "video1")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "video2")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "video3")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "video4")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "video5")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "video6")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "video7")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "video8")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "video9")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "vrtpanel")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "vttuner")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "vtx0")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "vtx1")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "vtx2")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "vtx3")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "vtx4")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "vtx5")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "vtx6")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "vtx7")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "vtx8")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "vtx9")
+	filetrans_pattern($1, device_t, watchdog_device_t, chr_file, "watchdog")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "winradio0")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "winradio1")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "winradio2")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "winradio3")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "winradio4")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "winradio5")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "winradio6")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "winradio7")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "winradio8")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "winradio9")
+	filetrans_pattern($1, device_t, crypt_device_t, chr_file, "z90crypt")
+	filetrans_pattern($1, device_t, zero_device_t, chr_file, "zero")
+	filetrans_pattern($1, device_t, smartcard_device_t, chr_file, "cmx0")
+	filetrans_pattern($1, device_t, smartcard_device_t, chr_file, "cmx1")
+	filetrans_pattern($1, device_t, smartcard_device_t, chr_file, "cmx2")
+	filetrans_pattern($1, device_t, smartcard_device_t, chr_file, "cmx3")
+	filetrans_pattern($1, device_t, smartcard_device_t, chr_file, "cmx4")
+	filetrans_pattern($1, device_t, smartcard_device_t, chr_file, "cmx5")
+	filetrans_pattern($1, device_t, smartcard_device_t, chr_file, "cmx6")
+	filetrans_pattern($1, device_t, smartcard_device_t, chr_file, "cmx7")
+	filetrans_pattern($1, device_t, smartcard_device_t, chr_file, "cmx8")
+	filetrans_pattern($1, device_t, smartcard_device_t, chr_file, "cmx9")
+	filetrans_pattern($1, device_t, netcontrol_device_t, chr_file, "cpu_dma_latency")
+	filetrans_pattern($1, device_t, cpu_device_t, chr_file, "cpu0")
+	filetrans_pattern($1, device_t, cpu_device_t, chr_file, "cpu1")
+	filetrans_pattern($1, device_t, cpu_device_t, chr_file, "cpu2")
+	filetrans_pattern($1, device_t, cpu_device_t, chr_file, "cpu3")
+	filetrans_pattern($1, device_t, cpu_device_t, chr_file, "cpu4")
+	filetrans_pattern($1, device_t, cpu_device_t, chr_file, "cpu5")
+	filetrans_pattern($1, device_t, cpu_device_t, chr_file, "cpu6")
+	filetrans_pattern($1, device_t, cpu_device_t, chr_file, "cpu7")
+	filetrans_pattern($1, device_t, cpu_device_t, chr_file, "cpu8")
+	filetrans_pattern($1, device_t, cpu_device_t, chr_file, "cpu9")
+	filetrans_pattern($1, device_t, mtrr_device_t, chr_file, "mtrr")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "sensor0")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "sensor1")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "sensor2")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "sensor3")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "sensor4")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "sensor5")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "sensor6")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "sensor7")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "sensor8")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "sensor9")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "m0")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "m1")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "m2")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "m3")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "m4")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "m5")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "m6")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "m7")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "m8")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "m9")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "keyboard0")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "keyboard1")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "keyboard2")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "keyboard3")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "keyboard4")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "keyboard5")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "keyboard6")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "keyboard7")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "keyboard8")
+	filetrans_pattern($1, device_t, event_device_t, chr_file, "keyboard9")
+	filetrans_pattern($1, device_t, lvm_control_t, chr_file, "control")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "ucb1x00")
+	filetrans_pattern($1, device_t, mouse_device_t, chr_file, "mk712")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "dc2xx0")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "dc2xx1")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "dc2xx2")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "dc2xx3")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "dc2xx4")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "dc2xx5")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "dc2xx6")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "dc2xx7")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "dc2xx8")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "dc2xx9")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "mdc8000")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "mdc8001")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "mdc8002")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "mdc8003")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "mdc8004")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "mdc8005")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "mdc8006")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "mdc8007")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "mdc8008")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "mdc8009")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "scanner0")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "scanner1")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "scanner2")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "scanner3")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "scanner4")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "scanner5")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "scanner6")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "scanner7")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "scanner8")
+	filetrans_pattern($1, device_t, scanner_device_t, chr_file, "scanner9")
+	filetrans_pattern($1, device_t, xen_device_t, chr_file, "blktap0")
+	filetrans_pattern($1, device_t, xen_device_t, chr_file, "blktap1")
+	filetrans_pattern($1, device_t, xen_device_t, chr_file, "blktap2")
+	filetrans_pattern($1, device_t, xen_device_t, chr_file, "blktap3")
+	filetrans_pattern($1, device_t, xen_device_t, chr_file, "blktap4")
+	filetrans_pattern($1, device_t, xen_device_t, chr_file, "blktap5")
+	filetrans_pattern($1, device_t, xen_device_t, chr_file, "blktap6")
+	filetrans_pattern($1, device_t, xen_device_t, chr_file, "blktap7")
+	filetrans_pattern($1, device_t, xen_device_t, chr_file, "blktap8")
+	filetrans_pattern($1, device_t, xen_device_t, chr_file, "blktap9")
+	filetrans_pattern($1, device_t, xen_device_t, chr_file, "gntdev")
+	filetrans_pattern($1, device_t, xen_device_t, chr_file, "gntalloc")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "controlC0")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "controlC1")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "controlC2")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "controlC3")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "controlC4")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "controlC5")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "controlC6")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "controlC7")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "controlC8")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "controlC9")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "patmgr0")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "patmgr1")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "srnd0")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "srnd1")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "srnd2")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "srnd3")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "srnd4")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "srnd5")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "srnd6")
+	filetrans_pattern($1, device_t, sound_device_t, chr_file, "srnd7")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "tlk0")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "tlk1")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "tlk2")
+	filetrans_pattern($1, device_t, v4l_device_t, chr_file, "tlk3")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "uba")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "ubb")
+	filetrans_pattern($1, device_t, usb_device_t, chr_file, "ubc")
+	dev_filetrans_xserver_named_dev($1)
+')
+
+########################################
+## <summary>
+##	Create all named devices with the correct label
+## </summary>
+## <param name="domain">
+##	<summary>
+##      Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dev_filetrans_xserver_named_dev',`
+
+	gen_require(`
+		type xserver_misc_device_t;
+	')
+
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "3dfx")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "controlD64")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "gfx")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "graphics")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "mga_vid0")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "mga_vid1")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "mga_vid2")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "mga_vid3")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "mga_vid4")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "mga_vid5")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "mga_vid6")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "mga_vid7")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "mga_vid8")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "mga_vid9")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "nvidia0")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "nvidia1")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "nvidia2")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "nvidia3")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "nvidia4")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "nvidia5")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "nvidia6")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "nvidia7")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "nvidia8")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "nvidia9")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "nvidiactl")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "opengl")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "vbox0")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "vbox1")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "vbox2")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "vbox3")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "vbox4")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "vbox5")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "vbox6")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "vbox7")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "vbox8")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "vbox9")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "vga_arbiter")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "card0")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "card1")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "card2")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "card3")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "card4")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "card5")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "card6")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "card7")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "card8")
+	filetrans_pattern($1, device_t, xserver_misc_device_t, chr_file, "card9")
+')
diff --git a/policy/modules/kernel/devices.te b/policy/modules/kernel/devices.te
index 74894d7..b570097 100644
--- a/policy/modules/kernel/devices.te
+++ b/policy/modules/kernel/devices.te
@@ -20,6 +20,7 @@ files_mountpoint(device_t)
 files_associate_tmp(device_t)
 fs_type(device_t)
 fs_use_trans devtmpfs gen_context(system_u:object_r:device_t,s0);
+dev_node(device_t)
 
 #
 # Type for /dev/agpgart
@@ -108,6 +109,7 @@ dev_node(ksm_device_t)
 #
 type kvm_device_t;
 dev_node(kvm_device_t)
+mls_trusted_object(kvm_device_t)
 
 #
 # Type for /dev/lirc
@@ -118,6 +120,12 @@ dev_node(lirc_device_t)
 #
 # Type for /dev/mapper/control
 #
+type loop_control_device_t;
+dev_node(loop_control_device_t)
+
+#
+# Type for /dev/mapper/control
+#
 type lvm_control_t;
 dev_node(lvm_control_t)
 
@@ -218,6 +226,10 @@ files_mountpoint(sysfs_t)
 fs_type(sysfs_t)
 genfscon sysfs / gen_context(system_u:object_r:sysfs_t,s0)
 
+type cpu_online_t;
+files_type(cpu_online_t)
+dev_associate_sysfs(cpu_online_t)
+
 #
 # Type for /dev/tpm
 #
@@ -265,6 +277,7 @@ dev_node(v4l_device_t)
 #
 type vhost_device_t;
 dev_node(vhost_device_t)
+mls_trusted_object(vhost_device_t)
 
 # Type for vmware devices.
 type vmware_device_t;
@@ -310,5 +323,5 @@ files_associate_tmp(device_node)
 #
 
 allow devices_unconfined_type self:capability sys_rawio;
-allow devices_unconfined_type device_node:{ blk_file chr_file } *;
+allow devices_unconfined_type device_node:{ blk_file chr_file lnk_file } *;
 allow devices_unconfined_type mtrr_device_t:file *;
diff --git a/policy/modules/kernel/domain.if b/policy/modules/kernel/domain.if
index 6a1e4d1..ffaa90a 100644
--- a/policy/modules/kernel/domain.if
+++ b/policy/modules/kernel/domain.if
@@ -75,34 +75,6 @@ interface(`domain_base_type',`
 interface(`domain_type',`
 	# start with basic domain
 	domain_base_type($1)
-
-	ifdef(`distro_redhat',`
-		optional_policy(`
-			unconfined_use_fds($1)
-		')
-	')
-
-	# send init a sigchld and signull
-	optional_policy(`
-		init_sigchld($1)
-		init_signull($1)
-	')
-
-	# these seem questionable:
-
-	optional_policy(`
-		rpm_use_fds($1)
-		rpm_read_pipes($1)
-	')
-
-	optional_policy(`
-		selinux_dontaudit_getattr_fs($1)
-		selinux_dontaudit_read_fs($1)
-	')
-
-	optional_policy(`
-		seutil_dontaudit_read_config($1)
-	')
 ')
 
 ########################################
@@ -631,7 +603,7 @@ interface(`domain_read_all_domains_state',`
 
 ########################################
 ## <summary>
-##	Get the attributes of all domains of all domains.
+##	Get the attributes of all domains.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -655,7 +627,7 @@ interface(`domain_getattr_all_domains',`
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain to not audit.
 ##	</summary>
 ## </param>
 #
@@ -1356,6 +1328,24 @@ interface(`domain_manage_all_entry_files',`
 
 ########################################
 ## <summary>
+##	Relabel from domain types on files if a user managed to mislable
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`domain_relabelfrom',`
+	gen_require(`
+		attribute domain;
+	')
+
+	allow $1 domain:dir_file_class_set relabelfrom_file_perms;
+')
+
+########################################
+## <summary>
 ##	Relabel to and from all entry point
 ##	file types.
 ## </summary>
@@ -1530,4 +1520,29 @@ interface(`domain_unconfined',`
 	typeattribute $1 can_change_object_identity;
 	typeattribute $1 set_curr_context;
 	typeattribute $1 process_uncond_exempt;
+
+	mcs_file_read_all($1)
+	mcs_file_write_all($1)
+	mcs_killall($1)
+	mcs_ptrace_all($1)
+	mcs_socket_write_all_levels($1)
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read or write
+##	all leaked sockets.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`domain_dontaudit_leaks',`
+	gen_require(`
+		attribute domain;
+	')
+
+	dontaudit $1 domain:socket_class_set { read write };
 ')
diff --git a/policy/modules/kernel/domain.te b/policy/modules/kernel/domain.te
index cf04cb5..e43701b 100644
--- a/policy/modules/kernel/domain.te
+++ b/policy/modules/kernel/domain.te
@@ -4,6 +4,21 @@ policy_module(domain, 1.11.0)
 #
 # Declarations
 #
+## <desc>
+## <p>
+## Allow all domains to use other domains file descriptors
+## </p>
+## </desc>
+#
+gen_tunable(domain_fd_use, true)
+
+## <desc>
+## <p>
+## Allow all domains to have the kernel load modules
+## </p>
+## </desc>
+#
+gen_tunable(domain_kernel_load_modules, false)
 
 ## <desc>
 ## <p>
@@ -86,23 +101,39 @@ neverallow ~{ domain unlabeled_t } *:process *;
 allow domain self:dir list_dir_perms;
 allow domain self:lnk_file { read_lnk_file_perms lock ioctl };
 allow domain self:file rw_file_perms;
+allow domain self:fifo_file rw_fifo_file_perms;
+
 kernel_read_proc_symlinks(domain)
+kernel_read_crypto_sysctls(domain)
+
 # Every domain gets the key ring, so we should default
 # to no one allowed to look at it; afs kernel support creates
 # a keyring
 kernel_dontaudit_search_key(domain)
 kernel_dontaudit_link_key(domain)
+kernel_dontaudit_search_debugfs(domain)
 
 # create child processes in the domain
-allow domain self:process { fork sigchld };
+allow domain self:process { getcap fork getsched sigchld };
 
 # Use trusted objects in /dev
+dev_read_cpu_online(domain)
 dev_rw_null(domain)
 dev_rw_zero(domain)
 term_use_controlling_term(domain)
 
 # list the root directory
 files_list_root(domain)
+# allow all domains to search through default_t directory, since users sometimes
+# place labels within these directories.  (samba_share_t) for example.
+files_search_default(domain)
+
+# All executables should be able to search the directory they are in
+corecmd_search_bin(domain)
+
+tunable_policy(`domain_kernel_load_modules',`
+	kernel_request_load_module(domain)
+')
 
 ifdef(`hide_broken_symptoms',`
 	# This check is in the general socket
@@ -121,8 +152,13 @@ tunable_policy(`global_ssp',`
 ')
 
 optional_policy(`
+	afs_rw_cache(domain)
+')
+
+optional_policy(`
 	libs_use_ld_so(domain)
 	libs_use_shared_libs(domain)
+	libs_read_lib_files(domain)
 ')
 
 optional_policy(`
@@ -133,6 +169,8 @@ optional_policy(`
 optional_policy(`
 	xserver_dontaudit_use_xdm_fds(domain)
 	xserver_dontaudit_rw_xdm_pipes(domain)
+	xserver_dontaudit_append_xdm_home_files(domain)
+	xserver_dontaudit_write_log(domain)
 ')
 
 ########################################
@@ -151,8 +189,13 @@ allow unconfined_domain_type domain:{ socket_class_set socket key_socket } *;
 allow unconfined_domain_type domain:fd use;
 allow unconfined_domain_type domain:fifo_file rw_file_perms;
 
+allow unconfined_domain_type unconfined_domain_type:dbus send_msg;
+
 # Act upon any other process.
-allow unconfined_domain_type domain:process ~{ transition dyntransition execmem execstack execheap };
+allow unconfined_domain_type domain:process ~{ ptrace transition dyntransition execmem execstack execheap };
+tunable_policy(`deny_ptrace',`',`
+	allow unconfined_domain_type domain:process ptrace;
+')
 
 # Create/access any System V IPC objects.
 allow unconfined_domain_type domain:{ sem msgq shm } *;
@@ -166,5 +209,259 @@ allow unconfined_domain_type domain:lnk_file { read_lnk_file_perms ioctl lock };
 # act on all domains keys
 allow unconfined_domain_type domain:key *;
 
+corenet_filetrans_all_named_dev(unconfined_domain_type)
+
+dev_filetrans_all_named_dev(unconfined_domain_type)
+
 # receive from all domains over labeled networking
 domain_all_recvfrom_all_domains(unconfined_domain_type)
+
+files_filetrans_named_content(unconfined_domain_type)
+files_filetrans_system_conf_named_files(unconfined_domain_type)
+
+storage_filetrans_all_named_dev(unconfined_domain_type)
+
+term_filetrans_all_named_dev(unconfined_domain_type)
+
+optional_policy(`
+	init_status(unconfined_domain_type)
+	init_reboot(unconfined_domain_type)
+	init_halt(unconfined_domain_type)
+	init_undefined(unconfined_domain_type)
+')
+
+optional_policy(`
+	auth_filetrans_named_content(unconfined_domain_type)
+	auth_filetrans_admin_home_content(unconfined_domain_type)
+	auth_filetrans_home_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	libs_filetrans_named_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	logging_filetrans_named_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	miscfiles_filetrans_named_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	alsa_filetrans_named_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	apache_filetrans_named_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	bootloader_filetrans_config(unconfined_domain_type)
+')
+
+optional_policy(`
+	cups_filetrans_named_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	gnome_filetrans_admin_home_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	devicekit_filetrans_named_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	dnsmasq_filetrans_named_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	kerberos_filetrans_named_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	mta_filetrans_named_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	modules_filetrans_named_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	mozilla_filetrans_home_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	mysql_filetrans_named_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	networkmanager_filetrans_named_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	nx_filetrans_named_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	postfix_filetrans_named_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	pulseaudio_filetrans_home_content(unconfined_domain_type)
+	pulseaudio_filetrans_admin_home_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	quota_filetrans_named_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	sysnet_filetrans_named_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	systemd_login_status(unconfined_domain_type)
+	systemd_login_reboot(unconfined_domain_type)
+	systemd_login_halt(unconfined_domain_type)
+	systemd_login_undefined(unconfined_domain_type)
+')
+
+optional_policy(`
+	thumb_filetrans_home_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	tftp_filetrans_named_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	userdom_user_home_dir_filetrans_user_home_content(unconfined_domain_type, { dir file lnk_file fifo_file sock_file })
+	userdom_filetrans_home_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	virt_filetrans_named_content(unconfined_domain_type)
+	virt_filetrans_home_content(unconfined_domain_type)
+')
+
+optional_policy(`
+	ssh_filetrans_admin_home_content(unconfined_domain_type)
+')
+
+selinux_getattr_fs(domain)
+selinux_search_fs(domain)
+selinux_dontaudit_read_fs(domain)
+
+optional_policy(`
+	seutil_dontaudit_read_config(domain)
+')
+
+optional_policy(`
+	init_sigchld(domain)
+	init_signull(domain)
+	init_read_machineid(domain)
+')
+
+ifdef(`distro_redhat',`
+	files_search_mnt(domain)
+	optional_policy(`
+		unconfined_use_fds(domain)
+	')
+')
+
+# these seem questionable:
+
+optional_policy(`
+	abrt_domtrans_helper(domain)
+	abrt_read_pid_files(domain)
+	abrt_read_state(domain)
+	abrt_signull(domain)
+	abrt_append_cache(domain)
+	abrt_rw_fifo_file(domain)
+')
+
+optional_policy(`
+	rpm_use_fds(domain)
+	rpm_read_pipes(domain)
+	rpm_search_log(domain)
+	rpm_append_tmp_files(domain)
+	rpm_dontaudit_leaks(domain)
+	rpm_read_script_tmp_files(domain)
+	rpm_inherited_fifo(domain)
+')
+
+optional_policy(`
+	sosreport_append_tmp_files(domain)
+')
+
+tunable_policy(`domain_fd_use',`
+	# Allow all domains to use fds past to them
+	allow domain domain:fd use;
+')
+
+optional_policy(`
+	cron_dontaudit_write_system_job_tmp_files(domain)
+	cron_rw_pipes(domain)
+	cron_rw_system_job_pipes(domain)
+')
+
+ifdef(`hide_broken_symptoms',`
+	dontaudit domain self:udp_socket listen;
+	allow domain domain:key { link search };
+	dontaudit domain domain:socket_class_set { read write };
+	dontaudit domain self:capability sys_module;
+')
+
+optional_policy(`
+	ipsec_match_default_spd(domain)
+')
+
+optional_policy(`
+	ifdef(`hide_broken_symptoms',`
+		afs_rw_udp_sockets(domain)
+	')
+')
+
+optional_policy(`
+	ssh_rw_pipes(domain)
+')
+
+optional_policy(`
+	unconfined_dontaudit_rw_pipes(domain)
+	unconfined_sigchld(domain)
+')
+
+# broken kernel
+dontaudit can_change_object_identity can_change_object_identity:key link;
+
+ifdef(`distro_redhat',`
+	optional_policy(`
+		unconfined_use_fds(domain)
+	')
+')
+
+# send init a sigchld and signull
+optional_policy(`
+	init_sigchld(domain)
+	init_signull(domain)
+')
+
+# these seem questionable:
+
+optional_policy(`
+	rpm_use_fds(domain)
+	rpm_read_pipes(domain)
+')
+
+optional_policy(`
+	selinux_dontaudit_getattr_fs(domain)
+	selinux_dontaudit_read_fs(domain)
+')
+
+optional_policy(`
+	seutil_dontaudit_read_config(domain)
+')
+
+dontaudit domain domain:process { noatsecure siginh rlimitinh } ;
diff --git a/policy/modules/kernel/files.fc b/policy/modules/kernel/files.fc
index 4429d30..cbcd9d0 100644
--- a/policy/modules/kernel/files.fc
+++ b/policy/modules/kernel/files.fc
@@ -18,6 +18,7 @@ ifdef(`distro_redhat',`
 /fsckoptions 		--	gen_context(system_u:object_r:etc_runtime_t,s0)
 /halt			--	gen_context(system_u:object_r:etc_runtime_t,s0)
 /poweroff		--	gen_context(system_u:object_r:etc_runtime_t,s0)
+/[^/]+			--	gen_context(system_u:object_r:etc_runtime_t,s0)
 ')
 
 ifdef(`distro_suse',`
@@ -53,10 +54,16 @@ ifdef(`distro_suse',`
 /etc/ioctl\.save	--	gen_context(system_u:object_r:etc_runtime_t,s0)
 /etc/killpower		--	gen_context(system_u:object_r:etc_runtime_t,s0)
 /etc/localtime		-l	gen_context(system_u:object_r:etc_t,s0)
-/etc/mtab		--	gen_context(system_u:object_r:etc_runtime_t,s0)
-/etc/mtab\.fuselock	--	gen_context(system_u:object_r:etc_runtime_t,s0)
+/etc/mtab.*		--	gen_context(system_u:object_r:etc_runtime_t,s0)
 /etc/nohotplug		--	gen_context(system_u:object_r:etc_runtime_t,s0)
 /etc/nologin.*		--	gen_context(system_u:object_r:etc_runtime_t,s0)
+/etc/securetty  	--  	gen_context(system_u:object_r:etc_runtime_t,s0)
+
+/etc/sysctl\.conf(\.old)?               --      gen_context(system_u:object_r:system_conf_t,s0)
+/etc/sysconfig/ebtables.*				--      gen_context(system_u:object_r:system_conf_t,s0)
+/etc/sysconfig/ip6?tables.*             --      gen_context(system_u:object_r:system_conf_t,s0)
+/etc/sysconfig/ipvsadm.*                --      gen_context(system_u:object_r:system_conf_t,s0)
+/etc/sysconfig/system-config-firewall.* --      gen_context(system_u:object_r:system_conf_t,s0)
 
 /etc/cups/client\.conf	--	gen_context(system_u:object_r:etc_t,s0)
 
@@ -68,7 +75,10 @@ ifdef(`distro_suse',`
 
 /etc/sysconfig/hwconf	--	gen_context(system_u:object_r:etc_runtime_t,s0)
 /etc/sysconfig/iptables\.save -- gen_context(system_u:object_r:etc_runtime_t,s0)
-/etc/sysconfig/firstboot --	gen_context(system_u:object_r:etc_runtime_t,s0)
+
+/etc/xorg\.conf\.d/00-system-setup-keyboard\.conf --	gen_context(system_u:object_r:etc_runtime_t,s0)
+/etc/X11/xorg\.conf\.d/00-system-setup-keyboard\.conf --    gen_context(system_u:object_r:etc_runtime_t,s0)
+
 
 ifdef(`distro_gentoo', `
 /etc/profile\.env	--	gen_context(system_u:object_r:etc_runtime_t,s0)
@@ -102,7 +112,7 @@ HOME_ROOT/lost\+found/.*	<<none>>
 /initrd			-d	gen_context(system_u:object_r:root_t,s0)
 
 #
-# /lib(64)?
+# /lib
 #
 /lib/modules(/.*)?		gen_context(system_u:object_r:modules_object_t,s0)
 
@@ -151,7 +161,7 @@ ifdef(`distro_debian',`
 /opt			-d	gen_context(system_u:object_r:usr_t,s0)
 /opt/.*				gen_context(system_u:object_r:usr_t,s0)
 
-/opt/(.*/)?var/lib(64)?(/.*)?	gen_context(system_u:object_r:var_lib_t,s0)
+/opt/(.*/)?var/lib(/.*)?	gen_context(system_u:object_r:var_lib_t,s0)
 
 #
 # /proc
@@ -159,6 +169,12 @@ ifdef(`distro_debian',`
 /proc			-d	<<none>>
 /proc/.*			<<none>>
 
+ifdef(`distro_redhat',`
+/rhev			-d	gen_context(system_u:object_r:mnt_t,s0)
+/rhev(/[^/]*)?		-d	gen_context(system_u:object_r:mnt_t,s0)
+/rhev/[^/]*/.*			<<none>>
+')
+
 #
 # /run
 #
@@ -195,6 +211,7 @@ ifdef(`distro_debian',`
 /usr			-d	gen_context(system_u:object_r:usr_t,s0)
 /usr/.*				gen_context(system_u:object_r:usr_t,s0)
 /usr/\.journal			<<none>>
+/export(/.*)?			gen_context(system_u:object_r:usr_t,s0)
 
 /usr/doc(/.*)?/lib(/.*)?	gen_context(system_u:object_r:usr_t,s0)
 
@@ -211,6 +228,7 @@ ifdef(`distro_debian',`
 
 /usr/lost\+found	-d	gen_context(system_u:object_r:lost_found_t,mls_systemhigh)
 /usr/lost\+found/.*		<<none>>
+/usr/lib/modules(/.*)?		gen_context(system_u:object_r:modules_object_t,s0)
 
 /usr/share/doc(/.*)?/README.*	gen_context(system_u:object_r:usr_t,s0)
 
@@ -219,7 +237,6 @@ ifdef(`distro_debian',`
 
 ifndef(`distro_redhat',`
 /usr/local/src(/.*)?		gen_context(system_u:object_r:src_t,s0)
-
 /usr/src(/.*)?			gen_context(system_u:object_r:src_t,s0)
 /usr/src/kernels/.+/lib(/.*)?	gen_context(system_u:object_r:usr_t,s0)
 ')
@@ -235,11 +252,14 @@ ifndef(`distro_redhat',`
 
 /var/ftp/etc(/.*)?		gen_context(system_u:object_r:etc_t,s0)
 
+/var/named/chroot/etc(/.*)? 	gen_context(system_u:object_r:etc_t,s0)
+
 /var/lib(/.*)?			gen_context(system_u:object_r:var_lib_t,s0)
 
 /var/lib/nfs/rpc_pipefs(/.*)?	<<none>>
 
 /var/lock(/.*)?			gen_context(system_u:object_r:var_lock_t,s0)
+/var/lock			-l	gen_context(system_u:object_r:var_lock_t,s0)
 
 /var/lost\+found	-d	gen_context(system_u:object_r:lost_found_t,mls_systemhigh)
 /var/lost\+found/.*		<<none>>
@@ -262,3 +282,5 @@ ifndef(`distro_redhat',`
 ifdef(`distro_debian',`
 /var/run/motd		--	gen_context(system_u:object_r:initrc_var_run_t,s0)
 ')
+/nsr(/.*)?			gen_context(system_u:object_r:var_t,s0)
+/nsr/logs(/.*)?			gen_context(system_u:object_r:var_log_t,s0)
diff --git a/policy/modules/kernel/files.if b/policy/modules/kernel/files.if
index 41346fb..9ec1de8 100644
--- a/policy/modules/kernel/files.if
+++ b/policy/modules/kernel/files.if
@@ -55,6 +55,7 @@
 ##		<li>files_pid_file()</li>
 ##		<li>files_security_file()</li>
 ##		<li>files_security_mountpoint()</li>
+##		<li>files_spool_file()</li>
 ##		<li>files_tmp_file()</li>
 ##		<li>files_tmpfs_file()</li>
 ##		<li>logging_log_file()</li>
@@ -683,12 +684,82 @@ interface(`files_read_non_security_files',`
 		attribute non_security_file_type;
 	')
 
+	list_dirs_pattern($1, non_security_file_type, non_security_file_type)
 	read_files_pattern($1, non_security_file_type, non_security_file_type)
 	read_lnk_files_pattern($1, non_security_file_type, non_security_file_type)
 ')
 
 ########################################
 ## <summary>
+##	Read/Write all inherited non-security files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`files_rw_inherited_non_security_files',`
+	gen_require(`
+		attribute non_security_file_type;
+	')
+
+	allow $1 non_security_file_type:file { read write };
+')
+
+########################################
+## <summary>
+##	Manage all non-security files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`files_manage_non_security_files',`
+	gen_require(`
+		attribute non_security_file_type;
+	')
+
+	manage_files_pattern($1, non_security_file_type, non_security_file_type)
+	manage_lnk_files_pattern($1, non_security_file_type, non_security_file_type)
+')
+
+########################################
+## <summary>
+##	Relabel all non-security files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`files_relabel_non_security_files',`
+	gen_require(`
+		attribute non_security_file_type;
+	')
+
+	relabel_files_pattern($1, non_security_file_type, non_security_file_type)
+	allow $1 { non_security_file_type }:dir list_dir_perms;
+	relabel_dirs_pattern($1, { non_security_file_type }, { non_security_file_type })
+	relabel_files_pattern($1, { non_security_file_type }, { non_security_file_type })
+	relabel_lnk_files_pattern($1, { non_security_file_type }, { non_security_file_type })
+	relabel_fifo_files_pattern($1, { non_security_file_type }, { non_security_file_type })
+	relabel_sock_files_pattern($1, { non_security_file_type }, { non_security_file_type })
+	relabel_blk_files_pattern($1, { non_security_file_type }, { non_security_file_type })
+	relabel_chr_files_pattern($1, { non_security_file_type }, { non_security_file_type })
+
+	# satisfy the assertions:
+	seutil_relabelto_bin_policy($1)
+')
+
+########################################
+## <summary>
 ##	Read all directories on the filesystem, except
 ##	the listed exceptions.
 ## </summary>
@@ -1073,10 +1144,8 @@ interface(`files_relabel_all_files',`
 	relabel_lnk_files_pattern($1, { file_type $2 }, { file_type $2 })
 	relabel_fifo_files_pattern($1, { file_type $2 }, { file_type $2 })
 	relabel_sock_files_pattern($1, { file_type $2 }, { file_type $2 })
-	# this is only relabelfrom since there should be no
-	# device nodes with file types.
-	relabelfrom_blk_files_pattern($1, { file_type $2 }, { file_type $2 })
-	relabelfrom_chr_files_pattern($1, { file_type $2 }, { file_type $2 })
+	relabel_blk_files_pattern($1, { file_type $2 }, { file_type $2 })
+	relabel_chr_files_pattern($1, { file_type $2 }, { file_type $2 })
 
 	# satisfy the assertions:
 	seutil_relabelto_bin_policy($1)
@@ -1655,6 +1724,24 @@ interface(`files_dontaudit_list_all_mountpoints',`
 
 ########################################
 ## <summary>
+##	Write all mount points.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_write_all_mountpoints',`
+    gen_require(`
+        attribute mountpoint;
+    ')
+
+	allow $1 mountpoint:dir write;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to write to mount points.
 ## </summary>
 ## <param name="domain">
@@ -1673,6 +1760,24 @@ interface(`files_dontaudit_write_all_mountpoints',`
 
 ########################################
 ## <summary>
+##	Write all file type directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_write_all_dirs',`
+	gen_require(`
+		attribute file_type;
+	')
+
+	allow $1 file_type:dir write;
+')
+
+########################################
+## <summary>
 ##	List the contents of the root directory.
 ## </summary>
 ## <param name="domain">
@@ -1856,6 +1961,42 @@ interface(`files_delete_root_dir_entry',`
 
 ########################################
 ## <summary>
+##	Set attributes of the root directory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_setattr_root_dirs',`
+	gen_require(`
+		type root_t;
+	')
+
+	allow $1 root_t:dir setattr_dir_perms;
+')
+
+########################################
+## <summary>
+##	Relabel a rootfs filesystem.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_relabel_rootfs',`
+	gen_require(`
+		type root_t;
+	')
+
+	allow $1 root_t:filesystem relabel_file_perms;
+')
+
+########################################
+## <summary>
 ##	Unmount a rootfs filesystem.
 ## </summary>
 ## <param name="domain">
@@ -1874,6 +2015,24 @@ interface(`files_unmount_rootfs',`
 
 ########################################
 ## <summary>
+##	Mount a filesystem on the root file system
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_mounton_rootfs',`
+	gen_require(`
+		type root_t;
+	')
+
+	allow $1 root_t:dir { search_dir_perms mounton };
+')
+
+########################################
+## <summary>
 ##	Get attributes of the /boot directory.
 ## </summary>
 ## <param name="domain">
@@ -2573,6 +2732,24 @@ interface(`files_rw_etc_dirs',`
 	allow $1 etc_t:dir rw_dir_perms;
 ')
 
+#######################################
+## <summary>
+##      Dontaudit remove dir /etc directories.
+## </summary>
+## <param name="domain">
+##      <summary>
+##	Domain to not audit.
+##      </summary>
+## </param>
+#
+interface(`files_dontaudit_remove_etc_dir',`
+        gen_require(`
+                type etc_t;
+        ')
+
+        dontaudit $1 etc_t:dir rmdir;
+')
+
 ##########################################
 ## <summary>
 ## 	Manage generic directories in /etc
@@ -2652,7 +2829,7 @@ interface(`files_read_etc_files',`
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain to not audit.
 ##	</summary>
 ## </param>
 #
@@ -2708,6 +2885,25 @@ interface(`files_manage_etc_files',`
 
 ########################################
 ## <summary>
+##	Do not audit attempts to check the 
+##	access on etc files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_access_check_etc',`
+	gen_require(`
+		type etc_t;
+	')
+
+	dontaudit $1 etc_t:file_class_set audit_access;
+')
+
+########################################
+## <summary>
 ##	Delete system configuration files in /etc.
 ## </summary>
 ## <param name="domain">
@@ -2726,6 +2922,24 @@ interface(`files_delete_etc_files',`
 
 ########################################
 ## <summary>
+##	Remove entries from the etc directory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_delete_etc_dir_entry',`
+	gen_require(`
+		type etc_t;
+	')
+
+	allow $1 etc_t:dir del_entry_dir_perms;
+')
+
+########################################
+## <summary>
 ##	Execute generic files in /etc.
 ## </summary>
 ## <param name="domain">
@@ -2891,24 +3105,6 @@ interface(`files_delete_boot_flag',`
 
 ########################################
 ## <summary>
-##	Do not audit attempts to set the attributes of the etc_runtime files
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`files_dontaudit_setattr_etc_runtime_files',`
-	gen_require(`
-		type etc_runtime_t;
-	')
-
-	dontaudit $1 etc_runtime_t:file setattr;
-')
-
-########################################
-## <summary>
 ##	Read files in /etc that are dynamically
 ##	created on boot, such as mtab.
 ## </summary>
@@ -2949,6 +3145,42 @@ interface(`files_read_etc_runtime_files',`
 
 ########################################
 ## <summary>
+##	Do not audit attempts to set the attributes of the etc_runtime files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_setattr_etc_runtime_files',`
+	gen_require(`
+		type etc_runtime_t;
+	')
+
+	dontaudit $1 etc_runtime_t:file setattr;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to write etc_runtime files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_write_etc_runtime_files',`
+	gen_require(`
+		type etc_runtime_t;
+	')
+
+	dontaudit $1 etc_runtime_t:file write;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to read files
 ##	in /etc that are dynamically
 ##	created on boot, such as mtab.
@@ -2986,6 +3218,7 @@ interface(`files_rw_etc_runtime_files',`
 
 	allow $1 etc_t:dir list_dir_perms;
 	rw_files_pattern($1, etc_t, etc_runtime_t)
+	read_lnk_files_pattern($1, etc_t, etc_t)
 ')
 
 ########################################
@@ -3007,6 +3240,7 @@ interface(`files_manage_etc_runtime_files',`
 	')
 
 	manage_files_pattern($1, { etc_t etc_runtime_t }, etc_runtime_t)
+	read_lnk_files_pattern($1, etc_t, etc_runtime_t)
 ')
 
 ########################################
@@ -3382,6 +3616,25 @@ interface(`files_rw_isid_type_blk_files',`
 
 ########################################
 ## <summary>
+##	rw any files inherited from another process
+##	on new filesystems that have not yet been labeled.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_rw_inherited_isid_type_files',`
+	gen_require(`
+		type file_t;
+	')
+
+	allow $1 file_t:file rw_inherited_file_perms;
+')
+
+########################################
+## <summary>
 ##	Create, read, write, and delete block device nodes
 ##	on new filesystems that have not yet been labeled.
 ## </summary>
@@ -3723,20 +3976,38 @@ interface(`files_list_mnt',`
 
 ######################################
 ## <summary>
-##	Do not audit attempts to list the contents of /mnt.
+##  dontaudit List the contents of /mnt.
+## </summary>
+## <param name="domain">
+##  <summary>
+##	Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`files_dontaudit_list_mnt',`
+    gen_require(`
+        type mnt_t;
+    ')
+
+    dontaudit $1 mnt_t:dir list_dir_perms;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to check the 
+##	write access on mnt files
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain to not audit.
 ##	</summary>
 ## </param>
 #
-interface(`files_dontaudit_list_mnt',`
+interface(`files_dontaudit_access_check_mnt',`
 	gen_require(`
 		type mnt_t;
 	')
-
-	dontaudit $1 mnt_t:dir list_dir_perms;
+	dontaudit $1 mnt_t:file_class_set audit_access;
 ')
 
 ########################################
@@ -4126,10 +4397,131 @@ interface(`files_read_world_readable_sockets',`
 	allow $1 readable_t:sock_file read_sock_file_perms;
 ')
 
-########################################
+#######################################
 ## <summary>
-##	Allow the specified type to associate
-##	to a filesystem with the type of the
+##  Read manageable system configuration files in /etc
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`files_read_system_conf_files',`
+    gen_require(`
+        type etc_t, system_conf_t;
+    ')
+
+    allow $1 etc_t:dir list_dir_perms;
+    read_files_pattern($1, etc_t, system_conf_t)
+    read_lnk_files_pattern($1, etc_t, system_conf_t)
+')
+
+######################################
+## <summary>
+##  Manage manageable system configuration files in /etc.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`files_manage_system_conf_files',`
+    gen_require(`
+        type etc_t, system_conf_t;
+    ')
+
+    manage_files_pattern($1, { etc_t system_conf_t }, system_conf_t)
+    files_filetrans_system_conf_named_files($1)
+')
+
+#####################################
+## <summary>
+##  File name transition for system configuration files in /etc.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`files_filetrans_system_conf_named_files',`
+    gen_require(`
+        type etc_t, system_conf_t;
+    ')
+
+	filetrans_pattern($1, etc_t, system_conf_t, file, "sysctl.conf")
+	filetrans_pattern($1, etc_t, system_conf_t, file, "sysctl.conf.old")
+	filetrans_pattern($1, etc_t, system_conf_t, file, "ebtables.old")
+	filetrans_pattern($1, etc_t, system_conf_t, file, "ebtables-config")
+	filetrans_pattern($1, etc_t, system_conf_t, file, "ebtables-config.old")
+	filetrans_pattern($1, etc_t, system_conf_t, file, "iptables.old")
+	filetrans_pattern($1, etc_t, system_conf_t, file, "iptables-config")
+	filetrans_pattern($1, etc_t, system_conf_t, file, "iptables-config.old")
+	filetrans_pattern($1, etc_t, system_conf_t, file, "system-config-firewall")
+	filetrans_pattern($1, etc_t, system_conf_t, file, "system-config-firewall.old")
+')
+
+######################################
+## <summary>
+##  Relabel manageable system configuration files in /etc.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`files_relabelto_system_conf_files',`
+    gen_require(`
+        type usr_t;
+    ')
+
+    relabelto_files_pattern($1, system_conf_t, system_conf_t)
+')
+
+######################################
+## <summary>
+##  Relabel manageable system configuration files in /etc.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`files_relabelfrom_system_conf_files',`
+    gen_require(`
+        type usr_t;
+    ')
+
+    relabelfrom_files_pattern($1, system_conf_t, system_conf_t)
+')
+
+###################################
+## <summary>
+##  Create files in /etc with the type used for
+##  the manageable system config files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  The type of the process performing this action.
+##  </summary>
+## </param>
+#
+interface(`files_etc_filetrans_system_conf',`
+    gen_require(`
+        type etc_t, system_conf_t;
+    ')
+
+    filetrans_pattern($1, etc_t, system_conf_t, file)
+')
+
+########################################
+## <summary>
+##	Allow the specified type to associate
+##	to a filesystem with the type of the
 ##	temporary directory (/tmp).
 ## </summary>
 ## <param name="file_type">
@@ -4148,6 +4540,26 @@ interface(`files_associate_tmp',`
 
 ########################################
 ## <summary>
+##	Allow the specified type to associate
+##	to a filesystem with the type of the
+##	/ file system
+## </summary>
+## <param name="file_type">
+##	<summary>
+##	Type of the file to associate.
+##	</summary>
+## </param>
+#
+interface(`files_associate_rootfs',`
+	gen_require(`
+		type root_t;
+	')
+
+	allow $1 root_t:filesystem associate;
+')
+
+########################################
+## <summary>
 ##	Get the	attributes of the tmp directory (/tmp).
 ## </summary>
 ## <param name="domain">
@@ -4161,6 +4573,7 @@ interface(`files_getattr_tmp_dirs',`
 		type tmp_t;
 	')
 
+	read_lnk_files_pattern($1, tmp_t, tmp_t)
 	allow $1 tmp_t:dir getattr;
 ')
 
@@ -4171,7 +4584,7 @@ interface(`files_getattr_tmp_dirs',`
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain to not audit.
 ##	</summary>
 ## </param>
 #
@@ -4198,6 +4611,7 @@ interface(`files_search_tmp',`
 		type tmp_t;
 	')
 
+	read_lnk_files_pattern($1, tmp_t, tmp_t)
 	allow $1 tmp_t:dir search_dir_perms;
 ')
 
@@ -4234,6 +4648,7 @@ interface(`files_list_tmp',`
 		type tmp_t;
 	')
 
+	read_lnk_files_pattern($1, tmp_t, tmp_t)
 	allow $1 tmp_t:dir list_dir_perms;
 ')
 
@@ -4243,7 +4658,7 @@ interface(`files_list_tmp',`
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain not to audit.
+##	Domain to not audit.
 ##	</summary>
 ## </param>
 #
@@ -4255,6 +4670,25 @@ interface(`files_dontaudit_list_tmp',`
 	dontaudit $1 tmp_t:dir list_dir_perms;
 ')
 
+#######################################
+## <summary>
+##  Allow read and write to the tmp directory (/tmp).
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain not to audit.
+##  </summary>
+## </param>
+#
+interface(`files_rw_generic_tmp_dir',`
+    gen_require(`
+        type tmp_t;
+    ')
+
+    files_search_tmp($1)
+    allow $1 tmp_t:dir rw_dir_perms;
+')
+
 ########################################
 ## <summary>
 ##	Remove entries from the tmp directory.
@@ -4270,6 +4704,7 @@ interface(`files_delete_tmp_dir_entry',`
 		type tmp_t;
 	')
 
+	files_search_tmp($1)
 	allow $1 tmp_t:dir del_entry_dir_perms;
 ')
 
@@ -4311,6 +4746,32 @@ interface(`files_manage_generic_tmp_dirs',`
 
 ########################################
 ## <summary>
+##	Allow shared library text relocations in tmp files.
+## </summary>
+## <desc>
+##	<p>
+##	Allow shared library text relocations in tmp files.
+##	</p>
+##	<p>
+##	This is added to support java policy.
+##	</p>
+## </desc>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_execmod_tmp',`
+	gen_require(`
+		attribute tmpfile;
+	')
+
+	allow $1 tmpfile:file execmod;
+')
+
+########################################
+## <summary>
 ##	Manage temporary files and directories in /tmp.
 ## </summary>
 ## <param name="domain">
@@ -4365,6 +4826,42 @@ interface(`files_rw_generic_tmp_sockets',`
 
 ########################################
 ## <summary>
+##	Relabel a dir from the type used in /tmp.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_relabelfrom_tmp_dirs',`
+	gen_require(`
+		type tmp_t;
+	')
+
+	relabelfrom_dirs_pattern($1, tmp_t, tmp_t)
+')
+
+########################################
+## <summary>
+##	Relabel a file from the type used in /tmp.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_relabelfrom_tmp_files',`
+	gen_require(`
+		type tmp_t;
+	')
+
+	relabelfrom_files_pattern($1, tmp_t, tmp_t)
+')
+
+########################################
+## <summary>
 ##	Set the attributes of all tmp directories.
 ## </summary>
 ## <param name="domain">
@@ -4428,7 +4925,7 @@ interface(`files_relabel_all_tmp_dirs',`
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain not to audit.
+##	Domain to not audit.
 ##	</summary>
 ## </param>
 #
@@ -4488,7 +4985,7 @@ interface(`files_relabel_all_tmp_files',`
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain not to audit.
+##	Domain to not audit.
 ##	</summary>
 ## </param>
 #
@@ -4573,6 +5070,16 @@ interface(`files_purge_tmp',`
 	delete_lnk_files_pattern($1, tmpfile, tmpfile)
 	delete_fifo_files_pattern($1, tmpfile, tmpfile)
 	delete_sock_files_pattern($1, tmpfile, tmpfile)
+	delete_chr_files_pattern($1, tmpfile, tmpfile)
+	delete_blk_files_pattern($1, tmpfile, tmpfile)
+	files_list_isid_type_dirs($1)
+	files_delete_isid_type_dirs($1)
+	files_delete_isid_type_files($1)
+	files_delete_isid_type_symlinks($1)
+	files_delete_isid_type_fifo_files($1)
+	files_delete_isid_type_sock_files($1)
+	files_delete_isid_type_blk_files($1)
+	files_delete_isid_type_chr_files($1)
 ')
 
 ########################################
@@ -5150,6 +5657,24 @@ interface(`files_list_var',`
 
 ########################################
 ## <summary>
+##	Do not audit listing of the var directory (/var).
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_list_var',`
+	gen_require(`
+		type var_t;
+	')
+
+	dontaudit $1 var_t:dir list_dir_perms;
+')
+
+########################################
+## <summary>
 ##	Create, read, write, and delete directories
 ##	in the /var directory.
 ## </summary>
@@ -5505,6 +6030,25 @@ interface(`files_read_var_lib_symlinks',`
 	read_lnk_files_pattern($1, { var_t var_lib_t }, var_lib_t)
 ')
 
+########################################
+## <summary>
+##	manage generic symbolic links
+##	in the /var/lib directory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_manage_var_lib_symlinks',`
+	gen_require(`
+		type var_lib_t;
+	')
+
+	manage_lnk_files_pattern($1,var_lib_t,var_lib_t)
+')
+
 # cjp: the next two interfaces really need to be fixed
 # in some way.  They really neeed their own types.
 
@@ -5550,6 +6094,25 @@ interface(`files_manage_mounttab',`
 
 ########################################
 ## <summary>
+##	List generic lock directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_list_locks',`
+	gen_require(`
+		type var_t, var_lock_t;
+	')
+
+	files_search_locks($1)
+	list_dirs_pattern($1, var_t, var_lock_t)
+')
+
+########################################
+## <summary>
 ##	Search the locks directory (/var/lock).
 ## </summary>
 ## <param name="domain">
@@ -5563,6 +6126,7 @@ interface(`files_search_locks',`
 		type var_t, var_lock_t;
 	')
 
+	files_search_pids($1)
 	allow $1 var_lock_t:lnk_file read_lnk_file_perms;
 	search_dirs_pattern($1, var_t, var_lock_t)
 ')
@@ -5589,7 +6153,8 @@ interface(`files_dontaudit_search_locks',`
 
 ########################################
 ## <summary>
-##	List generic lock directories.
+##	create a directory in the /var/lock
+##	directories.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -5597,13 +6162,30 @@ interface(`files_dontaudit_search_locks',`
 ##	</summary>
 ## </param>
 #
-interface(`files_list_locks',`
+interface(`files_create_lock_dirs',`
 	gen_require(`
 		type var_t, var_lock_t;
 	')
+	files_search_locks($1)
+	allow $1 var_lock_t:dir create_dir_perms;
+')
 
-	allow $1 var_lock_t:lnk_file read_lnk_file_perms;
-	list_dirs_pattern($1, var_t, var_lock_t)
+########################################
+## <summary>
+##	Set the attributes of the /var/lock directory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_setattr_lock_dirs',`
+	gen_require(`
+		type var_lock_t;
+	')
+
+	allow $1 var_lock_t:dir setattr;
 ')
 
 ########################################
@@ -5622,7 +6204,7 @@ interface(`files_rw_lock_dirs',`
 		type var_t, var_lock_t;
 	')
 
-	allow $1 var_lock_t:lnk_file read_lnk_file_perms;
+	files_search_locks($1)
 	rw_dirs_pattern($1, var_t, var_lock_t)
 ')
 
@@ -5635,7 +6217,6 @@ interface(`files_rw_lock_dirs',`
 ##	Domain allowed access.
 ##	</summary>
 ## </param>
-## <rolecap/>
 #
 interface(`files_relabel_all_lock_dirs',`
 	gen_require(`
@@ -5663,8 +6244,7 @@ interface(`files_getattr_generic_locks',`
 		type var_t, var_lock_t;
 	')
 
-	allow $1 var_t:dir search_dir_perms;
-	allow $1 var_lock_t:lnk_file read_lnk_file_perms;
+	files_search_locks($1)
 	allow $1 var_lock_t:dir list_dir_perms;
 	getattr_files_pattern($1, var_lock_t, var_lock_t)
 ')
@@ -5680,13 +6260,12 @@ interface(`files_getattr_generic_locks',`
 ## </param>
 #
 interface(`files_delete_generic_locks',`
-	gen_require(`
+       gen_require(`
 		type var_t, var_lock_t;
-	')
+       ')
 
-	allow $1 var_t:dir search_dir_perms;
-	allow $1 var_lock_t:lnk_file read_lnk_file_perms;
-	delete_files_pattern($1, var_lock_t, var_lock_t)
+       files_search_locks($1)
+       delete_files_pattern($1, var_lock_t, var_lock_t)
 ')
 
 ########################################
@@ -5705,8 +6284,7 @@ interface(`files_manage_generic_locks',`
 		type var_t, var_lock_t;
 	')
 
-	allow $1 var_t:dir search_dir_perms;
-	allow $1 var_lock_t:lnk_file read_lnk_file_perms;
+	files_search_locks($1)
 	manage_files_pattern($1, var_lock_t, var_lock_t)
 ')
 
@@ -5748,8 +6326,7 @@ interface(`files_read_all_locks',`
 		type var_t, var_lock_t;
 	')
 
-	allow $1 var_lock_t:lnk_file read_lnk_file_perms;
-	allow $1 { var_t var_lock_t }:dir search_dir_perms;
+	files_search_locks($1)
 	allow $1 lockfile:dir list_dir_perms;
 	read_files_pattern($1, lockfile, lockfile)
 	read_lnk_files_pattern($1, lockfile, lockfile)
@@ -5771,8 +6348,7 @@ interface(`files_manage_all_locks',`
 		type var_t, var_lock_t;
 	')
 
-	allow $1 var_lock_t:lnk_file read_lnk_file_perms;
-	allow $1 { var_t var_lock_t }:dir search_dir_perms;
+	files_search_locks($1)
 	manage_dirs_pattern($1, lockfile, lockfile)
 	manage_files_pattern($1, lockfile, lockfile)
 	manage_lnk_files_pattern($1, lockfile, lockfile)
@@ -5809,8 +6385,7 @@ interface(`files_lock_filetrans',`
 		type var_t, var_lock_t;
 	')
 
-	allow $1 var_t:dir search_dir_perms;
-	allow $1 var_lock_t:lnk_file read_lnk_file_perms;
+	files_search_locks($1)
 	filetrans_pattern($1, var_lock_t, $2, $3, $4)
 ')
 
@@ -5873,6 +6448,43 @@ interface(`files_search_pids',`
 	search_dirs_pattern($1, var_t, var_run_t)
 ')
 
+######################################
+## <summary>
+## Add and remove entries from pid directories.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`files_rw_pid_dirs',`
+    gen_require(`
+        type var_run_t;
+    ')
+
+    allow $1 var_run_t:dir rw_dir_perms;
+')
+
+#######################################
+## <summary>
+##      Create generic pid directory.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`files_create_var_run_dirs',`
+        gen_require(`
+                type var_t, var_run_t;
+        ')
+
+        allow $1 var_t:dir search_dir_perms;
+        allow $1 var_run_t:dir create_dir_perms;
+')
+
 ########################################
 ## <summary>
 ##	Do not audit attempts to search
@@ -5895,6 +6507,25 @@ interface(`files_dontaudit_search_pids',`
 
 ########################################
 ## <summary>
+##	Do not audit attempts to search
+##	the all /var/run directory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_search_all_pids',`
+	gen_require(`
+		attribute pidfile;
+	')
+
+	dontaudit $1 pidfile:dir search_dir_perms;
+')
+
+########################################
+## <summary>
 ##	List the contents of the runtime process
 ##	ID directories (/var/run).
 ## </summary>
@@ -6010,7 +6641,6 @@ interface(`files_pid_filetrans',`
 	')
 
 	allow $1 var_t:dir search_dir_perms;
-	allow $1 var_run_t:lnk_file read_lnk_file_perms;
 	filetrans_pattern($1, var_run_t, $2, $3, $4)
 ')
 
@@ -6096,6 +6726,116 @@ interface(`files_dontaudit_ioctl_all_pids',`
 
 ########################################
 ## <summary>
+##	Relable all pid directories
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_relabel_all_pid_dirs',`
+	gen_require(`
+		attribute pidfile;
+	')
+
+	relabel_dirs_pattern($1, pidfile, pidfile)
+')
+
+########################################
+## <summary>
+##	Delete all pid sockets
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_delete_all_pid_sockets',`
+	gen_require(`
+		attribute pidfile;
+	')
+
+	allow $1 pidfile:sock_file delete_sock_file_perms;
+')
+
+########################################
+## <summary>
+##	Create all pid sockets
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_create_all_pid_sockets',`
+	gen_require(`
+		attribute pidfile;
+	')
+
+	allow $1 pidfile:sock_file create_sock_file_perms;
+')
+
+########################################
+## <summary>
+##	Create all pid named pipes
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_create_all_pid_pipes',`
+	gen_require(`
+		attribute pidfile;
+	')
+
+	allow $1 pidfile:fifo_file create_fifo_file_perms;
+')
+
+########################################
+## <summary>
+##	Delete all pid named pipes
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_delete_all_pid_pipes',`
+	gen_require(`
+		attribute pidfile;
+	')
+
+	allow $1 pidfile:fifo_file delete_fifo_file_perms;
+')
+
+########################################
+## <summary>
+##	manage all pidfile directories
+##	in the /var/run directory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_manage_all_pid_dirs',`
+	gen_require(`
+		attribute pidfile;
+	')
+
+	manage_dirs_pattern($1,pidfile,pidfile)
+')
+
+
+########################################
+## <summary>
 ##	Read all process ID files.
 ## </summary>
 ## <param name="domain">
@@ -6108,12 +6848,67 @@ interface(`files_dontaudit_ioctl_all_pids',`
 interface(`files_read_all_pids',`
 	gen_require(`
 		attribute pidfile;
-		type var_t, var_run_t;
+		type var_t;
 	')
 
-	allow $1 var_run_t:lnk_file read_lnk_file_perms;
 	list_dirs_pattern($1, var_t, pidfile)
 	read_files_pattern($1, pidfile, pidfile)
+	read_lnk_files_pattern($1, pidfile, pidfile)
+')
+
+########################################
+## <summary>
+##	Relable all pid files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_relabel_all_pid_files',`
+	gen_require(`
+		attribute pidfile;
+	')
+
+	relabel_files_pattern($1, pidfile, pidfile)
+')
+
+########################################
+## <summary>
+##	Execute generic programs in /var/run in the caller domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_exec_generic_pid_files',`
+	gen_require(`
+		type var_run_t;
+	')
+
+	exec_files_pattern($1, var_run_t, var_run_t)
+')
+
+########################################
+## <summary>
+##	manage all pidfiles 
+##	in the /var/run directory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_manage_all_pids',`
+	gen_require(`
+		attribute pidfile;
+	')
+
+	manage_files_pattern($1,pidfile,pidfile)
 ')
 
 ########################################
@@ -6184,6 +6979,90 @@ interface(`files_delete_all_pid_dirs',`
 
 ########################################
 ## <summary>
+##	Make the specified type a file
+##	used for spool files.
+## </summary>
+## <desc>
+##	<p>
+##	Make the specified type usable for spool files.
+##	This will also make the type usable for files, making
+##	calls to files_type() redundant.  Failure to use this interface
+##	for a spool file may result in problems with
+##	purging spool files.
+##	</p>
+##	<p>
+##	Related interfaces:
+##	</p>
+##	<ul>
+##		<li>files_spool_filetrans()</li>
+##	</ul>
+##	<p>
+##	Example usage with a domain that can create and
+##	write its spool file in the system spool file
+##	directories (/var/spool):
+##	</p>
+##	<p>
+##	type myspoolfile_t;
+##	files_spool_file(myfile_spool_t)
+##	allow mydomain_t myfile_spool_t:file { create_file_perms write_file_perms };
+##	files_spool_filetrans(mydomain_t, myfile_spool_t, file)
+##	</p>
+## </desc>
+## <param name="file_type">
+##	<summary>
+##	Type of the file to be used as a
+##	spool file.
+##	</summary>
+## </param>
+## <infoflow type="none"/>
+#
+interface(`files_spool_file',`
+	gen_require(`
+		attribute spoolfile;
+	')
+
+	files_type($1)
+	typeattribute $1 spoolfile;
+')
+
+########################################
+## <summary>
+##	Create all spool sockets
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_create_all_spool_sockets',`
+	gen_require(`
+		attribute spoolfile;
+	')
+
+	allow $1 spoolfile:sock_file create_sock_file_perms;
+')
+
+########################################
+## <summary>
+##	Delete all spool sockets
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_delete_all_spool_sockets',`
+	gen_require(`
+		attribute spoolfile;
+	')
+
+	allow $1 spoolfile:sock_file delete_sock_file_perms;
+')
+
+########################################
+## <summary>
 ##	Search the contents of generic spool
 ##	directories (/var/spool).
 ## </summary>
@@ -6406,3 +7285,332 @@ interface(`files_unconfined',`
 
 	typeattribute $1 files_unconfined_type;
 ')
+
+########################################
+## <summary>
+##	Create a core files in /
+## </summary>
+## <desc>
+##	<p>
+##	Create a core file in /,
+##	</p>
+## </desc>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`files_manage_root_files',`
+	gen_require(`
+		type root_t;
+	')
+
+	manage_files_pattern($1, root_t, root_t)
+')
+
+########################################
+## <summary>
+##     Create a default directory
+## </summary>
+## <desc>
+##     <p>
+##     Create a default_t direcrory
+##     </p>
+## </desc>
+## <param name="domain">
+##     <summary>
+##     Domain allowed access.
+##     </summary>
+## </param>
+## <rolecap/>
+#
+interface(`files_create_default_dir',`
+       gen_require(`
+               type default_t;
+       ')
+
+       allow $1 default_t:dir create;
+')
+
+########################################
+## <summary>
+##	Create, default_t objects with an automatic
+##	type transition.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="object">
+##	<summary>
+##	The class of the object being created.
+##	</summary>
+## </param>
+#
+interface(`files_root_filetrans_default',`
+       gen_require(`
+               type root_t, default_t;
+       ')
+
+       filetrans_pattern($1, root_t, default_t, $2)
+')
+
+########################################
+## <summary>
+##	manage generic symbolic links
+##	in the /var/run directory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_manage_generic_pids_symlinks',`
+	gen_require(`
+		type var_run_t;
+	')
+
+	manage_lnk_files_pattern($1,var_run_t,var_run_t)
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to getattr
+##	all tmpfs files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_getattr_tmpfs_files',`
+	gen_require(`
+		attribute tmpfsfile;
+	')
+
+	allow $1 tmpfsfile:file getattr;
+')
+
+########################################
+## <summary>
+##	Allow read write all tmpfs files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`files_rw_tmpfs_files',`
+	gen_require(`
+		attribute tmpfsfile;
+	')
+
+	allow $1 tmpfsfile:file { read write };
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read security files 
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_read_security_files',`
+	gen_require(`
+		attribute security_file_type;
+	')
+
+	dontaudit $1 security_file_type:file read_file_perms;
+')
+
+########################################
+## <summary>
+##	rw any files inherited from another process
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="object_type">
+##  <summary>
+##  Object type.
+##  </summary>
+## </param>
+#
+interface(`files_rw_all_inherited_files',`
+	gen_require(`
+		attribute file_type;
+	')
+
+	allow $1 { file_type $2 }:file rw_inherited_file_perms;
+	allow $1 { file_type $2 }:fifo_file rw_inherited_fifo_file_perms;
+	allow $1 { file_type $2 }:sock_file rw_inherited_sock_file_perms;
+	allow $1 { file_type $2 }:chr_file rw_inherited_chr_file_perms;
+')
+
+########################################
+## <summary>
+##	Allow any file point to be the entrypoint of this domain
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`files_entrypoint_all_files',`
+	gen_require(`
+		attribute file_type;
+	')
+	allow $1 file_type:file entrypoint;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to rw inherited file perms
+##	of non security files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_all_non_security_leaks',`
+	gen_require(`
+		attribute non_security_file_type;
+	')
+
+	dontaudit $1 non_security_file_type:file_class_set rw_inherited_file_perms;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read or write
+##	all leaked files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_leaks',`
+	gen_require(`
+		attribute file_type;
+	')
+
+	dontaudit $1 file_type:file rw_inherited_file_perms;
+	dontaudit $1 file_type:lnk_file { read };
+')
+
+########################################
+## <summary>
+##	Allow domain to create_file_ass all types
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_create_as_is_all_files',`
+	gen_require(`
+		attribute file_type;
+		class kernel_service create_files_as;
+	')
+
+	allow $1 file_type:kernel_service create_files_as;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to check the 
+##	write access on all files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_all_access_check',`
+	gen_require(`
+		attribute file_type;
+	')
+
+	dontaudit $1 file_type:file_class_set audit_access;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to write to all files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`files_dontaudit_write_all_files',`
+	gen_require(`
+		attribute file_type;
+	')
+
+	dontaudit $1 file_type:dir_file_class_set write;
+')
+
+########################################
+## <summary>
+##	Allow domain to delete to all files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`files_delete_all_non_security_files',`
+	gen_require(`
+		attribute non_security_file_type;
+	')
+
+	allow $1 non_security_file_type:file_class_set unlink;
+')
+
+########################################
+## <summary>
+##	Transition named content in the var_run_t directory
+## </summary>
+## <param name="domain">
+##	<summary>
+##      Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_filetrans_named_content',`
+	gen_require(`
+		type mnt_t;
+		type usr_t;
+		type var_t;
+	')
+
+	files_pid_filetrans($1, mnt_t, dir, "media")
+	files_root_filetrans($1, mnt_t, dir, "afs")
+	files_root_filetrans($1, mnt_t, dir, "misc")
+	files_root_filetrans($1, mnt_t, dir, "net")
+	files_root_filetrans($1, usr_t, dir, "export")
+	files_root_filetrans($1, usr_t, dir, "emul")
+	files_root_filetrans($1, var_t, dir, "nsr")
+')
diff --git a/policy/modules/kernel/files.te b/policy/modules/kernel/files.te
index 1ce8aa0..24dfed0 100644
--- a/policy/modules/kernel/files.te
+++ b/policy/modules/kernel/files.te
@@ -10,7 +10,9 @@ attribute files_unconfined_type;
 attribute lockfile;
 attribute mountpoint;
 attribute pidfile;
+attribute spoolfile;
 attribute configfile;
+attribute etcfile;
 
 # For labeling types that are to be polyinstantiated
 attribute polydir;
@@ -64,12 +66,21 @@ files_type(etc_t)
 typealias etc_t alias automount_etc_t;
 typealias etc_t alias snmpd_etc_t;
 
+# system_conf_t is a new type of various
+# files in /etc/ that can be managed and
+# created by several domains.
+# 
+type system_conf_t, configfile;
+files_type(system_conf_t)
+# compatibility aliases for removed type:
+typealias system_conf_t alias iptables_conf_t;
+
 #
 # etc_runtime_t is the type of various
 # files in /etc that are automatically
 # generated during initialization.
 #
-type etc_runtime_t;
+type etc_runtime_t, configfile;
 files_type(etc_runtime_t)
 #Temporarily in policy until FC5 dissappears
 typealias etc_runtime_t alias firstboot_rw_t;
@@ -139,6 +150,7 @@ files_mountpoint(src_t)
 #
 type system_map_t;
 files_type(system_map_t)
+kernel_proc_type(system_map_t)
 genfscon proc /kallsyms gen_context(system_u:object_r:system_map_t,s0)
 
 #
@@ -167,12 +179,14 @@ files_mountpoint(var_t)
 #
 type var_lib_t;
 files_mountpoint(var_lib_t)
+files_poly(var_lib_t)
 
 #
 # var_lock_t is tye type of /var/lock
 #
 type var_lock_t;
 files_lock_file(var_lock_t)
+files_mountpoint(var_lock_t)
 
 #
 # var_run_t is the type of /var/run, usually
@@ -187,6 +201,7 @@ files_mountpoint(var_run_t)
 #
 type var_spool_t;
 files_tmp_file(var_spool_t)
+files_spool_file(var_spool_t)
 
 ########################################
 #
@@ -229,6 +244,6 @@ allow files_unconfined_type file_type:{ dir lnk_file sock_file fifo_file blk_fil
 # Mount/unmount any filesystem with the context= option.
 allow files_unconfined_type file_type:filesystem *;
 
-tunable_policy(`allow_execmod',`
+tunable_policy(`selinuxuser_execmod',`
 	allow files_unconfined_type file_type:file execmod;
 ')
diff --git a/policy/modules/kernel/filesystem.fc b/policy/modules/kernel/filesystem.fc
index cda5588..e89e4bf 100644
--- a/policy/modules/kernel/filesystem.fc
+++ b/policy/modules/kernel/filesystem.fc
@@ -14,3 +14,8 @@
 # for systemd systems:
 /sys/fs/cgroup		-d	gen_context(system_u:object_r:cgroup_t,s0)
 /sys/fs/cgroup/.*		<<none>>
+
+/usr/lib/udev/devices/hugepages -d	gen_context(system_u:object_r:hugetlbfs_t,s0)
+/usr/lib/udev/devices/hugepages/.*	<<none>>
+/usr/lib/udev/devices/shm	-d	gen_context(system_u:object_r:tmpfs_t,s0)
+/usr/lib/udev/devices/shm/.*	<<none>>
diff --git a/policy/modules/kernel/filesystem.if b/policy/modules/kernel/filesystem.if
index 7c6b791..6d3f720 100644
--- a/policy/modules/kernel/filesystem.if
+++ b/policy/modules/kernel/filesystem.if
@@ -631,6 +631,27 @@ interface(`fs_getattr_cgroup',`
 
 ########################################
 ## <summary>
+##	Get attributes of cgroup files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fs_getattr_cgroup_files',`
+	gen_require(`
+		type cgroup_t;
+
+	')
+
+	getattr_files_pattern($1, cgroup_t, cgroup_t)
+	fs_search_tmpfs($1)
+	dev_search_sysfs($1)
+')
+
+########################################
+## <summary>
 ##	Search cgroup directories.
 ## </summary>
 ## <param name="domain">
@@ -646,11 +667,31 @@ interface(`fs_search_cgroup_dirs',`
 	')
 
 	search_dirs_pattern($1, cgroup_t, cgroup_t)
+	fs_search_tmpfs($1)
 	dev_search_sysfs($1)
 ')
 
 ########################################
 ## <summary>
+##	Relabel cgroup directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fs_relabel_cgroup_dirs',`
+	gen_require(`
+		type cgroup_t;
+
+	')
+
+	relabel_dirs_pattern($1, cgroup_t, cgroup_t)
+')
+
+########################################
+## <summary>
 ##	list cgroup directories.
 ## </summary>
 ## <param name="domain">
@@ -665,9 +706,29 @@ interface(`fs_list_cgroup_dirs', `
 	')
 
 	list_dirs_pattern($1, cgroup_t, cgroup_t)
+	fs_search_tmpfs($1)
 	dev_search_sysfs($1)
 ')
 
+#######################################
+## <summary>
+##  Do not audit attempts to search cgroup directories.
+## </summary>
+## <param name="domain">
+##  <summary>
+##	Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`fs_dontaudit_search_cgroup_dirs', `
+    gen_require(`
+        type cgroup_t;
+    ')
+
+	dontaudit $1 cgroup_t:dir search_dir_perms;
+	dev_dontaudit_search_sysfs($1)
+')
+
 ########################################
 ## <summary>
 ##	Delete cgroup directories.
@@ -684,6 +745,7 @@ interface(`fs_delete_cgroup_dirs', `
 	')
 
 	delete_dirs_pattern($1, cgroup_t, cgroup_t)
+	fs_search_tmpfs($1)
 	dev_search_sysfs($1)
 ')
 
@@ -704,6 +766,7 @@ interface(`fs_manage_cgroup_dirs',`
 	')
 
 	manage_dirs_pattern($1, cgroup_t, cgroup_t)
+	fs_search_tmpfs($1)
 	dev_search_sysfs($1)
 ')
 
@@ -724,6 +787,8 @@ interface(`fs_read_cgroup_files',`
 	')
 
 	read_files_pattern($1, cgroup_t, cgroup_t)
+	read_lnk_files_pattern($1, cgroup_t, cgroup_t)
+	fs_search_tmpfs($1)
 	dev_search_sysfs($1)
 ')
 
@@ -743,6 +808,7 @@ interface(`fs_write_cgroup_files', `
 	')
 
 	write_files_pattern($1, cgroup_t, cgroup_t)
+	fs_search_tmpfs($1)
 	dev_search_sysfs($1)
 ')
 
@@ -763,6 +829,7 @@ interface(`fs_rw_cgroup_files',`
 	')
 
 	rw_files_pattern($1, cgroup_t, cgroup_t)
+	fs_search_tmpfs($1)
 	dev_search_sysfs($1)
 ')
 
@@ -803,6 +870,8 @@ interface(`fs_manage_cgroup_files',`
 	')
 
 	manage_files_pattern($1, cgroup_t, cgroup_t)
+	manage_lnk_files_pattern($1, cgroup_t, cgroup_t)
+	fs_search_tmpfs($1)
 	dev_search_sysfs($1)
 ')
 
@@ -1107,6 +1176,24 @@ interface(`fs_read_noxattr_fs_files',`
 
 ########################################
 ## <summary>
+##	Read/Write all inherited noxattrfs files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fs_rw_inherited_noxattr_fs_files',`
+	gen_require(`
+		attribute noxattrfs;
+	')
+
+	allow $1 noxattrfs:file rw_inherited_file_perms;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to read all
 ##	noxattrfs files.
 ## </summary>
@@ -1245,7 +1332,7 @@ interface(`fs_append_cifs_files',`
 
 ########################################
 ## <summary>
-##	dontaudit Append files
+##	Do not audit attempts to append files
 ##	on a CIFS filesystem.
 ## </summary>
 ## <param name="domain">
@@ -1265,6 +1352,42 @@ interface(`fs_dontaudit_append_cifs_files',`
 
 ########################################
 ## <summary>
+##	Read inherited files on a CIFS or SMB filesystem.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fs_read_inherited_cifs_files',`
+	gen_require(`
+		type cifs_t;
+	')
+
+	allow $1 cifs_t:file read_inherited_file_perms;
+')
+
+########################################
+## <summary>
+##	Read/Write inherited files on a CIFS or SMB filesystem.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fs_rw_inherited_cifs_files',`
+	gen_require(`
+		type cifs_t;
+	')
+
+	allow $1 cifs_t:file rw_inherited_file_perms;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to read or
 ##	write files on a CIFS or SMB filesystem.
 ## </summary>
@@ -1279,7 +1402,7 @@ interface(`fs_dontaudit_rw_cifs_files',`
 		type cifs_t;
 	')
 
-	dontaudit $1 cifs_t:file rw_file_perms;
+	dontaudit $1 cifs_t:file rw_inherited_file_perms;
 ')
 
 ########################################
@@ -1542,6 +1665,25 @@ interface(`fs_cifs_domtrans',`
 	domain_auto_transition_pattern($1, cifs_t, $2)
 ')
 
+########################################
+## <summary>
+##	Make general progams in cifs an entrypoint for
+##	the specified domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The domain for which cifs_t is an entrypoint.
+##	</summary>
+## </param>
+#
+interface(`fs_cifs_entry_type',`
+	gen_require(`
+		type cifs_t;
+	')
+
+	domain_entry_file($1, cifs_t)
+')
+
 #######################################
 ## <summary>
 ##	Create, read, write, and delete dirs
@@ -1582,6 +1724,24 @@ interface(`fs_manage_configfs_files',`
 
 ########################################
 ## <summary>
+##	Unmount a configfs filesystem
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fs_unmount_configfs',`
+	gen_require(`
+		type configfs_t;
+	')
+
+	allow $1 configfs_t:filesystem unmount;
+')
+
+########################################
+## <summary>
 ##	Mount a DOS filesystem, such as
 ##	FAT32 or NTFS.
 ## </summary>
@@ -1679,6 +1839,25 @@ interface(`fs_relabelfrom_dos_fs',`
 
 ########################################
 ## <summary>
+##	Allow changing of the label of a
+##	tmpfs filesystem using the context= mount option.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fs_relabelfrom_tmpfs',`
+	gen_require(`
+		type tmpfs_t;
+	')
+
+	allow $1 tmpfs_t:filesystem relabelfrom;
+')
+
+########################################
+## <summary>
 ##	Search dosfs filesystem.
 ## </summary>
 ## <param name="domain">
@@ -2025,6 +2204,68 @@ interface(`fs_read_fusefs_symlinks',`
 
 ########################################
 ## <summary>
+##	Manage symbolic links on a FUSEFS filesystem.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fs_manage_fusefs_symlinks',`
+	gen_require(`
+		type fusefs_t;
+	')
+
+	manage_lnk_files_pattern($1, fusefs_t, fusefs_t)
+')
+
+########################################
+## <summary>
+##	Execute a file on a FUSE filesystem
+##	in the specified domain.
+## </summary>
+## <desc>
+##	<p>
+##	Execute a file on a FUSE filesystem
+##	in the specified domain.  This allows
+##	the specified domain to execute any file
+##	on these filesystems in the specified
+##	domain.  This is not suggested.
+##	</p>
+##	<p>
+##	No interprocess communication (signals, pipes,
+##	etc.) is provided by this interface since
+##	the domains are not owned by this module.
+##	</p>
+##	<p>
+##	This interface was added to handle
+##	home directories on FUSE filesystems,
+##	in particular used by the ssh-agent policy.
+##	</p>
+## </desc>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+## <param name="target_domain">
+##	<summary>
+##	The type of the new process.
+##	</summary>
+## </param>
+#
+interface(`fs_fusefs_domtrans',`
+	gen_require(`
+		type fusefs_t;
+	')
+
+	allow $1 fusefs_t:dir search_dir_perms;
+	domain_auto_transition_pattern($1, fusefs_t, $2)
+')
+
+########################################
+## <summary>
 ##	Get the attributes of an hugetlbfs
 ##	filesystem.
 ## </summary>
@@ -2080,6 +2321,24 @@ interface(`fs_manage_hugetlbfs_dirs',`
 
 ########################################
 ## <summary>
+##	Read hugetlbfs files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fs_read_hugetlbfs_files',`
+	gen_require(`
+		type hugetlbfs_t;
+	')
+
+	read_files_pattern($1, hugetlbfs_t, hugetlbfs_t)
+')
+
+########################################
+## <summary>
 ##	Read and write hugetlbfs files.
 ## </summary>
 ## <param name="domain">
@@ -2148,11 +2407,12 @@ interface(`fs_list_inotifyfs',`
 	')
 
 	allow $1 inotifyfs_t:dir list_dir_perms;
+	fs_read_anon_inodefs_files($1)
 ')
 
 ########################################
 ## <summary>
-##	Dontaudit List inotifyfs filesystem.
+##	Do not audit attempts to list inotifyfs filesystem.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -2485,6 +2745,7 @@ interface(`fs_read_nfs_files',`
 		type nfs_t;
 	')
 
+	fs_search_auto_mountpoints($1)
 	allow $1 nfs_t:dir list_dir_perms;
 	read_files_pattern($1, nfs_t, nfs_t)
 ')
@@ -2523,6 +2784,7 @@ interface(`fs_write_nfs_files',`
 		type nfs_t;
 	')
 
+	fs_search_auto_mountpoints($1)
 	allow $1 nfs_t:dir list_dir_perms;
 	write_files_pattern($1, nfs_t, nfs_t)
 ')
@@ -2549,6 +2811,25 @@ interface(`fs_exec_nfs_files',`
 
 ########################################
 ## <summary>
+##	Make general progams in nfs an entrypoint for
+##	the specified domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The domain for which nfs_t is an entrypoint.
+##	</summary>
+## </param>
+#
+interface(`fs_nfs_entry_type',`
+	gen_require(`
+		type nfs_t;
+	')
+
+	domain_entry_file($1, nfs_t)
+')
+
+########################################
+## <summary>
 ##	Append files
 ##	on a NFS filesystem.
 ## </summary>
@@ -2569,7 +2850,7 @@ interface(`fs_append_nfs_files',`
 
 ########################################
 ## <summary>
-##	dontaudit Append files
+##	Do not audit attempts to append files
 ##	on a NFS filesystem.
 ## </summary>
 ## <param name="domain">
@@ -2589,6 +2870,42 @@ interface(`fs_dontaudit_append_nfs_files',`
 
 ########################################
 ## <summary>
+##	Read inherited files on a NFS filesystem.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fs_read_inherited_nfs_files',`
+	gen_require(`
+		type nfs_t;
+	')
+
+	allow $1 nfs_t:file read_inherited_file_perms;
+')
+
+########################################
+## <summary>
+##	Read/write inherited files on a NFS filesystem.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fs_rw_inherited_nfs_files',`
+	gen_require(`
+		type nfs_t;
+	')
+
+	allow $1 nfs_t:file rw_inherited_file_perms;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to read or
 ##	write files on a NFS filesystem.
 ## </summary>
@@ -2603,7 +2920,7 @@ interface(`fs_dontaudit_rw_nfs_files',`
 		type nfs_t;
 	')
 
-	dontaudit $1 nfs_t:file rw_file_perms;
+	dontaudit $1 nfs_t:file rw_inherited_file_perms;
 ')
 
 ########################################
@@ -2627,7 +2944,7 @@ interface(`fs_read_nfs_symlinks',`
 
 ########################################
 ## <summary>
-##	Dontaudit read symbolic links on a NFS filesystem.
+##	Do not audit attempts to read symbolic links on a NFS filesystem.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -2741,7 +3058,7 @@ interface(`fs_search_removable',`
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain not to audit.
+##	Domain to not audit.
 ##	</summary>
 ## </param>
 #
@@ -2777,7 +3094,7 @@ interface(`fs_read_removable_files',`
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain not to audit.
+##	Domain to not audit.
 ##	</summary>
 ## </param>
 #
@@ -2970,6 +3287,7 @@ interface(`fs_manage_nfs_dirs',`
 		type nfs_t;
 	')
 
+	fs_search_auto_mountpoints($1)
 	allow $1 nfs_t:dir manage_dir_perms;
 ')
 
@@ -3010,6 +3328,7 @@ interface(`fs_manage_nfs_files',`
 		type nfs_t;
 	')
 
+	fs_search_auto_mountpoints($1)
 	manage_files_pattern($1, nfs_t, nfs_t)
 ')
 
@@ -3050,6 +3369,7 @@ interface(`fs_manage_nfs_symlinks',`
 		type nfs_t;
 	')
 
+	fs_search_auto_mountpoints($1)
 	manage_lnk_files_pattern($1, nfs_t, nfs_t)
 ')
 
@@ -3263,6 +3583,24 @@ interface(`fs_getattr_nfsd_files',`
 	getattr_files_pattern($1, nfsd_fs_t, nfsd_fs_t)
 ')
 
+#######################################
+## <summary>
+##  read files on an nfsd filesystem
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`fs_read_nfsd_files',`
+    gen_require(`
+        type nfsd_fs_t;
+    ')
+
+    read_files_pattern($1, nfsd_fs_t, nfsd_fs_t)
+')
+
 ########################################
 ## <summary>
 ##	Read and write NFS server files.
@@ -3283,6 +3621,24 @@ interface(`fs_rw_nfsd_fs',`
 
 ########################################
 ## <summary>
+##	Manage NFS server files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fs_manage_nfsd_fs',`
+	gen_require(`
+		type nfsd_fs_t;
+	')
+
+	manage_files_pattern($1, nfsd_fs_t, nfsd_fs_t)
+')
+
+########################################
+## <summary>
 ##	Allow the type to associate to ramfs filesystems.
 ## </summary>
 ## <param name="type">
@@ -3392,7 +3748,7 @@ interface(`fs_search_ramfs',`
 
 ########################################
 ## <summary>
-##	Dontaudit Search directories on a ramfs
+##	Do not audit attempts to search directories on a ramfs
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -3429,7 +3785,7 @@ interface(`fs_manage_ramfs_dirs',`
 
 ########################################
 ## <summary>
-##	Dontaudit read on a ramfs files.
+##	Do not audit attempts to read on a ramfs files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -3447,7 +3803,7 @@ interface(`fs_dontaudit_read_ramfs_files',`
 
 ########################################
 ## <summary>
-##	Dontaudit read on a ramfs fifo_files.
+##	Do not audit attempts to read on a ramfs fifo_files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -3815,6 +4171,24 @@ interface(`fs_unmount_tmpfs',`
 
 ########################################
 ## <summary>
+##	Mount on tmpfs directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fs_mounton_tmpfs', `
+	gen_require(`
+		type tmpfs_t;
+	')
+
+	allow $1 tmpfs_t:dir mounton;
+')
+
+########################################
+## <summary>
 ##	Get the attributes of a tmpfs
 ##	filesystem.
 ## </summary>
@@ -3963,6 +4337,42 @@ interface(`fs_dontaudit_list_tmpfs',`
 
 ########################################
 ## <summary>
+##	Relabel directory  on tmpfs filesystems.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fs_relabel_tmpfs_dirs',`
+	gen_require(`
+		type tmpfs_t;
+	')
+
+	relabel_dirs_pattern($1, tmpfs_t, tmpfs_t)
+')
+
+########################################
+## <summary>
+##	Relabel files  on tmpfs filesystems.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fs_relabel_tmpfs_files',`
+	gen_require(`
+		type tmpfs_t;
+	')
+
+	relabel_files_pattern($1, tmpfs_t, tmpfs_t)
+')
+
+########################################
+## <summary>
 ##	Create, read, write, and delete
 ##	tmpfs directories
 ## </summary>
@@ -4069,7 +4479,7 @@ interface(`fs_dontaudit_rw_tmpfs_files',`
 		type tmpfs_t;
 	')
 
-	dontaudit $1 tmpfs_t:file rw_file_perms;
+	dontaudit $1 tmpfs_t:file rw_inherited_file_perms;
 ')
 
 ########################################
@@ -4129,6 +4539,24 @@ interface(`fs_rw_tmpfs_files',`
 
 ########################################
 ## <summary>
+##	Read and write generic tmpfs files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fs_rw_inherited_tmpfs_files',`
+	gen_require(`
+		type tmpfs_t;
+	')
+
+	allow $1 tmpfs_t:file { read write };
+')
+
+########################################
+## <summary>
 ##	Read tmpfs link files.
 ## </summary>
 ## <param name="domain">
@@ -4166,7 +4594,7 @@ interface(`fs_rw_tmpfs_chr_files',`
 
 ########################################
 ## <summary>
-##	dontaudit Read and write character nodes on tmpfs filesystems.
+##	Do not audit attempts to read and write character nodes on tmpfs filesystems.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -4185,6 +4613,42 @@ interface(`fs_dontaudit_use_tmpfs_chr_dev',`
 
 ########################################
 ## <summary>
+##	Do not audit attempts to dontaudit read block nodes on tmpfs filesystems.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`fs_dontaudit_read_tmpfs_blk_dev',`
+	gen_require(`
+		type tmpfs_t;
+	')
+
+	dontaudit $1 tmpfs_t:blk_file read_blk_file_perms;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read files on tmpfs filesystems.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`fs_dontaudit_read_tmpfs_files',`
+	gen_require(`
+		type tmpfs_t;
+	')
+
+	dontaudit $1 tmpfs_t:blk_file read;
+')
+
+########################################
+## <summary>
 ##	Relabel character nodes on tmpfs filesystems.
 ## </summary>
 ## <param name="domain">
@@ -4242,6 +4706,24 @@ interface(`fs_relabel_tmpfs_blk_file',`
 
 ########################################
 ## <summary>
+##	Delete generic files in tmpfs directory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fs_delete_tmpfs_files',`
+	gen_require(`
+		type tmpfs_t;
+	')
+
+	allow $1 tmpfs_t:file unlink;
+')
+
+########################################
+## <summary>
 ##	Read and write, create and delete generic
 ##	files on tmpfs filesystems.
 ## </summary>
@@ -4261,6 +4743,25 @@ interface(`fs_manage_tmpfs_files',`
 
 ########################################
 ## <summary>
+##	Execute files on a tmpfs filesystem.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`fs_exec_tmpfs_files',`
+	gen_require(`
+		type tmpfs_t;
+	')
+
+	exec_files_pattern($1, tmpfs_t, tmpfs_t)
+')
+
+########################################
+## <summary>
 ##	Read and write, create and delete symbolic
 ##	links on tmpfs filesystems.
 ## </summary>
@@ -4467,6 +4968,8 @@ interface(`fs_mount_all_fs',`
 	')
 
 	allow $1 filesystem_type:filesystem mount;
+# Mount checks write access on the dir
+	allow $1 filesystem_type:dir write;
 ')
 
 ########################################
@@ -4513,7 +5016,7 @@ interface(`fs_unmount_all_fs',`
 ## <desc>
 ##	<p>
 ##	Allow the specified domain to
-##	et the attributes of all filesystems.
+##	get the attributes of all filesystems.
 ##	Example attributes:
 ##	</p>
 ##	<ul>
@@ -4876,3 +5379,24 @@ interface(`fs_unconfined',`
 
 	typeattribute $1 filesystem_unconfined_type;
 ')
+
+########################################
+## <summary>
+##	Do not audit attempts to read or write
+##	all leaked filesystems files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`fs_dontaudit_leaks',`
+	gen_require(`
+		attribute filesystem_type;
+	')
+
+	dontaudit $1 filesystem_type:file rw_inherited_file_perms;
+	dontaudit $1 filesystem_type:lnk_file { read };
+')
+
diff --git a/policy/modules/kernel/filesystem.te b/policy/modules/kernel/filesystem.te
index f1ab8c6..9ae349a 100644
--- a/policy/modules/kernel/filesystem.te
+++ b/policy/modules/kernel/filesystem.te
@@ -33,6 +33,8 @@ fs_use_xattr jffs2 gen_context(system_u:object_r:fs_t,s0);
 fs_use_xattr jfs gen_context(system_u:object_r:fs_t,s0);
 fs_use_xattr lustre gen_context(system_u:object_r:fs_t,s0);
 fs_use_xattr xfs gen_context(system_u:object_r:fs_t,s0);
+fs_use_xattr squashfs gen_context(system_u:object_r:fs_t,s0);
+fs_use_xattr zfs gen_context(system_u:object_r:fs_t,s0);
 
 # Use the allocating task SID to label inodes in the following filesystem
 # types, and label the filesystem itself with the specified context.
@@ -52,6 +54,7 @@ type anon_inodefs_t;
 fs_type(anon_inodefs_t)
 files_mountpoint(anon_inodefs_t)
 genfscon anon_inodefs / gen_context(system_u:object_r:anon_inodefs_t,s0)
+mls_trusted_object(anon_inodefs_t)
 
 type bdev_t;
 fs_type(bdev_t)
@@ -67,7 +70,7 @@ fs_type(capifs_t)
 files_mountpoint(capifs_t)
 genfscon capifs / gen_context(system_u:object_r:capifs_t,s0)
 
-type cgroup_t;
+type cgroup_t alias cgroupfs_t;
 fs_type(cgroup_t)
 files_type(cgroup_t)
 files_mountpoint(cgroup_t)
@@ -96,6 +99,7 @@ type hugetlbfs_t;
 fs_type(hugetlbfs_t)
 files_mountpoint(hugetlbfs_t)
 fs_use_trans hugetlbfs gen_context(system_u:object_r:hugetlbfs_t,s0);
+dev_associate(hugetlbfs_t)
 
 type ibmasmfs_t;
 fs_type(ibmasmfs_t)
@@ -144,11 +148,6 @@ fs_type(spufs_t)
 genfscon spufs / gen_context(system_u:object_r:spufs_t,s0)
 files_mountpoint(spufs_t)
 
-type squash_t;
-fs_type(squash_t)
-genfscon squash / gen_context(system_u:object_r:squash_t,s0)
-files_mountpoint(squash_t)
-
 type sysv_t;
 fs_noxattr_type(sysv_t)
 files_mountpoint(sysv_t)
@@ -175,6 +174,7 @@ fs_type(tmpfs_t)
 files_type(tmpfs_t)
 files_mountpoint(tmpfs_t)
 files_poly_parent(tmpfs_t)
+dev_associate(tmpfs_t)
 
 # Use a transition SID based on the allocating task SID and the
 # filesystem SID to label inodes in the following filesystem types,
@@ -254,6 +254,8 @@ genfscon udf / gen_context(system_u:object_r:iso9660_t,s0)
 type removable_t;
 allow removable_t noxattrfs:filesystem associate;
 fs_noxattr_type(removable_t)
+files_type(removable_t)
+dev_node(removable_t)
 files_mountpoint(removable_t)
 
 #
@@ -273,6 +275,7 @@ genfscon ncpfs / gen_context(system_u:object_r:nfs_t,s0)
 genfscon reiserfs / gen_context(system_u:object_r:nfs_t,s0)
 genfscon panfs / gen_context(system_u:object_r:nfs_t,s0)
 genfscon gadgetfs / gen_context(system_u:object_r:nfs_t,s0)
+genfscon 9p / gen_context(system_u:object_r:nfs_t,s0)
 
 ########################################
 #
diff --git a/policy/modules/kernel/kernel.fc b/policy/modules/kernel/kernel.fc
index 7be4ddf..f7021a0 100644
--- a/policy/modules/kernel/kernel.fc
+++ b/policy/modules/kernel/kernel.fc
@@ -1 +1,2 @@
-# This module currently does not have any file contexts.
+
+/sys/class/net/ib.* 		gen_context(system_u:object_r:sysctl_net_t,s0)
diff --git a/policy/modules/kernel/kernel.if b/policy/modules/kernel/kernel.if
index 4bf45cb..90627a9 100644
--- a/policy/modules/kernel/kernel.if
+++ b/policy/modules/kernel/kernel.if
@@ -785,6 +785,24 @@ interface(`kernel_unmount_proc',`
 
 ########################################
 ## <summary>
+##	Mounton a proc filesystem.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`kernel_mounton_proc',`
+	gen_require(`
+		type proc_t;
+	')
+
+	allow $1 proc_t:dir mounton;
+')
+
+########################################
+## <summary>
 ##	Get the attributes of the proc filesystem.
 ## </summary>
 ## <param name="domain">
@@ -1458,6 +1476,24 @@ interface(`kernel_dontaudit_list_all_proc',`
 
 ########################################
 ## <summary>
+##	Allow attempts to read all proc types.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`kernel_read_all_proc',`
+	gen_require(`
+		attribute proc_type;
+	')
+
+	read_files_pattern($1, proc_type, proc_type)
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts by caller to search
 ##	the base directory of sysctls.
 ## </summary>
@@ -2066,7 +2102,7 @@ interface(`kernel_dontaudit_list_all_sysctls',`
 	')
 
 	dontaudit $1 sysctl_type:dir list_dir_perms;
-	dontaudit $1 sysctl_type:file getattr;
+	dontaudit $1 sysctl_type:file read_file_perms;
 ')
 
 ########################################
@@ -2287,7 +2323,7 @@ interface(`kernel_read_unlabeled_state',`
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain to not audit.
 ##	</summary>
 ## </param>
 #
@@ -2469,6 +2505,24 @@ interface(`kernel_rw_unlabeled_blk_files',`
 
 ########################################
 ## <summary>
+##	Read and write unlabeled sockets.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`kernel_rw_unlabeled_socket',`
+	gen_require(`
+		type unlabeled_t;
+	')
+
+	allow $1 unlabeled_t:socket rw_socket_perms;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts by caller to get attributes for
 ##	unlabeled character devices.
 ## </summary>
@@ -2613,7 +2667,7 @@ interface(`kernel_sendrecv_unlabeled_association',`
 	allow $1 unlabeled_t:association { sendto recvfrom };
 
 	# temporary hack until labeling on packets is supported
-	allow $1 unlabeled_t:packet { send recv };
+#	allow $1 unlabeled_t:packet { send recv };
 ')
 
 ########################################
@@ -2651,6 +2705,24 @@ interface(`kernel_dontaudit_sendrecv_unlabeled_association',`
 
 ########################################
 ## <summary>
+##	Receive DCCP packets from an unlabeled connection.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`kernel_dccp_recvfrom_unlabeled',`
+	gen_require(`
+		type unlabeled_t;
+	')
+
+	allow $1 unlabeled_t:dccp_socket recvfrom;
+')
+
+########################################
+## <summary>
 ##	Receive TCP packets from an unlabeled connection.
 ## </summary>
 ## <desc>
@@ -2678,6 +2750,25 @@ interface(`kernel_tcp_recvfrom_unlabeled',`
 
 ########################################
 ## <summary>
+##	Do not audit attempts to receive DCCP packets from an unlabeled
+##	connection.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`kernel_dontaudit_dccp_recvfrom_unlabeled',`
+	gen_require(`
+		type unlabeled_t;
+	')
+
+	dontaudit $1 unlabeled_t:dccp_socket recvfrom;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to receive TCP packets from an unlabeled
 ##	connection.
 ## </summary>
@@ -2787,6 +2878,33 @@ interface(`kernel_raw_recvfrom_unlabeled',`
 
 	allow $1 unlabeled_t:rawip_socket recvfrom;
 ')
+########################################
+## <summary>
+##	Read/Write Raw IP packets from an unlabeled connection.
+## </summary>
+## <desc>
+##	<p>
+##	Receive Raw IP packets from an unlabeled connection.
+##	</p>
+##	<p>
+##	The corenetwork interface corenet_raw_recv_unlabeled() should
+##	be used instead of this one.
+##	</p>
+## </desc>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`kernel_rw_unlabeled_rawip_socket',`
+	gen_require(`
+		type unlabeled_t;
+	')
+
+	allow $1 unlabeled_t:rawip_socket rw_socket_perms;
+')
+
 
 ########################################
 ## <summary>
@@ -2942,6 +3060,24 @@ interface(`kernel_relabelfrom_unlabeled_database',`
 
 ########################################
 ## <summary>
+##      Relabel to unlabeled context .
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`kernel_relabelto_unlabeled',`
+	gen_require(`
+		type unlabeled_t;
+	')
+
+	allow $1 unlabeled_t:dir_file_class_set relabelto;
+')
+
+########################################
+## <summary>
 ##	Unconfined access to kernel module resources.
 ## </summary>
 ## <param name="domain">
@@ -2956,5 +3092,43 @@ interface(`kernel_unconfined',`
 	')
 
 	typeattribute $1 kern_unconfined;
-	kernel_load_module($1)
+	kernel_load_module($1)	
+')
+
+########################################
+## <summary>
+##	Allow the specified domain to connect to
+##	the kernel with a unix socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`kernel_stream_connect',`
+	gen_require(`
+		type kernel_t;
+	')
+
+	allow $1 kernel_t:unix_stream_socket connectto;
+')
+
+########################################
+## <summary>
+##	Make the specified type usable for regular entries in proc
+## </summary>
+## <param name="type">
+##	<summary>
+##	Type to be used for /proc entries.
+##	</summary>
+## </param>
+#
+interface(`kernel_proc_type',`
+	gen_require(`
+		attribute proc_type;
+	')
+
+	typeattribute $1 proc_type;
 ')
+
diff --git a/policy/modules/kernel/kernel.te b/policy/modules/kernel/kernel.te
index b285b90..3e933a1 100644
--- a/policy/modules/kernel/kernel.te
+++ b/policy/modules/kernel/kernel.te
@@ -58,6 +58,8 @@ sid kernel gen_context(system_u:system_r:kernel_t,mls_systemhigh)
 type debugfs_t;
 files_mountpoint(debugfs_t)
 fs_type(debugfs_t)
+files_mountpoint(debugfs_t)
+
 allow debugfs_t self:filesystem associate;
 genfscon debugfs / gen_context(system_u:object_r:debugfs_t,s0)
 
@@ -165,6 +167,7 @@ genfscon proc /sys/dev gen_context(system_u:object_r:sysctl_dev_t,s0)
 type unlabeled_t;
 fs_associate(unlabeled_t)
 sid unlabeled gen_context(system_u:object_r:unlabeled_t,mls_systemhigh)
+fs_associate(unlabeled_t)
 
 # These initial sids are no longer used, and can be removed:
 sid any_socket		gen_context(system_u:object_r:unlabeled_t,mls_systemhigh)
@@ -244,17 +247,21 @@ corenet_tcp_sendrecv_all_if(kernel_t)
 corenet_tcp_sendrecv_all_nodes(kernel_t)
 corenet_raw_send_generic_node(kernel_t)
 corenet_send_all_packets(kernel_t)
+corenet_filetrans_all_named_dev(kernel_t)
 
 dev_read_sysfs(kernel_t)
 dev_search_usbfs(kernel_t)
 # devtmpfs handling:
 dev_create_generic_dirs(kernel_t)
 dev_delete_generic_dirs(kernel_t)
-dev_create_generic_blk_files(kernel_t)
-dev_delete_generic_blk_files(kernel_t)
-dev_create_generic_chr_files(kernel_t)
-dev_delete_generic_chr_files(kernel_t)
+dev_create_all_blk_files(kernel_t)
+dev_delete_all_blk_files(kernel_t)
+dev_create_all_chr_files(kernel_t)
+dev_delete_all_chr_files(kernel_t)
 dev_mounton(kernel_t)
+dev_filetrans_all_named_dev(kernel_t)
+storage_filetrans_all_named_dev(kernel_t)
+term_filetrans_all_named_dev(kernel_t)
 
 # Mount root file system. Used when loading a policy
 # from initrd, then mounting the root filesystem
@@ -263,7 +270,8 @@ fs_unmount_all_fs(kernel_t)
 
 selinux_load_policy(kernel_t)
 
-term_use_console(kernel_t)
+term_use_all_terms(kernel_t)
+term_use_ptmx(kernel_t)
 
 corecmd_exec_shell(kernel_t)
 corecmd_list_bin(kernel_t)
@@ -277,25 +285,47 @@ files_list_root(kernel_t)
 files_list_etc(kernel_t)
 files_list_home(kernel_t)
 files_read_usr_files(kernel_t)
+files_manage_mounttab(kernel_t)
+files_manage_generic_spool_dirs(kernel_t)
 
 mcs_process_set_categories(kernel_t)
+mcs_file_read_all(kernel_t)
+mcs_file_write_all(kernel_t)
+mcs_socket_write_all_levels(kernel_t)
 
 mls_process_read_up(kernel_t)
 mls_process_write_down(kernel_t)
+mls_file_downgrade(kernel_t)
 mls_file_write_all_levels(kernel_t)
 mls_file_read_all_levels(kernel_t)
+mls_socket_write_all_levels(kernel_t) 
+mls_fd_share_all_levels(kernel_t) 
 
 ifdef(`distro_redhat',`
 	# Bugzilla 222337
 	fs_rw_tmpfs_chr_files(kernel_t)
 ')
 
+
+optional_policy(`
+	apache_filetrans_home_content(kernel_t)
+')
+
+optional_policy(`
+	gnome_filetrans_home_content(kernel_t)
+')
+
+optional_policy(`
+	kerberos_filetrans_home_content(kernel_t)
+')
+
 optional_policy(`
 	hotplug_search_config(kernel_t)
 ')
 
 optional_policy(`
 	init_sigchld(kernel_t)
+	init_dyntrans(kernel_t)
 ')
 
 optional_policy(`
@@ -305,6 +335,19 @@ optional_policy(`
 
 optional_policy(`
 	logging_send_syslog_msg(kernel_t)
+	logging_manage_generic_logs(kernel_t)
+')
+
+optional_policy(`
+	mta_filetrans_home_content(kernel_t)
+')
+
+optional_policy(`
+	ssh_filetrans_home_content(kernel_t)
+')
+
+optional_policy(`
+	userdom_user_home_dir_filetrans_user_home_content(kernel_t, { file dir })
 ')
 
 optional_policy(`
@@ -334,7 +377,6 @@ optional_policy(`
 
 	rpc_manage_nfs_ro_content(kernel_t)
 	rpc_manage_nfs_rw_content(kernel_t)
-	rpc_tcp_rw_nfs_sockets(kernel_t)
 	rpc_udp_rw_nfs_sockets(kernel_t)
 
 	tunable_policy(`nfs_export_all_ro',`
@@ -343,9 +385,7 @@ optional_policy(`
 		fs_read_noxattr_fs_files(kernel_t)
 		fs_read_noxattr_fs_symlinks(kernel_t)
 
-		files_list_non_auth_dirs(kernel_t)
-		files_read_non_auth_files(kernel_t)
-		files_read_non_auth_symlinks(kernel_t)
+		files_read_non_security_files(kernel_t)
 	')
 
 	tunable_policy(`nfs_export_all_rw',`
@@ -354,7 +394,7 @@ optional_policy(`
 		fs_read_noxattr_fs_files(kernel_t)
 		fs_read_noxattr_fs_symlinks(kernel_t)
 
-		files_manage_non_auth_files(kernel_t)
+		files_manage_non_security_files(kernel_t)
 	')
 ')
 
@@ -367,6 +407,15 @@ optional_policy(`
 	unconfined_domain_noaudit(kernel_t)
 ')
 
+optional_policy(`
+	virt_filetrans_home_content(kernel_t)
+')
+
+optional_policy(`
+	xserver_xdm_manage_spool(kernel_t)
+	xserver_filetrans_home_content(kernel_t)
+')
+
 ########################################
 #
 # Unlabeled process local policy
@@ -409,4 +458,17 @@ allow kern_unconfined unlabeled_t:dir_file_class_set *;
 allow kern_unconfined unlabeled_t:filesystem *;
 allow kern_unconfined unlabeled_t:association *;
 allow kern_unconfined unlabeled_t:packet *;
-allow kern_unconfined unlabeled_t:process ~{ transition dyntransition execmem execstack execheap };
+allow kern_unconfined unlabeled_t:process ~{ ptrace transition dyntransition execmem execstack execheap };
+
+gen_require(`
+	bool secure_mode_insmod;
+')
+
+if( ! secure_mode_insmod ) {
+    allow can_load_kernmodule self:capability sys_module;
+    # load_module() calls stop_machine() which
+    # calls sched_setscheduler()
+    allow can_load_kernmodule self:capability sys_nice;
+    kernel_setsched(can_load_kernmodule)
+}
+
diff --git a/policy/modules/kernel/mcs.if b/policy/modules/kernel/mcs.if
index f52faaf..6bb6529 100644
--- a/policy/modules/kernel/mcs.if
+++ b/policy/modules/kernel/mcs.if
@@ -102,3 +102,49 @@ interface(`mcs_process_set_categories',`
 
 	typeattribute $1 mcssetcats;
 ')
+
+########################################
+## <summary>
+##	Make specified process type MCS untrusted.
+## </summary>
+## <desc>
+##	<p>
+##	Make specified process type MCS untrusted.  This
+##	prevents this process from sending signals to other processes 
+##      with different mcs labels
+##	object.
+##	</p>
+## </desc>
+## <param name="domain">
+##	<summary>
+##	The type of the process.
+##	</summary>
+## </param>
+#
+interface(`mcs_untrusted_proc',`
+	gen_require(`
+		attribute mcsuntrustedproc;
+	')
+
+	typeattribute $1 mcsuntrustedproc;
+')
+
+########################################
+## <summary>
+##	Make specified domain MCS trusted
+##	for writing to sockets at any level.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`mcs_socket_write_all_levels',`
+	gen_require(`
+		attribute mcsnetwrite;
+	')
+
+	typeattribute $1 mcsnetwrite;
+')
diff --git a/policy/modules/kernel/mcs.te b/policy/modules/kernel/mcs.te
index 0e5b661..3168d72 100644
--- a/policy/modules/kernel/mcs.te
+++ b/policy/modules/kernel/mcs.te
@@ -10,3 +10,5 @@ attribute mcsptraceall;
 attribute mcssetcats;
 attribute mcswriteall;
 attribute mcsreadall;
+attribute mcsuntrustedproc;
+attribute mcsnetwrite;
diff --git a/policy/modules/kernel/selinux.fc b/policy/modules/kernel/selinux.fc
index 7be4ddf..4d4c577 100644
--- a/policy/modules/kernel/selinux.fc
+++ b/policy/modules/kernel/selinux.fc
@@ -1 +1 @@
-# This module currently does not have any file contexts.
+/selinux    -l	gen_context(system_u:object_r:security_t,s0)
diff --git a/policy/modules/kernel/selinux.if b/policy/modules/kernel/selinux.if
index 81440c5..0383653 100644
--- a/policy/modules/kernel/selinux.if
+++ b/policy/modules/kernel/selinux.if
@@ -40,7 +40,7 @@ interface(`selinux_labeled_boolean',`
 
 	# because of this statement, any module which
 	# calls this interface must be in the base module:
-	genfscon selinuxfs /booleans/$2 gen_context(system_u:object_r:$1,s0)
+#	genfscon selinuxfs /booleans/$2 gen_context(system_u:object_r:$1,s0)
 ')
 
 ########################################
@@ -58,6 +58,8 @@ interface(`selinux_get_fs_mount',`
 		type security_t;
 	')
 
+	dev_getattr_sysfs_fs($1)
+	dev_search_sysfs($1)
 	# starting in libselinux 2.0.5, init_selinuxmnt() will
 	# attempt to short circuit by checking if SELINUXMNT
 	# (/selinux) is already a selinuxfs
@@ -87,6 +89,7 @@ interface(`selinux_dontaudit_get_fs_mount',`
 	# starting in libselinux 2.0.5, init_selinuxmnt() will
 	# attempt to short circuit by checking if SELINUXMNT
 	# (/selinux) is already a selinuxfs
+	dev_dontaudit_search_sysfs($1)
 	dontaudit $1 security_t:filesystem getattr;
 
 	# read /proc/filesystems to see if selinuxfs is supported
@@ -109,6 +112,8 @@ interface(`selinux_mount_fs',`
 		type security_t;
 	')
 
+	dev_getattr_sysfs_fs($1)
+	dev_search_sysfs($1)
 	allow $1 security_t:filesystem mount;
 ')
 
@@ -128,6 +133,8 @@ interface(`selinux_remount_fs',`
 		type security_t;
 	')
 
+	dev_getattr_sysfs_fs($1)
+	dev_search_sysfs($1)
 	allow $1 security_t:filesystem remount;
 ')
 
@@ -146,6 +153,8 @@ interface(`selinux_unmount_fs',`
 		type security_t;
 	')
 
+	dev_getattr_sysfs_fs($1)
+	dev_search_sysfs($1)
 	allow $1 security_t:filesystem unmount;
 ')
 
@@ -220,6 +229,8 @@ interface(`selinux_search_fs',`
 		type security_t;
 	')
 
+	dev_getattr_sysfs_fs($1)
+	dev_search_sysfs($1)
 	allow $1 security_t:dir search_dir_perms;
 ')
 
@@ -243,6 +254,27 @@ interface(`selinux_dontaudit_search_fs',`
 
 ########################################
 ## <summary>
+##	Mount on selinuxfs directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`selinux_mounton_fs',`
+	gen_require(`
+		type security_t;
+	')
+
+	dev_getattr_sysfs_fs($1)
+	dev_search_sysfs($1)
+	allow $1 security_t:dir mounton;
+')
+
+
+########################################
+## <summary>
 ##	Do not audit attempts to read
 ##	generic selinuxfs entries
 ## </summary>
@@ -257,6 +289,7 @@ interface(`selinux_dontaudit_read_fs',`
 		type security_t;
 	')
 
+	selinux_dontaudit_getattr_fs($1)
 	dontaudit $1 security_t:dir search_dir_perms;
 	dontaudit $1 security_t:file read_file_perms;
 ')
@@ -278,6 +311,7 @@ interface(`selinux_get_enforce_mode',`
 		type security_t;
 	')
 
+	selinux_get_fs_mount($1)
 	allow $1 security_t:dir list_dir_perms;
 	allow $1 security_t:file read_file_perms;
 ')
@@ -308,21 +342,9 @@ interface(`selinux_set_enforce_mode',`
 	gen_require(`
 		type security_t;
 		attribute can_setenforce;
-		bool secure_mode_policyload;
 	')
 
-	allow $1 security_t:dir list_dir_perms;
-	allow $1 security_t:file rw_file_perms;
 	typeattribute $1 can_setenforce;
-
-	if(!secure_mode_policyload) {
-		allow $1 security_t:security setenforce;
-
-		ifdef(`distro_rhel4',`
-			# needed for systems without audit support
-			auditallow $1 security_t:security setenforce;
-		')
-	}
 ')
 
 ########################################
@@ -339,21 +361,13 @@ interface(`selinux_load_policy',`
 	gen_require(`
 		type security_t;
 		attribute can_load_policy;
-		bool secure_mode_policyload;
 	')
 
+	dev_getattr_sysfs_fs($1)
+	dev_search_sysfs($1)
 	allow $1 security_t:dir list_dir_perms;
 	allow $1 security_t:file rw_file_perms;
 	typeattribute $1 can_load_policy;
-
-	if(!secure_mode_policyload) {
-		allow $1 security_t:security load_policy;
-
-		ifdef(`distro_rhel4',`
-			# needed for systems without audit support
-			auditallow $1 security_t:security load_policy;
-		')
-	}
 ')
 
 ########################################
@@ -371,6 +385,8 @@ interface(`selinux_read_policy',`
 		type security_t;
 	')
 
+	dev_getattr_sysfs_fs($1)
+	dev_search_sysfs($1)
 	allow $1 security_t:dir list_dir_perms;
 	allow $1 security_t:file read_file_perms;
 	allow $1 security_t:security read_policy;
@@ -433,17 +449,15 @@ interface(`selinux_set_boolean',`
 interface(`selinux_set_generic_booleans',`
 	gen_require(`
 		type security_t;
+		attribute can_setbool;
 	')
 
+	typeattribute $1 can_setbool;
+	dev_getattr_sysfs_fs($1)
+	dev_search_sysfs($1)
 	allow $1 security_t:dir list_dir_perms;
 	allow $1 security_t:file rw_file_perms;
 
-	allow $1 security_t:security setbool;
-
-	ifdef(`distro_rhel4',`
-		# needed for systems without audit support
-		auditallow $1 security_t:security setbool;
-	')
 ')
 
 ########################################
@@ -472,23 +486,15 @@ interface(`selinux_set_all_booleans',`
 	gen_require(`
 		type security_t, secure_mode_policyload_t;
 		attribute boolean_type;
-		bool secure_mode_policyload;
+		attribute can_setbool;
 	')
 
+	typeattribute $1 can_setbool;
+	dev_getattr_sysfs_fs($1)
+	dev_search_sysfs($1)
 	allow $1 security_t:dir list_dir_perms;
-	allow $1 { boolean_type -secure_mode_policyload_t }:file rw_file_perms;
-	allow $1 secure_mode_policyload_t:file read_file_perms;
-
-	allow $1 security_t:security setbool;
-
-	ifdef(`distro_rhel4',`
-		# needed for systems without audit support
-		auditallow $1 security_t:security setbool;
-	')
-
-	if(!secure_mode_policyload) {
-		allow $1 secure_mode_policyload_t:file write_file_perms;
-	}
+	allow $1 boolean_type:dir list_dir_perms;
+	allow $1 boolean_type:file rw_file_perms;
 ')
 
 ########################################
@@ -519,6 +525,8 @@ interface(`selinux_set_parameters',`
 		attribute can_setsecparam;
 	')
 
+	dev_getattr_sysfs_fs($1)
+	dev_search_sysfs($1)
 	allow $1 security_t:dir list_dir_perms;
 	allow $1 security_t:file rw_file_perms;
 	allow $1 security_t:security setsecparam;
@@ -542,6 +550,8 @@ interface(`selinux_validate_context',`
 		type security_t;
 	')
 
+	dev_getattr_sysfs_fs($1)
+	dev_search_sysfs($1)
 	allow $1 security_t:dir list_dir_perms;
 	allow $1 security_t:file rw_file_perms;
 	allow $1 security_t:security check_context;
@@ -584,6 +594,8 @@ interface(`selinux_compute_access_vector',`
 		type security_t;
 	')
 
+	dev_getattr_sysfs_fs($1)
+	dev_search_sysfs($1)
 	allow $1 security_t:dir list_dir_perms;
 	allow $1 security_t:file rw_file_perms;
 	allow $1 security_t:security compute_av;
@@ -605,6 +617,8 @@ interface(`selinux_compute_create_context',`
 		type security_t;
 	')
 
+	dev_getattr_sysfs_fs($1)
+	dev_search_sysfs($1)
 	allow $1 security_t:dir list_dir_perms;
 	allow $1 security_t:file rw_file_perms;
 	allow $1 security_t:security compute_create;
@@ -626,6 +640,8 @@ interface(`selinux_compute_member',`
 		type security_t;
 	')
 
+	dev_getattr_sysfs_fs($1)
+	dev_search_sysfs($1)
 	allow $1 security_t:dir list_dir_perms;
 	allow $1 security_t:file rw_file_perms;
 	allow $1 security_t:security compute_member;
@@ -655,6 +671,8 @@ interface(`selinux_compute_relabel_context',`
 		type security_t;
 	')
 
+	dev_getattr_sysfs_fs($1)
+	dev_search_sysfs($1)
 	allow $1 security_t:dir list_dir_perms;
 	allow $1 security_t:file rw_file_perms;
 	allow $1 security_t:security compute_relabel;
@@ -675,6 +693,8 @@ interface(`selinux_compute_user_contexts',`
 		type security_t;
 	')
 
+	dev_getattr_sysfs_fs($1)
+	dev_search_sysfs($1)
 	allow $1 security_t:dir list_dir_perms;
 	allow $1 security_t:file rw_file_perms;
 	allow $1 security_t:security compute_user;
@@ -696,4 +716,29 @@ interface(`selinux_unconfined',`
 	')
 
 	typeattribute $1 selinux_unconfined_type;
+	selinux_set_all_booleans($1)
+	selinux_load_policy($1)
+	selinux_set_parameters($1)
+	selinux_set_enforce_mode($1)
+')
+
+########################################
+## <summary>
+##	Generate a file context for a boolean type
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`selinux_genbool',`
+	gen_require(`
+		attribute boolean_type;
+	')
+
+	type $1, boolean_type;
+	fs_type($1)
+	mls_trusted_object($1)
 ')
+
diff --git a/policy/modules/kernel/selinux.te b/policy/modules/kernel/selinux.te
index b63601a..f3eb48a 100644
--- a/policy/modules/kernel/selinux.te
+++ b/policy/modules/kernel/selinux.te
@@ -17,6 +17,7 @@ gen_bool(secure_mode_policyload,false)
 attribute boolean_type;
 attribute can_load_policy;
 attribute can_setenforce;
+attribute can_setbool;
 attribute can_setsecparam;
 attribute selinux_unconfined_type;
 
@@ -31,14 +32,15 @@ selinux_labeled_boolean(secure_mode_policyload_t, secure_mode_policyload)
 type security_t, boolean_type;
 files_mountpoint(security_t)
 fs_type(security_t)
+files_mountpoint(security_t)
 mls_trusted_object(security_t)
 sid security gen_context(system_u:object_r:security_t,mls_systemhigh)
 genfscon selinuxfs / gen_context(system_u:object_r:security_t,s0)
 genfscon securityfs / gen_context(system_u:object_r:security_t,s0)
 
-neverallow ~{ selinux_unconfined_type can_load_policy } security_t:security load_policy;
-neverallow ~{ selinux_unconfined_type can_setenforce } security_t:security setenforce;
-neverallow ~{ selinux_unconfined_type can_setsecparam } security_t:security setsecparam;
+neverallow ~{ can_load_policy } security_t:security load_policy;
+neverallow ~{ can_setenforce } security_t:security setenforce;
+neverallow ~{ can_setsecparam } security_t:security setsecparam;
 
 ########################################
 #
@@ -60,11 +62,28 @@ ifdef(`distro_rhel4',`
 ')
 
 if(!secure_mode_policyload) {
-	allow selinux_unconfined_type security_t:security { load_policy setenforce };
-	allow selinux_unconfined_type secure_mode_policyload_t:file write_file_perms;
+	allow can_setenforce security_t:security setenforce;
+	dev_getattr_sysfs_fs(can_setenforce)
+	dev_search_sysfs(can_setenforce)
+	allow can_setenforce security_t:dir list_dir_perms;
+	allow can_setenforce security_t:file rw_file_perms;
+
+	ifdef(`distro_rhel4',`
+		# needed for systems without audit support
+		auditallow can_setenforce security_t:security setenforce;
+	')
+
+	allow can_load_policy security_t:security load_policy;
+
+	ifdef(`distro_rhel4',`
+		# needed for systems without audit support
+		auditallow can_load_policy security_t:security load_policy;
+	')
+
+	allow can_setbool boolean_type:security setbool;
 
 	ifdef(`distro_rhel4',`
 		# needed for systems without audit support
-		auditallow selinux_unconfined_type security_t:security { load_policy setenforce };
+		auditallow can_setbool boolean_type:security setbool;
 	')
 }
diff --git a/policy/modules/kernel/storage.fc b/policy/modules/kernel/storage.fc
index 54f1827..9784cf6 100644
--- a/policy/modules/kernel/storage.fc
+++ b/policy/modules/kernel/storage.fc
@@ -28,7 +28,8 @@
 /dev/loop.*		-b	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
 /dev/lvm		-c	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
 /dev/mcdx?		-b	gen_context(system_u:object_r:removable_device_t,s0)
-/dev/megadev.*		-c	gen_context(system_u:object_r:removable_device_t,s0)
+/dev/megaraid_sas_ioctl_node -c	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
+/dev/megadev.*		-c	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
 /dev/mmcblk.*		-b	gen_context(system_u:object_r:removable_device_t,s0)
 /dev/mspblk.*		-b	gen_context(system_u:object_r:removable_device_t,s0)
 /dev/mtd.*		-b	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
@@ -81,3 +82,6 @@ ifdef(`distro_redhat', `
 
 /lib/udev/devices/loop.* -b	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
 /lib/udev/devices/fuse	-c	gen_context(system_u:object_r:fuse_device_t,s0)
+
+/usr/lib/udev/devices/loop.* -b	gen_context(system_u:object_r:fixed_disk_device_t,mls_systemhigh)
+/usr/lib/udev/devices/fuse   -c	gen_context(system_u:object_r:fuse_device_t,s0)
diff --git a/policy/modules/kernel/storage.if b/policy/modules/kernel/storage.if
index 1700ef2..9282b84 100644
--- a/policy/modules/kernel/storage.if
+++ b/policy/modules/kernel/storage.if
@@ -101,6 +101,8 @@ interface(`storage_raw_read_fixed_disk',`
 	dev_list_all_dev_nodes($1)
 	allow $1 fixed_disk_device_t:blk_file read_blk_file_perms;
 	allow $1 fixed_disk_device_t:chr_file read_chr_file_perms;
+	#577012
+	allow $1 fixed_disk_device_t:lnk_file read_lnk_file_perms;
 	typeattribute $1 fixed_disk_raw_read;
 ')
 
@@ -205,6 +207,7 @@ interface(`storage_create_fixed_disk_dev',`
 
 	allow $1 self:capability mknod;
 	allow $1 fixed_disk_device_t:blk_file create_blk_file_perms;
+	allow $1 fixed_disk_device_t:chr_file create_chr_file_perms;
 	dev_add_entry_generic_dirs($1)
 ')
 
@@ -269,6 +272,48 @@ interface(`storage_dev_filetrans_fixed_disk',`
 	dev_filetrans($1, fixed_disk_device_t, blk_file)
 ')
 
+#######################################
+## <summary>
+##  Create block devices in /dev with the fixed disk type
+##  via an automatic type transition.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`storage_dev_filetrans_named_fixed_disk',`
+    gen_require(`
+        type fixed_disk_device_t;
+    ')
+
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "jsflash")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "lvm")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "megaraid_sas_ioctl_node")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "megadev0")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "megadev1")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "megadev2")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "megadev3")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "megadev4")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "megadev5")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "megadev6")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "megadev7")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "megadev8")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "megadev9")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "device-mapper")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "raw0")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "raw1")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "raw2")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "raw3")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "raw4")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "raw5")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "raw6")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "raw7")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "raw8")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "raw9")
+')
+
 ########################################
 ## <summary>
 ##	Create block devices in on a tmpfs filesystem with the
@@ -808,3 +853,369 @@ interface(`storage_unconfined',`
 
 	typeattribute $1 storage_unconfined_type;
 ')
+
+########################################
+## <summary>
+##	Create all named devices with the correct label
+## </summary>
+## <param name="domain">
+##	<summary>
+##      Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`storage_filetrans_all_named_dev',`
+
+	gen_require(`
+		type tape_device_t;
+		type fixed_disk_device_t;
+		type removable_device_t;
+		type scsi_generic_device_t;
+		type fuse_device_t;
+	')
+
+	dev_filetrans($1, tape_device_t, chr_file, "ht00")
+	dev_filetrans($1, tape_device_t, chr_file, "ht01")
+	dev_filetrans($1, tape_device_t, chr_file, "ht02")
+	dev_filetrans($1, tape_device_t, chr_file, "ht03")
+	dev_filetrans($1, tape_device_t, chr_file, "ht04")
+	dev_filetrans($1, tape_device_t, chr_file, "ht05")
+	dev_filetrans($1, tape_device_t, chr_file, "ht06")
+	dev_filetrans($1, tape_device_t, chr_file, "ht07")
+	dev_filetrans($1, tape_device_t, chr_file, "ht08")
+	dev_filetrans($1, tape_device_t, chr_file, "ht09")
+	dev_filetrans($1, tape_device_t, chr_file, "st00")
+	dev_filetrans($1, tape_device_t, chr_file, "st01")
+	dev_filetrans($1, tape_device_t, chr_file, "st02")
+	dev_filetrans($1, tape_device_t, chr_file, "st03")
+	dev_filetrans($1, tape_device_t, chr_file, "st04")
+	dev_filetrans($1, tape_device_t, chr_file, "st05")
+	dev_filetrans($1, tape_device_t, chr_file, "st06")
+	dev_filetrans($1, tape_device_t, chr_file, "st07")
+	dev_filetrans($1, tape_device_t, chr_file, "st08")
+	dev_filetrans($1, tape_device_t, chr_file, "st09")
+	dev_filetrans($1, tape_device_t, chr_file, "qft0")
+	dev_filetrans($1, tape_device_t, chr_file, "qft1")
+	dev_filetrans($1, tape_device_t, chr_file, "qft2")
+	dev_filetrans($1, tape_device_t, chr_file, "qft3")
+	dev_filetrans($1, tape_device_t, chr_file, "osst00")
+	dev_filetrans($1, tape_device_t, chr_file, "osst01")
+	dev_filetrans($1, tape_device_t, chr_file, "osst02")
+	dev_filetrans($1, tape_device_t, chr_file, "osst03")
+	dev_filetrans($1, tape_device_t, chr_file, "osst04")
+	dev_filetrans($1, tape_device_t, chr_file, "osst05")
+	dev_filetrans($1, tape_device_t, chr_file, "osst06")
+	dev_filetrans($1, tape_device_t, chr_file, "osst07")
+	dev_filetrans($1, tape_device_t, chr_file, "osst08")
+	dev_filetrans($1, tape_device_t, chr_file, "osst09")
+	dev_filetrans($1, tape_device_t, chr_file, "pt0")
+	dev_filetrans($1, tape_device_t, chr_file, "pt1")
+	dev_filetrans($1, tape_device_t, chr_file, "pt2")
+	dev_filetrans($1, tape_device_t, chr_file, "pt3")
+	dev_filetrans($1, tape_device_t, chr_file, "pt4")
+	dev_filetrans($1, tape_device_t, chr_file, "pt5")
+	dev_filetrans($1, tape_device_t, chr_file, "pt6")
+	dev_filetrans($1, tape_device_t, chr_file, "pt7")
+	dev_filetrans($1, tape_device_t, chr_file, "pt8")
+	dev_filetrans($1, tape_device_t, chr_file, "pt9")
+	dev_filetrans($1, tape_device_t, chr_file, "tpqic0")
+	dev_filetrans($1, tape_device_t, chr_file, "tpqic1")
+	dev_filetrans($1, tape_device_t, chr_file, "tpqic2")
+	dev_filetrans($1, tape_device_t, chr_file, "tpqic3")
+	dev_filetrans($1, tape_device_t, chr_file, "tpqic4")
+	dev_filetrans($1, tape_device_t, chr_file, "tpqic5")
+	dev_filetrans($1, tape_device_t, chr_file, "tpqic6")
+	dev_filetrans($1, tape_device_t, chr_file, "tpqic7")
+	dev_filetrans($1, tape_device_t, chr_file, "tpqic8")
+	dev_filetrans($1, tape_device_t, chr_file, "tpqic9")
+	dev_filetrans($1, removable_device_t, blk_file, "aztcd")
+	dev_filetrans($1, removable_device_t, blk_file, "bpcd")
+	dev_filetrans($1, removable_device_t, blk_file, "cdu0")
+	dev_filetrans($1, removable_device_t, blk_file, "cdu1")
+	dev_filetrans($1, removable_device_t, blk_file, "cdu2")
+	dev_filetrans($1, removable_device_t, blk_file, "cdu3")
+	dev_filetrans($1, removable_device_t, blk_file, "cdu4")
+	dev_filetrans($1, removable_device_t, blk_file, "cdu5")
+	dev_filetrans($1, removable_device_t, blk_file, "cdu6")
+	dev_filetrans($1, removable_device_t, blk_file, "cdu7")
+	dev_filetrans($1, removable_device_t, blk_file, "cdu8")
+	dev_filetrans($1, removable_device_t, blk_file, "cdu9")
+	dev_filetrans($1, removable_device_t, blk_file, "cm200")
+	dev_filetrans($1, removable_device_t, blk_file, "cm201")
+	dev_filetrans($1, removable_device_t, blk_file, "cm202")
+	dev_filetrans($1, removable_device_t, blk_file, "cm203")
+	dev_filetrans($1, removable_device_t, blk_file, "cm204")
+	dev_filetrans($1, removable_device_t, blk_file, "cm205")
+	dev_filetrans($1, removable_device_t, blk_file, "cm206")
+	dev_filetrans($1, removable_device_t, blk_file, "cm207")
+	dev_filetrans($1, removable_device_t, blk_file, "cm208")
+	dev_filetrans($1, removable_device_t, blk_file, "cm209")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "md0")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "md1")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "md2")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "md3")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "md4")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "md5")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "md6")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "md7")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "md8")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "md9")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sda")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sda0")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sda1")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sda2")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sda3")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sda4")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sda5")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sda6")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sda7")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sda8")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sda9")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdb")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdb0")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdb1")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdb2")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdb3")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdb4")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdb5")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdb6")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdb7")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdb8")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdb9")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdc")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdc0")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdc1")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdc2")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdc3")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdc4")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdc5")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdc6")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdc7")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdc8")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdc9")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdd")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdd0")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdd1")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdd2")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdd3")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdd4")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdd5")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdd6")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdd7")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdd8")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdd9")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sde")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sde0")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sde1")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sde2")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sde3")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sde4")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sde5")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sde6")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sde7")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sde8")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sde9")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdf")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdf0")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdf1")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdf2")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdf3")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdf4")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdf5")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdf6")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdf7")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdf8")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdf9")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdg")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdg0")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdg1")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdg2")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdg3")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdg4")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdg5")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdg6")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdg7")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdg8")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "sdg9")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "dm-0")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "dm-1")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "dm-2")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "dm-3")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "dm-4")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "dm-5")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "dm-6")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "dm-7")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "dm-8")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "dm-9")
+	dev_filetrans($1, removable_device_t, blk_file, "gscd")
+	dev_filetrans($1, removable_device_t, blk_file, "hitcd")
+	dev_filetrans($1, tape_device_t, blk_file, "ht0")
+	dev_filetrans($1, tape_device_t, blk_file, "ht1")
+	dev_filetrans($1, removable_device_t, blk_file, "hwcdrom")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "initrd")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "jsfd")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "jsflash")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "loop0")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "loop1")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "loop2")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "loop3")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "loop4")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "loop5")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "loop6")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "loop7")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "loop8")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "loop9")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "lvm")
+	dev_filetrans($1, removable_device_t, blk_file, "mcd")
+	dev_filetrans($1, removable_device_t, blk_file, "mcdx")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "megaraid_sas_ioctl_node")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "megadev0")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "megadev1")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "megadev2")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "megadev3")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "megadev4")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "megadev5")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "megadev6")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "megadev7")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "megadev8")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "megadev9")
+	dev_filetrans($1, removable_device_t, blk_file, "mmcblk0")
+	dev_filetrans($1, removable_device_t, blk_file, "mmcblk1")
+	dev_filetrans($1, removable_device_t, blk_file, "mmcblk2")
+	dev_filetrans($1, removable_device_t, blk_file, "mmcblk3")
+	dev_filetrans($1, removable_device_t, blk_file, "mmcblk4")
+	dev_filetrans($1, removable_device_t, blk_file, "mmcblk5")
+	dev_filetrans($1, removable_device_t, blk_file, "mmcblk6")
+	dev_filetrans($1, removable_device_t, blk_file, "mmcblk7")
+	dev_filetrans($1, removable_device_t, blk_file, "mmcblk8")
+	dev_filetrans($1, removable_device_t, blk_file, "mmcblk9")
+	dev_filetrans($1, removable_device_t, blk_file, "mspblk0")
+	dev_filetrans($1, removable_device_t, blk_file, "mspblk1")
+	dev_filetrans($1, removable_device_t, blk_file, "mspblk2")
+	dev_filetrans($1, removable_device_t, blk_file, "mspblk3")
+	dev_filetrans($1, removable_device_t, blk_file, "mspblk4")
+	dev_filetrans($1, removable_device_t, blk_file, "mspblk5")
+	dev_filetrans($1, removable_device_t, blk_file, "mspblk6")
+	dev_filetrans($1, removable_device_t, blk_file, "mspblk7")
+	dev_filetrans($1, removable_device_t, blk_file, "mspblk8")
+	dev_filetrans($1, removable_device_t, blk_file, "mspblk9")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "mtd0")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "mtd1")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "mtd2")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "mtd3")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "mtd4")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "mtd5")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "mtd6")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "mtd7")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "mtd8")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "mtd9")
+	dev_filetrans($1, removable_device_t, blk_file, "optcd")
+	dev_filetrans($1, removable_device_t, blk_file, "pf0")
+	dev_filetrans($1, removable_device_t, blk_file, "pf1")
+	dev_filetrans($1, removable_device_t, blk_file, "pf2")
+	dev_filetrans($1, removable_device_t, blk_file, "pf3")
+	dev_filetrans($1, removable_device_t, blk_file, "pg0")
+	dev_filetrans($1, removable_device_t, blk_file, "pg1")
+	dev_filetrans($1, removable_device_t, blk_file, "pg2")
+	dev_filetrans($1, removable_device_t, blk_file, "pg3")
+	dev_filetrans($1, removable_device_t, blk_file, "pcd0")
+	dev_filetrans($1, removable_device_t, blk_file, "pcd1")
+	dev_filetrans($1, removable_device_t, blk_file, "pcd2")
+	dev_filetrans($1, removable_device_t, blk_file, "pcd3")
+	dev_filetrans($1, removable_device_t, chr_file, "pg0")
+	dev_filetrans($1, removable_device_t, chr_file, "pg1")
+	dev_filetrans($1, removable_device_t, chr_file, "pg2")
+	dev_filetrans($1, removable_device_t, chr_file, "pg3")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ps3d0")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ps3d1")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ps3d2")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ps3d3")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ps3d4")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ps3d5")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ps3d6")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ps3d7")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ps3d8")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ps3d9")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ram0")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ram1")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ram2")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ram3")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ram4")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ram5")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ram6")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ram7")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ram8")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ram9")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ram10")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ram11")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ram12")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ram13")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ram14")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "ram15")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "rd0")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "rd1")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "rd2")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "rd3")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "rd4")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "rd5")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "rd6")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "rd7")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "rd8")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "rd9")
+	dev_filetrans($1, fixed_disk_device_t, blk_file, "root")
+	dev_filetrans($1, removable_device_t, blk_file, "sbpcd0")
+	dev_filetrans($1, removable_device_t, blk_file, "sbpcd1")
+	dev_filetrans($1, removable_device_t, blk_file, "sbpcd2")
+	dev_filetrans($1, removable_device_t, blk_file, "sbpcd3")
+	dev_filetrans($1, removable_device_t, blk_file, "sbpcd4")
+	dev_filetrans($1, removable_device_t, blk_file, "sbpcd5")
+	dev_filetrans($1, removable_device_t, blk_file, "sbpcd6")
+	dev_filetrans($1, removable_device_t, blk_file, "sbpcd7")
+	dev_filetrans($1, removable_device_t, blk_file, "sbpcd8")
+	dev_filetrans($1, removable_device_t, blk_file, "sbpcd9")
+	dev_filetrans($1, scsi_generic_device_t, chr_file, "sg0")
+	dev_filetrans($1, scsi_generic_device_t, chr_file, "sg1")
+	dev_filetrans($1, scsi_generic_device_t, chr_file, "sg2")
+	dev_filetrans($1, scsi_generic_device_t, chr_file, "sg3")
+	dev_filetrans($1, scsi_generic_device_t, chr_file, "sg4")
+	dev_filetrans($1, scsi_generic_device_t, chr_file, "sg5")
+	dev_filetrans($1, scsi_generic_device_t, chr_file, "sg6")
+	dev_filetrans($1, scsi_generic_device_t, chr_file, "sg7")
+	dev_filetrans($1, scsi_generic_device_t, chr_file, "sg8")
+	dev_filetrans($1, scsi_generic_device_t, chr_file, "sg9")
+	dev_filetrans($1, removable_device_t, blk_file, "sr0")
+	dev_filetrans($1, removable_device_t, blk_file, "sr1")
+	dev_filetrans($1, removable_device_t, blk_file, "sr2")
+	dev_filetrans($1, removable_device_t, blk_file, "sr3")
+	dev_filetrans($1, removable_device_t, blk_file, "sr4")
+	dev_filetrans($1, removable_device_t, blk_file, "sr5")
+	dev_filetrans($1, removable_device_t, blk_file, "sr6")
+	dev_filetrans($1, removable_device_t, blk_file, "sr7")
+	dev_filetrans($1, removable_device_t, blk_file, "sr8")
+	dev_filetrans($1, removable_device_t, blk_file, "sr9")
+	dev_filetrans($1, removable_device_t, blk_file, "sjcd")
+	dev_filetrans($1, removable_device_t, blk_file, "sonycd")
+	dev_filetrans($1, tape_device_t, chr_file, "tape0")
+	dev_filetrans($1, tape_device_t, chr_file, "tape1")
+	dev_filetrans($1, tape_device_t, chr_file, "tape2")
+	dev_filetrans($1, tape_device_t, chr_file, "tape3")
+	dev_filetrans($1, tape_device_t, chr_file, "tape4")
+	dev_filetrans($1, tape_device_t, chr_file, "tape5")
+	dev_filetrans($1, tape_device_t, chr_file, "tape6")
+	dev_filetrans($1, tape_device_t, chr_file, "tape7")
+	dev_filetrans($1, tape_device_t, chr_file, "tape8")
+	dev_filetrans($1, tape_device_t, chr_file, "tape9")
+	dev_filetrans($1, fuse_device_t, chr_file, "fuse")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "device-mapper")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "raw0")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "raw1")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "raw2")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "raw3")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "raw4")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "raw5")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "raw6")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "raw7")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "raw8")
+	dev_filetrans($1, fixed_disk_device_t, chr_file, "raw9")
+	dev_filetrans($1, removable_device_t, chr_file, "rio500")
+')
diff --git a/policy/modules/kernel/terminal.fc b/policy/modules/kernel/terminal.fc
index 7d45d15..22c9cfe 100644
--- a/policy/modules/kernel/terminal.fc
+++ b/policy/modules/kernel/terminal.fc
@@ -14,11 +14,12 @@
 /dev/ip2[^/]*		-c	gen_context(system_u:object_r:tty_device_t,s0)
 /dev/isdn.*		-c	gen_context(system_u:object_r:tty_device_t,s0)
 /dev/ptmx		-c	gen_context(system_u:object_r:ptmx_t,s0)
-/dev/pts/ptmx		-c	gen_context(system_u:object_r:ptmx_t,s0)
 /dev/rfcomm[0-9]+	-c	gen_context(system_u:object_r:tty_device_t,s0)
 /dev/slamr[0-9]+	-c	gen_context(system_u:object_r:tty_device_t,s0)
 /dev/tty		-c	gen_context(system_u:object_r:devtty_t,s0)
 /dev/ttySG.*		-c	gen_context(system_u:object_r:tty_device_t,s0)
+/dev/ttyUSB[0-9]+	-c	gen_context(system_u:object_r:usbtty_device_t,s0)
+/dev/vport[0-9]p[0-9]+  -c	gen_context(system_u:object_r:virtio_device_t,s0)
 /dev/xvc[^/]*		-c	gen_context(system_u:object_r:tty_device_t,s0)
 
 /dev/pty/.*		-c	gen_context(system_u:object_r:bsdpty_device_t,s0)
@@ -41,3 +42,7 @@ ifdef(`distro_gentoo',`
 # used by init scripts to initally populate udev /dev
 /lib/udev/devices/console -c	gen_context(system_u:object_r:console_device_t,s0)
 ')
+
+/lib/udev/devices/pts	-d	gen_context(system_u:object_r:devpts_t,s0-mls_systemhigh)
+
+/usr/lib/udev/devices/pts -d	gen_context(system_u:object_r:devpts_t,s0-mls_systemhigh)
diff --git a/policy/modules/kernel/terminal.if b/policy/modules/kernel/terminal.if
index 01dd2f1..dfeffc7 100644
--- a/policy/modules/kernel/terminal.if
+++ b/policy/modules/kernel/terminal.if
@@ -124,7 +124,7 @@ interface(`term_user_tty',`
 		type_change $1 ttynode:chr_file $2;
 	')
 
-	tunable_policy(`console_login',`
+	tunable_policy(`login_console_enabled',`
 		# When user logs in from /dev/console, relabel it
 		# to user tty type as well.
 		type_change $1 console_device_t:chr_file $2;
@@ -208,6 +208,27 @@ interface(`term_use_all_terms',`
 
 ########################################
 ## <summary>
+##	Read and write the inherited console, all inherited 
+##	ttys and ptys.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`term_use_all_inherited_terms',`
+	gen_require(`
+		attribute ttynode, ptynode;
+		type console_device_t, devpts_t, tty_device_t;
+	')
+
+	allow $1 { devpts_t console_device_t tty_device_t ttynode ptynode }:chr_file rw_inherited_term_perms;
+')
+
+########################################
+## <summary>
 ##	Write to the console.
 ## </summary>
 ## <param name="domain">
@@ -274,7 +295,6 @@ interface(`term_dontaudit_read_console',`
 ##	Domain allowed access.
 ##	</summary>
 ## </param>
-## <rolecap/>
 #
 interface(`term_use_console',`
 	gen_require(`
@@ -299,9 +319,12 @@ interface(`term_use_console',`
 interface(`term_dontaudit_use_console',`
 	gen_require(`
 		type console_device_t;
+		type tty_device_t;
 	')
 
-	dontaudit $1 console_device_t:chr_file rw_chr_file_perms;
+	init_dontaudit_use_fds($1)
+	dontaudit $1 console_device_t:chr_file rw_inherited_chr_file_perms;
+	dontaudit $1 tty_device_t:chr_file rw_inherited_chr_file_perms;
 ')
 
 ########################################
@@ -384,6 +407,24 @@ interface(`term_getattr_pty_fs',`
 
 ########################################
 ## <summary>
+##	Relabel a pty filesystem.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`term_relabel_pty_fs',`
+	gen_require(`
+		type devpts_t;
+	')
+
+	allow $1 devpts_t:filesystem relabel_file_perms;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to get the
 ##	attributes of the /dev/pts directory.
 ## </summary>
@@ -462,6 +503,24 @@ interface(`term_list_ptys',`
 
 ########################################
 ## <summary>
+##	Relabel the /dev/pts directory
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`term_relabel_ptys_dirs',`
+	gen_require(`
+		type devpts_t;
+	')
+
+	allow $1 devpts_t:dir relabel_dir_perms;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to read the
 ##	/dev/pts directory.
 ## </summary>
@@ -616,6 +675,7 @@ interface(`term_dontaudit_use_generic_ptys',`
 		type devpts_t;
 	')
 
+	init_dontaudit_use_fds($1)
 	dontaudit $1 devpts_t:chr_file { getattr read write ioctl };
 ')
 
@@ -860,6 +920,26 @@ interface(`term_use_all_ptys',`
 
 ########################################
 ## <summary>
+##	Read and write all inherited ptys.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`term_use_all_inherited_ptys',`
+	gen_require(`
+		attribute ptynode;
+		type devpts_t;
+	')
+
+	allow $1 ptynode:chr_file { rw_inherited_term_perms lock };
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to read or write any ptys.
 ## </summary>
 ## <param name="domain">
@@ -873,7 +953,7 @@ interface(`term_dontaudit_use_all_ptys',`
 		attribute ptynode;
 	')
 
-	dontaudit $1 ptynode:chr_file { rw_term_perms lock append };
+	dontaudit $1 ptynode:chr_file { rw_inherited_term_perms lock append };
 ')
 
 ########################################
@@ -893,7 +973,7 @@ interface(`term_relabel_all_ptys',`
 	')
 
 	dev_list_all_dev_nodes($1)
-	relabel_chr_files_pattern($1, devpts_t, ptynode)
+	relabel_chr_files_pattern($1, devpts_t, { ptynode devpts_t } )
 ')
 
 ########################################
@@ -921,7 +1001,7 @@ interface(`term_getattr_all_user_ptys',`
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain to not audit.
 ##	</summary>
 ## </param>
 #
@@ -1240,7 +1320,28 @@ interface(`term_dontaudit_use_unallocated_ttys',`
 		type tty_device_t;
 	')
 
-	dontaudit $1 tty_device_t:chr_file rw_chr_file_perms;
+	init_dontaudit_use_fds($1)
+	dontaudit $1 tty_device_t:chr_file rw_inherited_chr_file_perms;
+')
+
+########################################
+## <summary>
+##	Read and write USB tty character
+##	device nodes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`term_use_usb_ttys',`
+	gen_require(`
+		type usbtty_device_t;
+	')
+
+	dev_list_all_dev_nodes($1)
+	allow $1 usbtty_device_t:chr_file rw_chr_file_perms;
 ')
 
 ########################################
@@ -1256,11 +1357,13 @@ interface(`term_dontaudit_use_unallocated_ttys',`
 #
 interface(`term_getattr_all_ttys',`
 	gen_require(`
+		type tty_device_t;
 		attribute ttynode;
 	')
 
 	dev_list_all_dev_nodes($1)
 	allow $1 ttynode:chr_file getattr;
+	allow $1 tty_device_t:chr_file getattr;
 ')
 
 ########################################
@@ -1277,10 +1380,12 @@ interface(`term_getattr_all_ttys',`
 interface(`term_dontaudit_getattr_all_ttys',`
 	gen_require(`
 		attribute ttynode;
+		type tty_device_t;
 	')
 
 	dev_list_all_dev_nodes($1)
 	dontaudit $1 ttynode:chr_file getattr;
+	dontaudit $1 tty_device_t:chr_file getattr;
 ')
 
 ########################################
@@ -1358,7 +1463,27 @@ interface(`term_use_all_ttys',`
 	')
 
 	dev_list_all_dev_nodes($1)
-	allow $1 ttynode:chr_file rw_chr_file_perms;
+	allow $1 ttynode:chr_file rw_term_perms;
+')
+
+########################################
+## <summary>
+##	Read and write all inherited ttys.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`term_use_all_inherited_ttys',`
+	gen_require(`
+		attribute ttynode;
+	')
+
+	dev_list_all_dev_nodes($1)
+	allow $1 ttynode:chr_file rw_inherited_term_perms;
 ')
 
 ########################################
@@ -1377,7 +1502,7 @@ interface(`term_dontaudit_use_all_ttys',`
 		attribute ttynode;
 	')
 
-	dontaudit $1 ttynode:chr_file rw_chr_file_perms;
+	dontaudit $1 ttynode:chr_file rw_inherited_chr_file_perms;
 ')
 
 ########################################
@@ -1485,7 +1610,7 @@ interface(`term_use_all_user_ttys',`
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain to not audit.
 ##	</summary>
 ## </param>
 #
@@ -1493,3 +1618,426 @@ interface(`term_dontaudit_use_all_user_ttys',`
 	refpolicywarn(`$0() is deprecated, use term_dontaudit_use_all_ttys() instead.')
 	term_dontaudit_use_all_ttys($1)
 ')
+
+####################################
+## <summary>
+##      Getattr on the virtio console.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`term_getattr_virtio_console',`
+        gen_require(`
+                type virtio_device_t;
+        ')
+
+        allow $1 virtio_device_t:chr_file getattr_chr_file_perms;
+')
+
+#####################################
+## <summary>
+##      Read from and write to the virtio console.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`term_use_virtio_console',`
+        gen_require(`
+                type virtio_device_t;
+        ')
+
+        dev_list_all_dev_nodes($1)
+        allow $1 virtio_device_t:chr_file rw_chr_file_perms;
+')
+
+########################################
+## <summary>
+##	Create all named term devices with the correct label
+## </summary>
+## <param name="domain">
+##	<summary>
+##      Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`term_filetrans_all_named_dev',`
+
+gen_require(`
+	type tty_device_t;
+	type bsdpty_device_t;
+	type console_device_t;
+	type ptmx_t;
+	type devtty_t;
+	type virtio_device_t;
+	type devpts_t;
+	type usbtty_device_t;
+')
+
+	dev_filetrans($1, devtty_t, chr_file, "tty")
+	dev_filetrans($1, tty_device_t, chr_file, "tty0")
+	dev_filetrans($1, tty_device_t, chr_file, "tty1")
+	dev_filetrans($1, tty_device_t, chr_file, "tty2")
+	dev_filetrans($1, tty_device_t, chr_file, "tty3")
+	dev_filetrans($1, tty_device_t, chr_file, "tty4")
+	dev_filetrans($1, tty_device_t, chr_file, "tty5")
+	dev_filetrans($1, tty_device_t, chr_file, "tty6")
+	dev_filetrans($1, tty_device_t, chr_file, "tty7")
+	dev_filetrans($1, tty_device_t, chr_file, "tty8")
+	dev_filetrans($1, tty_device_t, chr_file, "tty9")
+	dev_filetrans($1, tty_device_t, chr_file, "tty10")
+	dev_filetrans($1, tty_device_t, chr_file, "tty11")
+	dev_filetrans($1, tty_device_t, chr_file, "tty12")
+	dev_filetrans($1, tty_device_t, chr_file, "tty13")
+	dev_filetrans($1, tty_device_t, chr_file, "tty14")
+	dev_filetrans($1, tty_device_t, chr_file, "tty15")
+	dev_filetrans($1, tty_device_t, chr_file, "tty16")
+	dev_filetrans($1, tty_device_t, chr_file, "tty17")
+	dev_filetrans($1, tty_device_t, chr_file, "tty18")
+	dev_filetrans($1, tty_device_t, chr_file, "tty19")
+	dev_filetrans($1, tty_device_t, chr_file, "tty20")
+	dev_filetrans($1, tty_device_t, chr_file, "tty21")
+	dev_filetrans($1, tty_device_t, chr_file, "tty22")
+	dev_filetrans($1, tty_device_t, chr_file, "tty23")
+	dev_filetrans($1, tty_device_t, chr_file, "tty24")
+	dev_filetrans($1, tty_device_t, chr_file, "tty25")
+	dev_filetrans($1, tty_device_t, chr_file, "tty26")
+	dev_filetrans($1, tty_device_t, chr_file, "tty27")
+	dev_filetrans($1, tty_device_t, chr_file, "tty28")
+	dev_filetrans($1, tty_device_t, chr_file, "tty29")
+	dev_filetrans($1, tty_device_t, chr_file, "tty30")
+	dev_filetrans($1, tty_device_t, chr_file, "tty31")
+	dev_filetrans($1, tty_device_t, chr_file, "tty32")
+	dev_filetrans($1, tty_device_t, chr_file, "tty33")
+	dev_filetrans($1, tty_device_t, chr_file, "tty34")
+	dev_filetrans($1, tty_device_t, chr_file, "tty35")
+	dev_filetrans($1, tty_device_t, chr_file, "tty36")
+	dev_filetrans($1, tty_device_t, chr_file, "tty37")
+	dev_filetrans($1, tty_device_t, chr_file, "tty38")
+	dev_filetrans($1, tty_device_t, chr_file, "tty39")
+	dev_filetrans($1, tty_device_t, chr_file, "tty40")
+	dev_filetrans($1, tty_device_t, chr_file, "tty41")
+	dev_filetrans($1, tty_device_t, chr_file, "tty42")
+	dev_filetrans($1, tty_device_t, chr_file, "tty43")
+	dev_filetrans($1, tty_device_t, chr_file, "tty44")
+	dev_filetrans($1, tty_device_t, chr_file, "tty45")
+	dev_filetrans($1, tty_device_t, chr_file, "tty46")
+	dev_filetrans($1, tty_device_t, chr_file, "tty47")
+	dev_filetrans($1, tty_device_t, chr_file, "tty48")
+	dev_filetrans($1, tty_device_t, chr_file, "tty49")
+	dev_filetrans($1, tty_device_t, chr_file, "tty50")
+	dev_filetrans($1, tty_device_t, chr_file, "tty51")
+	dev_filetrans($1, tty_device_t, chr_file, "tty52")
+	dev_filetrans($1, tty_device_t, chr_file, "tty53")
+	dev_filetrans($1, tty_device_t, chr_file, "tty54")
+	dev_filetrans($1, tty_device_t, chr_file, "tty55")
+	dev_filetrans($1, tty_device_t, chr_file, "tty56")
+	dev_filetrans($1, tty_device_t, chr_file, "tty57")
+	dev_filetrans($1, tty_device_t, chr_file, "tty58")
+	dev_filetrans($1, tty_device_t, chr_file, "tty59")
+	dev_filetrans($1, tty_device_t, chr_file, "tty60")
+	dev_filetrans($1, tty_device_t, chr_file, "tty61")
+	dev_filetrans($1, tty_device_t, chr_file, "tty62")
+	dev_filetrans($1, tty_device_t, chr_file, "tty63")
+	dev_filetrans($1, tty_device_t, chr_file, "tty64")
+	dev_filetrans($1, tty_device_t, chr_file, "tty65")
+	dev_filetrans($1, tty_device_t, chr_file, "tty66")
+	dev_filetrans($1, tty_device_t, chr_file, "tty67")
+	dev_filetrans($1, tty_device_t, chr_file, "tty68")
+	dev_filetrans($1, tty_device_t, chr_file, "tty69")
+	dev_filetrans($1, tty_device_t, chr_file, "tty70")
+	dev_filetrans($1, tty_device_t, chr_file, "tty71")
+	dev_filetrans($1, tty_device_t, chr_file, "tty72")
+	dev_filetrans($1, tty_device_t, chr_file, "tty73")
+	dev_filetrans($1, tty_device_t, chr_file, "tty74")
+	dev_filetrans($1, tty_device_t, chr_file, "tty75")
+	dev_filetrans($1, tty_device_t, chr_file, "tty76")
+	dev_filetrans($1, tty_device_t, chr_file, "tty77")
+	dev_filetrans($1, tty_device_t, chr_file, "tty78")
+	dev_filetrans($1, tty_device_t, chr_file, "tty79")
+	dev_filetrans($1, tty_device_t, chr_file, "tty80")
+	dev_filetrans($1, tty_device_t, chr_file, "tty81")
+	dev_filetrans($1, tty_device_t, chr_file, "tty82")
+	dev_filetrans($1, tty_device_t, chr_file, "tty83")
+	dev_filetrans($1, tty_device_t, chr_file, "tty84")
+	dev_filetrans($1, tty_device_t, chr_file, "tty85")
+	dev_filetrans($1, tty_device_t, chr_file, "tty86")
+	dev_filetrans($1, tty_device_t, chr_file, "tty87")
+	dev_filetrans($1, tty_device_t, chr_file, "tty88")
+	dev_filetrans($1, tty_device_t, chr_file, "tty89")
+	dev_filetrans($1, tty_device_t, chr_file, "tty90")
+	dev_filetrans($1, tty_device_t, chr_file, "tty91")
+	dev_filetrans($1, tty_device_t, chr_file, "tty92")
+	dev_filetrans($1, tty_device_t, chr_file, "tty93")
+	dev_filetrans($1, tty_device_t, chr_file, "tty94")
+	dev_filetrans($1, tty_device_t, chr_file, "tty95")
+	dev_filetrans($1, tty_device_t, chr_file, "tty96")
+	dev_filetrans($1, tty_device_t, chr_file, "tty97")
+	dev_filetrans($1, tty_device_t, chr_file, "tty98")
+	dev_filetrans($1, tty_device_t, chr_file, "tty99")
+	dev_filetrans($1, tty_device_t, chr_file, "pty")
+	dev_filetrans($1, tty_device_t, chr_file, "pty0")
+	dev_filetrans($1, tty_device_t, chr_file, "pty1")
+	dev_filetrans($1, tty_device_t, chr_file, "pty2")
+	dev_filetrans($1, tty_device_t, chr_file, "pty3")
+	dev_filetrans($1, tty_device_t, chr_file, "pty4")
+	dev_filetrans($1, tty_device_t, chr_file, "pty5")
+	dev_filetrans($1, tty_device_t, chr_file, "pty6")
+	dev_filetrans($1, tty_device_t, chr_file, "pty7")
+	dev_filetrans($1, tty_device_t, chr_file, "pty8")
+	dev_filetrans($1, tty_device_t, chr_file, "pty9")
+	dev_filetrans($1, tty_device_t, chr_file, "pty10")
+	dev_filetrans($1, tty_device_t, chr_file, "pty11")
+	dev_filetrans($1, tty_device_t, chr_file, "pty12")
+	dev_filetrans($1, tty_device_t, chr_file, "pty13")
+	dev_filetrans($1, tty_device_t, chr_file, "pty14")
+	dev_filetrans($1, tty_device_t, chr_file, "pty15")
+	dev_filetrans($1, tty_device_t, chr_file, "pty16")
+	dev_filetrans($1, tty_device_t, chr_file, "pty17")
+	dev_filetrans($1, tty_device_t, chr_file, "pty18")
+	dev_filetrans($1, tty_device_t, chr_file, "pty19")
+	dev_filetrans($1, tty_device_t, chr_file, "pty20")
+	dev_filetrans($1, tty_device_t, chr_file, "pty21")
+	dev_filetrans($1, tty_device_t, chr_file, "pty22")
+	dev_filetrans($1, tty_device_t, chr_file, "pty23")
+	dev_filetrans($1, tty_device_t, chr_file, "pty24")
+	dev_filetrans($1, tty_device_t, chr_file, "pty25")
+	dev_filetrans($1, tty_device_t, chr_file, "pty26")
+	dev_filetrans($1, tty_device_t, chr_file, "pty27")
+	dev_filetrans($1, tty_device_t, chr_file, "pty28")
+	dev_filetrans($1, tty_device_t, chr_file, "pty29")
+	dev_filetrans($1, tty_device_t, chr_file, "pty30")
+	dev_filetrans($1, tty_device_t, chr_file, "pty31")
+	dev_filetrans($1, tty_device_t, chr_file, "pty32")
+	dev_filetrans($1, tty_device_t, chr_file, "pty33")
+	dev_filetrans($1, tty_device_t, chr_file, "pty34")
+	dev_filetrans($1, tty_device_t, chr_file, "pty35")
+	dev_filetrans($1, tty_device_t, chr_file, "pty36")
+	dev_filetrans($1, tty_device_t, chr_file, "pty37")
+	dev_filetrans($1, tty_device_t, chr_file, "pty38")
+	dev_filetrans($1, tty_device_t, chr_file, "pty39")
+	dev_filetrans($1, tty_device_t, chr_file, "pty40")
+	dev_filetrans($1, tty_device_t, chr_file, "pty41")
+	dev_filetrans($1, tty_device_t, chr_file, "pty42")
+	dev_filetrans($1, tty_device_t, chr_file, "pty43")
+	dev_filetrans($1, tty_device_t, chr_file, "pty44")
+	dev_filetrans($1, tty_device_t, chr_file, "pty45")
+	dev_filetrans($1, tty_device_t, chr_file, "pty46")
+	dev_filetrans($1, tty_device_t, chr_file, "pty47")
+	dev_filetrans($1, tty_device_t, chr_file, "pty48")
+	dev_filetrans($1, tty_device_t, chr_file, "pty49")
+	dev_filetrans($1, tty_device_t, chr_file, "pty50")
+	dev_filetrans($1, tty_device_t, chr_file, "pty51")
+	dev_filetrans($1, tty_device_t, chr_file, "pty52")
+	dev_filetrans($1, tty_device_t, chr_file, "pty53")
+	dev_filetrans($1, tty_device_t, chr_file, "pty54")
+	dev_filetrans($1, tty_device_t, chr_file, "pty55")
+	dev_filetrans($1, tty_device_t, chr_file, "pty56")
+	dev_filetrans($1, tty_device_t, chr_file, "pty57")
+	dev_filetrans($1, tty_device_t, chr_file, "pty58")
+	dev_filetrans($1, tty_device_t, chr_file, "pty59")
+	dev_filetrans($1, tty_device_t, chr_file, "pty60")
+	dev_filetrans($1, tty_device_t, chr_file, "pty61")
+	dev_filetrans($1, tty_device_t, chr_file, "pty62")
+	dev_filetrans($1, tty_device_t, chr_file, "pty63")
+	dev_filetrans($1, tty_device_t, chr_file, "pty64")
+	dev_filetrans($1, tty_device_t, chr_file, "pty65")
+	dev_filetrans($1, tty_device_t, chr_file, "pty66")
+	dev_filetrans($1, tty_device_t, chr_file, "pty67")
+	dev_filetrans($1, tty_device_t, chr_file, "pty68")
+	dev_filetrans($1, tty_device_t, chr_file, "pty69")
+	dev_filetrans($1, tty_device_t, chr_file, "pty70")
+	dev_filetrans($1, tty_device_t, chr_file, "pty71")
+	dev_filetrans($1, tty_device_t, chr_file, "pty72")
+	dev_filetrans($1, tty_device_t, chr_file, "pty73")
+	dev_filetrans($1, tty_device_t, chr_file, "pty74")
+	dev_filetrans($1, tty_device_t, chr_file, "pty75")
+	dev_filetrans($1, tty_device_t, chr_file, "pty76")
+	dev_filetrans($1, tty_device_t, chr_file, "pty77")
+	dev_filetrans($1, tty_device_t, chr_file, "pty78")
+	dev_filetrans($1, tty_device_t, chr_file, "pty79")
+	dev_filetrans($1, tty_device_t, chr_file, "pty80")
+	dev_filetrans($1, tty_device_t, chr_file, "pty81")
+	dev_filetrans($1, tty_device_t, chr_file, "pty82")
+	dev_filetrans($1, tty_device_t, chr_file, "pty83")
+	dev_filetrans($1, tty_device_t, chr_file, "pty84")
+	dev_filetrans($1, tty_device_t, chr_file, "pty85")
+	dev_filetrans($1, tty_device_t, chr_file, "pty86")
+	dev_filetrans($1, tty_device_t, chr_file, "pty87")
+	dev_filetrans($1, tty_device_t, chr_file, "pty88")
+	dev_filetrans($1, tty_device_t, chr_file, "pty89")
+	dev_filetrans($1, tty_device_t, chr_file, "pty90")
+	dev_filetrans($1, tty_device_t, chr_file, "pty91")
+	dev_filetrans($1, tty_device_t, chr_file, "pty92")
+	dev_filetrans($1, tty_device_t, chr_file, "pty93")
+	dev_filetrans($1, tty_device_t, chr_file, "pty94")
+	dev_filetrans($1, tty_device_t, chr_file, "pty95")
+	dev_filetrans($1, tty_device_t, chr_file, "pty96")
+	dev_filetrans($1, tty_device_t, chr_file, "pty97")
+	dev_filetrans($1, tty_device_t, chr_file, "pty98")
+	dev_filetrans($1, tty_device_t, chr_file, "pty99")
+	dev_filetrans($1, tty_device_t, chr_file, "adb0")
+	dev_filetrans($1, tty_device_t, chr_file, "adb1")
+	dev_filetrans($1, tty_device_t, chr_file, "adb2")
+	dev_filetrans($1, tty_device_t, chr_file, "adb3")
+	dev_filetrans($1, tty_device_t, chr_file, "adb4")
+	dev_filetrans($1, tty_device_t, chr_file, "adb5")
+	dev_filetrans($1, tty_device_t, chr_file, "adb6")
+	dev_filetrans($1, tty_device_t, chr_file, "adb7")
+	dev_filetrans($1, tty_device_t, chr_file, "adb8")
+	dev_filetrans($1, tty_device_t, chr_file, "adb9")
+	dev_filetrans($1, tty_device_t, chr_file, "capi0")
+	dev_filetrans($1, tty_device_t, chr_file, "capi1")
+	dev_filetrans($1, tty_device_t, chr_file, "capi2")
+	dev_filetrans($1, tty_device_t, chr_file, "capi3")
+	dev_filetrans($1, tty_device_t, chr_file, "capi4")
+	dev_filetrans($1, tty_device_t, chr_file, "capi5")
+	dev_filetrans($1, tty_device_t, chr_file, "capi6")
+	dev_filetrans($1, tty_device_t, chr_file, "capi7")
+	dev_filetrans($1, tty_device_t, chr_file, "capi8")
+	dev_filetrans($1, tty_device_t, chr_file, "capi9")
+	dev_filetrans($1, console_device_t, chr_file, "console")
+	dev_filetrans($1, tty_device_t, chr_file, "cu0")
+	dev_filetrans($1, tty_device_t, chr_file, "cu1")
+	dev_filetrans($1, tty_device_t, chr_file, "cu2")
+	dev_filetrans($1, tty_device_t, chr_file, "cu3")
+	dev_filetrans($1, tty_device_t, chr_file, "cu4")
+	dev_filetrans($1, tty_device_t, chr_file, "cu5")
+	dev_filetrans($1, tty_device_t, chr_file, "cu6")
+	dev_filetrans($1, tty_device_t, chr_file, "cu7")
+	dev_filetrans($1, tty_device_t, chr_file, "cu8")
+	dev_filetrans($1, tty_device_t, chr_file, "cu9")
+	dev_filetrans($1, tty_device_t, chr_file, "dcbri0")
+	dev_filetrans($1, tty_device_t, chr_file, "dcbri1")
+	dev_filetrans($1, tty_device_t, chr_file, "dcbri2")
+	dev_filetrans($1, tty_device_t, chr_file, "dcbri3")
+	dev_filetrans($1, tty_device_t, chr_file, "dcbri4")
+	dev_filetrans($1, tty_device_t, chr_file, "dcbri5")
+	dev_filetrans($1, tty_device_t, chr_file, "dcbri6")
+	dev_filetrans($1, tty_device_t, chr_file, "dcbri7")
+	dev_filetrans($1, tty_device_t, chr_file, "dcbri8")
+	dev_filetrans($1, tty_device_t, chr_file, "dcbri9")
+	dev_filetrans($1, tty_device_t, chr_file, "vcsa")
+	dev_filetrans($1, tty_device_t, chr_file, "vcsb")
+	dev_filetrans($1, tty_device_t, chr_file, "vcsc")
+	dev_filetrans($1, tty_device_t, chr_file, "vcsd")
+	dev_filetrans($1, tty_device_t, chr_file, "vcse")
+	dev_filetrans($1, tty_device_t, chr_file, "hvc0")
+	dev_filetrans($1, tty_device_t, chr_file, "hvc1")
+	dev_filetrans($1, tty_device_t, chr_file, "hvc2")
+	dev_filetrans($1, tty_device_t, chr_file, "hvc3")
+	dev_filetrans($1, tty_device_t, chr_file, "hvc4")
+	dev_filetrans($1, tty_device_t, chr_file, "hvc5")
+	dev_filetrans($1, tty_device_t, chr_file, "hvc6")
+	dev_filetrans($1, tty_device_t, chr_file, "hvc7")
+	dev_filetrans($1, tty_device_t, chr_file, "hvc8")
+	dev_filetrans($1, tty_device_t, chr_file, "hvc9")
+	dev_filetrans($1, tty_device_t, chr_file, "hvsi0")
+	dev_filetrans($1, tty_device_t, chr_file, "hvsi1")
+	dev_filetrans($1, tty_device_t, chr_file, "hvsi2")
+	dev_filetrans($1, tty_device_t, chr_file, "hvsi3")
+	dev_filetrans($1, tty_device_t, chr_file, "hvsi4")
+	dev_filetrans($1, tty_device_t, chr_file, "hvsi5")
+	dev_filetrans($1, tty_device_t, chr_file, "hvsi6")
+	dev_filetrans($1, tty_device_t, chr_file, "hvsi7")
+	dev_filetrans($1, tty_device_t, chr_file, "hvsi8")
+	dev_filetrans($1, tty_device_t, chr_file, "hvsi9")
+	dev_filetrans($1, tty_device_t, chr_file, "ircomm0")
+	dev_filetrans($1, tty_device_t, chr_file, "ircomm1")
+	dev_filetrans($1, tty_device_t, chr_file, "ircomm2")
+	dev_filetrans($1, tty_device_t, chr_file, "ircomm3")
+	dev_filetrans($1, tty_device_t, chr_file, "ircomm4")
+	dev_filetrans($1, tty_device_t, chr_file, "ircomm5")
+	dev_filetrans($1, tty_device_t, chr_file, "ircomm6")
+	dev_filetrans($1, tty_device_t, chr_file, "ircomm7")
+	dev_filetrans($1, tty_device_t, chr_file, "ircomm8")
+	dev_filetrans($1, tty_device_t, chr_file, "ircomm9")
+	dev_filetrans($1, tty_device_t, chr_file, "isdn0")
+	dev_filetrans($1, tty_device_t, chr_file, "isdn1")
+	dev_filetrans($1, tty_device_t, chr_file, "isdn2")
+	dev_filetrans($1, tty_device_t, chr_file, "isdn3")
+	dev_filetrans($1, tty_device_t, chr_file, "isdn4")
+	dev_filetrans($1, tty_device_t, chr_file, "isdn5")
+	dev_filetrans($1, tty_device_t, chr_file, "isdn6")
+	dev_filetrans($1, tty_device_t, chr_file, "isdn7")
+	dev_filetrans($1, tty_device_t, chr_file, "isdn8")
+	dev_filetrans($1, tty_device_t, chr_file, "isdn9")
+	filetrans_pattern($1, devpts_t, ptmx_t, chr_file, "ptmx")
+	dev_filetrans($1, ptmx_t, chr_file, "ptmx")
+	dev_filetrans($1, tty_device_t, chr_file, "rfcomm0")
+	dev_filetrans($1, tty_device_t, chr_file, "rfcomm1")
+	dev_filetrans($1, tty_device_t, chr_file, "rfcomm2")
+	dev_filetrans($1, tty_device_t, chr_file, "rfcomm3")
+	dev_filetrans($1, tty_device_t, chr_file, "rfcomm4")
+	dev_filetrans($1, tty_device_t, chr_file, "rfcomm5")
+	dev_filetrans($1, tty_device_t, chr_file, "rfcomm6")
+	dev_filetrans($1, tty_device_t, chr_file, "rfcomm7")
+	dev_filetrans($1, tty_device_t, chr_file, "rfcomm8")
+	dev_filetrans($1, tty_device_t, chr_file, "rfcomm9")
+	dev_filetrans($1, tty_device_t, chr_file, "slamr0")
+	dev_filetrans($1, tty_device_t, chr_file, "slamr1")
+	dev_filetrans($1, tty_device_t, chr_file, "slamr2")
+	dev_filetrans($1, tty_device_t, chr_file, "slamr3")
+	dev_filetrans($1, tty_device_t, chr_file, "slamr4")
+	dev_filetrans($1, tty_device_t, chr_file, "slamr5")
+	dev_filetrans($1, tty_device_t, chr_file, "slamr6")
+	dev_filetrans($1, tty_device_t, chr_file, "slamr7")
+	dev_filetrans($1, tty_device_t, chr_file, "slamr8")
+	dev_filetrans($1, tty_device_t, chr_file, "slamr9")
+	dev_filetrans($1, tty_device_t, chr_file, "ttyS0")
+	dev_filetrans($1, tty_device_t, chr_file, "ttyS1")
+	dev_filetrans($1, tty_device_t, chr_file, "ttyS2")
+	dev_filetrans($1, tty_device_t, chr_file, "ttyS3")
+	dev_filetrans($1, tty_device_t, chr_file, "ttyS4")
+	dev_filetrans($1, tty_device_t, chr_file, "ttyS5")
+	dev_filetrans($1, tty_device_t, chr_file, "ttyS6")
+	dev_filetrans($1, tty_device_t, chr_file, "ttyS7")
+	dev_filetrans($1, tty_device_t, chr_file, "ttyS8")
+	dev_filetrans($1, tty_device_t, chr_file, "ttyS9")
+	dev_filetrans($1, tty_device_t, chr_file, "ttySG0")
+	dev_filetrans($1, tty_device_t, chr_file, "ttySG1")
+	dev_filetrans($1, tty_device_t, chr_file, "ttySG2")
+	dev_filetrans($1, tty_device_t, chr_file, "ttySG3")
+	dev_filetrans($1, tty_device_t, chr_file, "ttySG4")
+	dev_filetrans($1, tty_device_t, chr_file, "ttySG5")
+	dev_filetrans($1, tty_device_t, chr_file, "ttySG6")
+	dev_filetrans($1, tty_device_t, chr_file, "ttySG7")
+	dev_filetrans($1, tty_device_t, chr_file, "ttySG8")
+	dev_filetrans($1, tty_device_t, chr_file, "ttySG9")
+	dev_filetrans($1, usbtty_device_t, chr_file, "ttyUSB0")
+	dev_filetrans($1, usbtty_device_t, chr_file, "ttyUSB1")
+	dev_filetrans($1, usbtty_device_t, chr_file, "ttyUSB2")
+	dev_filetrans($1, usbtty_device_t, chr_file, "ttyUSB3")
+	dev_filetrans($1, usbtty_device_t, chr_file, "ttyUSB4")
+	dev_filetrans($1, usbtty_device_t, chr_file, "ttyUSB5")
+	dev_filetrans($1, usbtty_device_t, chr_file, "ttyUSB6")
+	dev_filetrans($1, usbtty_device_t, chr_file, "ttyUSB7")
+	dev_filetrans($1, usbtty_device_t, chr_file, "ttyUSB8")
+	dev_filetrans($1, usbtty_device_t, chr_file, "ttyUSB9")
+	dev_filetrans($1, virtio_device_t, chr_file, "vport0p0")
+	dev_filetrans($1, virtio_device_t, chr_file, "vport0p1")
+	dev_filetrans($1, virtio_device_t, chr_file, "vport0p2")
+	dev_filetrans($1, virtio_device_t, chr_file, "vport0p3")
+	dev_filetrans($1, virtio_device_t, chr_file, "vport0p4")
+	dev_filetrans($1, virtio_device_t, chr_file, "vport0p5")
+	dev_filetrans($1, virtio_device_t, chr_file, "vport0p6")
+	dev_filetrans($1, virtio_device_t, chr_file, "vport0p7")
+	dev_filetrans($1, virtio_device_t, chr_file, "vport0p8")
+	dev_filetrans($1, virtio_device_t, chr_file, "vport0p9")
+	dev_filetrans($1, devpts_t, dir, "pts")
+	dev_filetrans($1, tty_device_t, chr_file, "xvc0")
+	dev_filetrans($1, tty_device_t, chr_file, "xvc1")
+	dev_filetrans($1, tty_device_t, chr_file, "xvc2")
+	dev_filetrans($1, tty_device_t, chr_file, "xvc3")
+	dev_filetrans($1, tty_device_t, chr_file, "xvc4")
+	dev_filetrans($1, tty_device_t, chr_file, "xvc5")
+	dev_filetrans($1, tty_device_t, chr_file, "xvc6")
+	dev_filetrans($1, tty_device_t, chr_file, "xvc7")
+	dev_filetrans($1, tty_device_t, chr_file, "xvc8")
+	dev_filetrans($1, tty_device_t, chr_file, "xvc9")
+')
diff --git a/policy/modules/kernel/terminal.te b/policy/modules/kernel/terminal.te
index 9d64659..31b2165 100644
--- a/policy/modules/kernel/terminal.te
+++ b/policy/modules/kernel/terminal.te
@@ -29,6 +29,7 @@ files_mountpoint(devpts_t)
 fs_associate_tmpfs(devpts_t)
 fs_type(devpts_t)
 fs_use_trans devpts gen_context(system_u:object_r:devpts_t,s0);
+dev_associate(devpts_t)
 
 #
 # devtty_t is the type of /dev/tty.
@@ -56,3 +57,9 @@ dev_node(tty_device_t)
 #
 type usbtty_device_t, serial_device;
 dev_node(usbtty_device_t)
+
+#
+# virtio_device_t is the type of /dev/vport[0-9]p[0-9]
+#
+type virtio_device_t, serial_device;
+dev_node(virtio_device_t)
diff --git a/policy/modules/kernel/unlabelednet.fc b/policy/modules/kernel/unlabelednet.fc
new file mode 100644
index 0000000..f310b9d
--- /dev/null
+++ b/policy/modules/kernel/unlabelednet.fc
@@ -0,0 +1 @@
+# No unlabelednet file contexts.
diff --git a/policy/modules/kernel/unlabelednet.if b/policy/modules/kernel/unlabelednet.if
new file mode 100644
index 0000000..0ce0470
--- /dev/null
+++ b/policy/modules/kernel/unlabelednet.if
@@ -0,0 +1 @@
+## <summary> Policy for allowing confined domains to use unlabeled_t packets</summary>
diff --git a/policy/modules/kernel/unlabelednet.te b/policy/modules/kernel/unlabelednet.te
new file mode 100644
index 0000000..e1ebd1a
--- /dev/null
+++ b/policy/modules/kernel/unlabelednet.te
@@ -0,0 +1,3 @@
+policy_module(unlabelednet, 1.0)
+
+corenet_enable_unlabeled_packets()
diff --git a/policy/modules/roles/auditadm.te b/policy/modules/roles/auditadm.te
index 834a065..1105353 100644
--- a/policy/modules/roles/auditadm.te
+++ b/policy/modules/roles/auditadm.te
@@ -22,16 +22,21 @@ corecmd_exec_shell(auditadm_t)
 
 domain_kill_all_domains(auditadm_t)
 
+selinux_read_policy(auditadm_t)
+
 logging_send_syslog_msg(auditadm_t)
 logging_read_generic_logs(auditadm_t)
 logging_manage_audit_log(auditadm_t)
 logging_manage_audit_config(auditadm_t)
 logging_run_auditctl(auditadm_t, auditadm_r)
 logging_run_auditd(auditadm_t, auditadm_r)
+logging_stream_connect_syslog(auditadm_t)
 
 seutil_run_runinit(auditadm_t, auditadm_r)
 seutil_read_bin_policy(auditadm_t)
 
+userdom_dontaudit_search_admin_dir(auditadm_t)
+
 optional_policy(`
 	consoletype_exec(auditadm_t)
 ')
diff --git a/policy/modules/roles/logadm.te b/policy/modules/roles/logadm.te
index 3a45a3e..6b08160 100644
--- a/policy/modules/roles/logadm.te
+++ b/policy/modules/roles/logadm.te
@@ -14,6 +14,5 @@ userdom_base_user_template(logadm)
 # logadmin local policy
 #
 
-allow logadm_t self:capability { dac_override dac_read_search kill sys_ptrace sys_nice };
-
+allow logadm_t self:capability { dac_override dac_read_search kill sys_nice };
 logging_admin(logadm_t, logadm_r)
diff --git a/policy/modules/roles/secadm.te b/policy/modules/roles/secadm.te
index 110d48a..1eebd22 100644
--- a/policy/modules/roles/secadm.te
+++ b/policy/modules/roles/secadm.te
@@ -9,6 +9,8 @@ role secadm_r;
 
 userdom_unpriv_user_template(secadm)
 userdom_security_admin_template(secadm_t, secadm_r)
+userdom_inherit_append_admin_home_files(secadm_t)
+userdom_read_admin_home_files(secadm_t)
 
 ########################################
 #
@@ -30,8 +32,7 @@ mls_file_upgrade(secadm_t)
 mls_file_downgrade(secadm_t)
 
 auth_role(secadm_r, secadm_t)
-files_relabel_non_auth_files(secadm_t)
-auth_relabel_shadow(secadm_t)
+files_relabel_all_files(secadm_t)
 
 init_exec(secadm_t)
 
diff --git a/policy/modules/roles/staff.if b/policy/modules/roles/staff.if
index 234a940..d340f20 100644
--- a/policy/modules/roles/staff.if
+++ b/policy/modules/roles/staff.if
@@ -1,4 +1,4 @@
-## <summary>Administrator's unprivileged user role</summary>
+## <summary>Administrator's unprivileged user</summary>
 
 ########################################
 ## <summary>
diff --git a/policy/modules/roles/staff.te b/policy/modules/roles/staff.te
index e5aee97..f373c8d 100644
--- a/policy/modules/roles/staff.te
+++ b/policy/modules/roles/staff.te
@@ -8,12 +8,52 @@ policy_module(staff, 2.3.0)
 role staff_r;
 
 userdom_unpriv_user_template(staff)
+fs_exec_noxattr(staff_t)
 
 ########################################
 #
 # Local policy
 #
 
+kernel_read_ring_buffer(staff_t)
+kernel_getattr_core_if(staff_t)
+kernel_getattr_message_if(staff_t)
+kernel_read_software_raid_state(staff_t)
+kernel_read_fs_sysctls(staff_t)
+
+fs_read_hugetlbfs_files(staff_t)
+
+dev_read_cpuid(staff_t)
+
+domain_read_all_domains_state(staff_t)
+domain_getattr_all_domains(staff_t)
+domain_obj_id_change_exemption(staff_t)
+
+files_read_kernel_modules(staff_t)
+
+seutil_read_module_store(staff_t)
+seutil_run_newrole(staff_t, staff_r)
+
+storage_read_scsi_generic(staff_t)
+storage_write_scsi_generic(staff_t)
+
+term_use_unallocated_ttys(staff_t)
+
+auth_domtrans_pam_console(staff_t)
+
+init_dbus_chat(staff_t)
+init_dbus_chat_script(staff_t)
+
+miscfiles_read_hwdata(staff_t)
+
+ifndef(`enable_mls',`
+	selinux_read_policy(staff_t)
+')
+
+optional_policy(`
+	abrt_read_cache(staff_t)
+')
+
 optional_policy(`
 	apache_role(staff_r, staff_t)
 ')
@@ -23,11 +63,99 @@ optional_policy(`
 ')
 
 optional_policy(`
+	blueman_dbus_chat(staff_t)
+')
+
+optional_policy(`
+	bluetooth_role(staff_r, staff_t)
+')
+
+optional_policy(`
 	dbadm_role_change(staff_r)
 ')
 
 optional_policy(`
-	git_role(staff_r, staff_t)
+	accountsd_dbus_chat(staff_t)
+	accountsd_read_lib_files(staff_t)
+')
+
+optional_policy(`
+	chrome_role(staff_r, staff_t)
+')
+
+optional_policy(`
+	colord_dbus_chat(staff_t)
+')
+
+optional_policy(`
+	gnomeclock_dbus_chat(staff_t)
+')
+
+optional_policy(`
+	firewallgui_dbus_chat(staff_t)
+')
+
+optional_policy(`
+	gnome_role(staff_r, staff_t)
+')
+
+optional_policy(`
+	irc_role(staff_r, staff_t)
+')
+
+optional_policy(`
+	lpd_list_spool(staff_t)
+')
+
+optional_policy(`
+	mock_role(staff_r, staff_t)
+')
+
+optional_policy(`
+	kerneloops_dbus_chat(staff_t)
+')
+
+optional_policy(`
+	logadm_role_change(staff_r)
+')
+
+optional_policy(`
+	mozilla_run_plugin(staff_t, staff_r)
+')
+
+optional_policy(`
+	modutils_read_module_config(staff_t)
+	modutils_read_module_deps(staff_t)
+')
+
+optional_policy(`
+	netutils_run_ping(staff_t, staff_r)
+	netutils_run_traceroute(staff_t, staff_r)
+	netutils_signal_ping(staff_t)
+	netutils_kill_ping(staff_t)
+')
+
+optional_policy(`
+	oident_manage_user_content(staff_t)
+	oident_relabel_user_content(staff_t)
+')
+
+optional_policy(`
+	mta_role(staff_r, staff_t)
+')
+
+optional_policy(`
+	mysql_exec(staff_t)
+')
+
+optional_policy(`
+	polipo_role(staff_r, staff_t)
+	polipo_named_filetrans_cache_home_dirs(staff_t)
+	polipo_named_filetrans_config_home_files(staff_t)
+')
+
+optional_policy(`
+	git_session_role(staff_r, staff_t)
 ')
 
 optional_policy(`
@@ -35,15 +163,23 @@ optional_policy(`
 ')
 
 optional_policy(`
+	rtkit_scheduled(staff_t)
+')
+
+optional_policy(`
+	rpm_dbus_chat(staff_t)
+')
+
+optional_policy(`
 	secadm_role_change(staff_r)
 ')
 
 optional_policy(`
-	ssh_role_template(staff, staff_r, staff_t)
+	sandbox_transition(staff_t, staff_r)
 ')
 
 optional_policy(`
-	sudo_role_template(staff, staff_r, staff_t)
+	screen_role_template(staff, staff_r, staff_t)
 ')
 
 optional_policy(`
@@ -52,10 +188,59 @@ optional_policy(`
 ')
 
 optional_policy(`
+	systemd_read_unit_files(staff_t)
+	systemd_exec_systemctl(staff_t)
+')
+
+optional_policy(`
+	setroubleshoot_stream_connect(staff_t)
+	setroubleshoot_dbus_chat(staff_t)
+	setroubleshoot_dbus_chat_fixit(staff_t)
+')
+
+optional_policy(`
+	ssh_role_template(staff, staff_r, staff_t)
+')
+
+optional_policy(`
+	sudo_role_template(staff, staff_r, staff_t)
+')
+
+#optional_policy(`
+#	telepathy_dbus_session_role(staff_r, staff_t)
+#')
+
+optional_policy(`
+	userhelper_console_role_template(staff, staff_r, staff_t)
+')
+
+optional_policy(`
+	unconfined_role_change(staff_r)
+')
+
+optional_policy(`
+	usbmuxd_stream_connect(staff_t)
+')
+
+optional_policy(`
+	virt_getattr_exec(staff_t)
+	virt_search_images(staff_t)
+	virt_stream_connect(staff_t)
+')
+
+optional_policy(`
 	vlock_run(staff_t, staff_r)
 ')
 
 optional_policy(`
+	vnstatd_read_lib_files(staff_t)
+')
+
+optional_policy(`
+	webadm_role_change(staff_r)
+')
+
+optional_policy(`
 	xserver_role(staff_r, staff_t)
 ')
 
@@ -65,10 +250,6 @@ ifndef(`distro_redhat',`
 	')
 
 	optional_policy(`
-		bluetooth_role(staff_r, staff_t)
-	')
-
-	optional_policy(`
 		cdrecord_role(staff_r, staff_t)
 	')
 
@@ -93,18 +274,10 @@ ifndef(`distro_redhat',`
 	')
 
 	optional_policy(`
-		gnome_role(staff_r, staff_t)
-	')
-
-	optional_policy(`
 		gpg_role(staff_r, staff_t)
 	')
 
 	optional_policy(`
-		irc_role(staff_r, staff_t)
-	')
-
-	optional_policy(`
 		java_role(staff_r, staff_t)
 	')
 
@@ -125,10 +298,6 @@ ifndef(`distro_redhat',`
 	')
 
 	optional_policy(`
-		mta_role(staff_r, staff_t)
-	')
-
-	optional_policy(`
 		pyzor_role(staff_r, staff_t)
 	')
 
@@ -141,10 +310,6 @@ ifndef(`distro_redhat',`
 	')
 
 	optional_policy(`
-		screen_role_template(staff, staff_r, staff_t)
-	')
-
-	optional_policy(`
 		spamassassin_role(staff_r, staff_t)
 	')
 
@@ -176,3 +341,7 @@ ifndef(`distro_redhat',`
 		wireshark_role(staff_r, staff_t)
 	')
 ')
+
+tunable_policy(`selinuxuser_execmod',`
+	userdom_execmod_user_home_files(staff_t)
+')
diff --git a/policy/modules/roles/sysadm.if b/policy/modules/roles/sysadm.if
index ff92430..36740ea 100644
--- a/policy/modules/roles/sysadm.if
+++ b/policy/modules/roles/sysadm.if
@@ -70,6 +70,23 @@ interface(`sysadm_shell_domtrans',`
 	allow sysadm_t $1:process sigchld;
 ')
 
+#######################################
+## <summary>
+##  sysadm stub interface.  No access allowed.
+## </summary>
+## <param name="domain" unused="true">
+##  <summary>
+##  Domain allowed access
+##  </summary>
+## </param>
+#
+interface(`sysadm_stub',`
+	gen_require(`
+		type sysadm_t;
+		role sysadm_r;
+	')
+')
+
 ########################################
 ## <summary>
 ##	Execute a generic bin program in the sysadm domain.
diff --git a/policy/modules/roles/sysadm.te b/policy/modules/roles/sysadm.te
index bd5a2ea..7905181 100644
--- a/policy/modules/roles/sysadm.te
+++ b/policy/modules/roles/sysadm.te
@@ -5,39 +5,69 @@ policy_module(sysadm, 2.4.2)
 # Declarations
 #
 
-## <desc>
-## <p>
-## Allow sysadm to debug or ptrace all processes.
-## </p>
-## </desc>
-gen_tunable(allow_ptrace, false)
-
 role sysadm_r;
 
 userdom_admin_user_template(sysadm)
 
-ifndef(`enable_mls',`
-	userdom_security_admin_template(sysadm_t, sysadm_r)
-')
-
 ########################################
 #
 # Local policy
 #
+kernel_read_fs_sysctls(sysadm_t)
 
 corecmd_exec_shell(sysadm_t)
 
+dev_filetrans_all_named_dev(sysadm_t)
+
+domain_dontaudit_read_all_domains_state(sysadm_t)
+
+files_read_kernel_modules(sysadm_t)
+files_filetrans_named_content(sysadm_t)
+
+storage_filetrans_all_named_dev(sysadm_t)
+
+term_filetrans_all_named_dev(sysadm_t)
+
 mls_process_read_up(sysadm_t)
+mls_file_read_to_clearance(sysadm_t)
+mls_process_write_to_clearance(sysadm_t)
+
+storage_setattr_fixed_disk_dev(sysadm_t)
 
 ubac_process_exempt(sysadm_t)
 ubac_file_exempt(sysadm_t)
 ubac_fd_exempt(sysadm_t)
 
+application_exec(sysadm_t)
+
 init_exec(sysadm_t)
+init_exec_script_files(sysadm_t)
+init_dbus_chat(sysadm_t)
+init_script_role_transition(sysadm_r)
+init_status(sysadm_t)
+init_reboot(sysadm_t)
+init_halt(sysadm_t)
+init_undefined(sysadm_t)
+
+logging_filetrans_named_content(sysadm_t)
+
+miscfiles_filetrans_named_content(sysadm_t)
+miscfiles_read_hwdata(sysadm_t)
+
+sysnet_filetrans_named_content(sysadm_t)
 
 # Add/remove user home directories
 userdom_manage_user_home_dirs(sysadm_t)
 userdom_home_filetrans_user_home_dir(sysadm_t)
+userdom_manage_tmp_role(sysadm_r, sysadm_t)
+
+optional_policy(`
+	alsa_filetrans_named_content(sysadm_t)
+')
+
+optional_policy(`
+	ssh_filetrans_admin_home_content(sysadm_t)
+')
 
 ifdef(`direct_sysadm_daemon',`
 	optional_policy(`
@@ -55,13 +85,7 @@ ifdef(`distro_gentoo',`
 	init_exec_rc(sysadm_t)
 ')
 
-ifndef(`enable_mls',`
-	logging_manage_audit_log(sysadm_t)
-	logging_manage_audit_config(sysadm_t)
-	logging_run_auditctl(sysadm_t, sysadm_r)
-')
-
-tunable_policy(`allow_ptrace',`
+tunable_policy(`deny_ptrace',`',`
 	domain_ptrace_all_domains(sysadm_t)
 ')
 
@@ -71,9 +95,9 @@ optional_policy(`
 
 optional_policy(`
 	apache_run_helper(sysadm_t, sysadm_r)
+	apache_filetrans_named_content(sysadm_t)
 	#apache_run_all_scripts(sysadm_t, sysadm_r)
 	#apache_domtrans_sys_script(sysadm_t)
-	apache_role(sysadm_r, sysadm_t)
 ')
 
 optional_policy(`
@@ -110,6 +134,10 @@ optional_policy(`
 ')
 
 optional_policy(`
+	certmonger_dbus_chat(sysadm_t)
+')
+
+optional_policy(`
 	certwatch_run(sysadm_t, sysadm_r)
 ')
 
@@ -122,11 +150,20 @@ optional_policy(`
 ')
 
 optional_policy(`
-	consoletype_run(sysadm_t, sysadm_r)
+	cron_admin_role(sysadm_r, sysadm_t)
+	#cron_role(sysadm_r, sysadm_t)
+')
+
+optional_policy(`
+	consoletype_exec(sysadm_t)
+')
+
+optional_policy(`
+    daemonstools_run_start(sysadm_t, sysadm_r)
 ')
 
 optional_policy(`
-	cvs_exec(sysadm_t)
+	dbus_role_template(sysadm, sysadm_r, sysadm_t)
 ')
 
 optional_policy(`
@@ -140,6 +177,10 @@ optional_policy(`
 ')
 
 optional_policy(`
+	devicekit_filetrans_named_content(sysadm_t)
+')
+
+optional_policy(`
 	dmesg_exec(sysadm_t)
 ')
 
@@ -156,11 +197,15 @@ optional_policy(`
 ')
 
 optional_policy(`
+	firewalld_dbus_chat(sysadm_t)
+')
+
+optional_policy(`
 	fstools_run(sysadm_t, sysadm_r)
 ')
 
 optional_policy(`
-	git_role(sysadm_r, sysadm_t)
+	git_session_role(sysadm_r, sysadm_t)
 ')
 
 optional_policy(`
@@ -179,6 +224,13 @@ optional_policy(`
 	ipsec_stream_connect(sysadm_t)
 	# for lsof
 	ipsec_getattr_key_sockets(sysadm_t)
+	ipsec_run_setkey(sysadm_t, sysadm_r)
+	ipsec_run_racoon(sysadm_t, sysadm_r)
+	ipsec_stream_connect_racoon(sysadm_t)
+
+	optional_policy(`
+		ipsec_mgmt_dbus_chat(sysadm_t)
+	')
 ')
 
 optional_policy(`
@@ -186,15 +238,20 @@ optional_policy(`
 ')
 
 optional_policy(`
-	kudzu_run(sysadm_t, sysadm_r)
+	irc_role(sysadm_r, sysadm_t)
 ')
 
 optional_policy(`
-	libs_run_ldconfig(sysadm_t, sysadm_r)
+	kerberos_exec_kadmind(sysadm_t)
+	kerberos_filetrans_named_content(sysadm_t)
 ')
 
 optional_policy(`
-	lockdev_role(sysadm_r, sysadm_t)
+	kudzu_run(sysadm_t, sysadm_r)
+')
+
+optional_policy(`
+	libs_run_ldconfig(sysadm_t, sysadm_r)
 ')
 
 optional_policy(`
@@ -214,22 +271,20 @@ optional_policy(`
 	modutils_run_depmod(sysadm_t, sysadm_r)
 	modutils_run_insmod(sysadm_t, sysadm_r)
 	modutils_run_update_mods(sysadm_t, sysadm_r)
+	modutils_read_module_deps(sysadm_t)
+	modules_filetrans_named_content(sysadm_t)
 ')
 
 optional_policy(`
 	mount_run(sysadm_t, sysadm_r)
-')
-
-optional_policy(`
-	mozilla_role(sysadm_r, sysadm_t)
-')
-
-optional_policy(`
-	mplayer_role(sysadm_r, sysadm_t)
+	mount_run_showmount(sysadm_t, sysadm_r)
 ')
 
 optional_policy(`
 	mta_role(sysadm_r, sysadm_t)
+	# this is defined in userdom_common_user_template
+	#mta_filetrans_home_content(sysadm_t)
+	mta_filetrans_admin_home_content(sysadm_t)
 ')
 
 optional_policy(`
@@ -241,25 +296,47 @@ optional_policy(`
 ')
 
 optional_policy(`
+	ncftool_run(sysadm_t, sysadm_r)
+')
+
+optional_policy(`
 	netutils_run(sysadm_t, sysadm_r)
 	netutils_run_ping(sysadm_t, sysadm_r)
 	netutils_run_traceroute(sysadm_t, sysadm_r)
 ')
 
 optional_policy(`
+	networkmanager_filetrans_named_content(sysadm_t)
+')
+
+optional_policy(`
 	ntp_stub()
 	corenet_udp_bind_ntp_port(sysadm_t)
 ')
 
 optional_policy(`
+	nx_filetrans_named_content(sysadm_t)
+')
+
+optional_policy(`
 	oav_run_update(sysadm_t, sysadm_r)
 ')
 
 optional_policy(`
+	openvpn_run(sysadm_t, sysadm_r)
+')
+
+optional_policy(`
 	pcmcia_run_cardctl(sysadm_t, sysadm_r)
 ')
 
 optional_policy(`
+	polipo_role(sysadm_r, sysadm_t)
+	polipo_named_filetrans_admin_cache_home_dirs(sysadm_t)
+	polipo_named_filetrans_admin_config_home_files(sysadm_t)
+')
+
+optional_policy(`
 	portage_run(sysadm_t, sysadm_r)
 	portage_run_fetch(sysadm_t, sysadm_r)
 	portage_run_gcc_config(sysadm_t, sysadm_r)
@@ -270,31 +347,32 @@ optional_policy(`
 ')
 
 optional_policy(`
-	pyzor_role(sysadm_r, sysadm_t)
+	postfix_filetrans_named_content(sysadm_t)
 ')
 
 optional_policy(`
-	quota_run(sysadm_t, sysadm_r)
+	prelink_run(sysadm_t, sysadm_r)
 ')
 
 optional_policy(`
-	raid_run_mdadm(sysadm_r, sysadm_t)
+	puppet_run_puppetca(sysadm_t, sysadm_r)
 ')
 
 optional_policy(`
-	razor_role(sysadm_r, sysadm_t)
+	quota_filetrans_named_content(sysadm_t)
 ')
 
 optional_policy(`
-	rpc_domtrans_nfsd(sysadm_t)
+	raid_domtrans_mdadm(sysadm_t)
 ')
 
 optional_policy(`
-	rpm_run(sysadm_t, sysadm_r)
+	rpc_domtrans_nfsd(sysadm_t)
 ')
 
 optional_policy(`
-	rssh_role(sysadm_r, sysadm_t)
+	rpm_run(sysadm_t, sysadm_r)
+	rpm_dbus_chat(sysadm_t, sysadm_r)
 ')
 
 optional_policy(`
@@ -319,12 +397,18 @@ optional_policy(`
 ')
 
 optional_policy(`
+	setroubleshoot_stream_connect(sysadm_t)
+	setroubleshoot_dbus_chat(sysadm_t)
+	setroubleshoot_dbus_chat_fixit(sysadm_t)
+')
+
+optional_policy(`
 	seutil_run_setfiles(sysadm_t, sysadm_r)
 	seutil_run_runinit(sysadm_t, sysadm_r)
 ')
 
 optional_policy(`
-	spamassassin_role(sysadm_r, sysadm_t)
+	shutdown_run(sysadm_t, sysadm_r)
 ')
 
 optional_policy(`
@@ -349,7 +433,18 @@ optional_policy(`
 ')
 
 optional_policy(`
-	thunderbird_role(sysadm_r, sysadm_t)
+	systemd_passwd_agent_run(sysadm_t, sysadm_r)
+	systemd_config_all_services(sysadm_t)
+	systemd_manage_all_unit_files(sysadm_t)
+	systemd_manage_all_unit_lnk_files(sysadm_t)
+	systemd_login_status(sysadm_t)
+	systemd_login_reboot(sysadm_t)
+	systemd_login_halt(sysadm_t)
+	systemd_login_undefined(sysadm_t)
+')
+
+optional_policy(`
+	tftp_filetrans_named_content(sysadm_t)
 ')
 
 optional_policy(`
@@ -360,19 +455,15 @@ optional_policy(`
 ')
 
 optional_policy(`
-	tvtime_role(sysadm_r, sysadm_t)
-')
-
-optional_policy(`
 	tzdata_domtrans(sysadm_t)
 ')
 
 optional_policy(`
-	uml_role(sysadm_r, sysadm_t)
+	unconfined_domtrans(sysadm_t)
 ')
 
 optional_policy(`
-	unconfined_domtrans(sysadm_t)
+	udev_run(sysadm_t, sysadm_r)
 ')
 
 optional_policy(`
@@ -384,10 +475,6 @@ optional_policy(`
 ')
 
 optional_policy(`
-	userhelper_role_template(sysadm, sysadm_r, sysadm_t)
-')
-
-optional_policy(`
 	usermanage_run_admin_passwd(sysadm_t, sysadm_r)
 	usermanage_run_groupadd(sysadm_t, sysadm_r)
 	usermanage_run_useradd(sysadm_t, sysadm_r)
@@ -395,6 +482,8 @@ optional_policy(`
 
 optional_policy(`
 	virt_stream_connect(sysadm_t)
+	virt_filetrans_home_content(sysadm_t)
+	virt_manage_pid_dirs(sysadm_t)
 ')
 
 optional_policy(`
@@ -402,31 +491,34 @@ optional_policy(`
 ')
 
 optional_policy(`
-	vpn_run(sysadm_t, sysadm_r)
+	vlock_run(sysadm_t, sysadm_r)
 ')
 
 optional_policy(`
-	webalizer_run(sysadm_t, sysadm_r)
+	vpn_run(sysadm_t, sysadm_r)
 ')
 
 optional_policy(`
-	wireshark_role(sysadm_r, sysadm_t)
+	webalizer_run(sysadm_t, sysadm_r)
 ')
 
 optional_policy(`
-	vlock_run(sysadm_t, sysadm_r)
+	xserver_role(sysadm_r, sysadm_t)
 ')
 
 optional_policy(`
-	xserver_role(sysadm_r, sysadm_t)
+	yam_run(sysadm_t, sysadm_r)
 ')
 
 optional_policy(`
-	yam_run(sysadm_t, sysadm_r)
+	zebra_stream_connect(sysadm_t)
 ')
 
 ifndef(`distro_redhat',`
 	optional_policy(`
+		apache_role(sysadm_r, sysadm_t)
+	')
+	optional_policy(`
 		auth_role(sysadm_r, sysadm_t)
 	')
 
@@ -439,10 +531,6 @@ ifndef(`distro_redhat',`
 	')
 
 	optional_policy(`
-		cron_admin_role(sysadm_r, sysadm_t)
-	')
-
-	optional_policy(`
 		dbus_role_template(sysadm, sysadm_r, sysadm_t)
 	')
 
@@ -460,6 +548,7 @@ ifndef(`distro_redhat',`
 
 	optional_policy(`
 		gnome_role(sysadm_r, sysadm_t)
+		gnome_filetrans_admin_home_content(sysadm_t)
 	')
 
 	optional_policy(`
@@ -467,11 +556,66 @@ ifndef(`distro_redhat',`
 	')
 
 	optional_policy(`
-		irc_role(sysadm_r, sysadm_t)
+		java_role(sysadm_r, sysadm_t)
 	')
 
 	optional_policy(`
-		java_role(sysadm_r, sysadm_t)
+		lockdev_role(sysadm_r, sysadm_t)
+	')
+
+	optional_policy(`
+		mock_admin(sysadm_t)
+	')
+
+	optional_policy(`
+		mozilla_role(sysadm_r, sysadm_t)
 	')
-')
 
+	optional_policy(`
+		mplayer_role(sysadm_r, sysadm_t)
+	')
+
+	optional_policy(`
+		pyzor_role(sysadm_r, sysadm_t)
+	')
+
+	optional_policy(`
+		razor_role(sysadm_r, sysadm_t)
+	')
+
+	optional_policy(`
+		rssh_role(sysadm_r, sysadm_t)
+	')
+
+	optional_policy(`
+		spamassassin_role(sysadm_r, sysadm_t)
+	')
+
+	optional_policy(`
+		thunderbird_role(sysadm_r, sysadm_t)
+	')
+
+	optional_policy(`
+		tvtime_role(sysadm_r, sysadm_t)
+	')
+
+	optional_policy(`
+		uml_role(sysadm_r, sysadm_t)
+	')
+
+	optional_policy(`
+		userhelper_role_template(sysadm, sysadm_r, sysadm_t)
+	')
+
+	optional_policy(`
+		vmware_role(sysadm_r, sysadm_t)
+	')
+
+	optional_policy(`
+		wireshark_role(sysadm_r, sysadm_t)
+	')
+
+	optional_policy(`
+		xserver_role(sysadm_r, sysadm_t)
+	')
+')
diff --git a/policy/modules/roles/sysadm_secadm.fc b/policy/modules/roles/sysadm_secadm.fc
new file mode 100644
index 0000000..ae3b6db
--- /dev/null
+++ b/policy/modules/roles/sysadm_secadm.fc
@@ -0,0 +1 @@
+# No context
diff --git a/policy/modules/roles/sysadm_secadm.if b/policy/modules/roles/sysadm_secadm.if
new file mode 100644
index 0000000..bd83148
--- /dev/null
+++ b/policy/modules/roles/sysadm_secadm.if
@@ -0,0 +1 @@
+## <summary>No Interfaces</summary>
diff --git a/policy/modules/roles/sysadm_secadm.te b/policy/modules/roles/sysadm_secadm.te
new file mode 100644
index 0000000..e45e8b0
--- /dev/null
+++ b/policy/modules/roles/sysadm_secadm.te
@@ -0,0 +1,23 @@
+policy_module(sysadm_secadm, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+gen_require(`
+	type sysadm_t;
+	role sysadm_r;
+')
+
+userdom_security_admin_template(sysadm_t, sysadm_r)
+
+#######################################
+#
+# Local policy
+#
+
+logging_manage_audit_log(sysadm_t)
+logging_manage_audit_config(sysadm_t)
+logging_run_auditctl(sysadm_t, sysadm_r)
+logging_stream_connect_syslog(sysadm_t)
diff --git a/policy/modules/roles/unconfineduser.fc b/policy/modules/roles/unconfineduser.fc
new file mode 100644
index 0000000..0e8654b
--- /dev/null
+++ b/policy/modules/roles/unconfineduser.fc
@@ -0,0 +1,8 @@
+# Add programs here which should not be confined by SELinux
+# e.g.:
+# /usr/local/bin/appsrv		--	gen_context(system_u:object_r:unconfined_exec_t,s0)
+# For the time being until someone writes a sane policy, we need initrc to transition to unconfined_t
+/usr/bin/vncserver		--	gen_context(system_u:object_r:unconfined_exec_t,s0)
+
+/usr/sbin/xrdp   --  gen_context(system_u:object_r:unconfined_exec_t,s0)
+/usr/sbin/xrdp-sesman   --  gen_context(system_u:object_r:unconfined_exec_t,s0)
diff --git a/policy/modules/roles/unconfineduser.if b/policy/modules/roles/unconfineduser.if
new file mode 100644
index 0000000..bac0dc0
--- /dev/null
+++ b/policy/modules/roles/unconfineduser.if
@@ -0,0 +1,595 @@
+## <summary>Unconfiend user role</summary>
+
+########################################
+## <summary>
+##	Change from the unconfineduser role.
+## </summary>
+## <desc>
+##	<p>
+##	Change from the unconfineduser role to
+##	the specified role.
+##	</p>
+##	<p>
+##	This is an interface to support third party modules
+##	and its use is not allowed in upstream reference
+##	policy.
+##	</p>
+## </desc>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`unconfined_role_change_to',`
+	gen_require(`
+		role unconfined_r;
+	')
+
+	allow unconfined_r $1;
+')
+
+########################################
+## <summary>
+##	Transition to the unconfined domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_domtrans',`
+	gen_require(`
+		type unconfined_t, unconfined_exec_t;
+	')
+
+	domtrans_pattern($1,unconfined_exec_t,unconfined_t)
+')
+
+########################################
+## <summary>
+##	Execute specified programs in the unconfined domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to allow the unconfined domain.
+##	</summary>
+## </param>
+#
+interface(`unconfined_run',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	unconfined_domtrans($1)
+	role $2 types unconfined_t;
+')
+
+########################################
+## <summary>
+##	Transition to the unconfined domain by executing a shell.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_shell_domtrans',`
+	gen_require(`
+		attribute unconfined_login_domain;
+	')
+	typeattribute $1 unconfined_login_domain;
+')
+
+########################################
+## <summary>
+##	Allow unconfined to execute the specified program in
+##	the specified domain.
+## </summary>
+## <desc>
+##	<p>
+##	Allow unconfined to execute the specified program in
+##	the specified domain.
+##	</p>
+##	<p>
+##	This is a interface to support third party modules
+##	and its use is not allowed in upstream reference
+##	policy.
+##	</p>
+## </desc>
+## <param name="domain">
+##	<summary>
+##	Domain to execute in.
+##	</summary>
+## </param>
+## <param name="entry_file">
+##	<summary>
+##	Domain entry point file.
+##	</summary>
+## </param>
+#
+interface(`unconfined_domtrans_to',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	domtrans_pattern(unconfined_t,$2,$1)
+')
+
+########################################
+## <summary>
+##	Allow unconfined to execute the specified program in
+##	the specified domain.  Allow the specified domain the
+##	unconfined role and use of unconfined user terminals.
+## </summary>
+## <desc>
+##	<p>
+##	Allow unconfined to execute the specified program in
+##	the specified domain.  Allow the specified domain the
+##	unconfined role and use of unconfined user terminals.
+##	</p>
+##	<p>
+##	This is a interface to support third party modules
+##	and its use is not allowed in upstream reference
+##	policy.
+##	</p>
+## </desc>
+## <param name="domain">
+##	<summary>
+##	Domain to execute in.
+##	</summary>
+## </param>
+## <param name="entry_file">
+##	<summary>
+##	Domain entry point file.
+##	</summary>
+## </param>
+#
+interface(`unconfined_run_to',`
+	gen_require(`
+		type unconfined_t;
+		role unconfined_r;
+	')
+
+	domtrans_pattern(unconfined_t,$2,$1)
+	role unconfined_r types $1;
+	userdom_use_user_terminals($1)
+')
+
+########################################
+## <summary>
+##	Inherit file descriptors from the unconfined domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_use_fds',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:fd use;
+')
+
+########################################
+## <summary>
+##	Send a SIGCHLD signal to the unconfined domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_sigchld',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:process sigchld;
+')
+
+########################################
+## <summary>
+##	Send a SIGNULL signal to the unconfined domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_signull',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:process signull;
+')
+
+########################################
+## <summary>
+##	Send generic signals to the unconfined domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_signal',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:process signal;
+')
+
+########################################
+## <summary>
+##	Read unconfined domain unnamed pipes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_read_pipes',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:fifo_file read_fifo_file_perms;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read unconfined domain unnamed pipes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_dontaudit_read_pipes',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	dontaudit $1 unconfined_t:fifo_file read;
+')
+
+########################################
+## <summary>
+##	Read and write unconfined domain unnamed pipes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_rw_pipes',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:fifo_file rw_fifo_file_perms;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read and write
+##	unconfined domain unnamed pipes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`unconfined_dontaudit_rw_pipes',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	dontaudit $1 unconfined_t:fifo_file rw_file_perms;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read and write
+##	unconfined domain stream.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`unconfined_dontaudit_rw_stream',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	dontaudit $1 unconfined_t:unix_stream_socket rw_socket_perms;
+')
+
+########################################
+## <summary>
+##	Connect to the unconfined domain using
+##	a unix domain stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_stream_connect',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:unix_stream_socket connectto;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read or write
+##	unconfined domain tcp sockets.
+## </summary>
+## <desc>
+##	<p>
+##	Do not audit attempts to read or write
+##	unconfined domain tcp sockets.
+##	</p>
+##	<p>
+##	This interface was added due to a broken
+##	symptom in ldconfig.
+##	</p>
+## </desc>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`unconfined_dontaudit_rw_tcp_sockets',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	dontaudit $1 unconfined_t:tcp_socket { read write };
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read or write
+##	unconfined domain packet sockets.
+## </summary>
+## <desc>
+##	<p>
+##	Do not audit attempts to read or write
+##	unconfined domain packet sockets.
+##	</p>
+##	<p>
+##	This interface was added due to a broken
+##	symptom.
+##	</p>
+## </desc>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`unconfined_dontaudit_rw_packet_sockets',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	dontaudit $1 unconfined_t:packet_socket { read write };
+')
+
+########################################
+## <summary>
+##	Create keys for the unconfined domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_create_keys',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:key create;
+')
+
+########################################
+## <summary>
+##	Send messages to the unconfined domain over dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_dbus_send',`
+	gen_require(`
+		type unconfined_t;
+		class dbus send_msg;
+	')
+
+	allow $1 unconfined_t:dbus send_msg;
+')
+
+########################################
+## <summary>
+##	Send and receive messages from
+##	unconfined_t over dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_dbus_chat',`
+	gen_require(`
+		type unconfined_t;
+		class dbus send_msg;
+	')
+
+	allow $1 unconfined_t:dbus send_msg;
+	allow unconfined_t $1:dbus send_msg;
+')
+
+########################################
+## <summary>
+##	Connect to the the unconfined DBUS
+##	for service (acquire_svc).
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_dbus_connect',`
+	gen_require(`
+		type unconfined_t;
+		class dbus acquire_svc;
+	')
+
+	allow $1 unconfined_t:dbus acquire_svc;
+')
+
+########################################
+## <summary>
+##	Allow ptrace of unconfined domain
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_ptrace',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:process ptrace;
+')
+
+########################################
+## <summary>
+##	Read and write to unconfined shared memory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The type of the process performing this action.
+##	</summary>
+## </param>
+#
+interface(`unconfined_rw_shm',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:shm rw_shm_perms;
+')
+
+########################################
+## <summary>
+##	Allow apps to set rlimits on userdomain
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_set_rlimitnh',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:process rlimitinh;
+')
+
+########################################
+## <summary>
+##	Get the process group of unconfined.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_getpgid',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:process getpgid;
+')
+
+########################################
+## <summary>
+##	Change to the unconfined role.
+## </summary>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`unconfined_role_change',`
+	gen_require(`
+		role unconfined_r;
+	')
+
+	allow $1 unconfined_r;
+')
+
+########################################
+## <summary>
+##	Allow domain to attach to TUN devices created by unconfined_t users.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`unconfined_attach_tun_iface',`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	allow $1 unconfined_t:tun_socket relabelfrom;
+	allow $1 self:tun_socket relabelto;
+')
+
diff --git a/policy/modules/roles/unconfineduser.te b/policy/modules/roles/unconfineduser.te
new file mode 100644
index 0000000..7b69ace
--- /dev/null
+++ b/policy/modules/roles/unconfineduser.te
@@ -0,0 +1,392 @@
+policy_module(unconfineduser, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+attribute unconfined_login_domain;
+
+## <desc>
+## <p>
+## allow unconfined users to transition to the chrome sandbox domains when running chrome-sandbox
+## </p>
+## </desc>
+gen_tunable(unconfined_chrome_sandbox_transition, false)
+
+## <desc>
+## <p>
+## Allow unconfined users to transition to the Mozilla plugin domain when running xulrunner plugin-container.
+## </p>
+## </desc>
+gen_tunable(unconfined_mozilla_plugin_transition, false)
+
+## <desc>
+## <p>
+## Allow video playing tools to run unconfined
+## </p>
+## </desc>
+gen_tunable(unconfined_mplayer, false)
+
+## <desc>
+## <p>
+## Allow a user to login as an unconfined domain
+## </p>
+## </desc>
+gen_tunable(unconfined_login, true)
+
+# usage in this module of types created by these
+# calls is not correct, however we dont currently
+# have another method to add access to these types
+userdom_base_user_template(unconfined)
+userdom_manage_home_role(unconfined_r, unconfined_t)
+userdom_manage_tmp_role(unconfined_r, unconfined_t)
+userdom_manage_tmpfs_role(unconfined_r, unconfined_t)
+userdom_unpriv_type(unconfined_r, unconfined_t)
+
+type unconfined_exec_t;
+init_system_domain(unconfined_t, unconfined_exec_t)
+role unconfined_r types unconfined_t;
+role_transition system_r unconfined_exec_t unconfined_r;
+allow system_r unconfined_r;
+
+domain_user_exemption_target(unconfined_t)
+allow system_r unconfined_r;
+allow unconfined_r system_r;
+init_script_role_transition(unconfined_r)
+role system_r types unconfined_t;
+typealias unconfined_t alias unconfined_crontab_t;
+
+########################################
+#
+# Local policy
+#
+
+dontaudit unconfined_t self:dir write;
+dontaudit unconfined_t self:file setattr;
+
+allow unconfined_t self:system syslog_read;
+dontaudit unconfined_t self:capability sys_module;
+
+kernel_rw_unlabeled_socket(unconfined_t)
+kernel_rw_unlabeled_rawip_socket(unconfined_t)
+
+files_create_boot_flag(unconfined_t)
+files_create_default_dir(unconfined_t)
+files_root_filetrans_default(unconfined_t, dir)
+
+mcs_killall(unconfined_t)
+mcs_ptrace_all(unconfined_t)
+mls_file_write_all_levels(unconfined_t)
+
+init_run_daemon(unconfined_t, unconfined_r)
+init_domtrans_script(unconfined_t)
+init_telinit(unconfined_t)
+
+logging_send_syslog_msg(unconfined_t)
+logging_run_auditctl(unconfined_t, unconfined_r)
+
+systemd_config_all_services(unconfined_t)
+
+seutil_run_loadpolicy(unconfined_t, unconfined_r)
+seutil_run_setsebool(unconfined_t, unconfined_r)
+seutil_run_setfiles(unconfined_t, unconfined_r)
+seutil_run_semanage(unconfined_t, unconfined_r)
+
+unconfined_domain_noaudit(unconfined_t)
+
+usermanage_run_passwd(unconfined_t, unconfined_r)
+usermanage_run_chfn(unconfined_t, unconfined_r)
+
+tunable_policy(`deny_execmem',`',`
+	allow unconfined_t self:process execmem;
+')
+
+tunable_policy(`selinuxuser_execstack',`
+	allow unconfined_t self:process execstack;
+')
+
+tunable_policy(`selinuxuser_execmod',`
+	userdom_execmod_user_home_files(unconfined_t)
+')
+
+tunable_policy(`unconfined_login',`
+	corecmd_shell_domtrans(unconfined_login_domain,unconfined_t)
+	allow unconfined_t unconfined_login_domain:fd use;
+	allow unconfined_t unconfined_login_domain:fifo_file rw_file_perms;
+	allow unconfined_t unconfined_login_domain:process sigchld;
+')
+
+optional_policy(`
+	gen_require(`
+		type unconfined_t;
+	')
+
+	optional_policy(`
+		abrt_dbus_chat(unconfined_t)
+		abrt_run_helper(unconfined_t, unconfined_r)
+	')
+
+	optional_policy(`
+		avahi_dbus_chat(unconfined_t)
+	')
+
+	optional_policy(`
+		blueman_dbus_chat(unconfined_t)
+	')
+
+	optional_policy(`
+		certmonger_dbus_chat(unconfined_t)
+	')
+
+	optional_policy(`
+		devicekit_dbus_chat(unconfined_t)
+		devicekit_dbus_chat_disk(unconfined_t)
+		devicekit_dbus_chat_power(unconfined_t)
+	')
+
+	optional_policy(`
+		hal_dbus_chat(unconfined_t)
+	')
+
+	optional_policy(`
+		networkmanager_dbus_chat(unconfined_t)
+	')
+
+	optional_policy(`
+		policykit_role(unconfined_r, unconfined_t)
+	')
+
+	optional_policy(`
+		rtkit_scheduled(unconfined_t)
+	')
+
+	# Might remove later if this proves to be problematic, but would like to gather AVCs
+	optional_policy(`
+		thumb_role(unconfined_r, unconfined_t)
+	')
+
+	optional_policy(`
+		setroubleshoot_dbus_chat(unconfined_t)
+		setroubleshoot_dbus_chat_fixit(unconfined_t)
+	')
+
+	optional_policy(`
+		sandbox_transition(unconfined_t, unconfined_r)
+	')
+
+	optional_policy(`
+		shutdown_run(unconfined_t, unconfined_r)
+	')
+
+	optional_policy(`
+		gen_require(`
+			type user_tmpfs_t;
+		')
+	
+		xserver_rw_session(unconfined_t, user_tmpfs_t)
+		xserver_run_xauth(unconfined_t, unconfined_r)
+		xserver_dbus_chat_xdm(unconfined_t)
+	')
+')
+
+ifdef(`distro_gentoo',`
+	seutil_run_runinit(unconfined_t, unconfined_r)
+	seutil_init_script_run_runinit(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	accountsd_dbus_chat(unconfined_t)
+')
+
+optional_policy(`
+	apache_run_helper(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	bind_run_ndc(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	chrome_role_notrans(unconfined_r, unconfined_t)
+
+	tunable_policy(`unconfined_chrome_sandbox_transition',`
+		chrome_domtrans_sandbox(unconfined_t)
+	')
+')
+
+optional_policy(`
+	dbus_role_template(unconfined, unconfined_r, unconfined_t)
+
+	optional_policy(`
+		unconfined_domain(unconfined_dbusd_t)
+
+		optional_policy(`
+			xserver_rw_shm(unconfined_dbusd_t)
+		')
+	')
+
+	init_dbus_chat(unconfined_t)
+	init_dbus_chat_script(unconfined_t)
+
+	dbus_stub(unconfined_t)
+
+	optional_policy(`
+		bluetooth_dbus_chat(unconfined_t)
+	')
+
+	optional_policy(`
+		consolekit_dbus_chat(unconfined_t)
+	')
+
+	optional_policy(`
+		cups_dbus_chat_config(unconfined_t)
+	')
+
+	optional_policy(`
+		fprintd_dbus_chat(unconfined_t)
+	')
+
+	optional_policy(`
+		gnomeclock_dbus_chat(unconfined_t)
+		gnome_dbus_chat_gconfdefault(unconfined_t)
+		gnome_command_domtrans_gkeyringd(unconfined_dbusd_t,unconfined_t)
+	')
+
+	optional_policy(`
+		ipsec_mgmt_dbus_chat(unconfined_t)
+	')
+
+	optional_policy(`
+		kerneloops_dbus_chat(unconfined_t)
+	')
+
+	optional_policy(`
+        telepathy_command_domtrans(unconfined_dbusd_t, unconfined_t)
+    ')
+
+	optional_policy(`
+		oddjob_dbus_chat(unconfined_t)
+	')
+
+	optional_policy(`
+		vpn_dbus_chat(unconfined_t)
+	')
+
+	optional_policy(`
+		firewalld_dbus_chat(unconfined_t)
+	')
+
+	optional_policy(`
+		firewallgui_dbus_chat(unconfined_t)
+	')
+')
+
+optional_policy(`
+	firstboot_run(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	ftp_run_ftpdctl(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+        gpsd_run(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	java_run_unconfined(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	livecd_run(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	lpd_run_checkpc(unconfined_t, unconfined_r)
+')
+
+#optional_policy(`
+#	mock_role(unconfined_r, unconfined_t)
+#')
+
+optional_policy(`
+	modutils_run_update_mods(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	mozilla_role_plugin(unconfined_r)
+
+	tunable_policy(`unconfined_mozilla_plugin_transition', `
+			mozilla_domtrans_plugin(unconfined_t)
+	')
+')
+
+optional_policy(`
+	ncftool_run(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	oddjob_run_mkhomedir(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	prelink_run(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	portmap_run_helper(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	rpm_run(unconfined_t, unconfined_r)
+	# Allow SELinux aware applications to request rpm_script execution
+	rpm_transition_script(unconfined_t)
+	rpm_dbus_chat(unconfined_t)
+')
+
+optional_policy(`
+	optional_policy(`
+		samba_run_unconfined_net(unconfined_t, unconfined_r)
+	')
+
+	samba_role_notrans(unconfined_r)
+	samba_run_smbcontrol(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	sysnet_run_dhcpc(unconfined_t, unconfined_r)
+	sysnet_dbus_chat_dhcpc(unconfined_t)
+	sysnet_role_transition_dhcpc(unconfined_r)
+')
+
+optional_policy(`
+	usermanage_run_useradd(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	vbetool_run(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	virt_transition_svirt(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	vpn_run(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	webalizer_run(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	wine_run(unconfined_t, unconfined_r)
+')
+
+optional_policy(`
+	xserver_run(unconfined_t, unconfined_r)
+	xserver_manage_home_fonts(unconfined_t)
+')
+
+gen_user(unconfined_u, user, unconfined_r system_r, s0, s0 - mls_systemhigh, mcs_allcats)
+
diff --git a/policy/modules/roles/unprivuser.if b/policy/modules/roles/unprivuser.if
index 3835596..fbca2be 100644
--- a/policy/modules/roles/unprivuser.if
+++ b/policy/modules/roles/unprivuser.if
@@ -1,4 +1,4 @@
-## <summary>Generic unprivileged user role</summary>
+## <summary>Generic unprivileged user</summary>
 
 ########################################
 ## <summary>
diff --git a/policy/modules/roles/unprivuser.te b/policy/modules/roles/unprivuser.te
index 9f6d4c3..cad6364 100644
--- a/policy/modules/roles/unprivuser.te
+++ b/policy/modules/roles/unprivuser.te
@@ -12,12 +12,90 @@ role user_r;
 
 userdom_unpriv_user_template(user)
 
+fs_exec_noxattr(user_t)
+fs_read_hugetlbfs_files(user_t)
+
+storage_read_scsi_generic(user_t)
+storage_write_scsi_generic(user_t)
+
+tunable_policy(`selinuxuser_execmod',`
+	userdom_execmod_user_home_files(user_t)
+')
+
+optional_policy(`
+	abrt_read_cache(user_t)
+')
+
 optional_policy(`
 	apache_role(user_r, user_t)
 ')
 
 optional_policy(`
-	git_role(user_r, user_t)
+	blueman_dbus_chat(user_t)
+')
+
+optional_policy(`
+	bluetooth_role(user_r, user_t)
+')
+
+optional_policy(`
+	colord_dbus_chat(user_t)
+')
+
+optional_policy(`
+	chrome_role(user_r, user_t)
+')
+
+optional_policy(`
+	gnome_role(user_r, user_t)
+')
+
+optional_policy(`
+	irc_role(user_r, user_t)
+')
+
+optional_policy(`
+	oident_manage_user_content(user_t)
+	oident_relabel_user_content(user_t)
+')
+
+optional_policy(`
+	mozilla_run_plugin(user_t, user_r)
+')
+
+optional_policy(`
+	mta_role(user_r, user_t)
+')
+
+optional_policy(`
+	netutils_run_ping_cond(user_t, user_r)
+	netutils_run_traceroute_cond(user_t, user_r)
+')
+
+optional_policy(`
+	polipo_role(user_r, user_t)
+	polipo_named_filetrans_cache_home_dirs(user_t)
+	polipo_named_filetrans_config_home_files(user_t)
+')
+
+optional_policy(`
+	rpm_dontaudit_dbus_chat(user_t)
+')
+
+optional_policy(`
+	rtkit_scheduled(user_t)
+')
+
+optional_policy(`
+	sandbox_transition(user_t, user_r)
+')
+
+optional_policy(`
+	ssh_role_template(user, user_r, user_t)
+')
+
+optional_policy(`
+	git_session_role(user_r, user_t)
 ')
 
 optional_policy(`
@@ -25,6 +103,18 @@ optional_policy(`
 ')
 
 optional_policy(`
+	setroubleshoot_dontaudit_stream_connect(user_t)
+')
+
+#optional_policy(`
+#	telepathy_dbus_session_role(user_r, user_t)
+#')
+
+optional_policy(`
+	usbmuxd_stream_connect(user_t)
+')
+
+optional_policy(`
 	vlock_run(user_t, user_r)
 ')
 
@@ -66,10 +156,6 @@ ifndef(`distro_redhat',`
 	')
 
 	optional_policy(`
-		gnome_role(user_r, user_t)
-	')
-
-	optional_policy(`
 		gpg_role(user_r, user_t)
 	')
 
@@ -102,10 +188,6 @@ ifndef(`distro_redhat',`
 	')
 
 	optional_policy(`
-		mta_role(user_r, user_t)
-	')
-
-	optional_policy(`
 		postgresql_role(user_r, user_t)
 	')
 
@@ -128,7 +210,6 @@ ifndef(`distro_redhat',`
 	optional_policy(`
 		ssh_role_template(user, user_r, user_t)
 	')
-
 	optional_policy(`
 		su_role_template(user, user_r, user_t)
 	')
@@ -161,3 +242,4 @@ ifndef(`distro_redhat',`
 		wireshark_role(user_r, user_t)
 	')
 ')
+
diff --git a/policy/modules/services/postgresql.fc b/policy/modules/services/postgresql.fc
index a26f84f..4e52843 100644
--- a/policy/modules/services/postgresql.fc
+++ b/policy/modules/services/postgresql.fc
@@ -28,9 +28,9 @@ ifdef(`distro_redhat', `
 #
 /var/lib/postgres(ql)?(/.*)? 		gen_context(system_u:object_r:postgresql_db_t,s0)
 
-/var/lib/pgsql/data(/.*)?		gen_context(system_u:object_r:postgresql_db_t,s0)
+/var/lib/pgsql(/.*)?			gen_context(system_u:object_r:postgresql_db_t,s0)
 /var/lib/pgsql/logfile(/.*)?		gen_context(system_u:object_r:postgresql_log_t,s0)
-/var/lib/pgsql/pgstartup\.log		gen_context(system_u:object_r:postgresql_log_t,s0)
+/var/lib/pgsql/.*\.log			gen_context(system_u:object_r:postgresql_log_t,s0)
 
 /var/lib/sepgsql(/.*)?			gen_context(system_u:object_r:postgresql_db_t,s0)
 /var/lib/sepgsql/pgstartup\.log	--	gen_context(system_u:object_r:postgresql_log_t,s0)
@@ -45,4 +45,4 @@ ifdef(`distro_redhat', `
 
 /var/run/postgresql(/.*)?		gen_context(system_u:object_r:postgresql_var_run_t,s0)
 
-/var/run/postmaster.*			gen_context(system_u:object_r:postgresql_var_run_t,s0)
+#/var/run/postmaster.*			gen_context(system_u:object_r:postgresql_var_run_t,s0)
diff --git a/policy/modules/services/postgresql.if b/policy/modules/services/postgresql.if
index ecef19f..fcbc25a 100644
--- a/policy/modules/services/postgresql.if
+++ b/policy/modules/services/postgresql.if
@@ -10,7 +10,7 @@
 ##	</summary>
 ## </param>
 ## <param name="user_domain">
-## 	<summary>
+##	<summary>
 ##	The type of the user domain.
 ##	</summary>
 ## </param>
@@ -54,15 +54,6 @@ interface(`postgresql_role',`
 	# Client local policy
 	#
 
-	tunable_policy(`sepgsql_enable_users_ddl',`
-		allow $2 user_sepgsql_schema_t:db_schema { create drop setattr };
-		allow $2 user_sepgsql_table_t:db_table { create drop setattr };
-		allow $2 user_sepgsql_table_t:db_column { create drop setattr };
-		allow $2 user_sepgsql_sysobj_t:db_tuple { update insert delete };
-		allow $2 user_sepgsql_seq_t:db_sequence { create drop setattr set_value };
-		allow $2 user_sepgsql_view_t:db_view { create drop setattr };
-		allow $2 user_sepgsql_proc_exec_t:db_procedure { create drop setattr };
-	')
 
 	allow $2 user_sepgsql_schema_t:db_schema { getattr search add_name remove_name };
 	type_transition $2 sepgsql_database_type:db_schema user_sepgsql_schema_t;
@@ -94,6 +85,16 @@ interface(`postgresql_role',`
 
 	allow $2 sepgsql_trusted_proc_t:process transition;
 	type_transition $2 sepgsql_trusted_proc_exec_t:process sepgsql_trusted_proc_t;
+
+	tunable_policy(`sepgsql_enable_users_ddl',`
+		allow $2 user_sepgsql_schema_t:db_schema { create drop setattr };
+		allow $2 user_sepgsql_table_t:db_table { create drop setattr };
+		allow $2 user_sepgsql_table_t:db_column { create drop setattr };
+		allow $2 user_sepgsql_sysobj_t:db_tuple { update insert delete };
+		allow $2 user_sepgsql_seq_t:db_sequence { create drop setattr set_value };
+		allow $2 user_sepgsql_view_t:db_view { create drop setattr };
+		allow $2 user_sepgsql_proc_exec_t:db_procedure { create drop setattr };
+	')
 ')
 
 ########################################
@@ -312,7 +313,7 @@ interface(`postgresql_search_db',`
 		type postgresql_db_t;
 	')
 
-	allow $1 postgresql_db_t:dir search;
+	allow $1 postgresql_db_t:dir search_dir_perms;
 ')
 
 ########################################
@@ -324,14 +325,16 @@ interface(`postgresql_search_db',`
 ##	Domain allowed access.
 ##	</summary>
 ## </param>
+#
 interface(`postgresql_manage_db',`
 	gen_require(`
 		type postgresql_db_t;
 	')
 
-	allow $1 postgresql_db_t:dir rw_dir_perms;
-	allow $1 postgresql_db_t:file rw_file_perms;
-	allow $1 postgresql_db_t:lnk_file { getattr read };
+	files_search_var_lib($1)
+	manage_dirs_pattern($1, postgresql_db_t, postgresql_db_t)
+	manage_files_pattern($1, postgresql_db_t, postgresql_db_t)
+	manage_lnk_files_pattern($1, postgresql_db_t, postgresql_db_t)
 ')
 
 ########################################
@@ -354,6 +357,24 @@ interface(`postgresql_domtrans',`
 
 ######################################
 ## <summary>
+##	Execute Postgresql in the caller domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`postgresql_exec',`
+	gen_require(`
+		type  postgresql_exec_t;
+	')
+
+	can_exec($1, postgresql_exec_t)
+')
+
+######################################
+## <summary>
 ##	Allow domain to signal postgresql
 ## </summary>
 ## <param name="domain">
@@ -421,7 +442,6 @@ interface(`postgresql_tcp_connect',`
 ##	Domain allowed access.
 ##	</summary>
 ## </param>
-## <rolecap/>
 #
 interface(`postgresql_stream_connect',`
 	gen_require(`
@@ -429,10 +449,8 @@ interface(`postgresql_stream_connect',`
 	')
 
 	files_search_pids($1)
-	allow $1 postgresql_t:unix_stream_socket connectto;
-	allow $1 postgresql_var_run_t:sock_file write;
-	# Some versions of postgresql put the sock file in /tmp
-	allow $1 postgresql_tmp_t:sock_file write;
+	files_search_tmp($1)
+	stream_connect_pattern($1, { postgresql_var_run_t postgresql_tmp_t }, { postgresql_var_run_t postgresql_tmp_t }, postgresql_t)
 ')
 
 ########################################
@@ -515,7 +533,6 @@ interface(`postgresql_unpriv_client',`
 	allow $1 unpriv_sepgsql_view_t:db_view { getattr expand };
 	type_transition $1 sepgsql_schema_type:db_view unpriv_sepgsql_view_t;
 
-
 	tunable_policy(`sepgsql_enable_users_ddl',`
 		allow $1 unpriv_sepgsql_schema_t:db_schema { create drop setattr };
 		allow $1 unpriv_sepgsql_table_t:db_table { create drop setattr };
@@ -564,33 +581,38 @@ interface(`postgresql_unconfined',`
 #
 interface(`postgresql_admin',`
 	gen_require(`
-		attribute sepgsql_admin_type;
-		attribute sepgsql_client_type;
-
-		type postgresql_t, postgresql_var_run_t;
-		type postgresql_tmp_t, postgresql_db_t;
-		type postgresql_etc_t, postgresql_log_t;
-		type postgresql_initrc_exec_t;
+		attribute sepgsql_admin_type, sepgsql_client_type;
+		type postgresql_t, postgresql_var_run_t, postgresql_initrc_exec_t;
+		type postgresql_tmp_t, postgresql_db_t, postgresql_log_t;
+		type postgresql_etc_t;
 	')
 
 	typeattribute $1 sepgsql_admin_type;
 
-	allow $1 postgresql_t:process { ptrace signal_perms };
+	allow $1 postgresql_t:process signal_perms;
 	ps_process_pattern($1, postgresql_t)
+	tunable_policy(`deny_ptrace',`',`
+		allow $1 postgresql_t:process ptrace;
+	')
 
 	init_labeled_script_domtrans($1, postgresql_initrc_exec_t)
 	domain_system_change_exemption($1)
 	role_transition $2 postgresql_initrc_exec_t system_r;
 	allow $2 system_r;
 
+	files_list_pids($1)
 	admin_pattern($1, postgresql_var_run_t)
 
+	files_list_var_lib($1)
 	admin_pattern($1, postgresql_db_t)
 
+	files_list_etc($1)
 	admin_pattern($1, postgresql_etc_t)
 
+	logging_list_logs($1)
 	admin_pattern($1, postgresql_log_t)
 
+	files_list_tmp($1)
 	admin_pattern($1, postgresql_tmp_t)
 
 	postgresql_tcp_connect($1)
diff --git a/policy/modules/services/postgresql.te b/policy/modules/services/postgresql.te
index 6b336e7..d89449c 100644
--- a/policy/modules/services/postgresql.te
+++ b/policy/modules/services/postgresql.te
@@ -19,9 +19,9 @@ gen_require(`
 #
 
 ## <desc>
-## <p>
-## Allow unprived users to execute DDL statement
-## </p>
+##	<p>
+##	Allow unprivileged users to execute DDL statement
+##	</p>
 ## </desc>
 gen_tunable(sepgsql_enable_users_ddl, true)
 
@@ -233,7 +233,7 @@ allow postgresql_t self:shm create_shm_perms;
 allow postgresql_t self:tcp_socket create_stream_socket_perms;
 allow postgresql_t self:udp_socket create_stream_socket_perms;
 allow postgresql_t self:unix_dgram_socket create_socket_perms;
-allow postgresql_t self:unix_stream_socket create_stream_socket_perms;
+allow postgresql_t self:unix_stream_socket { connectto create_stream_socket_perms };
 allow postgresql_t self:netlink_selinux_socket create_socket_perms;
 tunable_policy(`sepgsql_transmit_client_label',`
 	allow postgresql_t self:process { setsockcreate };
@@ -275,7 +275,7 @@ allow postgresql_t postgresql_etc_t:dir list_dir_perms;
 read_files_pattern(postgresql_t, postgresql_etc_t, postgresql_etc_t)
 read_lnk_files_pattern(postgresql_t, postgresql_etc_t, postgresql_etc_t)
 
-allow postgresql_t postgresql_exec_t:lnk_file { getattr read };
+allow postgresql_t postgresql_exec_t:lnk_file read_lnk_file_perms;
 can_exec(postgresql_t, postgresql_exec_t )
 
 allow postgresql_t postgresql_lock_t:file manage_file_perms;
@@ -341,8 +341,7 @@ domain_dontaudit_list_all_domains_state(postgresql_t)
 domain_use_interactive_fds(postgresql_t)
 
 files_dontaudit_search_home(postgresql_t)
-files_manage_etc_files(postgresql_t)
-files_search_etc(postgresql_t)
+files_read_etc_files(postgresql_t)
 files_read_etc_runtime_files(postgresql_t)
 files_read_usr_files(postgresql_t)
 
@@ -366,7 +365,7 @@ optional_policy(`
 	mta_getattr_spool(postgresql_t)
 ')
 
-tunable_policy(`allow_execmem',`
+tunable_policy(`deny_execmem',`',`
 	allow postgresql_t self:process execmem;
 ')
 
diff --git a/policy/modules/services/ssh.fc b/policy/modules/services/ssh.fc
index 078bcd7..8ed5b99 100644
--- a/policy/modules/services/ssh.fc
+++ b/policy/modules/services/ssh.fc
@@ -1,9 +1,20 @@
 HOME_DIR/\.ssh(/.*)?			gen_context(system_u:object_r:ssh_home_t,s0)
+HOME_DIR/\.shosts			gen_context(system_u:object_r:ssh_home_t,s0)
+
+/var/lib/amanda/\.ssh(/.*)?		gen_context(system_u:object_r:ssh_home_t,s0)
+/var/lib/gitolite/\.ssh(/.*)?	gen_context(system_u:object_r:ssh_home_t,s0)
+/var/lib/gitolite3/\.ssh(/.*)?	gen_context(system_u:object_r:ssh_home_t,s0)
+/var/lib/nocpulse/\.ssh(/.*)?	gen_context(system_u:object_r:ssh_home_t,s0)
+
+/etc/rc\.d/init\.d/sshd        --  gen_context(system_u:object_r:sshd_initrc_exec_t,s0)
 
 /etc/ssh/primes			--	gen_context(system_u:object_r:sshd_key_t,s0)
 /etc/ssh/ssh_host_key 		--	gen_context(system_u:object_r:sshd_key_t,s0)
 /etc/ssh/ssh_host_dsa_key	--	gen_context(system_u:object_r:sshd_key_t,s0)
 /etc/ssh/ssh_host_rsa_key	--	gen_context(system_u:object_r:sshd_key_t,s0)
+/etc/ssh/ssh_host_key.pub	--	gen_context(system_u:object_r:sshd_key_t,s0)
+/etc/ssh/ssh_host_dsa_key.pub	--	gen_context(system_u:object_r:sshd_key_t,s0)
+/etc/ssh/ssh_host_rsa_key.pub	--	gen_context(system_u:object_r:sshd_key_t,s0)
 
 /usr/bin/ssh			--	gen_context(system_u:object_r:ssh_exec_t,s0)
 /usr/bin/ssh-agent		--	gen_context(system_u:object_r:ssh_agent_exec_t,s0)
@@ -14,3 +25,7 @@ HOME_DIR/\.ssh(/.*)?			gen_context(system_u:object_r:ssh_home_t,s0)
 /usr/sbin/sshd			--	gen_context(system_u:object_r:sshd_exec_t,s0)
 
 /var/run/sshd\.init\.pid	--	gen_context(system_u:object_r:sshd_var_run_t,s0)
+/var/run/sshd\.pid		--	gen_context(system_u:object_r:sshd_var_run_t,s0)
+
+/root/\.ssh(/.*)?			gen_context(system_u:object_r:ssh_home_t,s0)
+/root/\.shosts				gen_context(system_u:object_r:ssh_home_t,s0)
diff --git a/policy/modules/services/ssh.if b/policy/modules/services/ssh.if
index fe0c682..93ec53f 100644
--- a/policy/modules/services/ssh.if
+++ b/policy/modules/services/ssh.if
@@ -32,10 +32,11 @@
 ## </param>
 #
 template(`ssh_basic_client_template',`
-
 	gen_require(`
 		attribute ssh_server;
 		type ssh_exec_t, sshd_key_t, sshd_tmp_t;
+		type ssh_keysign_exec_t, ssh_keysign_t;
+		type ssh_home_t;
 	')
 
 	##############################
@@ -47,10 +48,6 @@ template(`ssh_basic_client_template',`
 	application_domain($1_ssh_t, ssh_exec_t)
 	role $3 types $1_ssh_t;
 
-	type $1_ssh_home_t;
-	files_type($1_ssh_home_t)
-	typealias $1_ssh_home_t alias $1_home_ssh_t;
-
 	##############################
 	#
 	# Client local policy
@@ -89,22 +86,26 @@ template(`ssh_basic_client_template',`
 	# or "regular" (not special like sshd_extern_t) servers
 	allow $2 ssh_server:unix_stream_socket rw_stream_socket_perms;
 
+	# derived domain can execute ssh-keysign
+	domtrans_pattern($1_ssh_t, ssh_keysign_exec_t, ssh_keysign_t)
+	role $3 types ssh_keysign_t;
+
 	# allow ps to show ssh
 	ps_process_pattern($2, $1_ssh_t)
 
 	# user can manage the keys and config
-	manage_files_pattern($2, $1_ssh_home_t, $1_ssh_home_t)
-	manage_lnk_files_pattern($2, $1_ssh_home_t, $1_ssh_home_t)
-	manage_sock_files_pattern($2, $1_ssh_home_t, $1_ssh_home_t)
+	manage_files_pattern($2, ssh_home_t, ssh_home_t)
+	manage_lnk_files_pattern($2, ssh_home_t, ssh_home_t)
+	manage_sock_files_pattern($2, ssh_home_t, ssh_home_t)
 
 	# ssh client can manage the keys and config
-	manage_files_pattern($1_ssh_t, $1_ssh_home_t, $1_ssh_home_t)
-	read_lnk_files_pattern($1_ssh_t, $1_ssh_home_t, $1_ssh_home_t)
+	manage_files_pattern($1_ssh_t, ssh_home_t, ssh_home_t)
+	read_lnk_files_pattern($1_ssh_t, ssh_home_t, ssh_home_t)
 
 	# ssh servers can read the user keys and config
-	allow ssh_server $1_ssh_home_t:dir list_dir_perms;
-	read_files_pattern(ssh_server, $1_ssh_home_t, $1_ssh_home_t)
-	read_lnk_files_pattern(ssh_server, $1_ssh_home_t, $1_ssh_home_t)
+	allow ssh_server ssh_home_t:dir list_dir_perms;
+	read_files_pattern(ssh_server, ssh_home_t, ssh_home_t)
+	read_lnk_files_pattern(ssh_server, ssh_home_t, ssh_home_t)
 
 	kernel_read_kernel_sysctls($1_ssh_t)
 	kernel_read_system_state($1_ssh_t)
@@ -116,6 +117,8 @@ template(`ssh_basic_client_template',`
 	corenet_tcp_sendrecv_all_ports($1_ssh_t)
 	corenet_tcp_connect_ssh_port($1_ssh_t)
 	corenet_sendrecv_ssh_client_packets($1_ssh_t)
+	corenet_tcp_bind_generic_node($1_ssh_t)
+	corenet_tcp_bind_all_unreserved_ports($1_ssh_t)
 
 	dev_read_urand($1_ssh_t)
 
@@ -148,6 +151,29 @@ template(`ssh_basic_client_template',`
 	')
 ')
 
+######################################
+## <summary>
+##  The template to define a domain to which sshd dyntransition.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  The prefix of the dyntransition domain
+##  </summary>
+## </param>
+#
+template(`ssh_dyntransition_domain_template',`
+	gen_require(`
+		attribute ssh_dyntransition_domain;
+	')
+
+	type $1, ssh_dyntransition_domain;
+	domain_type($1)
+	role system_r types $1;
+	
+	optional_policy(`
+		ssh_dyntransition_to($1)
+	')
+')
 #######################################
 ## <summary>
 ##	The template to define a ssh server.
@@ -168,7 +194,7 @@ template(`ssh_basic_client_template',`
 ##	</summary>
 ## </param>
 #
-template(`ssh_server_template', `
+template(`ssh_server_template',`
 	type $1_t, ssh_server;
 	auth_login_pgm_domain($1_t)
 
@@ -181,16 +207,18 @@ template(`ssh_server_template', `
 	type $1_var_run_t;
 	files_pid_file($1_var_run_t)
 
-	allow $1_t self:capability { kill sys_chroot sys_nice sys_resource chown dac_override fowner fsetid setgid setuid sys_tty_config };
+	allow $1_t self:capability { kill sys_chroot sys_nice sys_resource chown dac_override fowner fsetid net_admin setgid setuid sys_tty_config };
 	allow $1_t self:fifo_file rw_fifo_file_perms;
-	allow $1_t self:process { signal getsched setsched setrlimit setexec setkeycreate };
+	allow $1_t self:process { getcap signal getsched setsched setrlimit setexec };
+	allow $1_t self:process { signal getcap getsched setsched setrlimit setexec };
 	allow $1_t self:tcp_socket create_stream_socket_perms;
 	allow $1_t self:udp_socket create_socket_perms;
+	allow $1_t self:tun_socket { create_socket_perms relabelfrom relabelto };
 	# ssh agent connections:
 	allow $1_t self:unix_stream_socket create_stream_socket_perms;
 	allow $1_t self:shm create_shm_perms;
 
-	allow $1_t $1_devpts_t:chr_file { rw_chr_file_perms setattr getattr relabelfrom };
+	allow $1_t $1_devpts_t:chr_file { rw_chr_file_perms setattr_chr_file_perms getattr_chr_file_perms relabelfrom };
 	term_create_pty($1_t, $1_devpts_t)
 
 	manage_files_pattern($1_t, $1_tmpfs_t, $1_tmpfs_t)
@@ -206,6 +234,7 @@ template(`ssh_server_template', `
 
 	kernel_read_kernel_sysctls($1_t)
 	kernel_read_network_state($1_t)
+	kernel_request_load_module($1_t)
 
 	corenet_all_recvfrom_unlabeled($1_t)
 	corenet_all_recvfrom_netlabel($1_t)
@@ -220,10 +249,13 @@ template(`ssh_server_template', `
 	corenet_tcp_bind_generic_node($1_t)
 	corenet_udp_bind_generic_node($1_t)
 	corenet_tcp_bind_ssh_port($1_t)
-	corenet_tcp_connect_all_ports($1_t)
 	corenet_sendrecv_ssh_server_packets($1_t)
+	# -R qualifier
+	corenet_sendrecv_ssh_server_packets($1_t)
+	# tunnel feature and -w (net_admin capability also)
+	corenet_rw_tun_tap_dev($1_t)
 
-	fs_dontaudit_getattr_all_fs($1_t)
+	fs_getattr_all_fs($1_t)
 
 	auth_rw_login_records($1_t)
 	auth_rw_faillog($1_t)
@@ -234,6 +266,7 @@ template(`ssh_server_template', `
 	corecmd_getattr_bin_files($1_t)
 
 	domain_interactive_fd($1_t)
+	domain_dyntrans_type($1_t)
 
 	files_read_etc_files($1_t)
 	files_read_etc_runtime_files($1_t)
@@ -243,33 +276,33 @@ template(`ssh_server_template', `
 
 	miscfiles_read_localization($1_t)
 
-	userdom_create_all_users_keys($1_t)
 	userdom_dontaudit_relabelfrom_user_ptys($1_t)
-	userdom_search_user_home_dirs($1_t)
+	userdom_read_user_home_content_files($1_t)
 
 	# Allow checking users mail at login
 	optional_policy(`
 		mta_getattr_spool($1_t)
 	')
 
-	tunable_policy(`use_nfs_home_dirs',`
-		fs_read_nfs_files($1_t)
-		fs_read_nfs_symlinks($1_t)
-	')
-
-	tunable_policy(`use_samba_home_dirs',`
-		fs_read_cifs_files($1_t)
-	')
+	userdom_home_manager($1_t)
 
 	optional_policy(`
 		kerberos_use($1_t)
-		kerberos_manage_host_rcache($1_t)
+		#kerberos_manage_host_rcache($1_t)
 	')
 
 	optional_policy(`
 		files_read_var_lib_symlinks($1_t)
 		nx_spec_domtrans_server($1_t)
 	')
+
+	optional_policy(`
+		rlogin_read_home_content($1_t)
+	')
+
+	optional_policy(`
+		shutdown_getattr_exec_files($1_t)
+	')
 ')
 
 ########################################
@@ -292,14 +325,15 @@ template(`ssh_server_template', `
 ##	User domain for the role
 ##	</summary>
 ## </param>
+## <rolecap/>
 #
 template(`ssh_role_template',`
 	gen_require(`
 		attribute ssh_server, ssh_agent_type;
-
 		type ssh_t, ssh_exec_t, ssh_tmpfs_t, ssh_home_t;
 		type ssh_agent_exec_t, ssh_keysign_t, ssh_tmpfs_t;
 		type ssh_agent_tmp_t;
+		type cache_home_t;
 	')
 
 	##############################
@@ -328,17 +362,20 @@ template(`ssh_role_template',`
 
 	# allow ps to show ssh
 	ps_process_pattern($3, ssh_t)
-	allow $3 ssh_t:process signal;
+	allow $3 ssh_t:process signal_perms;
 
 	# for rsync
 	allow ssh_t $3:unix_stream_socket rw_socket_perms;
 	allow ssh_t $3:unix_stream_socket connectto;
+	allow ssh_t $3:key manage_key_perms;
+	allow $3 ssh_t:key read;
 
 	# user can manage the keys and config
 	manage_files_pattern($3, ssh_home_t, ssh_home_t)
 	manage_lnk_files_pattern($3, ssh_home_t, ssh_home_t)
 	manage_sock_files_pattern($3, ssh_home_t, ssh_home_t)
 	userdom_search_user_home_dirs($1_t)
+	userdom_manage_tmp_role($2, ssh_t)
 
 	##############################
 	#
@@ -358,9 +395,10 @@ template(`ssh_role_template',`
 
 	# for ssh-add
 	stream_connect_pattern($3, ssh_agent_tmp_t, ssh_agent_tmp_t, $1_ssh_agent_t)
+	stream_connect_pattern($3, cache_home_t, cache_home_t, $1_ssh_agent_t)
 
 	# Allow the user shell to signal the ssh program.
-	allow $3 $1_ssh_agent_t:process signal;
+	allow $3 $1_ssh_agent_t:process signal_perms;
 
 	# allow ps to show ssh
 	ps_process_pattern($3, $1_ssh_agent_t)
@@ -382,7 +420,6 @@ template(`ssh_role_template',`
 
 	files_read_etc_files($1_ssh_agent_t)
 	files_read_etc_runtime_files($1_ssh_agent_t)
-	files_search_home($1_ssh_agent_t)
 
 	libs_read_lib_files($1_ssh_agent_t)
 
@@ -394,28 +431,15 @@ template(`ssh_role_template',`
 	seutil_dontaudit_read_config($1_ssh_agent_t)
 
 	# Write to the user domain tty.
-	userdom_use_user_terminals($1_ssh_agent_t)
+	userdom_use_inherited_user_terminals($1_ssh_agent_t)
 
 	# for the transition back to normal privs upon exec
 	userdom_search_user_home_content($1_ssh_agent_t)
 	userdom_user_home_domtrans($1_ssh_agent_t, $3)
-	allow $3 $1_ssh_agent_t:fd use;
-	allow $3 $1_ssh_agent_t:fifo_file rw_file_perms;
-	allow $3 $1_ssh_agent_t:process sigchld;
 
-	tunable_policy(`use_nfs_home_dirs',`
-		fs_manage_nfs_files($1_ssh_agent_t)
+	ssh_exec_keygen($3)
 
-		# transition back to normal privs upon exec
-		fs_nfs_domtrans($1_ssh_agent_t, $3)
-	')
-
-	tunable_policy(`use_samba_home_dirs',`
-		fs_manage_cifs_files($1_ssh_agent_t)
-
-		# transition back to normal privs upon exec
-		fs_cifs_domtrans($1_ssh_agent_t, $3)
-	')
+	userdom_home_manager($1_ssh_agent_t)
 
 	optional_policy(`
 		nis_use_ypbind($1_ssh_agent_t)
@@ -496,8 +520,27 @@ interface(`ssh_read_pipes',`
 		type sshd_t;
 	')
 
-	allow $1 sshd_t:fifo_file { getattr read };
+	allow $1 sshd_t:fifo_file read_fifo_file_perms;
+')
+
+######################################
+## <summary>
+##      Read and write ssh server unix dgram sockets.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`ssh_rw_dgram_sockets',`
+    gen_require(`
+        type sshd_t;
+    ')
+
+    allow $1 sshd_t:unix_dgram_socket rw_stream_socket_perms;
 ')
+
 ########################################
 ## <summary>
 ##	Read and write a ssh server unnamed pipe.
@@ -513,7 +556,7 @@ interface(`ssh_rw_pipes',`
 		type sshd_t;
 	')
 
-	allow $1 sshd_t:fifo_file { write read getattr ioctl };
+	allow $1 sshd_t:fifo_file rw_inherited_fifo_file_perms;
 ')
 
 ########################################
@@ -605,6 +648,24 @@ interface(`ssh_domtrans',`
 
 ########################################
 ## <summary>
+##	Execute sshd server in the sshd domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`ssh_initrc_domtrans',`
+	gen_require(`
+		type sshd_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, sshd_initrc_exec_t)
+')
+
+########################################
+## <summary>
 ##	Execute the ssh client in the caller domain.
 ## </summary>
 ## <param name="domain">
@@ -637,7 +698,7 @@ interface(`ssh_setattr_key_files',`
 		type sshd_key_t;
 	')
 
-	allow $1 sshd_key_t:file setattr;
+	allow $1 sshd_key_t:file setattr_file_perms;
 	files_search_pids($1)
 ')
 
@@ -662,6 +723,42 @@ interface(`ssh_agent_exec',`
 
 ########################################
 ## <summary>
+##	Getattr ssh home directory
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`ssh_getattr_user_home_dir',`
+	gen_require(`
+		type ssh_home_t;
+	')
+
+	allow $1 ssh_home_t:dir getattr;
+')
+
+########################################
+## <summary>
+##	Dontaudit search ssh home directory
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`ssh_dontaudit_search_user_home_dir',`
+	gen_require(`
+		type ssh_home_t;
+	')
+
+	dontaudit $1 ssh_home_t:dir search_dir_perms;
+')
+
+########################################
+## <summary>
 ##	Read ssh home directory content
 ## </summary>
 ## <param name="domain">
@@ -701,6 +798,50 @@ interface(`ssh_domtrans_keygen',`
 
 ########################################
 ## <summary>
+##	Execute the ssh key generator in the caller domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+#
+interface(`ssh_exec_keygen',`
+	gen_require(`
+		type ssh_keygen_exec_t;
+	')
+
+	can_exec($1, ssh_keygen_exec_t)
+')
+
+#######################################
+## <summary>
+##  Execute ssh-keygen in the iptables domain, and
+##  allow the specified role the ssh-keygen domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed to transition.
+##  </summary>
+## </param>
+## <param name="role">
+##  <summary>
+##  Role allowed access.
+##  </summary>
+## </param>
+## <rolecap/>
+#
+interface(`ssh_run_keygen',`
+    gen_require(`
+        type ssh_keygen_t;
+    ')
+
+	role $2 types ssh_keygen_t;
+	ssh_domtrans_keygen($1)
+')
+
+########################################
+## <summary>
 ##	Read ssh server keys
 ## </summary>
 ## <param name="domain">
@@ -714,7 +855,7 @@ interface(`ssh_dontaudit_read_server_keys',`
 		type sshd_key_t;
 	')
 
-	dontaudit $1 sshd_key_t:file { getattr read };
+	dontaudit $1 sshd_key_t:file read_file_perms;
 ')
 
 ######################################
@@ -754,3 +895,64 @@ interface(`ssh_delete_tmp',`
 	files_search_tmp($1)
 	delete_files_pattern($1, sshd_tmp_t, sshd_tmp_t)
 ')
+
+#####################################
+## <summary>
+##  Allow domain dyntransition to chroot_user_t domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`ssh_dyntransition_to',`
+    gen_require(`
+        type sshd_t;
+    ')
+
+    allow sshd_t $1:process dyntransition;
+    allow $1 sshd_t:process sigchld;
+    allow sshd_t $1:process { getattr sigkill sigstop signull signal };
+')
+
+########################################
+## <summary>
+##	Create .ssh directory in the /root directory
+##	with an correct label.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`ssh_filetrans_admin_home_content',`
+	gen_require(`
+		type ssh_home_t;
+	')
+
+	userdom_admin_home_dir_filetrans($1, ssh_home_t, dir, ".ssh")
+	userdom_admin_home_dir_filetrans($1, ssh_home_t, dir, ".shosts")
+')
+
+########################################
+## <summary>
+##	Create .ssh directory in the user home directory
+##	with an correct label.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`ssh_filetrans_home_content',`
+	
+	gen_require(`
+		type ssh_home_t;
+	')
+
+	userdom_user_home_dir_filetrans($1, ssh_home_t, dir, ".ssh")
+	userdom_user_home_dir_filetrans($1, ssh_home_t, dir, ".shosts")
+')
diff --git a/policy/modules/services/ssh.te b/policy/modules/services/ssh.te
index b17e27a..f87cce0 100644
--- a/policy/modules/services/ssh.te
+++ b/policy/modules/services/ssh.te
@@ -6,26 +6,37 @@ policy_module(ssh, 2.3.0)
 #
 
 ## <desc>
-## <p>
-## allow host key based authentication
-## </p>
+##	<p>
+##	allow host key based authentication
+##	</p>
 ## </desc>
-gen_tunable(allow_ssh_keysign, false)
+gen_tunable(ssh_keysign, false)
+
+## <desc>
+##	<p>
+##	Allow ssh logins as sysadm_r:sysadm_t
+##	</p>
+## </desc>
+gen_tunable(ssh_sysadm_login, false)
 
 ## <desc>
 ## <p>
-## Allow ssh logins as sysadm_r:sysadm_t
+## Allow ssh with chroot env to read and write files 
+## in the user home directories
 ## </p>
 ## </desc>
-gen_tunable(ssh_sysadm_login, false)
+gen_tunable(ssh_chroot_rw_homedirs, false)
 
+attribute ssh_dyntransition_domain;
 attribute ssh_server;
 attribute ssh_agent_type;
 
+ssh_dyntransition_domain_template(chroot_user_t)
+ssh_dyntransition_domain_template(sshd_sandbox_t)
+
 type ssh_keygen_t;
 type ssh_keygen_exec_t;
 init_system_domain(ssh_keygen_t, ssh_keygen_exec_t)
-role system_r types ssh_keygen_t;
 
 type sshd_exec_t;
 corecmd_executable_file(sshd_exec_t)
@@ -33,17 +44,12 @@ corecmd_executable_file(sshd_exec_t)
 ssh_server_template(sshd)
 init_daemon_domain(sshd_t, sshd_exec_t)
 
+type sshd_initrc_exec_t;
+init_script_file(sshd_initrc_exec_t)
+
 type sshd_key_t;
 files_type(sshd_key_t)
 
-type sshd_tmp_t;
-files_tmp_file(sshd_tmp_t)
-files_poly_parent(sshd_tmp_t)
-
-ifdef(`enable_mcs',`
-	init_ranged_daemon_domain(sshd_t, sshd_exec_t, s0 - mcs_systemhigh)
-')
-
 type ssh_t;
 type ssh_exec_t;
 typealias ssh_t alias { user_ssh_t staff_ssh_t sysadm_ssh_t };
@@ -73,6 +79,11 @@ type ssh_home_t;
 typealias ssh_home_t alias { home_ssh_t user_ssh_home_t user_home_ssh_t staff_home_ssh_t sysadm_home_ssh_t };
 typealias ssh_home_t alias { auditadm_home_ssh_t secadm_home_ssh_t };
 userdom_user_home_content(ssh_home_t)
+files_poly_parent(ssh_home_t)
+
+ifdef(`enable_mcs',`
+	init_ranged_daemon_domain(sshd_t, sshd_exec_t, s0 - mcs_systemhigh)
+')
 
 ##############################
 #
@@ -83,6 +94,7 @@ allow ssh_t self:capability { setuid setgid dac_override dac_read_search };
 allow ssh_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
 allow ssh_t self:fd use;
 allow ssh_t self:fifo_file rw_fifo_file_perms;
+allow ssh_t self:key read;
 allow ssh_t self:unix_dgram_socket { create_socket_perms sendto };
 allow ssh_t self:unix_stream_socket { create_stream_socket_perms connectto };
 allow ssh_t self:shm create_shm_perms;
@@ -90,15 +102,11 @@ allow ssh_t self:sem create_sem_perms;
 allow ssh_t self:msgq create_msgq_perms;
 allow ssh_t self:msg { send receive };
 allow ssh_t self:tcp_socket create_stream_socket_perms;
+can_exec(ssh_t, ssh_exec_t)
 
 # Read the ssh key file.
 allow ssh_t sshd_key_t:file read_file_perms;
 
-# Access the ssh temporary files.
-allow ssh_t sshd_tmp_t:dir manage_dir_perms;
-allow ssh_t sshd_tmp_t:file manage_file_perms;
-files_tmp_filetrans(ssh_t, sshd_tmp_t, { file dir })
-
 manage_files_pattern(ssh_t, ssh_tmpfs_t, ssh_tmpfs_t)
 manage_lnk_files_pattern(ssh_t, ssh_tmpfs_t, ssh_tmpfs_t)
 manage_fifo_files_pattern(ssh_t, ssh_tmpfs_t, ssh_tmpfs_t)
@@ -108,20 +116,26 @@ fs_tmpfs_filetrans(ssh_t, ssh_tmpfs_t, { dir file lnk_file sock_file fifo_file }
 manage_dirs_pattern(ssh_t, ssh_home_t, ssh_home_t)
 manage_sock_files_pattern(ssh_t, ssh_home_t, ssh_home_t)
 userdom_user_home_dir_filetrans(ssh_t, ssh_home_t, { dir sock_file })
+userdom_read_all_users_keys(ssh_t)
+userdom_stream_connect(ssh_t)
+userdom_search_admin_dir(sshd_t)
+userdom_admin_home_dir_filetrans(ssh_t, ssh_home_t, { dir sock_file })
 
 # Allow the ssh program to communicate with ssh-agent.
 stream_connect_pattern(ssh_t, ssh_agent_tmp_t, ssh_agent_tmp_t, ssh_agent_type)
 
 allow ssh_t sshd_t:unix_stream_socket connectto;
+allow ssh_t sshd_t:peer recv;
 
 # ssh client can manage the keys and config
 manage_files_pattern(ssh_t, ssh_home_t, ssh_home_t)
 read_lnk_files_pattern(ssh_t, ssh_home_t, ssh_home_t)
 
 # ssh servers can read the user keys and config
-allow ssh_server ssh_home_t:dir list_dir_perms;
-read_files_pattern(ssh_server, ssh_home_t, ssh_home_t)
-read_lnk_files_pattern(ssh_server, ssh_home_t, ssh_home_t)
+manage_dirs_pattern(ssh_server, ssh_home_t, ssh_home_t)
+manage_files_pattern(ssh_server, ssh_home_t, ssh_home_t)
+userdom_user_home_dir_filetrans(ssh_server, ssh_home_t, dir)
+userdom_admin_home_dir_filetrans(ssh_server, ssh_home_t, dir)
 
 kernel_read_kernel_sysctls(ssh_t)
 kernel_read_system_state(ssh_t)
@@ -133,7 +147,11 @@ corenet_tcp_sendrecv_generic_node(ssh_t)
 corenet_tcp_sendrecv_all_ports(ssh_t)
 corenet_tcp_connect_ssh_port(ssh_t)
 corenet_sendrecv_ssh_client_packets(ssh_t)
+corenet_tcp_bind_generic_node(ssh_t)
+#corenet_tcp_bind_all_unreserved_ports(ssh_t)
+corenet_rw_tun_tap_dev(ssh_t)
 
+dev_read_rand(ssh_t)
 dev_read_urand(ssh_t)
 
 fs_getattr_all_fs(ssh_t)
@@ -157,37 +175,36 @@ logging_read_generic_logs(ssh_t)
 auth_use_nsswitch(ssh_t)
 
 miscfiles_read_localization(ssh_t)
+miscfiles_read_generic_certs(ssh_t)
 
 seutil_read_config(ssh_t)
 
 userdom_dontaudit_list_user_home_dirs(ssh_t)
 userdom_search_user_home_dirs(ssh_t)
+userdom_search_admin_dir(ssh_t)
 # Write to the user domain tty.
-userdom_use_user_terminals(ssh_t)
-# needs to read krb tgt
+userdom_use_inherited_user_terminals(ssh_t)
+# needs to read krb/write tgt
 userdom_read_user_tmp_files(ssh_t)
-
-tunable_policy(`allow_ssh_keysign',`
-	domain_auto_trans(ssh_t, ssh_keysign_exec_t, ssh_keysign_t)
-	allow ssh_keysign_t ssh_t:fd use;
-	allow ssh_keysign_t ssh_t:process sigchld;
-	allow ssh_keysign_t ssh_t:fifo_file rw_file_perms;
-')
-
-tunable_policy(`use_nfs_home_dirs',`
-	fs_manage_nfs_dirs(ssh_t)
-	fs_manage_nfs_files(ssh_t)
-')
-
-tunable_policy(`use_samba_home_dirs',`
-	fs_manage_cifs_dirs(ssh_t)
-	fs_manage_cifs_files(ssh_t)
+userdom_write_user_tmp_files(ssh_t)
+userdom_read_user_home_content_symlinks(ssh_t)
+userdom_rw_inherited_user_home_content_files(ssh_t)
+userdom_read_home_certs(ssh_t)
+userdom_home_manager(ssh_t)
+
+tunable_policy(`ssh_keysign',`
+	domtrans_pattern(ssh_t, ssh_keysign_exec_t, ssh_keysign_t)
 ')
 
 # for port forwarding
 tunable_policy(`user_tcp_server',`
 	corenet_tcp_bind_ssh_port(ssh_t)
 	corenet_tcp_bind_generic_node(ssh_t)
+	corenet_tcp_bind_all_unreserved_ports(ssh_t)
+')
+
+optional_policy(`
+	gnome_stream_connect_gkeyringd(ssh_t)
 ')
 
 optional_policy(`
@@ -195,28 +212,24 @@ optional_policy(`
 	xserver_domtrans_xauth(ssh_t)
 ')
 
+
 ##############################
 #
 # ssh_keysign_t local policy
 #
 
-tunable_policy(`allow_ssh_keysign',`
+tunable_policy(`ssh_keysign',`
 	allow ssh_keysign_t self:capability { setgid setuid };
 	allow ssh_keysign_t self:unix_stream_socket create_socket_perms;
 
-	allow ssh_keysign_t sshd_key_t:file { getattr read };
+	allow ssh_keysign_t sshd_key_t:file read_file_perms;
 
+	dev_read_rand(ssh_keysign_t)
 	dev_read_urand(ssh_keysign_t)
 
 	files_read_etc_files(ssh_keysign_t)
 ')
 
-optional_policy(`
-	tunable_policy(`allow_ssh_keysign',`
-		nscd_socket_use(ssh_keysign_t)
-	')
-')
-
 #################################
 #
 # sshd local policy
@@ -227,33 +240,46 @@ optional_policy(`
 # so a tunnel can point to another ssh tunnel
 allow sshd_t self:netlink_route_socket r_netlink_socket_perms;
 allow sshd_t self:key { search link write };
-
-manage_dirs_pattern(sshd_t, sshd_tmp_t, sshd_tmp_t)
-manage_files_pattern(sshd_t, sshd_tmp_t, sshd_tmp_t)
-manage_sock_files_pattern(sshd_t, sshd_tmp_t, sshd_tmp_t)
-files_tmp_filetrans(sshd_t, sshd_tmp_t, { dir file sock_file })
+allow sshd_t self:process setcurrent;
 
 kernel_search_key(sshd_t)
 kernel_link_key(sshd_t)
 
 term_use_all_ptys(sshd_t)
 term_setattr_all_ptys(sshd_t)
+term_setattr_all_ttys(sshd_t)
 term_relabelto_all_ptys(sshd_t)
+term_use_ptmx(sshd_t)
 
 # for X forwarding
 corenet_tcp_bind_xserver_port(sshd_t)
 corenet_sendrecv_xserver_server_packets(sshd_t)
 
+userdom_read_user_home_content_files(sshd_t)
+userdom_read_user_home_content_symlinks(sshd_t)
+userdom_manage_tmp_role(system_r, sshd_t)
+userdom_spec_domtrans_unpriv_users(sshd_t)
+userdom_signal_unpriv_users(sshd_t)
+userdom_dyntransition_unpriv_users(sshd_t)
+userdom_dyntransition_admin_users(sshd_t)
+
 tunable_policy(`ssh_sysadm_login',`
 	# Relabel and access ptys created by sshd
 	# ioctl is necessary for logout() processing for utmp entry and for w to
 	# display the tty.
 	# some versions of sshd on the new SE Linux require setattr
-	userdom_spec_domtrans_all_users(sshd_t)
 	userdom_signal_all_users(sshd_t)
-',`
-	userdom_spec_domtrans_unpriv_users(sshd_t)
-	userdom_signal_unpriv_users(sshd_t)
+	userdom_spec_domtrans_all_users(sshd_t)
+')
+
+optional_policy(`
+	amanda_search_var_lib(sshd_t)
+')
+
+optional_policy(`
+	condor_rw_lib_files(sshd_t)
+	condor_rw_tcp_sockets_startd(sshd_t)
+	condor_rw_tcp_sockets_schedd(sshd_t)
 ')
 
 optional_policy(`
@@ -261,11 +287,24 @@ optional_policy(`
 ')
 
 optional_policy(`
+	kerberos_keytab_template(sshd, sshd_t)
+')
+
+optional_policy(`
+	ftp_dyntrans_sftpd(sshd_t)
+	ftp_dyntrans_anon_sftpd(sshd_t)
+')
+
+optional_policy(`
+	gitosis_manage_lib_files(sshd_t)
+')
+
+optional_policy(`
 	inetd_tcp_service_domain(sshd_t, sshd_exec_t)
 ')
 
 optional_policy(`
-	kerberos_keytab_template(sshd, sshd_t)
+	nx_read_home_files(sshd_t)
 ')
 
 optional_policy(`
@@ -283,6 +322,15 @@ optional_policy(`
 ')
 
 optional_policy(`
+	systemd_exec_systemctl(sshd_t)
+')
+
+optional_policy(`
+	usermanage_domtrans_passwd(sshd_t)
+	usermanage_read_crack_db(sshd_t)
+')
+
+optional_policy(`
 	unconfined_shell_domtrans(sshd_t)
 ')
 
@@ -290,6 +338,29 @@ optional_policy(`
 	xserver_domtrans_xauth(sshd_t)
 ')
 
+ifdef(`TODO',`
+	tunable_policy(`ssh_sysadm_login',`
+		# Relabel and access ptys created by sshd
+		# ioctl is necessary for logout() processing for utmp entry and for w to
+		# display the tty.
+		# some versions of sshd on the new SE Linux require setattr
+		allow sshd_t ptyfile:chr_file relabelto;
+
+			optional_policy(`
+				domain_trans(sshd_t, xauth_exec_t, userdomain)
+			')
+	',`
+		optional_policy(`
+			domain_trans(sshd_t, xauth_exec_t, unpriv_userdomain)
+		')
+		# Relabel and access ptys created by sshd
+		# ioctl is necessary for logout() processing for utmp entry and for w to
+		# display the tty.
+		# some versions of sshd on the new SE Linux require setattr
+		allow sshd_t userpty_type:chr_file { relabelto rw_inherited_chr_file_perms setattr_chr_file_perms };
+	')
+') dnl endif TODO
+
 ########################################
 #
 # ssh_keygen local policy
@@ -298,19 +369,26 @@ optional_policy(`
 # ssh_keygen_t is the type of the ssh-keygen program when run at install time
 # and by sysadm_t
 
+allow ssh_keygen_t self:capability dac_override;
 dontaudit ssh_keygen_t self:capability sys_tty_config;
 allow ssh_keygen_t self:process { sigchld sigkill sigstop signull signal };
-
 allow ssh_keygen_t self:unix_stream_socket create_stream_socket_perms;
 
 allow ssh_keygen_t sshd_key_t:file manage_file_perms;
 files_etc_filetrans(ssh_keygen_t, sshd_key_t, file)
 
+manage_dirs_pattern(ssh_keygen_t, ssh_home_t, ssh_home_t)
+manage_files_pattern(ssh_keygen_t, ssh_home_t, ssh_home_t)
+userdom_admin_home_dir_filetrans(ssh_keygen_t, ssh_home_t, dir)
+userdom_user_home_dir_filetrans(ssh_keygen_t, ssh_home_t, dir)
+
+kernel_read_system_state(ssh_keygen_t)
 kernel_read_kernel_sysctls(ssh_keygen_t)
 
 fs_search_auto_mountpoints(ssh_keygen_t)
 
 dev_read_sysfs(ssh_keygen_t)
+dev_read_rand(ssh_keygen_t)
 dev_read_urand(ssh_keygen_t)
 
 term_dontaudit_use_console(ssh_keygen_t)
@@ -327,9 +405,11 @@ auth_use_nsswitch(ssh_keygen_t)
 logging_send_syslog_msg(ssh_keygen_t)
 
 userdom_dontaudit_use_unpriv_user_fds(ssh_keygen_t)
+userdom_use_user_terminals(ssh_keygen_t)
 
-optional_policy(`
-	nscd_socket_use(ssh_keygen_t)
+tunable_policy(`use_nfs_home_dirs',`
+    fs_manage_nfs_files(ssh_keygen_t)
+    fs_manage_nfs_dirs(ssh_keygen_t)
 ')
 
 optional_policy(`
@@ -339,3 +419,76 @@ optional_policy(`
 optional_policy(`
 	udev_read_db(ssh_keygen_t)
 ')
+
+####################################
+#
+# ssh_dyntransition domain local policy
+#
+
+allow ssh_dyntransition_domain self:capability { setuid sys_chroot setgid };
+
+allow ssh_dyntransition_domain self:fifo_file rw_fifo_file_perms;
+
+optional_policy(`
+    ssh_rw_stream_sockets(ssh_dyntransition_domain)
+    ssh_rw_tcp_sockets(ssh_dyntransition_domain)
+')
+
+#####################################
+#
+# ssh_sandbox local policy
+#
+
+allow sshd_t sshd_sandbox_t:process signal;
+
+init_ioctl_stream_sockets(sshd_sandbox_t)
+
+logging_send_audit_msgs(sshd_sandbox_t)
+
+######################################
+#
+# chroot_user_t local policy
+#
+
+userdom_read_user_home_content_files(chroot_user_t)
+userdom_read_inherited_user_home_content_files(chroot_user_t)
+userdom_read_user_home_content_symlinks(chroot_user_t)
+userdom_exec_user_home_content_files(chroot_user_t)
+
+tunable_policy(`ssh_chroot_rw_homedirs',`
+        files_list_home(chroot_user_t)
+        userdom_read_user_home_content_files(chroot_user_t)
+        userdom_manage_user_home_content(chroot_user_t)
+', `
+
+        userdom_user_home_dir_filetrans_pattern(chroot_user_t, { dir file lnk_file })
+')
+
+tunable_policy(`ssh_chroot_rw_homedirs && use_nfs_home_dirs',`
+    fs_manage_nfs_dirs(chroot_user_t)
+    fs_manage_nfs_files(chroot_user_t)
+    fs_manage_nfs_symlinks(chroot_user_t)
+')
+
+tunable_policy(`ssh_chroot_rw_homedirs && use_samba_home_dirs',`
+    fs_manage_cifs_dirs(chroot_user_t)
+    fs_manage_cifs_files(chroot_user_t)
+    fs_manage_cifs_symlinks(chroot_user_t)
+')
+
+tunable_policy(`ssh_chroot_rw_homedirs && use_fusefs_home_dirs',`
+    fs_manage_fusefs_dirs(chroot_user_t)
+    fs_manage_fusefs_files(chroot_user_t)
+    fs_manage_fusefs_symlinks(chroot_user_t)
+')
+
+tunable_policy(`use_samba_home_dirs',`
+    fs_read_cifs_files(chroot_user_t)
+    fs_read_cifs_symlinks(chroot_user_t)
+')
+
+userdom_home_manager(chroot_user_t)
+
+optional_policy(`
+    ssh_rw_dgram_sockets(chroot_user_t)
+')
diff --git a/policy/modules/services/xserver.fc b/policy/modules/services/xserver.fc
index fc86b7c..7421ac9 100644
--- a/policy/modules/services/xserver.fc
+++ b/policy/modules/services/xserver.fc
@@ -2,13 +2,34 @@
 # HOME_DIR
 #
 HOME_DIR/\.fonts\.conf	--	gen_context(system_u:object_r:user_fonts_config_t,s0)
+HOME_DIR/\.fonts\.d(/.*)?	gen_context(system_u:object_r:user_fonts_config_t,s0)
 HOME_DIR/\.fonts(/.*)?		gen_context(system_u:object_r:user_fonts_t,s0)
+HOME_DIR/\.fontconfig(/.*)?	gen_context(system_u:object_r:user_fonts_cache_t,s0)
 HOME_DIR/\.fonts/auto(/.*)?	gen_context(system_u:object_r:user_fonts_cache_t,s0)
 HOME_DIR/\.fonts\.cache-.* --	gen_context(system_u:object_r:user_fonts_cache_t,s0)
+HOME_DIR/\.DCOP.* 	   --	gen_context(system_u:object_r:iceauth_home_t,s0)
 HOME_DIR/\.ICEauthority.* --	gen_context(system_u:object_r:iceauth_home_t,s0)
 HOME_DIR/\.serverauth.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
 HOME_DIR/\.xauth.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
+HOME_DIR/\.Xauth.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
 HOME_DIR/\.Xauthority.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
+HOME_DIR/\.xsession-errors.*	--	gen_context(system_u:object_r:xdm_home_t,s0)
+HOME_DIR/\.dmrc.*	--	gen_context(system_u:object_r:xdm_home_t,s0)
+
+/root/\.fonts\.conf	--	gen_context(system_u:object_r:user_fonts_config_t,s0)
+/root/\.fonts\.d(/.*)?	gen_context(system_u:object_r:user_fonts_config_t,s0)
+/root/\.fonts(/.*)?		gen_context(system_u:object_r:user_fonts_t,s0)
+/root/\.fontconfig(/.*)?	gen_context(system_u:object_r:user_fonts_cache_t,s0)
+/root/\.fonts/auto(/.*)?	gen_context(system_u:object_r:user_fonts_cache_t,s0)
+/root/\.fonts\.cache-.* --	gen_context(system_u:object_r:user_fonts_cache_t,s0)
+/root/\.DCOP.* 	   --	gen_context(system_u:object_r:iceauth_home_t,s0)
+/root/\.ICEauthority.* --	gen_context(system_u:object_r:iceauth_home_t,s0)
+/root/\.serverauth.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
+/root/\.xauth.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
+/root/\.Xauth.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
+/root/\.Xauthority.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
+/root/\.xsession-errors.*	--	gen_context(system_u:object_r:xdm_home_t,s0)
+/root/\.dmrc.*	--	gen_context(system_u:object_r:xdm_home_t,s0)
 
 #
 # /dev
@@ -24,11 +45,18 @@ HOME_DIR/\.Xauthority.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
 
 /etc/init\.d/xfree86-common --	gen_context(system_u:object_r:xserver_exec_t,s0)
 
+/etc/[mg]dm(/.*)?		  	gen_context(system_u:object_r:xdm_etc_t,s0)
+/etc/[mg]dm/Init(/.*)?	  	gen_context(system_u:object_r:xdm_unconfined_exec_t,s0)
+/etc/[mg]dm/PostLogin(/.*)?  	gen_context(system_u:object_r:xdm_unconfined_exec_t,s0)
+/etc/[mg]dm/PostSession(/.*)?  	gen_context(system_u:object_r:xdm_unconfined_exec_t,s0)
+/etc/[mg]dm/PreSession(/.*)?  	gen_context(system_u:object_r:xdm_unconfined_exec_t,s0)
+
 /etc/kde[34]?/kdm/Xstartup --	gen_context(system_u:object_r:xsession_exec_t,s0)
 /etc/kde[34]?/kdm/Xreset --	gen_context(system_u:object_r:xsession_exec_t,s0)
 /etc/kde[34]?/kdm/Xsession --	gen_context(system_u:object_r:xsession_exec_t,s0)
 /etc/kde[34]?/kdm/backgroundrc	gen_context(system_u:object_r:xdm_var_run_t,s0)
 
+/etc/opt/VirtualGL(/.*)?	gen_context(system_u:object_r:xdm_rw_etc_t,s0)
 /etc/X11/[wx]dm/Xreset.* --	gen_context(system_u:object_r:xsession_exec_t,s0)
 /etc/X11/[wxg]dm/Xsession --	gen_context(system_u:object_r:xsession_exec_t,s0)
 /etc/X11/wdm(/.*)?		gen_context(system_u:object_r:xdm_rw_etc_t,s0)
@@ -46,23 +74,24 @@ HOME_DIR/\.Xauthority.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
 # /tmp
 #
 
-/tmp/\.ICE-unix		-d	gen_context(system_u:object_r:xdm_tmp_t,s0)
-/tmp/\.ICE-unix/.*	-s	<<none>>
-/tmp/\.X0-lock		--	gen_context(system_u:object_r:xserver_tmp_t,s0)
-/tmp/\.X11-unix		-d	gen_context(system_u:object_r:xdm_tmp_t,s0)
-/tmp/\.X11-unix/.*	-s	<<none>>
+/tmp/\.X0-lock		--	gen_context(system_u:object_r:xdm_tmp_t,s0)
+/tmp/\.X11-unix(/.*)?		gen_context(system_u:object_r:xdm_tmp_t,s0)
+/tmp/\.ICE-unix(/.*)?		gen_context(system_u:object_r:xdm_tmp_t,s0)
+/tmp/\.font-unix(/.*)?		gen_context(system_u:object_r:user_fonts_t,s0)
 
 #
 # /usr
 #
 
+/usr/sbin/mdm-binary	--	gen_context(system_u:object_r:xdm_exec_t,s0)
 /usr/(s)?bin/gdm-binary	--	gen_context(system_u:object_r:xdm_exec_t,s0)
 /usr/(s)?bin/lxdm(-binary)? --	gen_context(system_u:object_r:xdm_exec_t,s0)
-/usr/(s)?bin/[xgkw]dm	--	gen_context(system_u:object_r:xdm_exec_t,s0)
+/usr/(s)?bin/[mxgkw]dm	--	gen_context(system_u:object_r:xdm_exec_t,s0)
 /usr/bin/gpe-dm		--	gen_context(system_u:object_r:xdm_exec_t,s0)
 /usr/bin/iceauth	--	gen_context(system_u:object_r:iceauth_exec_t,s0)
 /usr/bin/slim		--	gen_context(system_u:object_r:xdm_exec_t,s0)
 /usr/bin/Xair		--	gen_context(system_u:object_r:xserver_exec_t,s0)
+/usr/bin/Xephyr		--	gen_context(system_u:object_r:xserver_exec_t,s0)
 /usr/bin/xauth		--	gen_context(system_u:object_r:xauth_exec_t,s0)
 /usr/bin/Xorg		--	gen_context(system_u:object_r:xserver_exec_t,s0)
 
@@ -90,24 +119,43 @@ ifndef(`distro_debian',`
 /var/[xgkw]dm(/.*)?		gen_context(system_u:object_r:xserver_log_t,s0)
 
 /var/lib/lxdm(/.*)?		gen_context(system_u:object_r:xdm_var_lib_t,s0)
-/var/lib/[xkw]dm(/.*)?		gen_context(system_u:object_r:xdm_var_lib_t,s0)
+/var/lib/[mxkw]dm(/.*)?		gen_context(system_u:object_r:xdm_var_lib_t,s0)
 /var/lib/xkb(/.*)?		gen_context(system_u:object_r:xkb_var_lib_t,s0)
+/var/lib/xorg(/.*)?		gen_context(system_u:object_r:xserver_var_lib_t,s0)
+
+/var/cache/[mg]dm(/.*)?		gen_context(system_u:object_r:xdm_var_lib_t,s0)
 
-/var/log/[kwx]dm\.log.*	--	gen_context(system_u:object_r:xserver_log_t,s0)
+/var/log/[mkwx]dm\.log.*	--	gen_context(system_u:object_r:xserver_log_t,s0)
 /var/log/lxdm\.log	--	gen_context(system_u:object_r:xserver_log_t,s0)
-/var/log/gdm(/.*)?		gen_context(system_u:object_r:xserver_log_t,s0)
+/var/log/[mg]dm(/.*)?		gen_context(system_u:object_r:xserver_log_t,s0)
 /var/log/slim\.log	--	gen_context(system_u:object_r:xserver_log_t,s0)
 /var/log/XFree86.*	--	gen_context(system_u:object_r:xserver_log_t,s0)
 /var/log/Xorg.*		--	gen_context(system_u:object_r:xserver_log_t,s0)
+/var/log/nvidia-installer\.log.* --	gen_context(system_u:object_r:xserver_log_t,s0)
+
+/var/spool/[mg]dm(/.*)?	 	gen_context(system_u:object_r:xdm_spool_t,s0)
 
+/var/run/[kgm]dm(/.*)?	 	gen_context(system_u:object_r:xdm_var_run_t,s0)
+/var/run/gdm_socket	-s	gen_context(system_u:object_r:xdm_var_run_t,s0)
 /var/run/[gx]dm\.pid	--	gen_context(system_u:object_r:xdm_var_run_t,s0)
 /var/run/lxdm\.auth	--	gen_context(system_u:object_r:xdm_var_run_t,s0)
 /var/run/lxdm\.pid	--	gen_context(system_u:object_r:xdm_var_run_t,s0)
 /var/run/lxdm(/.*)?		gen_context(system_u:object_r:xdm_var_run_t,s0)
-/var/run/slim(/.*)?		gen_context(system_u:object_r:xdm_var_run_t,s0)
+/var/run/slim(/.*)?     	gen_context(system_u:object_r:xdm_var_run_t,s0)
+/var/run/slim.*     	--  	gen_context(system_u:object_r:xdm_var_run_t,s0)
 /var/run/xauth(/.*)?		gen_context(system_u:object_r:xdm_var_run_t,s0)
 /var/run/xdmctl(/.*)?		gen_context(system_u:object_r:xdm_var_run_t,s0)
 
+/var/run/video.rom	--	gen_context(system_u:object_r:xserver_var_run_t,s0)
+/var/run/xorg(/.*)?		gen_context(system_u:object_r:xserver_var_run_t,s0)
+/var/run/systemd/multi-session-x(/.*)?	gen_context(system_u:object_r:xdm_var_run_t,s0)
+
 ifdef(`distro_suse',`
 /var/lib/pam_devperm/:0	--	gen_context(system_u:object_r:xdm_var_lib_t,s0)
 ')
+
+/var/lib/nxserver/home/\.xauth.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
+/var/lib/nxserver/home/\.Xauthority.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
+/var/lib/pqsql/\.xauth.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
+/var/lib/pqsql/\.Xauthority.*	--	gen_context(system_u:object_r:xauth_home_t,s0)
+
diff --git a/policy/modules/services/xserver.if b/policy/modules/services/xserver.if
index 130ced9..647cc5c 100644
--- a/policy/modules/services/xserver.if
+++ b/policy/modules/services/xserver.if
@@ -19,9 +19,10 @@
 interface(`xserver_restricted_role',`
 	gen_require(`
 		type xserver_t, xserver_exec_t, xserver_tmp_t, xserver_tmpfs_t;
-		type user_fonts_t, user_fonts_cache_t, user_fonts_config_t;
+		type user_fonts_t, user_fonts_cache_t, user_fonts_config_t, xdm_tmp_t;
 		type iceauth_t, iceauth_exec_t, iceauth_home_t;
 		type xauth_t, xauth_exec_t, xauth_home_t;
+		class dbus send_msg;
 	')
 
 	role $1 types { xserver_t xauth_t iceauth_t };
@@ -30,12 +31,13 @@ interface(`xserver_restricted_role',`
 	allow xserver_t $2:fd use;
 	allow xserver_t $2:shm rw_shm_perms;
 
-	allow xserver_t $2:process signal;
+	allow xserver_t $2:process { getpgid signal };
 
 	allow xserver_t $2:shm rw_shm_perms;
 
 	allow $2 user_fonts_t:dir list_dir_perms;
 	allow $2 user_fonts_t:file read_file_perms;
+	allow $2 user_fonts_t:lnk_file read_lnk_file_perms;
 
 	allow $2 user_fonts_config_t:dir list_dir_perms;
 	allow $2 user_fonts_config_t:file read_file_perms;
@@ -44,6 +46,8 @@ interface(`xserver_restricted_role',`
 	manage_files_pattern($2, user_fonts_cache_t, user_fonts_cache_t)
 
 	stream_connect_pattern($2, xserver_tmp_t, xserver_tmp_t, xserver_t)
+	allow $2 xserver_tmp_t:sock_file delete_sock_file_perms;
+	dontaudit $2 xdm_tmp_t:sock_file setattr_sock_file_perms;
 	files_search_tmp($2)
 
 	# Communicate via System V shared memory.
@@ -69,17 +73,21 @@ interface(`xserver_restricted_role',`
 
 	# for when /tmp/.X11-unix is created by the system
 	allow $2 xdm_t:fd use;
-	allow $2 xdm_t:fifo_file { getattr read write ioctl };
-	allow $2 xdm_tmp_t:dir search;
-	allow $2 xdm_tmp_t:sock_file { read write };
+	allow $2 xdm_t:fifo_file rw_inherited_fifo_file_perms;
+	allow $2 xdm_tmp_t:dir search_dir_perms;
+	allow $2 xdm_tmp_t:sock_file rw_inherited_sock_file_perms;
 	dontaudit $2 xdm_t:tcp_socket { read write };
+	dontaudit $2 xdm_tmp_t:dir setattr_dir_perms;
+
+	allow $2 xdm_t:dbus send_msg;
+	allow xdm_t  $2:dbus send_msg;
 
 	# Client read xserver shm
 	allow $2 xserver_t:fd use;
 	allow $2 xserver_tmpfs_t:file read_file_perms;
 
 	# Read /tmp/.X0-lock
-	allow $2 xserver_tmp_t:file { getattr read };
+	allow $2 xserver_tmp_t:file read_inherited_file_perms;
 
 	dev_rw_xserver_misc($2)
 	dev_rw_power_management($2)
@@ -88,15 +96,17 @@ interface(`xserver_restricted_role',`
 	dev_write_misc($2)
 	# open office is looking for the following
 	dev_getattr_agp_dev($2)
-	dev_dontaudit_rw_dri($2)
+
 	# GNOME checks for usb and other devices:
 	dev_rw_usbfs($2)
 
 	miscfiles_read_fonts($2)
+	miscfiles_setattr_fonts_cache_dirs($2)
+	miscfiles_read_hwdata($2)
 
 	xserver_common_x_domain_template(user, $2)
 	xserver_domtrans($2)
-	xserver_unconfined($2)
+	#xserver_unconfined($2)
 	xserver_xsession_entry_type($2)
 	xserver_dontaudit_write_log($2)
 	xserver_stream_connect_xdm($2)
@@ -106,12 +116,26 @@ interface(`xserver_restricted_role',`
 	xserver_create_xdm_tmp_sockets($2)
 	# Needed for escd, remove if we get escd policy
 	xserver_manage_xdm_tmp_files($2)
+	xserver_read_xdm_etc_files($2)
+	xserver_xdm_append_log($2)
+
+	term_use_virtio_console($2)
+
+	modutils_run_insmod(xserver_t, $1)
 
 	# Client write xserver shm
-	tunable_policy(`allow_write_xshm',`
+	tunable_policy(`xserver_clients_write_xshm',`
 		allow $2 xserver_t:shm rw_shm_perms;
 		allow $2 xserver_tmpfs_t:file rw_file_perms;
 	')
+
+	tunable_policy(`user_direct_dri',`
+		dev_rw_dri($2)
+	')
+
+	optional_policy(`
+		gnome_read_gconf_config($2)
+	')
 ')
 
 ########################################
@@ -143,13 +167,15 @@ interface(`xserver_role',`
 	allow $2 xserver_tmpfs_t:file rw_file_perms;
 
 	allow $2 iceauth_home_t:file manage_file_perms;
-	allow $2 iceauth_home_t:file { relabelfrom relabelto };
+	allow $2 iceauth_home_t:file relabel_file_perms;
 
 	allow $2 xauth_home_t:file manage_file_perms;
-	allow $2 xauth_home_t:file { relabelfrom relabelto };
+	allow $2 xauth_home_t:file relabel_file_perms;
 
+	mls_xwin_read_to_clearance($2)
 	manage_dirs_pattern($2, user_fonts_t, user_fonts_t)
 	manage_files_pattern($2, user_fonts_t, user_fonts_t)
+	allow $2 user_fonts_t:lnk_file read_lnk_file_perms;
 	relabel_dirs_pattern($2, user_fonts_t, user_fonts_t)
 	relabel_files_pattern($2, user_fonts_t, user_fonts_t)
 
@@ -162,7 +188,6 @@ interface(`xserver_role',`
 	manage_files_pattern($2, user_fonts_config_t, user_fonts_config_t)
 	relabel_dirs_pattern($2, user_fonts_config_t, user_fonts_config_t)
 	relabel_files_pattern($2, user_fonts_config_t, user_fonts_config_t)
-
 ')
 
 #######################################
@@ -197,7 +222,7 @@ interface(`xserver_ro_session',`
 	allow $1 xserver_t:process signal;
 
 	# Read /tmp/.X0-lock
-	allow $1 xserver_tmp_t:file { getattr read };
+	allow $1 xserver_tmp_t:file read_file_perms;
 
 	# Client read xserver shm
 	allow $1 xserver_t:fd use;
@@ -227,7 +252,7 @@ interface(`xserver_rw_session',`
 		type xserver_t, xserver_tmpfs_t;
 	')
 
-	xserver_ro_session($1,$2)
+	xserver_ro_session($1, $2)
 	allow $1 xserver_t:shm rw_shm_perms;
 	allow $1 xserver_tmpfs_t:file rw_file_perms;
 ')
@@ -255,7 +280,7 @@ interface(`xserver_non_drawing_client',`
 
 	allow $1 self:x_gc { create setattr };
 
-	allow $1 xdm_var_run_t:dir search;
+	allow $1 xdm_var_run_t:dir search_dir_perms;
 	allow $1 xserver_t:unix_stream_socket connectto;
 
 	allow $1 xextension_t:x_extension { query use };
@@ -291,13 +316,13 @@ interface(`xserver_user_client',`
 	allow $1 self:unix_stream_socket { connectto create_stream_socket_perms };
 
 	# Read .Xauthority file
-	allow $1 xauth_home_t:file { getattr read };
-	allow $1 iceauth_home_t:file { getattr read };
+	allow $1 xauth_home_t:file read_file_perms;
+	allow $1 iceauth_home_t:file read_file_perms;
 
 	# for when /tmp/.X11-unix is created by the system
 	allow $1 xdm_t:fd use;
-	allow $1 xdm_t:fifo_file { getattr read write ioctl };
-	allow $1 xdm_tmp_t:dir search;
+	allow $1 xdm_t:fifo_file rw_inherited_fifo_file_perms;
+	allow $1 xdm_tmp_t:dir search_dir_perms;
 	allow $1 xdm_tmp_t:sock_file { read write };
 	dontaudit $1 xdm_t:tcp_socket { read write };
 
@@ -316,7 +341,7 @@ interface(`xserver_user_client',`
 	xserver_read_xdm_tmp_files($1)
 
 	# Client write xserver shm
-	tunable_policy(`allow_write_xshm',`
+	tunable_policy(`xserver_clients_write_xshm',`
 		allow $1 xserver_t:shm rw_shm_perms;
 		allow $1 xserver_tmpfs_t:file rw_file_perms;
 	')
@@ -342,19 +367,23 @@ interface(`xserver_user_client',`
 #
 template(`xserver_common_x_domain_template',`
 	gen_require(`
-		type root_xdrawable_t;
+		type root_xdrawable_t, xdm_t, xserver_t;
 		type xproperty_t, $1_xproperty_t;
 		type xevent_t, client_xevent_t;
 		type input_xevent_t, $1_input_xevent_t;
 
-		attribute x_domain;
+		attribute x_domain, input_xevent_type;
 		attribute xdrawable_type, xcolormap_type;
-		attribute input_xevent_type;
 
 		class x_drawable all_x_drawable_perms;
 		class x_property all_x_property_perms;
 		class x_event all_x_event_perms;
 		class x_synthetic_event all_x_synthetic_event_perms;
+		class x_client destroy;
+		class x_server manage;
+		class x_screen { saver_setattr saver_hide saver_show };
+		class x_pointer { get_property set_property manage };
+		class x_keyboard { read manage };
 	')
 
 	##############################
@@ -386,6 +415,15 @@ template(`xserver_common_x_domain_template',`
 	allow $2 xevent_t:{ x_event x_synthetic_event } receive;
 	# dont audit send failures
 	dontaudit $2 input_xevent_type:x_event send;
+
+	allow $2 xdm_t:x_drawable { hide read add_child manage };
+	allow $2 xdm_t:x_client destroy;
+
+	allow $2 root_xdrawable_t:x_drawable write;
+	allow $2 xserver_t:x_server manage;
+	allow $2 xserver_t:x_screen { saver_setattr saver_hide saver_show };
+	allow $2 xserver_t:x_pointer { get_property set_property manage };
+	allow $2 xserver_t:x_keyboard { read manage };
 ')
 
 #######################################
@@ -444,8 +482,9 @@ template(`xserver_object_types_template',`
 #
 template(`xserver_user_x_domain_template',`
 	gen_require(`
-		type xdm_t, xdm_tmp_t;
-		type xauth_home_t, iceauth_home_t, xserver_t, xserver_tmpfs_t;
+		type xdm_t, xdm_tmp_t, xserver_tmpfs_t;
+		type xdm_home_t;
+		type xauth_home_t, iceauth_home_t, xserver_t;
 	')
 
 	allow $2 self:shm create_shm_perms;
@@ -456,11 +495,24 @@ template(`xserver_user_x_domain_template',`
 	allow $2 xauth_home_t:file read_file_perms;
 	allow $2 iceauth_home_t:file read_file_perms;
 
+	userdom_user_home_dir_filetrans($2, iceauth_home_t, file, ".DCOP")
+	userdom_user_home_dir_filetrans($2, iceauth_home_t, file, ".ICEauthority")
+	userdom_user_home_dir_filetrans($2, iceauth_home_t, file, ".ICEauthority-c")
+	userdom_user_home_dir_filetrans($2, iceauth_home_t, file, ".ICEauthority-n")
+	userdom_user_home_dir_filetrans($2, xauth_home_t, file, ".Xauthority")
+	userdom_user_home_dir_filetrans($2, xauth_home_t, file, ".Xauthority-l")
+	userdom_user_home_dir_filetrans($2, xauth_home_t, file, ".Xauthority-c")
+	userdom_user_home_dir_filetrans($2, xauth_home_t, file, ".xauth")
+	userdom_user_home_dir_filetrans($2, xdm_home_t, file, ".xsession-errors")
+	userdom_user_home_dir_filetrans($2, xdm_home_t, file, ".xsession-errors-stamped")
+	userdom_user_home_dir_filetrans($2, xdm_home_t, file, ".xsession-errors-stamped.old")
+	userdom_user_home_dir_filetrans($2, xdm_home_t, file, ".dmrc")
+
 	# for when /tmp/.X11-unix is created by the system
 	allow $2 xdm_t:fd use;
-	allow $2 xdm_t:fifo_file { getattr read write ioctl };
+	allow $2 xdm_t:fifo_file rw_inherited_fifo_file_perms;
 	allow $2 xdm_tmp_t:dir search_dir_perms;
-	allow $2 xdm_tmp_t:sock_file { read write };
+	allow $2 xdm_tmp_t:sock_file rw_inherited_sock_file_perms;
 	dontaudit $2 xdm_t:tcp_socket { read write };
 
 	# Allow connections to X server.
@@ -472,20 +524,26 @@ template(`xserver_user_x_domain_template',`
 	# for .xsession-errors
 	userdom_dontaudit_write_user_home_content_files($2)
 
-	xserver_ro_session($2,$3)
+	xserver_ro_session($2, $3)
 	xserver_use_user_fonts($2)
 
 	xserver_read_xdm_tmp_files($2)
+	xserver_read_xdm_pid($2)
+	xserver_xdm_append_log($2)
 
 	# X object manager
 	xserver_object_types_template($1)
-	xserver_common_x_domain_template($1,$2)
+	xserver_common_x_domain_template($1, $2)
 
 	# Client write xserver shm
-	tunable_policy(`allow_write_xshm',`
+	tunable_policy(`xserver_clients_write_xshm',`
 		allow $2 xserver_t:shm rw_shm_perms;
 		allow $2 xserver_tmpfs_t:file rw_file_perms;
 	')
+
+	tunable_policy(`user_direct_dri',`
+		dev_rw_dri($2)
+	')
 ')
 
 ########################################
@@ -517,6 +575,7 @@ interface(`xserver_use_user_fonts',`
 	# Read per user fonts
 	allow $1 user_fonts_t:dir list_dir_perms;
 	allow $1 user_fonts_t:file read_file_perms;
+	allow $1 user_fonts_t:lnk_file read_lnk_file_perms;
 
 	# Manipulate the global font cache
 	manage_dirs_pattern($1, user_fonts_cache_t, user_fonts_cache_t)
@@ -547,6 +606,42 @@ interface(`xserver_domtrans_xauth',`
 	domtrans_pattern($1, xauth_exec_t, xauth_t)
 ')
 
+######################################
+## <summary>
+##  Allow exec of Xauthority program..
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed to transition.
+##  </summary>
+## </param>
+#
+interface(`xserver_exec_xauth',`
+	gen_require(`
+		type xauth_t, xauth_exec_t;
+	')
+
+	can_exec($1, xauth_exec_t)
+')
+
+########################################
+## <summary>
+##	Dontaudit exec of Xauthority program.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`xserver_dontaudit_exec_xauth',`
+	gen_require(`
+		type xauth_exec_t;
+	')
+
+	dontaudit $1 xauth_exec_t:file execute;
+')
+
 ########################################
 ## <summary>
 ##	Create a Xauthority file in the user home directory.
@@ -598,6 +693,7 @@ interface(`xserver_read_user_xauth',`
 
 	allow $1 xauth_home_t:file read_file_perms;
 	userdom_search_user_home_dirs($1)
+	xserver_read_xdm_pid($1)
 ')
 
 ########################################
@@ -615,7 +711,7 @@ interface(`xserver_setattr_console_pipes',`
 		type xconsole_device_t;
 	')
 
-	allow $1 xconsole_device_t:fifo_file setattr;
+	allow $1 xconsole_device_t:fifo_file setattr_fifo_file_perms;
 ')
 
 ########################################
@@ -638,6 +734,25 @@ interface(`xserver_rw_console',`
 
 ########################################
 ## <summary>
+##	Read XDM state files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xserver_read_state_xdm',`
+	gen_require(`
+		type xdm_t;
+	')
+
+	kernel_search_proc($1)
+	ps_process_pattern($1, xdm_t)
+')
+
+########################################
+## <summary>
 ##	Use file descriptors for xdm.
 ## </summary>
 ## <param name="domain">
@@ -651,7 +766,7 @@ interface(`xserver_use_xdm_fds',`
 		type xdm_t;
 	')
 
-	allow $1 xdm_t:fd use; 
+	allow $1 xdm_t:fd use;
 ')
 
 ########################################
@@ -670,7 +785,7 @@ interface(`xserver_dontaudit_use_xdm_fds',`
 		type xdm_t;
 	')
 
-	dontaudit $1 xdm_t:fd use; 
+	dontaudit $1 xdm_t:fd use;
 ')
 
 ########################################
@@ -688,7 +803,7 @@ interface(`xserver_rw_xdm_pipes',`
 		type xdm_t;
 	')
 
-	allow $1 xdm_t:fifo_file { getattr read write }; 
+	allow $1 xdm_t:fifo_file rw_inherited_fifo_file_perms;
 ')
 
 ########################################
@@ -703,12 +818,11 @@ interface(`xserver_rw_xdm_pipes',`
 ## </param>
 #
 interface(`xserver_dontaudit_rw_xdm_pipes',`
-
 	gen_require(`
 		type xdm_t;
 	')
 
-	dontaudit $1 xdm_t:fifo_file rw_fifo_file_perms; 
+	dontaudit $1 xdm_t:fifo_file rw_fifo_file_perms;
 ')
 
 ########################################
@@ -724,11 +838,31 @@ interface(`xserver_dontaudit_rw_xdm_pipes',`
 #
 interface(`xserver_stream_connect_xdm',`
 	gen_require(`
-		type xdm_t, xdm_tmp_t;
+		type xdm_t, xdm_tmp_t, xdm_var_run_t;
 	')
 
 	files_search_tmp($1)
-	stream_connect_pattern($1, xdm_tmp_t, xdm_tmp_t, xdm_t)
+	files_search_pids($1)
+	stream_connect_pattern($1, { xdm_tmp_t xdm_var_run_t }, { xdm_tmp_t xdm_var_run_t }, xdm_t)
+')
+
+########################################
+## <summary>
+##	Read XDM files in user home directories. 
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xserver_read_xdm_home_files',`
+	gen_require(`
+		type xdm_home_t;
+	')
+
+	userdom_search_user_home_dirs($1)
+	allow $1 xdm_home_t:file read_file_perms;
 ')
 
 ########################################
@@ -752,6 +886,25 @@ interface(`xserver_read_xdm_rw_config',`
 
 ########################################
 ## <summary>
+##	Search XDM temporary directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xserver_search_xdm_tmp_dirs',`
+	gen_require(`
+		type xdm_tmp_t;
+	')
+
+	files_search_tmp($1)
+	allow $1 xdm_tmp_t:dir search_dir_perms;
+')
+
+########################################
+## <summary>
 ##	Set the attributes of XDM temporary directories.
 ## </summary>
 ## <param name="domain">
@@ -765,7 +918,7 @@ interface(`xserver_setattr_xdm_tmp_dirs',`
 		type xdm_tmp_t;
 	')
 
-	allow $1 xdm_tmp_t:dir setattr;
+	allow $1 xdm_tmp_t:dir setattr_dir_perms;
 ')
 
 ########################################
@@ -805,7 +958,26 @@ interface(`xserver_read_xdm_pid',`
 	')
 
 	files_search_pids($1)
-	allow $1 xdm_var_run_t:file read_file_perms;
+	read_files_pattern($1, xdm_var_run_t, xdm_var_run_t)
+')
+
+######################################
+## <summary>
+##  Dontaudit Read XDM pid files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##	Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`xserver_dontaudit_read_xdm_pid',`
+    gen_require(`
+        type xdm_var_run_t;
+    ')
+
+	dontaudit $1 xdm_var_run_t:dir search_dir_perms;
+    dontaudit $1 xdm_var_run_t:file read_file_perms;
 ')
 
 ########################################
@@ -828,6 +1000,24 @@ interface(`xserver_read_xdm_lib_files',`
 
 ########################################
 ## <summary>
+##	Read inherited XDM var lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xserver_read_inherited_xdm_lib_files',`
+	gen_require(`
+		type xdm_var_lib_t;
+	')
+
+	allow $1 xdm_var_lib_t:file read_inherited_file_perms;
+')
+
+########################################
+## <summary>
 ##	Make an X session script an entrypoint for the specified domain.
 ## </summary>
 ## <param name="domain">
@@ -897,7 +1087,7 @@ interface(`xserver_getattr_log',`
 	')
 
 	logging_search_logs($1)
-	allow $1 xserver_log_t:file getattr;
+	allow $1 xserver_log_t:file getattr_file_perms;
 ')
 
 ########################################
@@ -916,7 +1106,7 @@ interface(`xserver_dontaudit_write_log',`
 		type xserver_log_t;
 	')
 
-	dontaudit $1 xserver_log_t:file { append write };
+	dontaudit $1 xserver_log_t:file rw_inherited_file_perms;
 ')
 
 ########################################
@@ -963,6 +1153,45 @@ interface(`xserver_read_xkb_libs',`
 
 ########################################
 ## <summary>
+##	Read xdm config files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit
+##	</summary>
+## </param>
+#
+interface(`xserver_read_xdm_etc_files',`
+	gen_require(`
+		type xdm_etc_t;
+	')
+
+	files_search_etc($1)
+	read_files_pattern($1, xdm_etc_t, xdm_etc_t)
+	read_lnk_files_pattern($1, xdm_etc_t, xdm_etc_t)
+')
+
+########################################
+## <summary>
+##	Manage xdm config files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit
+##	</summary>
+## </param>
+#
+interface(`xserver_manage_xdm_etc_files',`
+	gen_require(`
+		type xdm_etc_t;
+	')
+
+	files_search_etc($1)
+	manage_files_pattern($1, xdm_etc_t, xdm_etc_t)
+')
+
+########################################
+## <summary>
 ##	Read xdm temporary files.
 ## </summary>
 ## <param name="domain">
@@ -976,7 +1205,7 @@ interface(`xserver_read_xdm_tmp_files',`
 		type xdm_tmp_t;
 	')
 
- 	files_search_tmp($1)
+	files_search_tmp($1)
 	read_files_pattern($1, xdm_tmp_t, xdm_tmp_t)
 ')
 
@@ -1038,6 +1267,42 @@ interface(`xserver_manage_xdm_tmp_files',`
 
 ########################################
 ## <summary>
+##	Create, read, write, and delete xdm temporary dirs.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xserver_relabel_xdm_tmp_dirs',`
+	gen_require(`
+		type xdm_tmp_t;
+	')
+
+	allow $1 xdm_tmp_t:dir relabel_dir_perms;
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete xdm temporary dirs.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xserver_manage_xdm_tmp_dirs',`
+	gen_require(`
+		type xdm_tmp_t;
+	')
+
+	manage_dirs_pattern($1, xdm_tmp_t, xdm_tmp_t)
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to get the attributes of
 ##	xdm temporary named sockets.
 ## </summary>
@@ -1052,7 +1317,7 @@ interface(`xserver_dontaudit_getattr_xdm_tmp_sockets',`
 		type xdm_tmp_t;
 	')
 
-	dontaudit $1 xdm_tmp_t:sock_file getattr;
+	dontaudit $1 xdm_tmp_t:sock_file getattr_sock_file_perms;
 ')
 
 ########################################
@@ -1070,8 +1335,10 @@ interface(`xserver_domtrans',`
 		type xserver_t, xserver_exec_t;
 	')
 
- 	allow $1 xserver_t:process siginh;
+	allow $1 xserver_t:process siginh;
 	domtrans_pattern($1, xserver_exec_t, xserver_t)
+
+	allow xserver_t $1:process getpgid;
 ')
 
 ########################################
@@ -1185,6 +1452,26 @@ interface(`xserver_stream_connect',`
 
 	files_search_tmp($1)
 	stream_connect_pattern($1, xserver_tmp_t, xserver_tmp_t, xserver_t)
+	allow xserver_t $1:shm rw_shm_perms;
+')
+
+######################################
+## <summary>
+##  Dontaudit attempts to connect to xserver
+##  over a unix stream socket.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`xserver_dontaudit_stream_connect',`
+    gen_require(`
+        type xserver_t, xserver_tmp_t;
+    ')
+
+    stream_connect_pattern($1, xserver_tmp_t, xserver_tmp_t, xserver_t)
 ')
 
 ########################################
@@ -1210,7 +1497,7 @@ interface(`xserver_read_tmp_files',`
 ## <summary>
 ##	Interface to provide X object permissions on a given X server to
 ##	an X client domain.  Gives the domain permission to read the
-##      virtual core keyboard and virtual core pointer devices.
+##	virtual core keyboard and virtual core pointer devices.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -1220,13 +1507,23 @@ interface(`xserver_read_tmp_files',`
 #
 interface(`xserver_manage_core_devices',`
 	gen_require(`
-		type xserver_t;
+		type xserver_t, root_xdrawable_t;
 		class x_device all_x_device_perms;
 		class x_pointer all_x_pointer_perms;
 		class x_keyboard all_x_keyboard_perms;
+		class x_screen all_x_screen_perms;
+		class x_drawable { manage };
+		attribute x_domain;
+		class x_drawable { read manage setattr show };
+		class x_resource { write read };
 	')
 
 	allow $1 xserver_t:{ x_device x_pointer x_keyboard } *;
+	allow $1 xserver_t:{ x_screen } setattr;
+	
+	allow $1 x_domain:x_drawable { read manage setattr show };
+	allow $1 x_domain:x_resource { write read };
+	allow $1 root_xdrawable_t:x_drawable { manage read };
 ')
 
 ########################################
@@ -1243,10 +1540,533 @@ interface(`xserver_manage_core_devices',`
 #
 interface(`xserver_unconfined',`
 	gen_require(`
-		attribute x_domain;
-		attribute xserver_unconfined_type;
+		attribute x_domain, xserver_unconfined_type;
 	')
 
 	typeattribute $1 x_domain;
 	typeattribute $1 xserver_unconfined_type;
 ')
+
+########################################
+## <summary>
+##	Dontaudit append to .xsession-errors file
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit
+##	</summary>
+## </param>
+#
+interface(`xserver_dontaudit_append_xdm_home_files',`
+	gen_require(`
+		type xdm_home_t;
+	')
+
+	dontaudit $1 xdm_home_t:file rw_inherited_file_perms;
+
+	tunable_policy(`use_nfs_home_dirs',`
+		fs_dontaudit_rw_nfs_files($1)
+	')
+
+	tunable_policy(`use_samba_home_dirs',`
+		fs_dontaudit_rw_cifs_files($1)
+	')
+')
+
+########################################
+## <summary>
+##	append to .xsession-errors file
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit
+##	</summary>
+## </param>
+#
+interface(`xserver_append_xdm_home_files',`
+	gen_require(`
+		type xdm_home_t, xserver_tmp_t;
+	')
+
+	allow $1 xdm_home_t:file append_file_perms;
+	allow $1 xserver_tmp_t:file append_file_perms;
+
+	tunable_policy(`use_nfs_home_dirs',`
+		fs_append_nfs_files($1)
+	')
+
+	tunable_policy(`use_samba_home_dirs',`
+		fs_append_cifs_files($1)
+	')
+')
+
+#######################################
+## <summary>
+##  Allow search the xdm_spool files
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`xserver_xdm_search_spool',`
+    gen_require(`
+        type xdm_spool_t;
+    ')
+
+    files_search_spool($1)
+    search_dirs_pattern($1, xdm_spool_t, xdm_spool_t)
+')
+
+######################################
+## <summary>
+##  Allow read the xdm_spool files
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`xserver_xdm_read_spool',`
+    gen_require(`
+        type xdm_spool_t;
+    ')
+
+    files_search_spool($1)
+    read_files_pattern($1, xdm_spool_t, xdm_spool_t)
+')
+
+########################################
+## <summary>
+##	Manage the xdm_spool files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xserver_xdm_manage_spool',`
+	gen_require(`
+		type xdm_spool_t;
+	')
+
+	files_search_spool($1)
+	manage_files_pattern($1, xdm_spool_t, xdm_spool_t)
+')
+
+########################################
+## <summary>
+##	Send and receive messages from
+##	xdm over dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xserver_dbus_chat_xdm',`
+	gen_require(`
+		type xdm_t;
+		class dbus send_msg;
+	')
+
+	allow $1 xdm_t:dbus send_msg;
+	allow xdm_t $1:dbus send_msg;
+')
+
+########################################
+## <summary>
+##	Read xserver files created in /var/run
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xserver_read_pid',`
+	gen_require(`
+		type xserver_var_run_t;
+	')
+
+	files_search_pids($1)
+	read_files_pattern($1, xserver_var_run_t, xserver_var_run_t)
+')
+
+########################################
+## <summary>
+##	Execute xserver files created in /var/run
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xserver_exec_pid',`
+	gen_require(`
+		type xserver_var_run_t;
+	')
+
+	files_search_pids($1)
+	exec_files_pattern($1, xserver_var_run_t, xserver_var_run_t)
+')
+
+########################################
+## <summary>
+##	Write xserver files created in /var/run
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xserver_write_pid',`
+	gen_require(`
+		type xserver_var_run_t;
+	')
+
+	files_search_pids($1)
+	write_files_pattern($1, xserver_var_run_t, xserver_var_run_t)
+')
+
+########################################
+## <summary>
+##	Allow append the xdm
+##	log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit
+##	</summary>
+## </param>
+#
+interface(`xserver_xdm_append_log',`
+	gen_require(`
+		type xdm_log_t;
+		attribute xdmhomewriter;
+	')
+
+	typeattribute $1 xdmhomewriter;
+	allow $1 xdm_log_t:file append_inherited_file_perms;
+')
+
+########################################
+## <summary>
+##	Allow append the xdm
+##	tmp files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit
+##	</summary>
+## </param>
+#
+interface(`xserver_append_xdm_tmp_files',`
+	gen_require(`
+		type xdm_tmp_t;
+	')
+
+	allow $1 xdm_tmp_t:file append_inherited_file_perms;
+')
+
+########################################
+## <summary>
+##	Read a user Iceauthority domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xserver_read_user_iceauth',`
+	gen_require(`
+		type iceauth_home_t;
+	')
+
+	# Read .Iceauthority file
+	allow $1 iceauth_home_t:file read_file_perms;
+')
+
+########################################
+## <summary>
+##	Read/write inherited user homedir fonts.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xserver_rw_inherited_user_fonts',`
+	gen_require(`
+		type user_fonts_t, user_fonts_config_t;
+	')
+
+	allow $1 user_fonts_t:file rw_inherited_file_perms;
+	allow $1 user_fonts_t:file read_lnk_file_perms;
+
+	allow $1 user_fonts_config_t:file rw_inherited_file_perms;
+')
+
+########################################
+## <summary>
+##	Search XDM var lib dirs.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xserver_search_xdm_lib',`
+	gen_require(`
+		type xdm_var_lib_t;
+	')
+
+	allow $1 xdm_var_lib_t:dir search_dir_perms;
+')
+
+########################################
+## <summary>
+##	Make an X executable an entrypoint for the specified domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	The domain for which the shell is an entrypoint.
+##	</summary>
+## </param>
+#
+interface(`xserver_entry_type',`
+	gen_require(`
+		type xserver_exec_t;
+	')
+
+	domain_entry_file($1, xserver_exec_t)
+')
+
+########################################
+## <summary>
+##	Execute xsever in the xserver domain, and
+##	allow the specified role the xserver domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed the xserver domain.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`xserver_run',`
+	gen_require(`
+		type xserver_t;
+	')
+
+	xserver_domtrans($1)
+	role $2 types xserver_t;
+')
+
+########################################
+## <summary>
+##	Execute xsever in the xserver domain, and
+##	allow the specified role the xserver domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed the xserver domain.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`xserver_run_xauth',`
+	gen_require(`
+		type xauth_t;
+	')
+
+	xserver_domtrans_xauth($1)
+	role $2 types xauth_t;
+')
+
+########################################
+## <summary>
+##	Read user homedir fonts.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`xserver_read_home_fonts',`
+	gen_require(`
+		type user_fonts_t, user_fonts_config_t;
+	')
+
+	list_dirs_pattern($1, user_fonts_t, user_fonts_t)
+	read_files_pattern($1, user_fonts_t, user_fonts_t)
+	read_lnk_files_pattern($1, user_fonts_t, user_fonts_t)
+
+	read_files_pattern($1, user_fonts_config_t, user_fonts_config_t)
+')
+
+########################################
+## <summary>
+##	Manage user fonts dir.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`xserver_manage_user_fonts_dir',`
+	gen_require(`
+		type user_fonts_t;
+	')
+
+	manage_dirs_pattern($1, user_fonts_t, user_fonts_t)
+	files_tmp_filetrans($1, user_fonts_t, dir, ".font-unix")
+')
+
+########################################
+## <summary>
+##	Manage user homedir fonts.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`xserver_manage_home_fonts',`
+	gen_require(`
+		type user_fonts_t, user_fonts_config_t, user_fonts_cache_t;
+	')
+
+	manage_dirs_pattern($1, user_fonts_t, user_fonts_t)
+	manage_files_pattern($1, user_fonts_t, user_fonts_t)
+	manage_lnk_files_pattern($1, user_fonts_t, user_fonts_t)
+
+	manage_files_pattern($1, user_fonts_config_t, user_fonts_config_t)
+
+#	userdom_user_home_dir_filetrans($1, user_fonts_t, dir, ".fonts.d")
+#	userdom_user_home_dir_filetrans($1, user_fonts_t, dir, ".fonts")
+#	userdom_user_home_dir_filetrans($1, user_fonts_cache_t, dir, ".fontconfig")
+')
+
+########################################
+## <summary>
+##	Transition to xserver named content
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xserver_filetrans_home_content',`
+	gen_require(`
+		type xdm_home_t, xauth_home_t, iceauth_home_t;
+		type user_home_t, user_fonts_t, user_fonts_cache_t;
+		type user_fonts_config_t;
+	')
+
+	userdom_user_home_dir_filetrans($1, xdm_home_t, file, ".dmrc")
+	userdom_user_home_dir_filetrans($1, xdm_home_t, file, ".xsession-errors")
+	userdom_user_home_dir_filetrans($1, iceauth_home_t, file, ".DCOP")
+	userdom_user_home_dir_filetrans($1, iceauth_home_t, file, ".ICEauthority")
+	userdom_user_home_dir_filetrans($1, xauth_home_t, file, ".Xauthority")
+	userdom_user_home_dir_filetrans($1, xauth_home_t, file, ".Xauthority-l")
+	userdom_user_home_dir_filetrans($1, xauth_home_t, file, ".Xauthority-c")
+	userdom_user_home_dir_filetrans($1, xauth_home_t, file, ".xauth")
+	userdom_user_home_dir_filetrans($1, xauth_home_t, file, ".Xauth")
+	userdom_user_home_dir_filetrans($1, user_fonts_config_t, file, ".fonts.conf")
+	userdom_user_home_dir_filetrans($1, user_fonts_config_t, dir, ".fonts.d")
+	userdom_user_home_dir_filetrans($1, user_fonts_t, dir, ".fonts")
+	userdom_user_home_dir_filetrans($1, user_fonts_cache_t, dir, ".fontconfig")
+	filetrans_pattern($1, user_fonts_t, user_fonts_cache_t, dir, "auto")
+	files_tmp_filetrans($1, user_fonts_t, dir, ".font-unix")
+')
+
+########################################
+## <summary>
+##	Create xserver content in admin home
+##	directory with a named file transition.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`xserver_filetrans_admin_home_content',`
+	gen_require(`
+		type xdm_home_t, xauth_home_t, iceauth_home_t;
+		type user_home_t, user_fonts_t, user_fonts_cache_t;
+		type user_fonts_config_t;
+	')
+
+	userdom_admin_home_dir_filetrans($1, xdm_home_t, file, ".dmrc")
+	userdom_admin_home_dir_filetrans($1, xdm_home_t, file, ".xsession-errors")
+	userdom_admin_home_dir_filetrans($1, iceauth_home_t, file, ".DCOP")
+	userdom_admin_home_dir_filetrans($1, iceauth_home_t, file, ".ICEauthority")
+	userdom_admin_home_dir_filetrans($1, xauth_home_t, file, ".Xauthority")
+	userdom_admin_home_dir_filetrans($1, xauth_home_t, file, ".Xauthority-l")
+	userdom_admin_home_dir_filetrans($1, xauth_home_t, file, ".Xauthority-c")
+	userdom_admin_home_dir_filetrans($1, xauth_home_t, file, ".xauth")
+	userdom_admin_home_dir_filetrans($1, xauth_home_t, file, ".Xauth")
+	userdom_admin_home_dir_filetrans($1, user_fonts_config_t, file, ".fonts.conf")
+	userdom_admin_home_dir_filetrans($1, user_fonts_config_t, dir, ".fonts.d")
+	userdom_admin_home_dir_filetrans($1, user_fonts_t, dir, ".fonts")
+	userdom_admin_home_dir_filetrans($1, user_fonts_cache_t, dir, ".fontconfig")
+')
+
+########################################
+## <summary>
+##	Create objects in a xdm temporary directory
+##	with an automatic type transition to
+##	a specified private type.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="private_type">
+##	<summary>
+##	The type of the object to create.
+##	</summary>
+## </param>
+## <param name="object_class">
+##	<summary>
+##	The class of the object to be created.
+##	</summary>
+## </param>
+#
+interface(`xserver_xdm_tmp_filetrans',`
+	gen_require(`
+		type xdm_tmp_t;
+	')
+
+	filetrans_pattern($1, xdm_tmp_t, $2, $3, $4)
+	files_search_tmp($1)
+')
diff --git a/policy/modules/services/xserver.te b/policy/modules/services/xserver.te
index c4f7c35..a4b887d 100644
--- a/policy/modules/services/xserver.te
+++ b/policy/modules/services/xserver.te
@@ -26,27 +26,50 @@ gen_require(`
 #
 
 ## <desc>
-## <p>
-## Allows clients to write to the X server shared
-## memory segments.
-## </p>
+##	<p>
+##	Allows clients to write to the X server shared
+##	memory segments.
+##	</p>
 ## </desc>
-gen_tunable(allow_write_xshm, false)
+gen_tunable(xserver_clients_write_xshm, false)
+
+## <desc>
+##	<p>
+##	Allows XServer to execute writable memory
+##	</p>
+## </desc>
+gen_tunable(xserver_execmem, false)
 
 ## <desc>
 ## <p>
-## Allow xdm logins as sysadm
+## Allow the graphical login program to execute bootloader
 ## </p>
 ## </desc>
+gen_tunable(xdm_exec_bootloader, false)
+
+## <desc>
+##	<p>
+##	Allow the graphical login program to login directly as sysadm_r:sysadm_t
+##	</p>
+## </desc>
 gen_tunable(xdm_sysadm_login, false)
 
 ## <desc>
-## <p>
-## Support X userspace object manager
-## </p>
+##	<p>
+##	Support X userspace object manager
+##	</p>
 ## </desc>
 gen_tunable(xserver_object_manager, false)
 
+## <desc>
+##	<p>
+##	Allow regular users direct dri device access
+##	</p>
+## </desc>
+gen_tunable(user_direct_dri, false)
+
+attribute xdmhomewriter;
+attribute x_userdomain;
 attribute x_domain;
 
 # X Events
@@ -107,44 +130,54 @@ xserver_object_types_template(remote)
 xserver_common_x_domain_template(remote, remote_t)
 
 type user_fonts_t;
-typealias user_fonts_t alias { staff_fonts_t sysadm_fonts_t };
+typealias user_fonts_t alias { staff_fonts_t sysadm_fonts_t xfs_fonts_t };
 typealias user_fonts_t alias { auditadm_fonts_t secadm_fonts_t };
+typealias user_fonts_t alias { xguest_fonts_t unconfined_fonts_t user_fonts_home_t };
+typealias user_fonts_t alias xfs_tmp_t;
 userdom_user_home_content(user_fonts_t)
+files_tmp_file(user_fonts_t)
 
 type user_fonts_cache_t;
 typealias user_fonts_cache_t alias { staff_fonts_cache_t sysadm_fonts_cache_t };
 typealias user_fonts_cache_t alias { auditadm_fonts_cache_t secadm_fonts_cache_t };
+typealias user_fonts_cache_t alias { xguest_fonts_cache_t unconfined_fonts_cache_t };
 userdom_user_home_content(user_fonts_cache_t)
 
 type user_fonts_config_t;
 typealias user_fonts_config_t alias { staff_fonts_config_t sysadm_fonts_config_t };
 typealias user_fonts_config_t alias { auditadm_fonts_config_t secadm_fonts_config_t };
+typealias user_fonts_config_t alias { fonts_config_home_t xguest_fonts_config_t unconfined_fonts_config_t };
 userdom_user_home_content(user_fonts_config_t)
 
 type iceauth_t;
 type iceauth_exec_t;
 typealias iceauth_t alias { user_iceauth_t staff_iceauth_t sysadm_iceauth_t };
+typealias iceauth_t alias { xguest_iceauth_t };
 typealias iceauth_t alias { auditadm_iceauth_t secadm_iceauth_t };
 userdom_user_application_domain(iceauth_t, iceauth_exec_t)
 
 type iceauth_home_t;
 typealias iceauth_home_t alias { user_iceauth_home_t staff_iceauth_home_t sysadm_iceauth_home_t };
 typealias iceauth_home_t alias { auditadm_iceauth_home_t secadm_iceauth_home_t };
+typealias iceauth_home_t alias { xguest_iceauth_home_t };
 userdom_user_home_content(iceauth_home_t)
 
 type xauth_t;
 type xauth_exec_t;
 typealias xauth_t alias { user_xauth_t staff_xauth_t sysadm_xauth_t };
 typealias xauth_t alias { auditadm_xauth_t secadm_xauth_t };
+typealias xauth_t alias { xguest_xauth_t unconfined_xauth_t };
 userdom_user_application_domain(xauth_t, xauth_exec_t)
 
 type xauth_home_t;
 typealias xauth_home_t alias { user_xauth_home_t staff_xauth_home_t sysadm_xauth_home_t };
 typealias xauth_home_t alias { auditadm_xauth_home_t secadm_xauth_home_t };
+typealias xauth_home_t alias { xguest_xauth_home_t unconfined_xauth_home_t };
 userdom_user_home_content(xauth_home_t)
 
 type xauth_tmp_t;
 typealias xauth_tmp_t alias { user_xauth_tmp_t staff_xauth_tmp_t sysadm_xauth_tmp_t };
+typealias xauth_tmp_t alias { xguest_xauth_tmp_t unconfined_xauth_tmp_t };
 typealias xauth_tmp_t alias { auditadm_xauth_tmp_t secadm_xauth_tmp_t };
 userdom_user_tmp_file(xauth_tmp_t)
 
@@ -154,19 +187,28 @@ files_type(xconsole_device_t)
 fs_associate_tmpfs(xconsole_device_t)
 files_associate_tmp(xconsole_device_t)
 
+type xdm_unconfined_exec_t;
+application_executable_file(xdm_unconfined_exec_t)
+
 type xdm_t;
 type xdm_exec_t;
 auth_login_pgm_domain(xdm_t)
 init_domain(xdm_t, xdm_exec_t)
-init_daemon_domain(xdm_t, xdm_exec_t)
+init_system_domain(xdm_t, xdm_exec_t)
 xserver_object_types_template(xdm)
 xserver_common_x_domain_template(xdm, xdm_t)
 
 type xdm_lock_t;
 files_lock_file(xdm_lock_t)
 
+type xdm_etc_t;
+files_config_file(xdm_etc_t)
+
 type xdm_rw_etc_t;
-files_type(xdm_rw_etc_t)
+files_config_file(xdm_rw_etc_t)
+
+type xdm_spool_t;
+files_spool_file(xdm_spool_t)
 
 type xdm_var_lib_t;
 files_type(xdm_var_lib_t)
@@ -174,13 +216,27 @@ files_type(xdm_var_lib_t)
 type xdm_var_run_t;
 files_pid_file(xdm_var_run_t)
 
+type xserver_var_lib_t;
+files_type(xserver_var_lib_t)
+
+type xserver_var_run_t;
+files_pid_file(xserver_var_run_t)
+
 type xdm_tmp_t;
 files_tmp_file(xdm_tmp_t)
-typealias xdm_tmp_t alias ice_tmp_t;
+typealias xdm_tmp_t alias { xserver_tmp_t user_xserver_tmp_t staff_xserver_tmp_t sysadm_xserver_tmp_t ice_tmp_t };
+typealias xdm_tmp_t alias { auditadm_xserver_tmp_t secadm_xserver_tmp_t xdm_xserver_tmp_t };
+userdom_user_tmp_file(xserver_tmp_t)
 
 type xdm_tmpfs_t;
 files_tmpfs_file(xdm_tmpfs_t)
 
+type xdm_home_t;
+userdom_user_home_content(xdm_home_t)
+
+type xdm_log_t;
+logging_log_file(xdm_log_t)
+
 # type for /var/lib/xkb
 type xkb_var_lib_t;
 files_type(xkb_var_lib_t)
@@ -193,14 +249,9 @@ typealias xserver_t alias { auditadm_xserver_t secadm_xserver_t xdm_xserver_t };
 init_system_domain(xserver_t, xserver_exec_t)
 ubac_constrained(xserver_t)
 
-type xserver_tmp_t;
-typealias xserver_tmp_t alias { user_xserver_tmp_t staff_xserver_tmp_t sysadm_xserver_tmp_t };
-typealias xserver_tmp_t alias { auditadm_xserver_tmp_t secadm_xserver_tmp_t xdm_xserver_tmp_t };
-userdom_user_tmp_file(xserver_tmp_t)
-
 type xserver_tmpfs_t;
-typealias xserver_tmpfs_t alias { user_xserver_tmpfs_t staff_xserver_tmpfs_t sysadm_xserver_tmpfs_t };
-typealias xserver_tmpfs_t alias { auditadm_xserver_tmpfs_t secadm_xserver_tmpfs_t xdm_xserver_tmpfs_t };
+typealias xserver_tmpfs_t alias { user_xserver_tmpfs_t staff_xserver_tmpfs_t sysadm_xserver_tmpfs_t xguest_xserver_tmpfs_t unconfined_xserver_tmpfs_t xdm_xserver_tmpfs_t };
+typealias xserver_tmpfs_t alias { auditadm_xserver_tmpfs_t secadm_xserver_tmpfs_t };
 userdom_user_tmpfs_file(xserver_tmpfs_t)
 
 type xsession_exec_t;
@@ -229,17 +280,30 @@ userdom_user_home_dir_filetrans(iceauth_t, iceauth_home_t, file)
 
 allow xdm_t iceauth_home_t:file read_file_perms;
 
+dev_read_rand(iceauth_t)
+
 fs_search_auto_mountpoints(iceauth_t)
 
-userdom_use_user_terminals(iceauth_t)
+userdom_use_inherited_user_terminals(iceauth_t)
 userdom_read_user_tmp_files(iceauth_t)
-
-tunable_policy(`use_nfs_home_dirs',`
-	fs_manage_nfs_files(iceauth_t)
-')
-
-tunable_policy(`use_samba_home_dirs',`
-	fs_manage_cifs_files(iceauth_t)
+userdom_read_all_users_state(iceauth_t)
+userdom_home_manager(iceauth_t)
+
+ifdef(`hide_broken_symptoms',`
+	dev_dontaudit_read_urand(iceauth_t)
+	dev_dontaudit_rw_dri(iceauth_t)
+	dev_dontaudit_rw_generic_dev_nodes(iceauth_t)
+	fs_dontaudit_list_inotifyfs(iceauth_t)
+	fs_dontaudit_rw_anon_inodefs_files(iceauth_t)
+	term_dontaudit_use_unallocated_ttys(iceauth_t)
+
+	userdom_dontaudit_read_user_home_content_files(iceauth_t)
+	userdom_dontaudit_write_user_home_content_files(iceauth_t)
+	userdom_dontaudit_write_user_tmp_files(iceauth_t)
+
+	optional_policy(`
+		mozilla_dontaudit_rw_user_home_files(iceauth_t)
+	')
 ')
 
 ########################################
@@ -247,45 +311,78 @@ tunable_policy(`use_samba_home_dirs',`
 # Xauth local policy
 #
 
+allow xauth_t self:capability dac_override;
 allow xauth_t self:process signal;
+allow xauth_t self:shm create_shm_perms;
 allow xauth_t self:unix_stream_socket create_stream_socket_perms;
+allow xauth_t self:unix_dgram_socket create_socket_perms;
+
+allow xauth_t xdm_t:process sigchld;
+allow xauth_t xserver_t:unix_stream_socket connectto;
+
+corenet_tcp_connect_xserver_port(xauth_t)
 
 allow xauth_t xauth_home_t:file manage_file_perms;
 userdom_user_home_dir_filetrans(xauth_t, xauth_home_t, file)
+userdom_admin_home_dir_filetrans(xauth_t, xauth_home_t, file)
+
+manage_dirs_pattern(xauth_t, xdm_var_run_t, xdm_var_run_t)
+manage_files_pattern(xauth_t, xdm_var_run_t, xdm_var_run_t)
 
 manage_dirs_pattern(xauth_t, xauth_tmp_t, xauth_tmp_t)
 manage_files_pattern(xauth_t, xauth_tmp_t, xauth_tmp_t)
 files_tmp_filetrans(xauth_t, xauth_tmp_t, { file dir })
 
-allow xdm_t xauth_home_t:file manage_file_perms;
-userdom_user_home_dir_filetrans(xdm_t, xauth_home_t, file)
+stream_connect_pattern(xauth_t, xserver_tmp_t, xserver_tmp_t, xserver_t)
 
+kernel_read_network_state(xauth_t)
+kernel_read_system_state(xauth_t)
 kernel_request_load_module(xauth_t)
 
 domain_use_interactive_fds(xauth_t)
+domain_dontaudit_leaks(xauth_t)
 
 files_read_etc_files(xauth_t)
+files_read_usr_files(xauth_t)
 files_search_pids(xauth_t)
+files_dontaudit_getattr_all_dirs(xauth_t)
+files_dontaudit_leaks(xauth_t)
+files_var_lib_filetrans(xauth_t, xauth_home_t, file)
 
-fs_getattr_xattr_fs(xauth_t)
+fs_dontaudit_leaks(xauth_t)
+fs_getattr_all_fs(xauth_t)
 fs_search_auto_mountpoints(xauth_t)
 
-# cjp: why?
-term_use_ptmx(xauth_t)
+# Probably a leak
+term_dontaudit_use_ptmx(xauth_t)
+term_dontaudit_use_console(xauth_t)
 
 auth_use_nsswitch(xauth_t)
 
-userdom_use_user_terminals(xauth_t)
+userdom_use_inherited_user_terminals(xauth_t)
 userdom_read_user_tmp_files(xauth_t)
+userdom_read_all_users_state(xauth_t)
 
 xserver_rw_xdm_tmp_files(xauth_t)
 
-tunable_policy(`use_nfs_home_dirs',`
-	fs_manage_nfs_files(xauth_t)
+ifdef(`hide_broken_symptoms',`
+	fs_dontaudit_rw_anon_inodefs_files(xauth_t)
+	fs_dontaudit_list_inotifyfs(xauth_t)
+	userdom_manage_user_home_content_files(xauth_t)
+	userdom_manage_user_tmp_files(xauth_t)
+	dev_dontaudit_rw_generic_dev_nodes(xauth_t)
+	miscfiles_read_fonts(xauth_t)
 ')
 
-tunable_policy(`use_samba_home_dirs',`
-	fs_manage_cifs_files(xauth_t)
+userdom_home_manager(xauth_t)
+
+ifdef(`hide_broken_symptoms',`
+	term_dontaudit_use_unallocated_ttys(xauth_t)
+	dev_dontaudit_rw_dri(xauth_t)
+')
+
+optional_policy(`
+	nx_var_lib_filetrans(xauth_t, xauth_home_t, file)
 ')
 
 optional_policy(`
@@ -299,20 +396,38 @@ optional_policy(`
 # XDM Local policy
 #
 
-allow xdm_t self:capability { setgid setuid sys_resource kill sys_tty_config mknod chown dac_override dac_read_search fowner fsetid ipc_owner sys_nice sys_rawio net_bind_service };
-allow xdm_t self:process { setexec setpgid getsched setsched setrlimit signal_perms setkeycreate };
+allow xdm_t self:capability { setgid setuid sys_resource kill sys_tty_config mknod chown dac_override dac_read_search fowner fsetid ipc_owner sys_nice sys_rawio net_bind_service sys_ptrace };
+dontaudit xdm_t self:capability sys_admin;
+
+allow xdm_t self:process { setexec setpgid getattr getcap setcap getsched getsession setsched setrlimit signal_perms setkeycreate };
 allow xdm_t self:fifo_file rw_fifo_file_perms;
 allow xdm_t self:shm create_shm_perms;
 allow xdm_t self:sem create_sem_perms;
 allow xdm_t self:unix_stream_socket { connectto create_stream_socket_perms };
-allow xdm_t self:unix_dgram_socket create_socket_perms;
+allow xdm_t self:unix_dgram_socket { create_socket_perms sendto };
 allow xdm_t self:tcp_socket create_stream_socket_perms;
 allow xdm_t self:udp_socket create_socket_perms;
+allow xdm_t self:netlink_kobject_uevent_socket create_socket_perms;
 allow xdm_t self:socket create_socket_perms;
 allow xdm_t self:appletalk_socket create_socket_perms;
 allow xdm_t self:key { search link write };
 
-allow xdm_t xconsole_device_t:fifo_file { getattr setattr };
+allow xdm_t xauth_home_t:file manage_file_perms;
+
+allow xdm_t xconsole_device_t:fifo_file { getattr_fifo_file_perms setattr_fifo_file_perms };
+manage_dirs_pattern(xdm_t, xkb_var_lib_t, xkb_var_lib_t)
+manage_files_pattern(xdm_t, xkb_var_lib_t, xkb_var_lib_t)
+
+manage_files_pattern(xdm_t, xdm_home_t, xdm_home_t)
+userdom_user_home_dir_filetrans(xdm_t, xdm_home_t, file)
+userdom_admin_home_dir_filetrans(xdm_t, xdm_home_t, file)
+xserver_filetrans_home_content(xdm_t)
+xserver_filetrans_admin_home_content(xdm_t)
+
+#Handle mislabeled files in homedir
+userdom_delete_user_home_content_files(xdm_t)
+userdom_signull_unpriv_users(xdm_t)
+userdom_dontaudit_read_admin_home_lnk_files(xdm_t)
 
 # Allow gdm to run gdm-binary
 can_exec(xdm_t, xdm_exec_t)
@@ -320,43 +435,63 @@ can_exec(xdm_t, xdm_exec_t)
 allow xdm_t xdm_lock_t:file manage_file_perms;
 files_lock_filetrans(xdm_t, xdm_lock_t, file)
 
+read_lnk_files_pattern(xdm_t, xdm_etc_t, xdm_etc_t)
+read_files_pattern(xdm_t, xdm_etc_t, xdm_etc_t)
 # wdm has its own config dir /etc/X11/wdm
 # this is ugly, daemons should not create files under /etc!
 manage_files_pattern(xdm_t, xdm_rw_etc_t, xdm_rw_etc_t)
 
 manage_dirs_pattern(xdm_t, xdm_tmp_t, xdm_tmp_t)
 manage_files_pattern(xdm_t, xdm_tmp_t, xdm_tmp_t)
+manage_lnk_files_pattern(xdm_t, xdm_tmp_t, xdm_tmp_t)
 manage_sock_files_pattern(xdm_t, xdm_tmp_t, xdm_tmp_t)
-files_tmp_filetrans(xdm_t, xdm_tmp_t, { file dir sock_file })
+files_tmp_filetrans(xdm_t, xdm_tmp_t, { file dir sock_file lnk_file })
+relabelfrom_dirs_pattern(xdm_t, xdm_tmp_t, xdm_tmp_t)
+relabelfrom_files_pattern(xdm_t, xdm_tmp_t, xdm_tmp_t)
+can_exec(xdm_t, xdm_tmp_t)
 
 manage_dirs_pattern(xdm_t, xdm_tmpfs_t, xdm_tmpfs_t)
 manage_files_pattern(xdm_t, xdm_tmpfs_t, xdm_tmpfs_t)
 manage_lnk_files_pattern(xdm_t, xdm_tmpfs_t, xdm_tmpfs_t)
 manage_fifo_files_pattern(xdm_t, xdm_tmpfs_t, xdm_tmpfs_t)
 manage_sock_files_pattern(xdm_t, xdm_tmpfs_t, xdm_tmpfs_t)
-fs_tmpfs_filetrans(xdm_t, xdm_tmpfs_t, { dir file lnk_file sock_file fifo_file })
+
+manage_files_pattern(xdm_t, user_fonts_t, user_fonts_t)
+
+files_search_spool(xdm_t)
+manage_dirs_pattern(xdm_t, xdm_spool_t, xdm_spool_t)
+manage_files_pattern(xdm_t, xdm_spool_t, xdm_spool_t)
+files_spool_filetrans(xdm_t, xdm_spool_t, { file dir })
 
 manage_dirs_pattern(xdm_t, xdm_var_lib_t, xdm_var_lib_t)
 manage_files_pattern(xdm_t, xdm_var_lib_t, xdm_var_lib_t)
-files_var_lib_filetrans(xdm_t, xdm_var_lib_t, file)
+manage_lnk_files_pattern(xdm_t, xdm_var_lib_t, xdm_var_lib_t)
+manage_sock_files_pattern(xdm_t, xdm_var_lib_t, xdm_var_lib_t)
+files_var_lib_filetrans(xdm_t, xdm_var_lib_t, { file dir })
+# Read machine-id
+files_read_var_lib_files(xdm_t)
 
 manage_dirs_pattern(xdm_t, xdm_var_run_t, xdm_var_run_t)
 manage_files_pattern(xdm_t, xdm_var_run_t, xdm_var_run_t)
 manage_fifo_files_pattern(xdm_t, xdm_var_run_t, xdm_var_run_t)
-files_pid_filetrans(xdm_t, xdm_var_run_t, { dir file fifo_file })
+manage_sock_files_pattern(xdm_t, xdm_var_run_t, xdm_var_run_t)
+files_pid_filetrans(xdm_t, xdm_var_run_t, { dir file fifo_file sock_file })
 
-allow xdm_t xserver_t:process signal;
+allow xdm_t xserver_t:process { signal signull };
 allow xdm_t xserver_t:unix_stream_socket connectto;
 
 allow xdm_t xserver_tmp_t:sock_file rw_sock_file_perms;
-allow xdm_t xserver_tmp_t:dir { setattr list_dir_perms };
+allow xdm_t xserver_tmp_t:dir { setattr_dir_perms list_dir_perms };
 
 # transition to the xdm xserver
 domtrans_pattern(xdm_t, xserver_exec_t, xserver_t)
+
+ps_process_pattern(xserver_t, xdm_t)
 allow xserver_t xdm_t:process signal;
 allow xdm_t xserver_t:process { noatsecure siginh rlimitinh signal sigkill };
 
 allow xdm_t xserver_t:shm rw_shm_perms;
+read_files_pattern(xdm_t, xserver_t, xserver_t)
 
 # connect to xdm xserver over stream socket
 stream_connect_pattern(xdm_t, xserver_tmp_t, xserver_tmp_t, xserver_t)
@@ -365,18 +500,26 @@ stream_connect_pattern(xdm_t, xserver_tmp_t, xserver_tmp_t, xserver_t)
 delete_files_pattern(xdm_t, xserver_tmp_t, xserver_tmp_t)
 delete_sock_files_pattern(xdm_t, xserver_tmp_t, xserver_tmp_t)
 
+manage_dirs_pattern(xdm_t, xdm_log_t, xdm_log_t)
+manage_files_pattern(xdm_t, xdm_log_t, xdm_log_t)
+manage_fifo_files_pattern(xdm_t, xdm_log_t, xdm_log_t)
+logging_log_filetrans(xdm_t, xdm_log_t, { dir file })
+
 manage_dirs_pattern(xdm_t, xserver_log_t, xserver_log_t)
 manage_files_pattern(xdm_t, xserver_log_t, xserver_log_t)
 manage_fifo_files_pattern(xdm_t, xserver_log_t, xserver_log_t)
-logging_log_filetrans(xdm_t, xserver_log_t, file)
 
 kernel_read_system_state(xdm_t)
+kernel_read_device_sysctls(xdm_t)
 kernel_read_kernel_sysctls(xdm_t)
 kernel_read_net_sysctls(xdm_t)
 kernel_read_network_state(xdm_t)
+kernel_request_load_module(xdm_t)
+kernel_stream_connect(xdm_t)
 
 corecmd_exec_shell(xdm_t)
 corecmd_exec_bin(xdm_t)
+corecmd_dontaudit_access_all_executables(xdm_t)
 
 corenet_all_recvfrom_unlabeled(xdm_t)
 corenet_all_recvfrom_netlabel(xdm_t)
@@ -388,38 +531,48 @@ corenet_tcp_sendrecv_all_ports(xdm_t)
 corenet_udp_sendrecv_all_ports(xdm_t)
 corenet_tcp_bind_generic_node(xdm_t)
 corenet_udp_bind_generic_node(xdm_t)
+corenet_udp_bind_ipp_port(xdm_t)
+corenet_udp_bind_xdmcp_port(xdm_t)
 corenet_tcp_connect_all_ports(xdm_t)
 corenet_sendrecv_all_client_packets(xdm_t)
 # xdm tries to bind to biff_port_t
 corenet_dontaudit_tcp_bind_all_ports(xdm_t)
 
+dev_rwx_zero(xdm_t)
 dev_read_rand(xdm_t)
-dev_read_sysfs(xdm_t)
+dev_rw_sysfs(xdm_t)
 dev_getattr_framebuffer_dev(xdm_t)
 dev_setattr_framebuffer_dev(xdm_t)
 dev_getattr_mouse_dev(xdm_t)
 dev_setattr_mouse_dev(xdm_t)
 dev_rw_apm_bios(xdm_t)
+dev_rw_input_dev(xdm_t)
 dev_setattr_apm_bios_dev(xdm_t)
 dev_rw_dri(xdm_t)
 dev_rw_agp(xdm_t)
 dev_getattr_xserver_misc_dev(xdm_t)
 dev_setattr_xserver_misc_dev(xdm_t)
+dev_rw_xserver_misc(xdm_t)
 dev_getattr_misc_dev(xdm_t)
 dev_setattr_misc_dev(xdm_t)
 dev_dontaudit_rw_misc(xdm_t)
-dev_getattr_video_dev(xdm_t)
+dev_read_video_dev(xdm_t)
+dev_write_video_dev(xdm_t)
 dev_setattr_video_dev(xdm_t)
 dev_getattr_scanner_dev(xdm_t)
 dev_setattr_scanner_dev(xdm_t)
-dev_getattr_sound_dev(xdm_t)
-dev_setattr_sound_dev(xdm_t)
+dev_read_sound(xdm_t)
+dev_write_sound(xdm_t)
 dev_getattr_power_mgmt_dev(xdm_t)
 dev_setattr_power_mgmt_dev(xdm_t)
+dev_getattr_null_dev(xdm_t)
+dev_setattr_null_dev(xdm_t)
 
 domain_use_interactive_fds(xdm_t)
 # Do not audit denied probes of /proc.
 domain_dontaudit_read_all_domains_state(xdm_t)
+domain_dontaudit_signal_all_domains(xdm_t)
+domain_dontaudit_getattr_all_entry_files(xdm_t)
 
 files_read_etc_files(xdm_t)
 files_read_var_files(xdm_t)
@@ -430,9 +583,25 @@ files_list_mnt(xdm_t)
 files_read_usr_files(xdm_t)
 # Poweroff wants to create the /poweroff file when run from xdm
 files_create_boot_flag(xdm_t)
+files_dontaudit_getattr_boot_dirs(xdm_t)
+files_dontaudit_write_usr_files(xdm_t)
+files_dontaudit_access_check_etc(xdm_t)
+files_dontaudit_getattr_all_dirs(xdm_t)
+files_dontaudit_getattr_all_symlinks(xdm_t)
+files_dontaudit_getattr_all_tmp_sockets(xdm_t)
+files_dontaudit_all_access_check(xdm_t)
 
 fs_getattr_all_fs(xdm_t)
 fs_search_auto_mountpoints(xdm_t)
+fs_rw_anon_inodefs_files(xdm_t)
+fs_mount_tmpfs(xdm_t)
+fs_list_inotifyfs(xdm_t)
+fs_dontaudit_list_noxattr_fs(xdm_t)
+fs_dontaudit_read_noxattr_fs_files(xdm_t)
+fs_manage_cgroup_dirs(xdm_t)
+fs_manage_cgroup_files(xdm_t)
+
+mls_socket_write_to_clearance(xdm_t)
 
 storage_dontaudit_read_fixed_disk(xdm_t)
 storage_dontaudit_write_fixed_disk(xdm_t)
@@ -441,28 +610,38 @@ storage_dontaudit_raw_read_removable_device(xdm_t)
 storage_dontaudit_raw_write_removable_device(xdm_t)
 storage_dontaudit_setattr_removable_dev(xdm_t)
 storage_dontaudit_rw_scsi_generic(xdm_t)
+storage_dontaudit_rw_fuse(xdm_t)
 
 term_setattr_console(xdm_t)
+term_use_console(xdm_t)
+term_use_virtio_console(xdm_t)
 term_use_unallocated_ttys(xdm_t)
 term_setattr_unallocated_ttys(xdm_t)
+term_relabel_all_ttys(xdm_t)
+term_relabel_unallocated_ttys(xdm_t)
 
 auth_domtrans_pam_console(xdm_t)
-auth_manage_pam_pid(xdm_t)
+#auth_manage_pam_pid(xdm_t)
 auth_manage_pam_console_data(xdm_t)
+auth_signal_pam(xdm_t)
 auth_rw_faillog(xdm_t)
 auth_write_login_records(xdm_t)
 
 # Run telinit->init to shutdown.
 init_telinit(xdm_t)
+init_dbus_chat(xdm_t)
+init_pid_filetrans(xdm_t, xdm_var_run_t, dir, "multi-session-x")
 
 libs_exec_lib_files(xdm_t)
 
 logging_read_generic_logs(xdm_t)
 
+miscfiles_search_man_pages(xdm_t)
 miscfiles_read_localization(xdm_t)
 miscfiles_read_fonts(xdm_t)
-
-sysnet_read_config(xdm_t)
+miscfiles_manage_fonts_cache(xdm_t)
+miscfiles_manage_localization(xdm_t)
+miscfiles_read_hwdata(xdm_t)
 
 userdom_dontaudit_use_unpriv_user_fds(xdm_t)
 userdom_create_all_users_keys(xdm_t)
@@ -471,24 +650,43 @@ userdom_read_user_home_content_files(xdm_t)
 # Search /proc for any user domain processes.
 userdom_read_all_users_state(xdm_t)
 userdom_signal_all_users(xdm_t)
+userdom_stream_connect(xdm_t)
+userdom_manage_user_tmp_dirs(xdm_t)
+userdom_manage_user_tmp_files(xdm_t)
+userdom_manage_user_tmp_sockets(xdm_t)
+userdom_manage_tmpfs_role(system_r, xdm_t)
+userdom_home_manager(xdm_t)
+
+application_signal(xdm_t)
 
 xserver_rw_session(xdm_t, xdm_tmpfs_t)
 xserver_unconfined(xdm_t)
+xserver_domtrans_xauth(xdm_t)
+
+ifndef(`distro_redhat',`
+	allow xdm_t self:process { execheap execmem };
+')
+
+ifdef(`distro_rhel4',`
+	allow xdm_t self:process { execheap execmem };
+')
 
 tunable_policy(`use_nfs_home_dirs',`
-	fs_manage_nfs_dirs(xdm_t)
-	fs_manage_nfs_files(xdm_t)
-	fs_manage_nfs_symlinks(xdm_t)
 	fs_exec_nfs_files(xdm_t)
 ')
 
 tunable_policy(`use_samba_home_dirs',`
-	fs_manage_cifs_dirs(xdm_t)
-	fs_manage_cifs_files(xdm_t)
-	fs_manage_cifs_symlinks(xdm_t)
 	fs_exec_cifs_files(xdm_t)
 ')
 
+optional_policy(`
+	tunable_policy(`xdm_exec_bootloader',`
+    	bootloader_exec(xdm_t)
+    	files_read_boot_files(xdm_t)
+    	files_read_boot_symlinks(xdm_t)
+	')
+')
+
 tunable_policy(`xdm_sysadm_login',`
 	userdom_xsession_spec_domtrans_all_users(xdm_t)
 	# FIXME:
@@ -502,11 +700,21 @@ tunable_policy(`xdm_sysadm_login',`
 ')
 
 optional_policy(`
+	accountsd_read_lib_files(xdm_t)
+')
+
+optional_policy(`
+	acct_dontaudit_list_data(xdm_t)
+')
+
+optional_policy(`
 	alsa_domtrans(xdm_t)
+	alsa_read_rw_config(xdm_t)
 ')
 
 optional_policy(`
 	consolekit_dbus_chat(xdm_t)
+	consolekit_read_log(xdm_t)
 ')
 
 optional_policy(`
@@ -514,12 +722,63 @@ optional_policy(`
 ')
 
 optional_policy(`
+	# Use dbus to start other processes as xdm_t
+	dbus_role_template(xdm, system_r, xdm_t)
+	
+	#fixes for xfce4-notifyd
+	allow xdm_dbusd_t self:unix_stream_socket connectto;
+	allow xdm_dbusd_t xserver_t:unix_stream_socket connectto;
+
+	dontaudit xdm_dbusd_t xdm_var_lib_t:dir search_dir_perms;
+	xserver_xdm_append_log(xdm_dbusd_t)
+	xserver_read_xdm_pid(xdm_dbusd_t)
+	
+	miscfiles_read_fonts(xdm_dbusd_t)
+
+	corecmd_bin_entry_type(xdm_t)
+
+	dbus_system_bus_client(xdm_t)
+
+	optional_policy(`
+		bluetooth_dbus_chat(xdm_t)
+	')
+
+	 optional_policy(`
+		cpufreqselector_dbus_chat(xdm_t)
+	')
+
+	optional_policy(`
+		devicekit_dbus_chat_disk(xdm_t)
+		devicekit_dbus_chat_power(xdm_t)
+	')
+
+	optional_policy(`
+		hal_dbus_chat(xdm_t)
+	')
+
+	optional_policy(`
+		networkmanager_dbus_chat(xdm_t)
+	')
+')
+
+optional_policy(`
 	# Talk to the console mouse server.
 	gpm_stream_connect(xdm_t)
 	gpm_setattr_gpmctl(xdm_t)
 ')
 
 optional_policy(`
+	gnome_exec_keyringd(xdm_t)
+	gnome_manage_config(xdm_t)
+	gnome_manage_gconf_home_files(xdm_t)
+	gnome_filetrans_home_content(xdm_t)
+	gnome_read_config(xdm_t)
+	gnome_read_usr_config(xdm_t)
+	gnome_read_gconf_config(xdm_t)
+	gnome_transition_gkeyringd(xdm_t)
+')
+
+optional_policy(`
 	hostname_exec(xdm_t)
 ')
 
@@ -537,28 +796,69 @@ optional_policy(`
 ')
 
 optional_policy(`
+	policykit_dbus_chat(xdm_t)
+	policykit_domtrans_auth(xdm_t)
+	policykit_read_lib(xdm_t)
+	policykit_read_reload(xdm_t)
+	policykit_signal_auth(xdm_t)
+')
+
+optional_policy(`
+	pcscd_stream_connect(xdm_t)
+')
+
+optional_policy(`
+	plymouthd_search_spool(xdm_t)
+	plymouthd_exec_plymouth(xdm_t)
+	plymouthd_stream_connect(xdm_t)
+	plymouthd_read_log(xdm_t)
+')
+
+optional_policy(`
+	pulseaudio_exec(xdm_t)
+	pulseaudio_dbus_chat(xdm_t)
+	pulseaudio_stream_connect(xdm_t)
+')
+
+optional_policy(`
 	resmgr_stream_connect(xdm_t)
 ')
 
 optional_policy(`
+    rhev_stream_connect_agentd(xdm_t)
+	rhev_read_pid_files_agentd(xdm_t)
+')
+
+# On crash gdm execs gdb to dump stack
+optional_policy(`
+	rpm_exec(xdm_t)
+	rpm_read_db(xdm_t)
+	rpm_dontaudit_manage_db(xdm_t)
+	rpm_dontaudit_dbus_chat(xdm_t)
+')
+
+optional_policy(`
+	rtkit_scheduled(xdm_t)
+')
+
+optional_policy(`
 	seutil_sigchld_newrole(xdm_t)
 ')
 
 optional_policy(`
-	udev_read_db(xdm_t)
+	ssh_signull(xdm_t)
 ')
 
 optional_policy(`
-	unconfined_domain(xdm_t)
-	unconfined_domtrans(xdm_t)
+	shutdown_domtrans(xdm_t)
+')
 
-	ifndef(`distro_redhat',`
-		allow xdm_t self:process { execheap execmem };
-	')
+optional_policy(`
+	udev_read_db(xdm_t)
+')
 
-	ifdef(`distro_rhel4',`
-		allow xdm_t self:process { execheap execmem };
-	')
+optional_policy(`
+	unconfined_signal(xdm_t)
 ')
 
 optional_policy(`
@@ -570,6 +870,14 @@ optional_policy(`
 ')
 
 optional_policy(`
+    vdagent_stream_connect(xdm_t)
+')
+
+optional_policy(`
+	wm_exec(xdm_t)
+')
+
+optional_policy(`
 	xfs_stream_connect(xdm_t)
 ')
 
@@ -594,7 +902,8 @@ allow xserver_t input_xevent_t:x_event send;
 # execheap needed until the X module loader is fixed.
 # NVIDIA Needs execstack
 
-allow xserver_t self:capability { dac_override fowner fsetid setgid setuid ipc_owner sys_rawio sys_admin sys_nice sys_tty_config mknod net_bind_service };
+allow xserver_t self:capability { sys_ptrace dac_override fowner fsetid setgid setuid ipc_owner sys_rawio sys_admin sys_nice sys_tty_config mknod net_bind_service };
+
 dontaudit xserver_t self:capability chown;
 allow xserver_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
 allow xserver_t self:fd use;
@@ -608,8 +917,15 @@ allow xserver_t self:unix_dgram_socket { create_socket_perms sendto };
 allow xserver_t self:unix_stream_socket { create_stream_socket_perms connectto };
 allow xserver_t self:tcp_socket create_stream_socket_perms;
 allow xserver_t self:udp_socket create_socket_perms;
+allow xserver_t self:netlink_selinux_socket create_socket_perms;
 allow xserver_t self:netlink_kobject_uevent_socket create_socket_perms;
 
+allow xserver_t { input_xevent_t input_xevent_type }:x_event send;
+
+domtrans_pattern(xserver_t, xauth_exec_t, xauth_t)
+
+allow xserver_t xauth_home_t:file read_file_perms;
+
 manage_dirs_pattern(xserver_t, xserver_tmp_t, xserver_tmp_t)
 manage_files_pattern(xserver_t, xserver_tmp_t, xserver_tmp_t)
 manage_sock_files_pattern(xserver_t, xserver_tmp_t, xserver_tmp_t)
@@ -628,12 +944,19 @@ manage_files_pattern(xserver_t, xkb_var_lib_t, xkb_var_lib_t)
 manage_lnk_files_pattern(xserver_t, xkb_var_lib_t, xkb_var_lib_t)
 files_search_var_lib(xserver_t)
 
-domtrans_pattern(xserver_t, xauth_exec_t, xauth_t)
-allow xserver_t xauth_home_t:file read_file_perms;
+manage_dirs_pattern(xserver_t, xserver_var_lib_t, xserver_var_lib_t)
+manage_files_pattern(xserver_t, xserver_var_lib_t, xserver_var_lib_t)
+files_var_lib_filetrans(xserver_t, xserver_var_lib_t, dir)
+
+manage_dirs_pattern(xserver_t, xserver_var_run_t, xserver_var_run_t)
+manage_files_pattern(xserver_t, xserver_var_run_t, xserver_var_run_t)
+manage_sock_files_pattern(xserver_t, xdm_var_run_t, xdm_var_run_t)
+files_pid_filetrans(xserver_t, xserver_var_run_t, { file dir })
 
 # Create files in /var/log with the xserver_log_t type.
 manage_files_pattern(xserver_t, xserver_log_t, xserver_log_t)
 logging_log_filetrans(xserver_t, xserver_log_t, file)
+manage_files_pattern(xserver_t, xdm_log_t, xdm_log_t)
 
 kernel_read_system_state(xserver_t)
 kernel_read_device_sysctls(xserver_t)
@@ -641,6 +964,7 @@ kernel_read_modprobe_sysctls(xserver_t)
 # Xorg wants to check if kernel is tainted
 kernel_read_kernel_sysctls(xserver_t)
 kernel_write_proc_files(xserver_t)
+kernel_request_load_module(xserver_t)
 
 # Run helper programs in xserver_t.
 corecmd_exec_bin(xserver_t)
@@ -667,23 +991,28 @@ dev_rw_apm_bios(xserver_t)
 dev_rw_agp(xserver_t)
 dev_rw_framebuffer(xserver_t)
 dev_manage_dri_dev(xserver_t)
-dev_filetrans_dri(xserver_t)
 dev_create_generic_dirs(xserver_t)
 dev_setattr_generic_dirs(xserver_t)
 # raw memory access is needed if not using the frame buffer
 dev_read_raw_memory(xserver_t)
 dev_wx_raw_memory(xserver_t)
 # for other device nodes such as the NVidia binary-only driver
-dev_rw_xserver_misc(xserver_t)
+dev_manage_xserver_misc(xserver_t)
+dev_filetrans_xserver_misc(xserver_t)
+
 # read events - the synaptics touchpad driver reads raw events
 dev_rw_input_dev(xserver_t)
+dev_read_raw_memory(xserver_t)
+dev_write_raw_memory(xserver_t)
 dev_rwx_zero(xserver_t)
 
-domain_dontaudit_search_all_domains_state(xserver_t)
+domain_dontaudit_read_all_domains_state(xserver_t)
+domain_signal_all_domains(xserver_t)
 
 files_read_etc_files(xserver_t)
 files_read_etc_runtime_files(xserver_t)
 files_read_usr_files(xserver_t)
+files_rw_tmpfs_files(xserver_t)
 
 # brought on by rhgb
 files_search_mnt(xserver_t)
@@ -694,8 +1023,13 @@ fs_getattr_xattr_fs(xserver_t)
 fs_search_nfs(xserver_t)
 fs_search_auto_mountpoints(xserver_t)
 fs_search_ramfs(xserver_t)
+fs_rw_tmpfs_files(xserver_t)
 
 mls_xwin_read_to_clearance(xserver_t)
+mls_process_write_to_clearance(xserver_t)
+mls_file_read_to_clearance(xserver_t)
+mls_file_write_all_levels(xserver_t)
+mls_file_upgrade(xserver_t)
 
 selinux_validate_context(xserver_t)
 selinux_compute_access_vector(xserver_t)
@@ -708,8 +1042,6 @@ init_getpgid(xserver_t)
 term_setattr_unallocated_ttys(xserver_t)
 term_use_unallocated_ttys(xserver_t)
 
-getty_use_fds(xserver_t)
-
 locallogin_use_fds(xserver_t)
 
 logging_send_syslog_msg(xserver_t)
@@ -717,11 +1049,12 @@ logging_send_audit_msgs(xserver_t)
 
 miscfiles_read_localization(xserver_t)
 miscfiles_read_fonts(xserver_t)
-
-modutils_domtrans_insmod(xserver_t)
+miscfiles_read_hwdata(xserver_t)
 
 # read x_contexts
 seutil_read_default_contexts(xserver_t)
+seutil_read_config(xserver_t)
+seutil_read_file_contexts(xserver_t)
 
 userdom_search_user_home_dirs(xserver_t)
 userdom_use_user_ttys(xserver_t)
@@ -775,16 +1108,40 @@ optional_policy(`
 ')
 
 optional_policy(`
+	consolekit_read_state(xserver_t)
+')
+
+optional_policy(`
+	devicekit_signal_power(xserver_t)
+')
+
+optional_policy(`
+	getty_use_fds(xserver_t)
+')
+
+optional_policy(`
+	modutils_domtrans_insmod(xserver_t)
+')
+
+optional_policy(`
 	rhgb_getpgid(xserver_t)
 	rhgb_signal(xserver_t)
 ')
 
 optional_policy(`
+	setrans_translate_context(xserver_t)
+')
+
+optional_policy(`
+	sandbox_rw_xserver_tmpfs_files(xserver_t)
+')
+
+optional_policy(`
 	udev_read_db(xserver_t)
 ')
 
 optional_policy(`
-	unconfined_domain_noaudit(xserver_t)
+	unconfined_domain(xserver_t)
 	unconfined_domtrans(xserver_t)
 ')
 
@@ -793,6 +1150,10 @@ optional_policy(`
 ')
 
 optional_policy(`
+	wine_rw_shm(xserver_t)
+')
+
+optional_policy(`
 	xfs_stream_connect(xserver_t)
 ')
 
@@ -808,10 +1169,10 @@ allow xserver_t xdm_t:shm rw_shm_perms;
 
 # NB we do NOT allow xserver_t xdm_var_lib_t:dir, only access to an open
 # handle of a file inside the dir!!!
-allow xserver_t xdm_var_lib_t:file { getattr read };
-dontaudit xserver_t xdm_var_lib_t:dir search;
+allow xserver_t xdm_var_lib_t:file read_file_perms;
+dontaudit xserver_t xdm_var_lib_t:dir search_dir_perms;
 
-allow xserver_t xdm_var_run_t:file read_file_perms;
+read_files_pattern(xserver_t, xdm_var_run_t, xdm_var_run_t)
 
 # Label pid and temporary files with derived types.
 manage_files_pattern(xserver_t, xdm_tmp_t, xdm_tmp_t)
@@ -819,7 +1180,7 @@ manage_lnk_files_pattern(xserver_t, xdm_tmp_t, xdm_tmp_t)
 manage_sock_files_pattern(xserver_t, xdm_tmp_t, xdm_tmp_t)
 
 # Run xkbcomp.
-allow xserver_t xkb_var_lib_t:lnk_file read;
+allow xserver_t xkb_var_lib_t:lnk_file read_lnk_file_perms;
 can_exec(xserver_t, xkb_var_lib_t)
 
 # VNC v4 module in X server
@@ -832,26 +1193,21 @@ init_use_fds(xserver_t)
 # to read ROLE_home_t - examine this in more detail
 # (xauth?)
 userdom_read_user_home_content_files(xserver_t)
+userdom_read_all_users_state(xserver_t)
+userdom_home_manager(xserver_t)
 
-tunable_policy(`use_nfs_home_dirs',`
-	fs_manage_nfs_dirs(xserver_t)
-	fs_manage_nfs_files(xserver_t)
-	fs_manage_nfs_symlinks(xserver_t)
-')
-
-tunable_policy(`use_samba_home_dirs',`
-	fs_manage_cifs_dirs(xserver_t)
-	fs_manage_cifs_files(xserver_t)
-	fs_manage_cifs_symlinks(xserver_t)
-')
+xserver_use_user_fonts(xserver_t)
 
 optional_policy(`
 	dbus_system_bus_client(xserver_t)
-	hal_dbus_chat(xserver_t)
+
+	optional_policy(`
+		hal_dbus_chat(xserver_t)
+	')
 ')
 
 optional_policy(`
-	resmgr_stream_connect(xdm_t)
+	mono_rw_shm(xserver_t)
 ')
 
 optional_policy(`
@@ -859,6 +1215,10 @@ optional_policy(`
 	rhgb_rw_tmpfs_files(xserver_t)
 ')
 
+optional_policy(`
+	userhelper_search_config(xserver_t)
+')
+
 ########################################
 #
 # Rules common to all X window domains
@@ -902,7 +1262,7 @@ allow x_domain xproperty_t:x_property { getattr create read write append destroy
 allow x_domain root_xdrawable_t:x_drawable { getattr setattr list_child add_child remove_child send receive hide show };
 # operations allowed on my windows
 allow x_domain self:x_drawable { create destroy getattr setattr read write show hide list_child add_child remove_child manage send receive };
-allow x_domain self:x_drawable { blend };
+allow x_domain self:x_drawable blend;
 # operations allowed on all windows
 allow x_domain x_domain:x_drawable { getattr get_property set_property remove_child };
 
@@ -956,11 +1316,31 @@ allow x_domain self:x_resource { read write };
 # can mess with the screensaver
 allow x_domain xserver_t:x_screen { getattr saver_getattr };
 
+# Device rules
+allow x_domain xserver_t:x_device { read getattr use setattr setfocus grab bell };
+allow x_domain xserver_t:x_screen getattr;
+
 ########################################
 #
 # Rules for unconfined access to this module
 #
 
+allow xserver_unconfined_type xserver_t:x_server *;
+allow xserver_unconfined_type xdrawable_type:x_drawable *;
+allow xserver_unconfined_type xserver_t:x_screen *;
+allow xserver_unconfined_type x_domain:x_gc *;
+allow xserver_unconfined_type xcolormap_type:x_colormap *;
+allow xserver_unconfined_type xproperty_type:x_property *;
+allow xserver_unconfined_type xselection_type:x_selection *;
+allow xserver_unconfined_type x_domain:x_cursor *;
+allow xserver_unconfined_type x_domain:x_client *;
+allow xserver_unconfined_type { x_domain xserver_t }:x_device *;
+allow xserver_unconfined_type { x_domain xserver_t }:x_pointer *;
+allow xserver_unconfined_type { x_domain xserver_t }:x_keyboard *;
+allow xserver_unconfined_type xextension_type:x_extension *;
+allow xserver_unconfined_type { x_domain xserver_t }:x_resource *;
+allow xserver_unconfined_type xevent_type:{ x_event x_synthetic_event } *;
+
 tunable_policy(`! xserver_object_manager',`
 	# should be xserver_unconfined(x_domain),
 	# but typeattribute doesnt work in conditionals
@@ -982,18 +1362,43 @@ tunable_policy(`! xserver_object_manager',`
 	allow x_domain xevent_type:{ x_event x_synthetic_event } *;
 ')
 
-allow xserver_unconfined_type xserver_t:x_server *;
-allow xserver_unconfined_type xdrawable_type:x_drawable *;
-allow xserver_unconfined_type xserver_t:x_screen *;
-allow xserver_unconfined_type x_domain:x_gc *;
-allow xserver_unconfined_type xcolormap_type:x_colormap *;
-allow xserver_unconfined_type xproperty_type:x_property *;
-allow xserver_unconfined_type xselection_type:x_selection *;
-allow xserver_unconfined_type x_domain:x_cursor *;
-allow xserver_unconfined_type x_domain:x_client *;
-allow xserver_unconfined_type { x_domain xserver_t }:x_device *;
-allow xserver_unconfined_type { x_domain xserver_t }:x_pointer *;
-allow xserver_unconfined_type { x_domain xserver_t }:x_keyboard *;
-allow xserver_unconfined_type xextension_type:x_extension *;
-allow xserver_unconfined_type { x_domain xserver_t }:x_resource *;
-allow xserver_unconfined_type xevent_type:{ x_event x_synthetic_event } *;
+tunable_policy(`xserver_execmem',`
+	allow xserver_t self:process { execheap execmem execstack };
+')
+
+# Hack to handle the problem of using the nvidia blobs
+tunable_policy(`deny_execmem',`',`
+	allow xdm_t self:process execmem;
+')
+
+tunable_policy(`selinuxuser_execstack',`
+	allow xdm_t self:process { execstack execmem };
+')
+
+tunable_policy(`use_nfs_home_dirs',`
+	fs_append_nfs_files(xdmhomewriter)
+')
+
+tunable_policy(`use_nfs_home_dirs',`
+	fs_append_nfs_files(xdmhomewriter)
+')
+
+optional_policy(`
+	unconfined_rw_shm(xserver_t)
+
+	# xserver signals unconfined user on startx
+	unconfined_signal(xserver_t)
+	unconfined_getpgid(xserver_t)
+')
+
+can_exec(xdm_t, xdm_unconfined_exec_t)
+
+optional_policy(`
+	type xdm_unconfined_t;
+	domain_type(xdm_unconfined_t)
+	domain_entry_file(xdm_unconfined_t, xdm_unconfined_exec_t)
+	role system_r types xdm_unconfined_t;
+
+	domtrans_pattern(xdm_t, xdm_unconfined_exec_t, xdm_unconfined_t)
+	unconfined_domain(xdm_unconfined_t)
+')
diff --git a/policy/modules/system/application.if b/policy/modules/system/application.if
index 1b6619e..3aed6ad 100644
--- a/policy/modules/system/application.if
+++ b/policy/modules/system/application.if
@@ -189,6 +189,24 @@ interface(`application_dontaudit_signal',`
 
 ########################################
 ## <summary>
+##	Send kill signals to all application domains.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`application_sigkill',`
+	gen_require(`
+		attribute application_domain_type;
+	')
+
+	allow $1 application_domain_type:process sigkill;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to send kill signals
 ##	to all application domains.
 ## </summary>
@@ -205,3 +223,21 @@ interface(`application_dontaudit_sigkill',`
 
 	dontaudit $1 application_domain_type:process sigkill;
 ')
+
+#######################################
+## <summary>
+##  Getattr all application sockets.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`application_getattr_socket',`
+    gen_require(`
+        attribute application_domain_type;
+    ')
+
+    allow $1 application_domain_type:socket_class_set getattr;
+')
diff --git a/policy/modules/system/application.te b/policy/modules/system/application.te
index c6fdab7..32f45fa 100644
--- a/policy/modules/system/application.te
+++ b/policy/modules/system/application.te
@@ -6,6 +6,28 @@ attribute application_domain_type;
 # Executables to be run by user
 attribute application_exec_type;
 
+domain_use_interactive_fds(application_domain_type)
+
+userdom_inherit_append_user_home_content_files(application_domain_type)
+userdom_inherit_append_admin_home_files(application_domain_type)
+userdom_inherit_append_user_tmp_files(application_domain_type)
+logging_inherit_append_all_logs(application_domain_type)
+
+files_dontaudit_search_all_dirs(application_domain_type)
+
+optional_policy(`
+	afs_rw_udp_sockets(application_domain_type)
+')
+
+optional_policy(`
+	cfengine_append_inherited_log(application_domain_type)
+')
+
+optional_policy(`
+	cron_rw_inherited_user_spool_files(application_domain_type)
+	cron_sigchld(application_domain_type)
+')
+
 optional_policy(`
 	cron_sigchld(application_domain_type)
 ')
diff --git a/policy/modules/system/authlogin.fc b/policy/modules/system/authlogin.fc
index 28ad538..82def3d 100644
--- a/policy/modules/system/authlogin.fc
+++ b/policy/modules/system/authlogin.fc
@@ -1,3 +1,7 @@
+HOME_DIR/\.google_authenticator			gen_context(system_u:object_r:auth_home_t,s0)
+HOME_DIR/\.google_authenticator~		gen_context(system_u:object_r:auth_home_t,s0)
+/root/\.google_authenticator			gen_context(system_u:object_r:auth_home_t,s0)
+/root/\.google_authenticator~			gen_context(system_u:object_r:auth_home_t,s0)
 
 /bin/login		--	gen_context(system_u:object_r:login_exec_t,s0)
 
@@ -5,7 +9,12 @@
 /etc/group\.lock	--	gen_context(system_u:object_r:shadow_t,s0)
 /etc/gshadow.*		--	gen_context(system_u:object_r:shadow_t,s0)
 /etc/passwd\.lock	--	gen_context(system_u:object_r:shadow_t,s0)
+/etc/passwd\.adjunct.*	--	gen_context(system_u:object_r:shadow_t,s0)
 /etc/shadow.*		--	gen_context(system_u:object_r:shadow_t,s0)
+/etc/passwd[-\+]?	--	gen_context(system_u:object_r:passwd_file_t,s0)
+/etc/passwd\.OLD	--	gen_context(system_u:object_r:passwd_file_t,s0)
+/etc/ptmptmp		--	gen_context(system_u:object_r:passwd_file_t,s0)
+/etc/group[-\+]?	--	gen_context(system_u:object_r:passwd_file_t,s0)
 
 /sbin/pam_console_apply	 --	gen_context(system_u:object_r:pam_console_exec_t,s0)
 /sbin/pam_timestamp_check --	gen_context(system_u:object_r:pam_exec_t,s0)
@@ -16,13 +25,22 @@ ifdef(`distro_suse', `
 /sbin/unix2_chkpwd	--	gen_context(system_u:object_r:chkpwd_exec_t,s0)
 ')
 
+/usr/bin/login		--	gen_context(system_u:object_r:login_exec_t,s0)
+
 /usr/kerberos/sbin/login\.krb5 -- gen_context(system_u:object_r:login_exec_t,s0)
 
-/usr/sbin/utempter	--	gen_context(system_u:object_r:utempter_exec_t,s0)
-/usr/sbin/validate	--	gen_context(system_u:object_r:chkpwd_exec_t,s0)
+/usr/sbin/pam_console_apply	 --	gen_context(system_u:object_r:pam_console_exec_t,s0)
+/usr/sbin/pam_timestamp_check	 --	gen_context(system_u:object_r:pam_exec_t,s0)
+/usr/sbin/unix_chkpwd	--	gen_context(system_u:object_r:chkpwd_exec_t,s0)
+/usr/sbin/unix_update	--	gen_context(system_u:object_r:updpwd_exec_t,s0)
+/usr/sbin/unix_verify	--	gen_context(system_u:object_r:chkpwd_exec_t,s0)
 ifdef(`distro_gentoo', `
 /usr/sbin/unix_chkpwd	--	gen_context(system_u:object_r:chkpwd_exec_t,s0)
 ')
+/usr/sbin/utempter	--	gen_context(system_u:object_r:utempter_exec_t,s0)
+/usr/sbin/validate	--	gen_context(system_u:object_r:chkpwd_exec_t,s0)
+
+/var/ace(/.*)?			gen_context(system_u:object_r:var_auth_t,s0)
 
 /var/cache/coolkey(/.*)?	gen_context(system_u:object_r:auth_cache_t,s0)
 
@@ -30,6 +48,8 @@ ifdef(`distro_gentoo', `
 
 /var/lib/abl(/.*)?		gen_context(system_u:object_r:var_auth_t,s0)
 /var/lib/pam_ssh(/.*)?		gen_context(system_u:object_r:var_auth_t,s0)
+/var/lib/pam_shield(/.*)?	gen_context(system_u:object_r:var_auth_t,s0)
+/var/lib/google-authenticator(/.*)?	gen_context(system_u:object_r:var_auth_t,s0)
 
 /var/log/btmp.*		--	gen_context(system_u:object_r:faillog_t,s0)
 /var/log/dmesg		--	gen_context(system_u:object_r:var_log_t,s0)
@@ -39,11 +59,13 @@ ifdef(`distro_gentoo', `
 /var/log/tallylog	--	gen_context(system_u:object_r:faillog_t,s0)
 /var/log/wtmp.*		--	gen_context(system_u:object_r:wtmp_t,s0)
 
+/var/lib/rsa(/.*)? 		gen_context(system_u:object_r:var_auth_t,s0)
+/var/rsa(/.*)?	 		gen_context(system_u:object_r:var_auth_t,s0)
+
 /var/run/console(/.*)?	 	gen_context(system_u:object_r:pam_var_console_t,s0)
 /var/run/faillock(/.*)?		gen_context(system_u:object_r:faillog_t,s0)
 /var/run/pam_mount(/.*)?	gen_context(system_u:object_r:pam_var_run_t,s0)
 /var/run/pam_ssh(/.*)?		gen_context(system_u:object_r:var_auth_t,s0)
 /var/run/sepermit(/.*)? 	gen_context(system_u:object_r:pam_var_run_t,s0)
 /var/run/sudo(/.*)?		gen_context(system_u:object_r:pam_var_run_t,s0)
-/var/run/user(/.*)?		gen_context(system_u:object_r:var_auth_t,s0)
 /var/(db|lib|adm)/sudo(/.*)?	gen_context(system_u:object_r:pam_var_run_t,s0)
diff --git a/policy/modules/system/authlogin.if b/policy/modules/system/authlogin.if
index 6ce867a..283f236 100644
--- a/policy/modules/system/authlogin.if
+++ b/policy/modules/system/authlogin.if
@@ -23,11 +23,17 @@ interface(`auth_role',`
 	role $1 types chkpwd_t;
 
 	# Transition from the user domain to this domain.
-	domtrans_pattern($2, chkpwd_exec_t, chkpwd_t)
+	auth_domtrans_chkpwd($2)
 
 	ps_process_pattern($2, chkpwd_t)
 
 	dontaudit $2 shadow_t:file read_file_perms;
+
+	logging_send_syslog_msg($2)
+	logging_send_audit_msgs($2)
+
+	usermanage_read_crack_db($2)
+
 ')
 
 ########################################
@@ -57,6 +63,8 @@ interface(`auth_use_pam',`
 	auth_exec_pam($1)
 	auth_use_nsswitch($1)
 
+	init_rw_stream_sockets($1)
+
 	logging_send_audit_msgs($1)
 	logging_send_syslog_msg($1)
 
@@ -78,8 +86,19 @@ interface(`auth_use_pam',`
 	')
 
 	optional_policy(`
+		locallogin_getattr_home_content($1)
+ 	')
+
+	optional_policy(`
 		nis_authenticate($1)
 	')
+
+	optional_policy(`
+		systemd_dbus_chat_logind($1)
+		systemd_use_fds_logind($1)
+		systemd_write_inherited_logind_sessions_pipes($1)
+		systemd_read_logind_sessions_files($1)
+	')
 ')
 
 ########################################
@@ -95,9 +114,13 @@ interface(`auth_use_pam',`
 interface(`auth_login_pgm_domain',`
 	gen_require(`
 		type var_auth_t, auth_cache_t;
+		attribute polydomain;
+		type auth_home_t;
 	')
 
 	domain_type($1)
+	typeattribute $1 polydomain;
+
 	domain_subj_id_change_exemption($1)
 	domain_role_change_exemption($1)
 	domain_obj_id_change_exemption($1)
@@ -105,14 +128,17 @@ interface(`auth_login_pgm_domain',`
 
 	# Needed for pam_selinux_permit to cleanup properly
 	domain_read_all_domains_state($1)
+	corecmd_getattr_all_executables($1)
 	domain_kill_all_domains($1)
 
 	# pam_keyring
 	allow $1 self:capability ipc_lock;
 	allow $1 self:process setkeycreate;
 	allow $1 self:key manage_key_perms;
+	userdom_manage_all_users_keys($1)
 
 	files_list_var_lib($1)
+	manage_dirs_pattern($1, var_auth_t, var_auth_t)
 	manage_files_pattern($1, var_auth_t, var_auth_t)
 
 	manage_dirs_pattern($1, auth_cache_t, auth_cache_t)
@@ -120,16 +146,29 @@ interface(`auth_login_pgm_domain',`
 	manage_sock_files_pattern($1, auth_cache_t, auth_cache_t)
 	files_var_filetrans($1, auth_cache_t, dir)
 
+	manage_dirs_pattern($1, auth_home_t, auth_home_t)
+	manage_files_pattern($1, auth_home_t, auth_home_t)
+	auth_filetrans_admin_home_content($1)
+	auth_filetrans_home_content($1)
+
 	# needed for afs - https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=253321
 	kernel_rw_afs_state($1)
+	kernel_search_network_sysctl($1)
+
+	tunable_policy(`authlogin_radius',`
+		corenet_udp_bind_all_unreserved_ports($1)
+	')
+	corenet_tcp_connect_pki_ca_port($1)
 
 	# for fingerprint readers
 	dev_rw_input_dev($1)
 	dev_rw_generic_usb_dev($1)
 
-	files_read_etc_files($1)
+	files_read_config_files($1)
 
 	fs_list_auto_mountpoints($1)
+	fs_manage_cgroup_dirs($1)
+	fs_manage_cgroup_files($1)
 
 	selinux_get_fs_mount($1)
 	selinux_validate_context($1)
@@ -145,6 +184,8 @@ interface(`auth_login_pgm_domain',`
 	mls_process_set_level($1)
 	mls_fd_share_all_levels($1)
 
+	auth_manage_faillog($1)
+	auth_manage_pam_pid($1)
 	auth_use_pam($1)
 
 	init_rw_utmp($1)
@@ -155,9 +196,83 @@ interface(`auth_login_pgm_domain',`
 	seutil_read_config($1)
 	seutil_read_default_contexts($1)
 
-	tunable_policy(`allow_polyinstantiation',`
-		files_polyinstantiate_all($1)
+	userdom_set_rlimitnh($1)
+	userdom_read_user_home_content_symlinks($1)
+	userdom_delete_user_tmp_files($1)
+	userdom_search_admin_dir($1)
+	userdom_stream_connect($1)
+	userdom_manage_user_tmp_files($1)
+
+	optional_policy(`
+		afs_rw_udp_sockets($1)
+	')
+
+	optional_policy(`
+		kerberos_read_config($1)
+	')
+
+	optional_policy(`
+		oddjob_dbus_chat($1)
+		oddjob_domtrans_mkhomedir($1)
+	')
+
+	optional_policy(`
+		openct_stream_connect($1)
+		openct_signull($1)
+		openct_read_pid_files($1)
+	')
+
+	optional_policy(`
+		corecmd_exec_bin($1)
+		storage_getattr_fixed_disk_dev($1)
+		mount_domtrans($1)
+	')
+
+	optional_policy(`
+		fprintd_dbus_chat($1)
+	')
+
+	optional_policy(`
+		ssh_agent_exec($1)
+		ssh_read_user_home_files($1)
+	')
+')
+
+########################################
+## <summary>
+##	Read authlogin state files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`authlogin_read_state',`
+	gen_require(`
+		attribute polydomain;
+	')
+
+	kernel_search_proc($1)
+	ps_process_pattern($1, polydomain)
+')
+
+########################################
+## <summary>
+##	Read and write a authlogin unnamed pipe.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`authlogin_rw_pipes',`
+	gen_require(`
+		attribute polydomain;
 	')
+
+	allow $1 polydomain:fifo_file rw_inherited_fifo_file_perms;
 ')
 
 ########################################
@@ -395,13 +510,15 @@ interface(`auth_domtrans_chk_passwd',`
 	')
 
 	optional_policy(`
-		pcscd_read_pub_files($1)
+		pcscd_manage_pub_files($1)
+		pcscd_manage_pub_pipes($1)
 		pcscd_stream_connect($1)
 	')
 
 	optional_policy(`
 		samba_stream_connect_winbind($1)
 	')
+	auth_domtrans_upd_passwd($1)
 ')
 
 ########################################
@@ -448,6 +565,25 @@ interface(`auth_run_chk_passwd',`
 
 	auth_domtrans_chk_passwd($1)
 	role $2 types chkpwd_t;
+	auth_run_upd_passwd($1, $2)
+')
+
+########################################
+## <summary>
+##	Send generic signals to chkpwd processes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`auth_signal_chk_passwd',`
+	gen_require(`
+		type chkpwd_t;
+	')
+
+	allow $1 chkpwd_t:process signal;
 ')
 
 ########################################
@@ -467,7 +603,6 @@ interface(`auth_domtrans_upd_passwd',`
 
 	domtrans_pattern($1, updpwd_exec_t, updpwd_t)
 	auth_dontaudit_read_shadow($1)
-
 ')
 
 ########################################
@@ -664,6 +799,10 @@ interface(`auth_manage_shadow',`
 
 	allow $1 shadow_t:file manage_file_perms;
 	typeattribute $1 can_read_shadow_passwords, can_write_shadow_passwords;
+	files_var_filetrans($1, shadow_t, file, "shadow")
+	files_var_filetrans($1, shadow_t, file, "shadow-")
+	files_etc_filetrans($1, shadow_t, file, ".pwd.lock")
+	files_etc_filetrans($1, shadow_t, file, "gshadow")
 ')
 
 #######################################
@@ -763,7 +902,50 @@ interface(`auth_rw_faillog',`
 	')
 
 	logging_search_logs($1)
-	allow $1 faillog_t:file rw_file_perms;
+	rw_files_pattern($1, faillog_t, faillog_t)
+')
+
+########################################
+## <summary>
+##	Relabel the login failure log.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`auth_relabel_faillog',`
+	gen_require(`
+		type faillog_t;
+	')
+
+	allow $1 faillog_t:dir relabel_dir_perms;
+	allow $1 faillog_t:file relabel_file_perms;
+')
+
+########################################
+## <summary>
+##	Manage the login failure log.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`auth_manage_faillog',`
+	gen_require(`
+		type faillog_t;
+	')
+
+	logging_search_logs($1)
+	files_search_pids($1)
+	allow $1 faillog_t:dir manage_dir_perms;
+	allow $1 faillog_t:file manage_file_perms;
+	logging_log_named_filetrans($1, faillog_t, file, "tallylog")
+	logging_log_named_filetrans($1, faillog_t, file, "faillog")
+	logging_log_named_filetrans($1, faillog_t, file, "btmp")
 ')
 
 #######################################
@@ -959,9 +1141,30 @@ interface(`auth_manage_var_auth',`
 	')
 
 	files_search_var($1)
-	allow $1 var_auth_t:dir manage_dir_perms;
-	allow $1 var_auth_t:file rw_file_perms;
-	allow $1 var_auth_t:lnk_file rw_lnk_file_perms;
+
+	manage_dirs_pattern($1, var_auth_t, var_auth_t)
+	manage_files_pattern($1, var_auth_t, var_auth_t)
+	manage_lnk_files_pattern($1, var_auth_t, var_auth_t)
+')
+
+########################################
+## <summary>
+##	Relabel all var auth files. Used by various other applications
+##	and pam applets etc.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`auth_relabel_var_auth_dirs',`
+	gen_require(`
+		type var_auth_t;
+	')
+
+	files_search_var($1)
+	relabel_dirs_pattern($1, var_auth_t, var_auth_t)
 ')
 
 ########################################
@@ -1040,6 +1243,10 @@ interface(`auth_manage_pam_pid',`
 	files_search_pids($1)
 	allow $1 pam_var_run_t:dir manage_dir_perms;
 	allow $1 pam_var_run_t:file manage_file_perms;
+	files_pid_filetrans($1, pam_var_run_t, dir, "pam_mount")
+	files_pid_filetrans($1, pam_var_run_t, dir, "pam_ssh")
+	files_pid_filetrans($1, pam_var_run_t, dir, "sepermit")
+	files_pid_filetrans($1, pam_var_run_t, dir, "sudo")
 ')
 
 ########################################
@@ -1157,6 +1364,7 @@ interface(`auth_manage_pam_console_data',`
 	files_search_pids($1)
 	manage_files_pattern($1, pam_var_console_t, pam_var_console_t)
 	manage_lnk_files_pattern($1, pam_var_console_t, pam_var_console_t)
+	files_pid_filetrans($1, pam_var_console_t, dir, "console")
 ')
 
 #######################################
@@ -1526,6 +1734,25 @@ interface(`auth_setattr_login_records',`
 
 ########################################
 ## <summary>
+##	Relabel login record files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`auth_relabel_login_records',`
+	gen_require(`
+		type wtmp_t;
+	')
+
+	allow $1 wtmp_t:file relabel_file_perms;
+')
+
+
+########################################
+## <summary>
 ##	Read login records files (/var/log/wtmp).
 ## </summary>
 ## <param name="domain">
@@ -1676,37 +1903,49 @@ interface(`auth_manage_login_records',`
 
 	logging_rw_generic_log_dirs($1)
 	allow $1 wtmp_t:file manage_file_perms;
+	logging_log_named_filetrans($1, wtmp_t, file, "wtmp")
 ')
 
 ########################################
 ## <summary>
-##	Relabel login record files.
+##	Use nsswitch to look up user, password, group, or
+##	host information.
 ## </summary>
+## <desc>
+##	<p>
+##	Allow the specified domain to look up user, password,
+##	group, or host information using the name service.
+##	The most common use of this interface is for services
+##	that do host name resolution (usually DNS resolution).
+##	</p>
+## </desc>
 ## <param name="domain">
 ##	<summary>
 ##	Domain allowed access.
 ##	</summary>
 ## </param>
+## <infoflow type="both" weight="10"/>
 #
-interface(`auth_relabel_login_records',`
+interface(`auth_use_nsswitch',`
 	gen_require(`
-		type wtmp_t;
+		attribute nsswitch_domain;
 	')
 
-	allow $1 wtmp_t:file relabel_file_perms;
+	typeattribute $1 nsswitch_domain;
 ')
 
 ########################################
 ## <summary>
-##	Use nsswitch to look up user, password, group, or
-##	host information.
+##	Unconfined access to the authlogin module.
 ## </summary>
 ## <desc>
 ##	<p>
-##	Allow the specified domain to look up user, password,
-##	group, or host information using the name service.
-##	The most common use of this interface is for services
-##	that do host name resolution (usually DNS resolution).
+##	Unconfined access to the authlogin module.
+##	</p>
+##	<p>
+##	Currently, this only allows assertions for
+##	the shadow passwords file (/etc/shadow) to
+##	be passed.  No access is granted yet.
 ##	</p>
 ## </desc>
 ## <param name="domain">
@@ -1714,87 +1953,206 @@ interface(`auth_relabel_login_records',`
 ##	Domain allowed access.
 ##	</summary>
 ## </param>
-## <infoflow type="both" weight="10"/>
 #
-interface(`auth_use_nsswitch',`
-
-	files_list_var_lib($1)
+interface(`auth_unconfined',`
+	gen_require(`
+		attribute can_read_shadow_passwords;
+		attribute can_write_shadow_passwords;
+		attribute can_relabelto_shadow_passwords;
+	')
 
-	# read /etc/nsswitch.conf
-	files_read_etc_files($1)
+	typeattribute $1 can_read_shadow_passwords;
+	typeattribute $1 can_write_shadow_passwords;
+	typeattribute $1 can_relabelto_shadow_passwords;
+')
 
-	miscfiles_read_generic_certs($1)
+########################################
+## <summary>
+##	Transition to authlogin named content
+## </summary>
+## <param name="domain">
+##	<summary>
+##      Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`auth_filetrans_named_content',`
+	gen_require(`
+		type shadow_t;
+		type passwd_file_t;
+		type faillog_t;
+		type lastlog_t;
+		type wtmp_t;
+		type pam_var_console_t;
+		type pam_var_run_t;
+	')
 
-	sysnet_dns_name_resolve($1)
-	sysnet_use_ldap($1)
+	files_etc_filetrans($1, passwd_file_t, file, "group")
+	files_etc_filetrans($1, passwd_file_t, file, "group-")
+	#files_etc_filetrans($1, passwd_file_t, file, "group+")
+	files_etc_filetrans($1, passwd_file_t, file, "passwd")
+	files_etc_filetrans($1, passwd_file_t, file, "passwd-")
+	#files_etc_filetrans($1, passwd_file_t, file, "passwd+")
+	files_etc_filetrans($1, passwd_file_t, file, "passwd.OLD")
+	files_etc_filetrans($1, passwd_file_t, file, "ptmptmp")
+	files_etc_filetrans($1, shadow_t, file, "group.lock")
+	files_etc_filetrans($1, shadow_t, file, "passwd.lock")
+	files_etc_filetrans($1, shadow_t, file, "passwd.adjunct")
+	files_etc_filetrans($1, shadow_t, file, "shadow")
+	files_etc_filetrans($1, shadow_t, file, "shadow-")
+	files_etc_filetrans($1, shadow_t, file, ".pwd.lock")
+	files_etc_filetrans($1, shadow_t, file, "gshadow")
+	logging_log_named_filetrans($1, lastlog_t, file, "lastlog")
+	logging_log_named_filetrans($1, faillog_t, file, "tallylog")
+	logging_log_named_filetrans($1, faillog_t, file, "faillog")
+	logging_log_named_filetrans($1, faillog_t, file, "btmp")
+	files_pid_filetrans($1, faillog_t, file, "faillog")
+	files_pid_filetrans($1, faillog_t, dir, "faillock")
+	files_pid_filetrans($1, pam_var_console_t, dir, "console")
+	files_pid_filetrans($1, pam_var_run_t, dir, "pam_mount")
+	files_pid_filetrans($1, pam_var_run_t, dir, "pam_ssh")
+	files_pid_filetrans($1, pam_var_run_t, dir, "sepermit")
+	files_pid_filetrans($1, pam_var_run_t, dir, "sudo")
+	logging_log_named_filetrans($1, wtmp_t, file, "wtmp")
+')
 
-	optional_policy(`
-		avahi_stream_connect($1)
+########################################
+## <summary>
+##	Get the attributes of the passwd passwords file.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`auth_getattr_passwd',`
+	gen_require(`
+		type passwd_file_t;
 	')
 
-	optional_policy(`
-		ldap_stream_connect($1)
-	')
+	files_search_etc($1)
+	allow $1 passwd_file_t:file getattr;
+')
 
- 	optional_policy(`
-		likewise_stream_connect_lsassd($1)
+########################################
+## <summary>
+##	Do not audit attempts to get the attributes
+##	of the passwd passwords file.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`auth_dontaudit_getattr_passwd',`
+	gen_require(`
+		type passwd_file_t;
 	')
 
-	optional_policy(`
-		kerberos_use($1)
-	')
+	dontaudit $1 passwd_file_t:file getattr;
+')
 
-	optional_policy(`
-		nis_use_ypbind($1)
+########################################
+## <summary>
+##	Read the passwd passwords file (/etc/passwd)
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`auth_read_passwd',`
+	gen_require(`
+		type passwd_file_t;
 	')
 
-	optional_policy(`
-		nscd_socket_use($1)
-	')
+	allow $1 passwd_file_t:file read_file_perms;
+')
 
-	optional_policy(`
-		nslcd_stream_connect($1)
+########################################
+## <summary>
+##	Do not audit attempts to read the passwd
+##	password file (/etc/passwd).
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`auth_dontaudit_read_passwd',`
+	gen_require(`
+		type passwd_file_t;
 	')
 
-	optional_policy(`
-		sssd_stream_connect($1)
+	dontaudit $1 passwd_file_t:file read_file_perms;
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete the passwd
+##	password file.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`auth_manage_passwd',`
+	gen_require(`
+		type passwd_file_t;
 	')
 
-	optional_policy(`
-		samba_stream_connect_winbind($1)
-		samba_read_var_files($1)
-		samba_dontaudit_write_var_files($1)
+	files_rw_etc_dirs($1)
+	allow $1 passwd_file_t:file manage_file_perms;
+	files_etc_filetrans($1, passwd_file_t, file, "passwd")
+	files_etc_filetrans($1, passwd_file_t, file, "passwd-")
+	files_etc_filetrans($1, passwd_file_t, file, "ptmptmp")
+	files_etc_filetrans($1, passwd_file_t, file, "group")
+	files_etc_filetrans($1, passwd_file_t, file, "group-")
+')
+
+########################################
+## <summary>
+##	Create auth directory in the /root directory
+##	with an correct label.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`auth_filetrans_admin_home_content',`
+	gen_require(`
+		type auth_home_t;
 	')
+
+	userdom_admin_home_dir_filetrans($1, auth_home_t, file, ".google_authenticator")
+	userdom_admin_home_dir_filetrans($1, auth_home_t, file, ".google_authenticator~")
 ')
 
 ########################################
 ## <summary>
-##	Unconfined access to the authlogin module.
+##	Create auth directory in the user home directory
+##	with an correct label.
 ## </summary>
-## <desc>
-##	<p>
-##	Unconfined access to the authlogin module.
-##	</p>
-##	<p>
-##	Currently, this only allows assertions for
-##	the shadow passwords file (/etc/shadow) to
-##	be passed.  No access is granted yet.
-##	</p>
-## </desc>
 ## <param name="domain">
 ##	<summary>
 ##	Domain allowed access.
 ##	</summary>
 ## </param>
 #
-interface(`auth_unconfined',`
+interface(`auth_filetrans_home_content',`
+	
 	gen_require(`
-		attribute can_read_shadow_passwords;
-		attribute can_write_shadow_passwords;
-		attribute can_relabelto_shadow_passwords;
+		type auth_home_t;
 	')
 
-	typeattribute $1 can_read_shadow_passwords;
-	typeattribute $1 can_write_shadow_passwords;
-	typeattribute $1 can_relabelto_shadow_passwords;
+	userdom_user_home_dir_filetrans($1, auth_home_t, file, ".google_authenticator")
+	userdom_user_home_dir_filetrans($1, auth_home_t, file, ".google_authenticator~")
 ')
diff --git a/policy/modules/system/authlogin.te b/policy/modules/system/authlogin.te
index f12b8ff..b3e0efd 100644
--- a/policy/modules/system/authlogin.te
+++ b/policy/modules/system/authlogin.te
@@ -5,22 +5,42 @@ policy_module(authlogin, 2.3.1)
 # Declarations
 #
 
+## <desc>
+## <p>
+## Allow users to login using a radius server
+## </p>
+## </desc>
+gen_tunable(authlogin_radius, false)
+
+## <desc>
+## <p>
+## Allow users to resolve user passwd entries directly from ldap rather then using a sssd server
+## </p>
+## </desc>
+gen_tunable(authlogin_nsswitch_use_ldap, false)
+
 attribute can_read_shadow_passwords;
 attribute can_write_shadow_passwords;
 attribute can_relabelto_shadow_passwords;
+attribute polydomain;
+attribute nsswitch_domain;
 
 type auth_cache_t;
 logging_log_file(auth_cache_t)
 
+type auth_home_t;
+userdom_user_home_content(auth_home_t)
+
 type chkpwd_t, can_read_shadow_passwords;
 type chkpwd_exec_t;
 typealias chkpwd_t alias { user_chkpwd_t staff_chkpwd_t sysadm_chkpwd_t };
-typealias chkpwd_t alias { auditadm_chkpwd_t secadm_chkpwd_t };
+typealias chkpwd_t alias { auditadm_chkpwd_t secadm_chkpwd_t system_chkpwd_t };
 application_domain(chkpwd_t, chkpwd_exec_t)
 role system_r types chkpwd_t;
 
 type faillog_t;
 logging_log_file(faillog_t)
+mls_trusted_object(faillog_t)
 
 type lastlog_t;
 logging_log_file(lastlog_t)
@@ -55,6 +75,9 @@ neverallow ~can_read_shadow_passwords shadow_t:file read;
 neverallow ~can_write_shadow_passwords shadow_t:file { create write };
 neverallow ~can_relabelto_shadow_passwords shadow_t:file relabelto;
 
+type passwd_file_t;
+files_type(passwd_file_t)
+
 type updpwd_t;
 type updpwd_exec_t;
 domain_type(updpwd_t)
@@ -100,6 +123,8 @@ dev_read_urand(chkpwd_t)
 files_read_etc_files(chkpwd_t)
 # for nscd
 files_dontaudit_search_var(chkpwd_t)
+files_read_usr_symlinks(chkpwd_t)
+files_list_tmp(chkpwd_t)
 
 fs_dontaudit_getattr_xattr_fs(chkpwd_t)
 
@@ -118,7 +143,7 @@ miscfiles_read_localization(chkpwd_t)
 seutil_read_config(chkpwd_t)
 seutil_dontaudit_use_newrole_fds(chkpwd_t)
 
-userdom_use_user_terminals(chkpwd_t)
+userdom_dontaudit_use_user_ttys(chkpwd_t)
 
 ifdef(`distro_ubuntu',`
 	optional_policy(`
@@ -332,6 +357,7 @@ kernel_read_system_state(updpwd_t)
 dev_read_urand(updpwd_t)
 
 files_manage_etc_files(updpwd_t)
+auth_manage_passwd(updpwd_t)
 
 term_dontaudit_use_console(updpwd_t)
 term_dontaudit_use_unallocated_ttys(updpwd_t)
@@ -343,7 +369,7 @@ logging_send_syslog_msg(updpwd_t)
 
 miscfiles_read_localization(updpwd_t)
 
-userdom_use_user_terminals(updpwd_t)
+userdom_use_inherited_user_terminals(updpwd_t)
 
 ifdef(`distro_ubuntu',`
 	optional_policy(`
@@ -371,13 +397,15 @@ term_dontaudit_use_all_ttys(utempter_t)
 term_dontaudit_use_all_ptys(utempter_t)
 term_dontaudit_use_ptmx(utempter_t)
 
+auth_use_nsswitch(utempter_t)
+
 init_rw_utmp(utempter_t)
 
 domain_use_interactive_fds(utempter_t)
 
 logging_search_logs(utempter_t)
 
-userdom_use_user_terminals(utempter_t)
+userdom_use_inherited_user_terminals(utempter_t)
 # Allow utemper to write to /tmp/.xses-*
 userdom_write_user_tmp_files(utempter_t)
 
@@ -388,10 +416,75 @@ ifdef(`distro_ubuntu',`
 ')
 
 optional_policy(`
-	nscd_socket_use(utempter_t)
+	xserver_use_xdm_fds(utempter_t)
+	xserver_rw_xdm_pipes(utempter_t)
+')
+
+tunable_policy(`polyinstantiation_enabled',`
+	files_polyinstantiate_all(polydomain)
 ')
 
 optional_policy(`
-	xserver_use_xdm_fds(utempter_t)
-	xserver_rw_xdm_pipes(utempter_t)
+	tunable_policy(`polyinstantiation_enabled',`
+		namespace_init_domtrans(polydomain)
+	')
+')
+
+
+auth_read_passwd(nsswitch_domain)
+
+# read /etc/nsswitch.conf
+files_read_etc_files(nsswitch_domain)
+
+sysnet_dns_name_resolve(nsswitch_domain)
+
+tunable_policy(`authlogin_nsswitch_use_ldap',`
+	files_list_var_lib(nsswitch_domain)
+
+	miscfiles_read_generic_certs(nsswitch_domain)
+	sysnet_use_ldap(nsswitch_domain)
+')
+
+optional_policy(`
+	tunable_policy(`authlogin_nsswitch_use_ldap',`
+		dirsrv_stream_connect(nsswitch_domain)
+	')
+')
+
+optional_policy(`
+	tunable_policy(`authlogin_nsswitch_use_ldap',`
+		ldap_stream_connect(nsswitch_domain)
+	')
+')
+
+optional_policy(`
+	likewise_stream_connect_lsassd(nsswitch_domain)
+')
+
+# can not wrap nis_use_ypbind or kerberos_use, but they both have booleans you can turn off.
+optional_policy(`
+	kerberos_use(nsswitch_domain)
+')
+
+optional_policy(`
+	nis_use_ypbind(nsswitch_domain)
+')
+
+optional_policy(`
+	nscd_use(nsswitch_domain)
+')
+
+optional_policy(`
+	nslcd_stream_connect(nsswitch_domain)
+')
+
+optional_policy(`
+	sssd_stream_connect(nsswitch_domain)
+	sssd_read_public_files(nsswitch_domain)
+')
+
+optional_policy(`
+	samba_stream_connect_winbind(nsswitch_domain)
+	samba_read_var_files(nsswitch_domain)
+	samba_dontaudit_write_var_files(nsswitch_domain)
 ')
diff --git a/policy/modules/system/clock.fc b/policy/modules/system/clock.fc
index c5e05ca..c9ddbee 100644
--- a/policy/modules/system/clock.fc
+++ b/policy/modules/system/clock.fc
@@ -3,3 +3,5 @@
 
 /sbin/hwclock		--	gen_context(system_u:object_r:hwclock_exec_t,s0)
 
+/usr/sbin/hwclock	--	gen_context(system_u:object_r:hwclock_exec_t,s0)
+
diff --git a/policy/modules/system/clock.if b/policy/modules/system/clock.if
index e2f6d93..c78ccc6 100644
--- a/policy/modules/system/clock.if
+++ b/policy/modules/system/clock.if
@@ -82,6 +82,25 @@ interface(`clock_dontaudit_write_adjtime',`
 
 ########################################
 ## <summary>
+##	Read clock drift adjustments.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`clock_read_adjtime',`
+	gen_require(`
+		type adjtime_t;
+	')
+
+	allow $1 adjtime_t:file read_file_perms;
+	files_list_etc($1)
+')
+
+########################################
+## <summary>
 ##	Read and write clock drift adjustments.
 ## </summary>
 ## <param name="domain">
diff --git a/policy/modules/system/clock.te b/policy/modules/system/clock.te
index b9ed25b..39e1dc1 100644
--- a/policy/modules/system/clock.te
+++ b/policy/modules/system/clock.te
@@ -46,11 +46,13 @@ fs_search_auto_mountpoints(hwclock_t)
 
 term_dontaudit_use_console(hwclock_t)
 term_use_unallocated_ttys(hwclock_t)
-term_use_all_ttys(hwclock_t)
-term_use_all_ptys(hwclock_t)
+term_use_all_inherited_ttys(hwclock_t)
+term_use_all_inherited_ptys(hwclock_t)
 
 domain_use_interactive_fds(hwclock_t)
 
+auth_use_nsswitch(hwclock_t)
+
 init_use_fds(hwclock_t)
 init_use_script_ptys(hwclock_t)
 
@@ -65,10 +67,6 @@ optional_policy(`
 ')
 
 optional_policy(`
-	nscd_socket_use(hwclock_t)
-')
-
-optional_policy(`
 	seutil_sigchld_newrole(hwclock_t)
 ')
 
diff --git a/policy/modules/system/fstools.fc b/policy/modules/system/fstools.fc
index a97a096..e1b5cd8 100644
--- a/policy/modules/system/fstools.fc
+++ b/policy/modules/system/fstools.fc
@@ -1,4 +1,3 @@
-/sbin/badblocks		--	gen_context(system_u:object_r:fsadm_exec_t,s0)
 /sbin/blkid		--	gen_context(system_u:object_r:fsadm_exec_t,s0)
 /sbin/blockdev		--	gen_context(system_u:object_r:fsadm_exec_t,s0)
 /sbin/cfdisk		--	gen_context(system_u:object_r:fsadm_exec_t,s0)
@@ -23,7 +22,6 @@
 /sbin/mkfs.*		--	gen_context(system_u:object_r:fsadm_exec_t,s0)
 /sbin/mkraid		--	gen_context(system_u:object_r:fsadm_exec_t,s0)
 /sbin/mkreiserfs	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
-/sbin/mkswap		--	gen_context(system_u:object_r:fsadm_exec_t,s0)
 /sbin/parted		--	gen_context(system_u:object_r:fsadm_exec_t,s0)
 /sbin/partprobe		--	gen_context(system_u:object_r:fsadm_exec_t,s0)
 /sbin/partx		--	gen_context(system_u:object_r:fsadm_exec_t,s0)
@@ -41,7 +39,44 @@
 /usr/bin/scsi_unique_id	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
 /usr/bin/syslinux	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
 
+/usr/lib/systemd/systemd-fsck --	gen_context(system_u:object_r:fsadm_exec_t,s0)
+
+/usr/sbin/blkid		--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/blockdev	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/cfdisk	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
 /usr/sbin/clubufflush	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/dosfsck	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/dump		--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/dumpe2fs	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/e2fsck	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/e4fsck	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/e2label	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/fdisk		--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/findfs	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/fsck.*	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/hdparm	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/install-mbr	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/jfs_.*	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/losetup.*	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/lsraid	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/make_reiser4	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/mkdosfs	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/mke2fs	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/mke4fs	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/mkfs.*	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/mkraid	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/mkreiserfs	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/parted	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/partprobe	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/partx		--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/raidautorun	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/raidstart	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/reiserfs(ck|tune)	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/resize.*fs	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/scsi_info	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/sfdisk	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
 /usr/sbin/smartctl	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/swapon.*	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
+/usr/sbin/tune2fs	--	gen_context(system_u:object_r:fsadm_exec_t,s0)
 
 /var/log/fsck(/.*)?		gen_context(system_u:object_r:fsadm_log_t,s0)
diff --git a/policy/modules/system/fstools.te b/policy/modules/system/fstools.te
index 6c4b6ee..77db743 100644
--- a/policy/modules/system/fstools.te
+++ b/policy/modules/system/fstools.te
@@ -44,6 +44,8 @@ can_exec(fsadm_t, fsadm_exec_t)
 allow fsadm_t fsadm_tmp_t:dir manage_dir_perms;
 allow fsadm_t fsadm_tmp_t:file manage_file_perms;
 files_tmp_filetrans(fsadm_t, fsadm_tmp_t, { file dir })
+files_create_boot_flag(fsadm_t)
+files_setattr_root_dirs(fsadm_t)
 
 # log files
 allow fsadm_t fsadm_log_t:dir setattr;
@@ -101,6 +103,8 @@ files_read_usr_files(fsadm_t)
 files_read_etc_files(fsadm_t)
 files_manage_lost_found(fsadm_t)
 files_manage_isid_type_dirs(fsadm_t)
+# /etc/mtab is a link
+files_read_etc_runtime_files(fsadm_t)
 # Write to /etc/mtab.
 files_manage_etc_runtime_files(fsadm_t)
 files_etc_filetrans_etc_runtime(fsadm_t, file)
@@ -120,11 +124,16 @@ fs_list_auto_mountpoints(fsadm_t)
 fs_search_tmpfs(fsadm_t)
 fs_getattr_tmpfs_dirs(fsadm_t)
 fs_read_tmpfs_symlinks(fsadm_t)
+fs_manage_nfs_files(fsadm_t)
+fs_manage_cifs_files(fsadm_t)
+fs_rw_hugetlbfs_files(fsadm_t)
 # Recreate /mnt/cdrom.
 files_manage_mnt_dirs(fsadm_t)
 # for tune2fs
 files_search_all(fsadm_t)
 
+mcs_file_read_all(fsadm_t)
+
 mls_file_read_all_levels(fsadm_t)
 mls_file_write_all_levels(fsadm_t)
 
@@ -133,13 +142,16 @@ storage_raw_write_fixed_disk(fsadm_t)
 storage_raw_read_removable_device(fsadm_t)
 storage_raw_write_removable_device(fsadm_t)
 storage_read_scsi_generic(fsadm_t)
+storage_rw_fuse(fsadm_t)
 storage_swapon_fixed_disk(fsadm_t)
 
 term_use_console(fsadm_t)
 
+init_read_state(fsadm_t)
 init_use_fds(fsadm_t)
 init_use_script_ptys(fsadm_t)
 init_dontaudit_getattr_initctl(fsadm_t)
+init_stream_connect(fsadm_t)
 
 logging_send_syslog_msg(fsadm_t)
 
@@ -147,7 +159,7 @@ miscfiles_read_localization(fsadm_t)
 
 seutil_read_config(fsadm_t)
 
-userdom_use_user_terminals(fsadm_t)
+term_use_all_inherited_terms(fsadm_t)
 
 ifdef(`distro_redhat',`
 	optional_policy(`
@@ -166,6 +178,11 @@ optional_policy(`
 ')
 
 optional_policy(`
+	devicekit_dontaudit_read_pid_files(fsadm_t)
+	devicekit_dontaudit_rw_log(fsadm_t)
+')
+
+optional_policy(`
 	hal_dontaudit_write_log(fsadm_t)
 ')
 
@@ -192,6 +209,10 @@ optional_policy(`
 ')
 
 optional_policy(`
+	virt_read_blk_images(fsadm_t)
+')
+
+optional_policy(`
 	xen_append_log(fsadm_t)
 	xen_rw_image_files(fsadm_t)
 ')
diff --git a/policy/modules/system/getty.fc b/policy/modules/system/getty.fc
index e1a1848..909af45 100644
--- a/policy/modules/system/getty.fc
+++ b/policy/modules/system/getty.fc
@@ -3,6 +3,8 @@
 
 /sbin/.*getty		--	gen_context(system_u:object_r:getty_exec_t,s0)
 
+/usr/sbin/.*getty	--	gen_context(system_u:object_r:getty_exec_t,s0)
+
 /var/log/mgetty\.log.*	--	gen_context(system_u:object_r:getty_log_t,s0)
 /var/log/vgetty\.log\..* --	gen_context(system_u:object_r:getty_log_t,s0)
 
diff --git a/policy/modules/system/getty.te b/policy/modules/system/getty.te
index fd100fc..8409f5c 100644
--- a/policy/modules/system/getty.te
+++ b/policy/modules/system/getty.te
@@ -83,8 +83,10 @@ term_use_unallocated_ttys(getty_t)
 term_setattr_all_ttys(getty_t)
 term_setattr_unallocated_ttys(getty_t)
 term_setattr_console(getty_t)
+term_use_console(getty_t)
 
 auth_rw_login_records(getty_t)
+auth_use_nsswitch(getty_t)
 
 init_rw_utmp(getty_t)
 init_use_script_ptys(getty_t)
@@ -113,7 +115,7 @@ ifdef(`distro_ubuntu',`
 	')
 ')
 
-tunable_policy(`console_login',`
+tunable_policy(`login_console_enabled',`
 	# Support logging in from /dev/console
 	term_use_console(getty_t)
 ',`
@@ -125,10 +127,6 @@ optional_policy(`
 ')
 
 optional_policy(`
-	nscd_socket_use(getty_t)
-')
-
-optional_policy(`
 	ppp_domtrans(getty_t)
 ')
 
diff --git a/policy/modules/system/hostname.fc b/policy/modules/system/hostname.fc
index 9dfecf7..6d00f5c 100644
--- a/policy/modules/system/hostname.fc
+++ b/policy/modules/system/hostname.fc
@@ -1,2 +1,4 @@
 
 /bin/hostname		--	gen_context(system_u:object_r:hostname_exec_t,s0)
+
+/usr/bin/hostname	--	gen_context(system_u:object_r:hostname_exec_t,s0)
diff --git a/policy/modules/system/hostname.te b/policy/modules/system/hostname.te
index ec82afa..df11774 100644
--- a/policy/modules/system/hostname.te
+++ b/policy/modules/system/hostname.te
@@ -23,29 +23,34 @@ dontaudit hostname_t self:capability sys_tty_config;
 
 kernel_list_proc(hostname_t)
 kernel_read_proc_symlinks(hostname_t)
+kernel_read_network_state(hostname_t)
 
 dev_read_sysfs(hostname_t)
 # Early devtmpfs, before udev relabel
 dev_dontaudit_rw_generic_chr_files(hostname_t)
 
+domain_dontaudit_leaks(hostname_t)
 domain_use_interactive_fds(hostname_t)
 
 files_read_etc_files(hostname_t)
+files_dontaudit_leaks(hostname_t)
 files_dontaudit_search_var(hostname_t)
 # for when /usr is not mounted:
 files_dontaudit_search_isid_type_dirs(hostname_t)
 
 fs_getattr_xattr_fs(hostname_t)
 fs_search_auto_mountpoints(hostname_t)
+fs_dontaudit_leaks(hostname_t)
 fs_dontaudit_use_tmpfs_chr_dev(hostname_t)
 
 term_dontaudit_use_console(hostname_t)
-term_use_all_ttys(hostname_t)
-term_use_all_ptys(hostname_t)
+term_use_all_inherited_ttys(hostname_t)
+term_use_all_inherited_ptys(hostname_t)
 
 init_use_fds(hostname_t)
 init_use_script_fds(hostname_t)
 init_use_script_ptys(hostname_t)
+init_rw_inherited_script_tmp_files(hostname_t)
 
 logging_send_syslog_msg(hostname_t)
 
@@ -56,6 +61,10 @@ sysnet_read_config(hostname_t)
 sysnet_dns_name_resolve(hostname_t)
 
 optional_policy(`
+	mock_dontaudit_write_lib_chr_files(hostname_t)
+')
+
+optional_policy(`
 	nis_use_ypbind(hostname_t)
 ')
 
diff --git a/policy/modules/system/hotplug.fc b/policy/modules/system/hotplug.fc
index caf736b..91c4c6f 100644
--- a/policy/modules/system/hotplug.fc
+++ b/policy/modules/system/hotplug.fc
@@ -7,5 +7,8 @@
 /sbin/hotplug		--	gen_context(system_u:object_r:hotplug_exec_t,s0)
 /sbin/netplugd		--	gen_context(system_u:object_r:hotplug_exec_t,s0)
 
+/usr/sbin/hotplug	--	gen_context(system_u:object_r:hotplug_exec_t,s0)
+/usr/sbin/netplugd	--	gen_context(system_u:object_r:hotplug_exec_t,s0)
+
 /var/run/usb(/.*)?		gen_context(system_u:object_r:hotplug_var_run_t,s0)
 /var/run/hotplug(/.*)?		gen_context(system_u:object_r:hotplug_var_run_t,s0)
diff --git a/policy/modules/system/hotplug.if b/policy/modules/system/hotplug.if
index 40eb10c..2a0a32c 100644
--- a/policy/modules/system/hotplug.if
+++ b/policy/modules/system/hotplug.if
@@ -34,7 +34,7 @@ interface(`hotplug_domtrans',`
 #
 interface(`hotplug_exec',`
 	gen_require(`
-		type hotplug_t;
+		type hotplug_exec_t;
 	')
 
 	corecmd_search_bin($1)
diff --git a/policy/modules/system/hotplug.te b/policy/modules/system/hotplug.te
index b2e41cc..a9da830 100644
--- a/policy/modules/system/hotplug.te
+++ b/policy/modules/system/hotplug.te
@@ -23,7 +23,7 @@ files_pid_file(hotplug_var_run_t)
 #
 
 allow hotplug_t self:capability { net_admin sys_tty_config mknod sys_rawio };
-dontaudit hotplug_t self:capability { sys_module sys_admin sys_ptrace sys_tty_config };
+dontaudit hotplug_t self:capability { sys_module sys_admin sys_tty_config };
 # for access("/etc/bashrc", X_OK) on Red Hat
 dontaudit hotplug_t self:capability { dac_override dac_read_search };
 allow hotplug_t self:process { setpgid getsession getattr signal_perms };
@@ -96,6 +96,8 @@ init_domtrans_script(hotplug_t)
 # kernel threads inherit from shared descriptor table used by init
 init_dontaudit_rw_initctl(hotplug_t)
 
+auth_use_nsswitch(hotplug_t)
+
 logging_send_syslog_msg(hotplug_t)
 logging_search_logs(hotplug_t)
 
@@ -164,14 +166,6 @@ optional_policy(`
 ')
 
 optional_policy(`
-	nis_use_ypbind(hotplug_t)
-')
-
-optional_policy(`
-	nscd_socket_use(hotplug_t)
-')
-
-optional_policy(`
 	seutil_sigchld_newrole(hotplug_t)
 ')
 
diff --git a/policy/modules/system/init.fc b/policy/modules/system/init.fc
index d2e40b8..3ba2e4c 100644
--- a/policy/modules/system/init.fc
+++ b/policy/modules/system/init.fc
@@ -2,6 +2,7 @@
 # /etc
 #
 /etc/init\.d/.*		--	gen_context(system_u:object_r:initrc_exec_t,s0)
+/etc/machine-id		--	gen_context(system_u:object_r:machineid_t,s0)
 
 /etc/rc\.d/rc		--	gen_context(system_u:object_r:initrc_exec_t,s0)
 /etc/rc\.d/rc\.[^/]+	--	gen_context(system_u:object_r:initrc_exec_t,s0)
@@ -31,6 +32,11 @@ ifdef(`distro_gentoo', `
 #
 # /sbin
 #
+/bin/systemd		--	gen_context(system_u:object_r:init_exec_t,s0)
+
+#
+# /sbin
+#
 /sbin/init(ng)?		--	gen_context(system_u:object_r:init_exec_t,s0)
 # because nowadays, /sbin/init is often a symlink to /sbin/upstart
 /sbin/upstart		--	gen_context(system_u:object_r:init_exec_t,s0)
@@ -48,11 +54,23 @@ ifdef(`distro_gentoo', `
 #
 /usr/bin/sepg_ctl	--	gen_context(system_u:object_r:initrc_exec_t,s0)
 
+/usr/sbin/init(ng)?		--	gen_context(system_u:object_r:init_exec_t,s0)
+# because nowadays, /sbin/init is often a symlink to /sbin/upstart
+/usr/sbin/upstart		--	gen_context(system_u:object_r:init_exec_t,s0)
+
+/usr/lib/systemd/[^/]*		--	gen_context(system_u:object_r:init_exec_t,s0)
+/usr/lib/systemd/fedora[^/]* 	--	gen_context(system_u:object_r:initrc_exec_t,s0)
+/usr/lib/systemd/system-generators/[^/]*	--	gen_context(system_u:object_r:init_exec_t,s0)
+
 /usr/libexec/dcc/start-.* --	gen_context(system_u:object_r:initrc_exec_t,s0)
 /usr/libexec/dcc/stop-.* --	gen_context(system_u:object_r:initrc_exec_t,s0)
 
 /usr/sbin/apachectl	-- 	gen_context(system_u:object_r:initrc_exec_t,s0)
 /usr/sbin/open_init_pty	--	gen_context(system_u:object_r:initrc_exec_t,s0)
+/usr/sbin/startx	-- 	gen_context(system_u:object_r:initrc_exec_t,s0)
+/usr/bin/systemd	--	gen_context(system_u:object_r:init_exec_t,s0)
+
+/usr/share/system-config-services/system-config-services-mechanism\.py  --	gen_context(system_u:object_r:initrc_exec_t,s0)
 
 #
 # /var
@@ -61,6 +79,7 @@ ifdef(`distro_gentoo', `
 /var/run/runlevel\.dir		gen_context(system_u:object_r:initrc_var_run_t,s0)
 /var/run/random-seed	--	gen_context(system_u:object_r:initrc_var_run_t,s0)
 /var/run/setmixer_flag	--	gen_context(system_u:object_r:initrc_var_run_t,s0)
+/var/run/systemd/machine-id	--	gen_context(system_u:object_r:machineid_t,s0)
 
 ifdef(`distro_debian',`
 /var/run/hotkey-setup	--	gen_context(system_u:object_r:initrc_var_run_t,s0)
@@ -79,3 +98,4 @@ ifdef(`distro_suse', `
 /var/run/setleds-on	--	gen_context(system_u:object_r:initrc_var_run_t,s0)
 /var/run/sysconfig(/.*)?	gen_context(system_u:object_r:initrc_var_run_t,s0)
 ')
+/var/run/systemd(/.*)?		gen_context(system_u:object_r:init_var_run_t,s0)
diff --git a/policy/modules/system/init.if b/policy/modules/system/init.if
index d26fe81..b0bb610 100644
--- a/policy/modules/system/init.if
+++ b/policy/modules/system/init.if
@@ -79,6 +79,44 @@ interface(`init_script_domain',`
 	domtrans_pattern(init_run_all_scripts_domain, $2, $1)
 ')
 
+
+#######################################
+## <summary>
+##  Create a domain which can be started by init.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Type to be used as a domain.
+##  </summary>
+## </param>
+## <param name="entry_point">
+##  <summary>
+##  Type of the program to be used as an entry point to this domain.
+##  </summary>
+## </param>
+#
+interface(`init_systemd_domain',`
+    gen_require(`
+        type init_t;
+        role system_r;
+    ')
+
+    domain_type($1)
+    domain_entry_file($1,$2)
+
+    role system_r types $1;
+
+    tunable_policy(`init_systemd',`
+        domtrans_pattern(init_t,$2,$1)
+        allow init_t $1:unix_stream_socket create_stream_socket_perms;
+        allow init_t $1:unix_dgram_socket create_socket_perms;
+	allow $1 init_t:unix_stream_socket ioctl;
+        allow $1 init_t:unix_dgram_socket sendto;
+	# need write to /var/run/systemd/notify
+	init_write_pid_socket($1)
+    ')
+')
+
 ########################################
 ## <summary>
 ##	Create a domain which can be started by init.
@@ -105,7 +143,11 @@ interface(`init_domain',`
 
 	role system_r types $1;
 
-	domtrans_pattern(init_t, $2, $1)
+	tunable_policy(`init_systemd',`', `
+		domtrans_pattern(init_t, $2, $1)
+		allow init_t $1:unix_stream_socket create_stream_socket_perms;
+		allow $1 init_t:unix_dgram_socket sendto;
+	')
 
 	ifdef(`hide_broken_symptoms',`
 		# RHEL4 systems seem to have a stray
@@ -193,8 +235,10 @@ interface(`init_daemon_domain',`
 	gen_require(`
 		attribute direct_run_init, direct_init, direct_init_entry;
 		type initrc_t;
+		type init_t;
 		role system_r;
 		attribute daemon;
+		attribute initrc_transition_domain;
 	')
 
 	typeattribute $1 daemon;
@@ -202,39 +246,20 @@ interface(`init_daemon_domain',`
 	domain_type($1)
 	domain_entry_file($1, $2)
 
-	role system_r types $1;
-
-	domtrans_pattern(initrc_t, $2, $1)
-
-	# daemons started from init will
-	# inherit fds from init for the console
-	init_dontaudit_use_fds($1)
-	term_dontaudit_use_console($1)
-
-	# init script ptys are the stdin/out/err
-	# when using run_init
-	init_use_script_ptys($1)
+	domtrans_pattern(initrc_t,$2,$1)
 
 	ifdef(`direct_sysadm_daemon',`
 		domtrans_pattern(direct_run_init, $2, $1)
-		allow direct_run_init $1:process { noatsecure siginh rlimitinh };
 
 		typeattribute $1 direct_init;
 		typeattribute $2 direct_init_entry;
 
-		userdom_dontaudit_use_user_terminals($1)
+#		userdom_dontaudit_use_user_terminals($1)
 	')
 
-	ifdef(`hide_broken_symptoms',`
-		# RHEL4 systems seem to have a stray
-		# fds open from the initrd
-		ifdef(`distro_rhel4',`
-			kernel_dontaudit_use_fds($1)
-		')
-	')
-
-	optional_policy(`
-		nscd_socket_use($1)
+	tunable_policy(`init_upstart || init_systemd',`
+	     # Handle upstart direct transition to a executable
+	     domtrans_pattern(init_t,$2,$1)
 	')
 ')
 
@@ -283,17 +308,20 @@ interface(`init_daemon_domain',`
 interface(`init_ranged_daemon_domain',`
 	gen_require(`
 		type initrc_t;
+		type init_t;
 	')
 
-	init_daemon_domain($1, $2)
+#	init_daemon_domain($1, $2)
 
 	ifdef(`enable_mcs',`
 		range_transition initrc_t $2:process $3;
+		range_transition init_t $2:process $3;
 	')
 
 	ifdef(`enable_mls',`
 		range_transition initrc_t $2:process $3;
 		mls_rangetrans_target($1)
+		range_transition init_t $2:process $3;
 	')
 ')
 
@@ -336,22 +364,23 @@ interface(`init_ranged_daemon_domain',`
 #
 interface(`init_system_domain',`
 	gen_require(`
+		type init_t;
 		type initrc_t;
 		role system_r;
+		attribute initrc_transition_domain;
+		attribute systemprocess;
 	')
 
+	typeattribute $1 systemprocess;
 	application_domain($1, $2)
 
 	role system_r types $1;
 
-	domtrans_pattern(initrc_t, $2, $1)
+	domtrans_pattern(initrc_t,$2,$1)
 
-	ifdef(`hide_broken_symptoms',`
-		# RHEL4 systems seem to have a stray
-		# fds open from the initrd
-		ifdef(`distro_rhel4',`
-			kernel_dontaudit_use_fds($1)
-		')
+	tunable_policy(`init_systemd',`
+		# Handle upstart/systemd direct transition to a executable
+		domtrans_pattern(init_t,$2,$1)
 	')
 ')
 
@@ -401,20 +430,41 @@ interface(`init_system_domain',`
 interface(`init_ranged_system_domain',`
 	gen_require(`
 		type initrc_t;
+		type init_t;
 	')
 
 	init_system_domain($1, $2)
 
 	ifdef(`enable_mcs',`
 		range_transition initrc_t $2:process $3;
+		range_transition init_t $2:process $3;
 	')
 
 	ifdef(`enable_mls',`
 		range_transition initrc_t $2:process $3;
+		range_transition init_t $2:process $3;
 		mls_rangetrans_target($1)
 	')
 ')
 
+######################################
+## <summary>
+##  Allow domain dyntransition to init_t domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed to transition.
+##  </summary>
+## </param>
+#
+interface(`init_dyntrans',`
+    gen_require(`
+        type init_t;
+    ')
+
+    dyntrans_pattern($1, init_t)
+')
+
 ########################################
 ## <summary>
 ##	Execute init (/sbin/init) with a domain transition.
@@ -442,7 +492,6 @@ interface(`init_domtrans',`
 ##	Domain allowed access.
 ##	</summary>
 ## </param>
-## <rolecap/>
 #
 interface(`init_exec',`
 	gen_require(`
@@ -451,6 +500,29 @@ interface(`init_exec',`
 
 	corecmd_search_bin($1)
 	can_exec($1, init_exec_t)
+
+	tunable_policy(`init_systemd',`
+		systemd_exec_systemctl($1)
+	')
+')
+
+#######################################
+## <summary>
+##  Dontaudit getattr on the init program.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <rolecap/>
+#
+interface(`init_dontaudit_getattr_exec',`
+    gen_require(`
+        type init_exec_t;
+    ')
+
+	dontaudit $1 init_exec_t:file getattr;
 ')
 
 ########################################
@@ -539,6 +611,24 @@ interface(`init_sigchld',`
 
 ########################################
 ## <summary>
+##	Send generic signals to init.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`init_signal',`
+	gen_require(`
+		type init_t;
+	')
+
+	allow $1 init_t:process signal;
+')
+
+########################################
+## <summary>
 ##	Connect to init with a unix socket.
 ## </summary>
 ## <param name="domain">
@@ -549,10 +639,66 @@ interface(`init_sigchld',`
 #
 interface(`init_stream_connect',`
 	gen_require(`
-		type init_t;
+		type init_t, init_var_run_t;
 	')
 
-	allow $1 init_t:unix_stream_socket connectto;
+	files_search_pids($1)
+	stream_connect_pattern($1, init_var_run_t, init_var_run_t, init_t)    
+	allow $1 init_t:unix_stream_socket getattr;
+')
+
+#######################################
+## <summary>
+##  Dontaudit Connect to init with a unix socket.
+## </summary>
+## <param name="domain">
+##  <summary>
+##	Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`init_dontaudit_stream_connect',`
+    gen_require(`
+        type init_t;
+    ')
+
+    dontaudit $1 init_t:unix_stream_socket connectto;
+')
+
+######################################
+## <summary>
+##  Dontaudit getattr to init with a unix socket.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`init_dontaudit_getattr_stream_socket',`
+    gen_require(`
+        type init_t;
+    ')
+
+    dontaudit $1 init_t:unix_stream_socket getattr;
+')
+
+######################################
+## <summary>
+##  Dontaudit read and write to init with a unix socket.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`init_dontaudit_rw_stream_socket',`
+    gen_require(`
+        type init_t;
+    ')
+
+    dontaudit $1 init_t:unix_stream_socket { getattr read write };
 ')
 
 ########################################
@@ -718,19 +864,25 @@ interface(`init_telinit',`
 		type initctl_t;
 	')
 
+	corecmd_exec_bin($1)
+
 	dev_list_all_dev_nodes($1)
 	allow $1 initctl_t:fifo_file rw_fifo_file_perms;
 
 	init_exec($1)
 
-	tunable_policy(`init_upstart',`
+	tunable_policy(`init_upstart || init_systemd',`
 		gen_require(`
 			type init_t;
 		')
 
+		ps_process_pattern($1, init_t)
+		allow $1 init_t:process signal;
 		# upstart uses a datagram socket instead of initctl pipe
 		allow $1 self:unix_dgram_socket create_socket_perms;
 		allow $1 init_t:unix_dgram_socket sendto;
+		#576913
+		allow $1 init_t:unix_stream_socket connectto;
 	')
 ')
 
@@ -760,7 +912,7 @@ interface(`init_rw_initctl',`
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain to not audit.
 ##	</summary>
 ## </param>
 #
@@ -803,11 +955,12 @@ interface(`init_script_file_entry_type',`
 #
 interface(`init_spec_domtrans_script',`
 	gen_require(`
-		type initrc_t, initrc_exec_t;
+		type initrc_t;
+		attribute init_script_file_type;
 	')
 
 	files_list_etc($1)
-	spec_domtrans_pattern($1, initrc_exec_t, initrc_t)
+	spec_domtrans_pattern($1, init_script_file_type, initrc_t)
 
 	ifdef(`distro_gentoo',`
 		gen_require(`
@@ -818,11 +971,11 @@ interface(`init_spec_domtrans_script',`
 	')
 
 	ifdef(`enable_mcs',`
-		range_transition $1 initrc_exec_t:process s0;
+		range_transition $1 init_script_file_type:process s0;
 	')
 
 	ifdef(`enable_mls',`
-		range_transition $1 initrc_exec_t:process s0 - mls_systemhigh;
+		range_transition $1 init_script_file_type:process s0 - mls_systemhigh;
 	')
 ')
 
@@ -838,19 +991,41 @@ interface(`init_spec_domtrans_script',`
 #
 interface(`init_domtrans_script',`
 	gen_require(`
-		type initrc_t, initrc_exec_t;
+		type initrc_t;
+		attribute init_script_file_type;
+		attribute initrc_transition_domain;
 	')
+	typeattribute $1 initrc_transition_domain;
 
 	files_list_etc($1)
-	domtrans_pattern($1, initrc_exec_t, initrc_t)
+	domtrans_pattern($1, init_script_file_type, initrc_t)
 
 	ifdef(`enable_mcs',`
-		range_transition $1 initrc_exec_t:process s0;
+		range_transition $1 init_script_file_type:process s0;
 	')
 
 	ifdef(`enable_mls',`
-		range_transition $1 initrc_exec_t:process s0 - mls_systemhigh;
+		range_transition $1 init_script_file_type:process s0 - mls_systemhigh;
+	')
+')
+
+########################################
+## <summary>
+##	Execute a file in a bin directory
+##	in the initrc_t domain 
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`init_bin_domtrans_spec',`
+	gen_require(`
+		type initrc_t;
 	')
+
+	corecmd_bin_domtrans($1, initrc_t)
 ')
 
 ########################################
@@ -906,9 +1081,14 @@ interface(`init_script_file_domtrans',`
 interface(`init_labeled_script_domtrans',`
 	gen_require(`
 		type initrc_t;
+		attribute initrc_transition_domain;
 	')
 
+	typeattribute $1 initrc_transition_domain;
+	# service script searches all filesystems via mountpoint
+	fs_search_all($1)
 	domtrans_pattern($1, $2, initrc_t)
+	allow $1 $2:file ioctl;
 	files_search_etc($1)
 ')
 
@@ -999,7 +1179,9 @@ interface(`init_ptrace',`
 		type init_t;
 	')
 
-	allow $1 init_t:process ptrace;
+	tunable_policy(`deny_ptrace',`',`
+		allow $1 init_t:process ptrace;
+	')
 ')
 
 ########################################
@@ -1117,6 +1299,24 @@ interface(`init_read_all_script_files',`
 
 #######################################
 ## <summary>
+##	Dontaudit getattr all init script files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`init_dontaudit_getattr_all_script_files',`
+	gen_require(`
+		attribute init_script_file_type;
+	')
+
+	dontaudit $1 init_script_file_type:file getattr;
+')
+
+#######################################
+## <summary>
 ##	Dontaudit read all init script files.
 ## </summary>
 ## <param name="domain">
@@ -1168,12 +1368,7 @@ interface(`init_read_script_state',`
 	')
 
 	kernel_search_proc($1)
-	read_files_pattern($1, initrc_t, initrc_t)
-	read_lnk_files_pattern($1, initrc_t, initrc_t)
-	list_dirs_pattern($1, initrc_t, initrc_t)
-
-	# should move this to separate interface
-	allow $1 initrc_t:process getattr;
+	ps_process_pattern($1, initrc_t)
 ')
 
 ########################################
@@ -1413,6 +1608,27 @@ interface(`init_dbus_send_script',`
 ########################################
 ## <summary>
 ##	Send and receive messages from
+##	init over dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`init_dbus_chat',`
+	gen_require(`
+		type init_t;
+		class dbus send_msg;
+	')
+
+	allow $1 init_t:dbus send_msg;
+	allow init_t $1:dbus send_msg;
+')
+
+########################################
+## <summary>
+##	Send and receive messages from
 ##	init scripts over dbus.
 ## </summary>
 ## <param name="domain">
@@ -1499,6 +1715,25 @@ interface(`init_getattr_script_status_files',`
 
 ########################################
 ## <summary>
+##	Manage init script
+##	status files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`init_manage_script_status_files',`
+	gen_require(`
+		type initrc_state_t;
+	')
+
+	manage_files_pattern($1, initrc_state_t, initrc_state_t)
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to read init script
 ##	status files.
 ## </summary>
@@ -1557,6 +1792,24 @@ interface(`init_rw_script_tmp_files',`
 
 ########################################
 ## <summary>
+##	Read and write init script inherited temporary data.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`init_rw_inherited_script_tmp_files',`
+	gen_require(`
+		type initrc_tmp_t;
+	')
+
+	allow $1 initrc_tmp_t:file rw_inherited_file_perms;
+')
+
+########################################
+## <summary>
 ##	Create files in a init script
 ##	temporary data directory.
 ## </summary>
@@ -1629,6 +1882,43 @@ interface(`init_read_utmp',`
 
 ########################################
 ## <summary>
+##	Read utmp.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`init_read_machineid',`
+	gen_require(`
+		type machineid_t;
+	')
+
+	files_search_etc($1)
+	allow $1 machineid_t:file read_file_perms;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read utmp.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`init_dontaudit_read_utmp',`
+	gen_require(`
+		type initrc_var_run_t;
+	')
+
+	dontaudit $1 initrc_var_run_t:file read_file_perms;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to write utmp.
 ## </summary>
 ## <param name="domain">
@@ -1717,7 +2007,7 @@ interface(`init_dontaudit_rw_utmp',`
 		type initrc_var_run_t;
 	')
 
-	dontaudit $1 initrc_var_run_t:file { getattr read write append lock };
+	dontaudit $1 initrc_var_run_t:file rw_file_perms;
 ')
 
 ########################################
@@ -1758,6 +2048,128 @@ interface(`init_pid_filetrans_utmp',`
 	files_pid_filetrans($1, initrc_var_run_t, file, "utmp")
 ')
 
+######################################
+## <summary>
+##  Allow search  directory in the /run/systemd directory.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`init_search_pid_dirs',`
+    gen_require(`
+        type init_var_run_t;
+    ')
+
+    allow $1 init_var_run_t:dir search_dir_perms;
+')
+
+######################################
+## <summary>
+##  Allow listing of the /run/systemd directory.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`init_list_pid_dirs',`
+    gen_require(`
+        type init_var_run_t;
+    ')
+
+    allow $1 init_var_run_t:dir list_dir_perms;
+')
+
+#######################################
+## <summary>
+##  Create a directory in the /run/systemd directory.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`init_create_pid_dirs',`
+    gen_require(`
+        type init_var_run_t;
+    ')
+
+    allow $1 init_var_run_t:dir list_dir_perms;
+    create_dirs_pattern($1, init_var_run_t, init_var_run_t)
+')
+
+#######################################
+## <summary>
+##  Create objects in /run/systemd directory
+##  with an automatic type transition to
+##  a specified private type.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <param name="private_type">
+##  <summary>
+##  The type of the object to create.
+##  </summary>
+## </param>
+## <param name="object_class">
+##  <summary>
+##  The class of the object to be created.
+##  </summary>
+## </param>
+#
+interface(`init_pid_filetrans',`
+    gen_require(`
+        type init_var_run_t;
+    ')
+
+	files_search_pids($1)
+	filetrans_pattern($1, init_var_run_t, $2, $3, $4)
+')
+
+#######################################
+## <summary>
+##	Create objects in /run/systemd directory
+##	with an automatic type transition to
+##	a specified private type.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="private_type">
+##	<summary>
+##	The type of the object to create.
+##	</summary>
+## </param>
+## <param name="object_class">
+##	<summary>
+##	The class of the object to be created.
+##	</summary>
+## </param>
+## <param name="object_name">
+##	<summary>
+##	The name of the object to be created.
+##	</summary>
+## </param>
+#
+interface(`init_named_pid_filetrans',`
+	gen_require(`
+		type init_var_run_t;
+	')
+
+	files_search_pids($1)
+	filetrans_pattern($1, init_var_run_t, $2, $3, $4)
+')
+
 ########################################
 ## <summary>
 ##	Allow the specified domain to connect to daemon with a tcp socket
@@ -1792,3 +2204,284 @@ interface(`init_udp_recvfrom_all_daemons',`
 	')
 	corenet_udp_recvfrom_labeled($1, daemon)
 ')
+
+########################################
+## <summary>
+##	Transition to system_r when execute an init script
+## </summary>
+## <desc>
+##      <p>
+##	Execute a init script in a specified role
+##      </p>
+##      <p>
+##      No interprocess communication (signals, pipes,
+##      etc.) is provided by this interface since
+##      the domains are not owned by this module.
+##      </p>
+## </desc>
+## <param name="source_role">
+##	<summary>
+##	Role to transition from.
+##	</summary>
+## </param>
+#
+interface(`init_script_role_transition',`
+	gen_require(`
+		attribute init_script_file_type;
+	')
+
+	role_transition $1 init_script_file_type system_r;
+')
+
+########################################
+## <summary>
+##	dontaudit read and write an leaked init scrip file descriptors
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`init_dontaudit_script_leaks',`
+	gen_require(`
+		type initrc_t;
+	')
+
+	dontaudit $1 initrc_t:tcp_socket { read write };
+	dontaudit $1 initrc_t:udp_socket { read write };
+	dontaudit $1 initrc_t:unix_dgram_socket { read write };
+	dontaudit $1 initrc_t:unix_stream_socket { read write };
+	dontaudit $1 initrc_t:shm rw_shm_perms;
+	init_dontaudit_use_script_ptys($1)
+	init_dontaudit_use_script_fds($1)
+')
+
+#######################################
+## <summary>
+##  Allow the specified domain to ioctl an
+##  init with a unix domain stream sockets.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`init_ioctl_stream_sockets',`
+    gen_require(`
+        type init_t;
+    ')
+
+    allow $1 init_t:unix_stream_socket ioctl;
+')
+
+########################################
+## <summary>
+##	Allow the specified domain to read/write to
+##	init with a unix domain stream sockets.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`init_rw_stream_sockets',`
+	gen_require(`
+		type init_t;
+	')
+
+	allow $1 init_t:unix_stream_socket rw_stream_socket_perms;
+')
+
+#######################################
+## <summary>
+##  Allow the specified domain to write to
+##  init sock file.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`init_write_pid_socket',`
+    gen_require(`
+        type init_var_run_t;
+    ')
+
+    allow $1 init_var_run_t:sock_file write;
+')
+
+########################################
+## <summary>
+##	Send a message to init over a unix domain
+##	datagram socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`init_dgram_send',`
+	gen_require(`
+		type init_t;
+	')
+
+	allow $1 init_t:unix_dgram_socket sendto;
+')
+
+########################################
+## <summary>
+##	Send a message to init over a unix domain
+##	stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`init_stream_send',`
+	gen_require(`
+		type init_t;
+	')
+
+	allow $1 init_t:unix_stream_socket sendto;
+')
+
+########################################
+## <summary>
+##	Create a file type used for init socket files.
+## </summary>
+## <desc>
+##	<p>
+##	This defines a type that init can create sock_file within for 
+##	impersonation purposes
+##	</p>
+## </desc>
+## <param name="script_file">
+##	<summary>
+##	Type to be used for a sock file.
+##	</summary>
+## </param>
+## <infoflow type="none"/>
+#
+interface(`init_sock_file',`
+	gen_require(`
+		attribute init_sock_file_type;
+	')
+
+	typeattribute $1 init_sock_file_type;
+
+')
+
+########################################
+## <summary>
+##	Read init unnamed pipes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`init_read_pipes',`
+	gen_require(`
+		type init_var_run_t;
+	')
+
+	read_fifo_files_pattern($1, init_var_run_t, init_var_run_t)
+')
+
+########################################
+## <summary>
+##	Read/Write init unnamed pipes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`init_rw_pipes',`
+	gen_require(`
+		type init_var_run_t;
+	')
+
+	rw_fifo_files_pattern($1, init_var_run_t, init_var_run_t)
+')
+
+########################################
+## <summary>
+##	Get the system status information from init
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`init_status',`
+	gen_require(`
+		type init_t;
+	')
+
+	allow $1 init_t:system status;
+')
+
+########################################
+## <summary>
+##	Tell init to reboot the system.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`init_reboot',`
+	gen_require(`
+		type init_t;
+	')
+
+	allow $1 init_t:system reboot;
+')
+
+########################################
+## <summary>
+##	Tell init to halt the system.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`init_halt',`
+	gen_require(`
+		type init_t;
+	')
+
+	allow $1 init_t:system halt;
+')
+
+########################################
+## <summary>
+##	Tell init to do an unknown access.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`init_undefined',`
+	gen_require(`
+		type init_t;
+	')
+
+	allow $1 init_t:system undefined;
+')
diff --git a/policy/modules/system/init.te b/policy/modules/system/init.te
index 5fb9683..28b9f3b 100644
--- a/policy/modules/system/init.te
+++ b/policy/modules/system/init.te
@@ -16,6 +16,34 @@ gen_require(`
 ## </desc>
 gen_tunable(init_upstart, false)
 
+## <desc>
+## <p>
+## Enable support for systemd as the init program.
+## </p>
+## </desc>
+gen_tunable(init_systemd, false)
+
+## <desc>
+## <p>
+## Allow all daemons to use tcp wrappers.
+## </p>
+## </desc>
+gen_tunable(daemons_use_tcp_wrapper, false)
+
+## <desc>
+## <p>
+## Allow all daemons the ability to read/write terminals
+## </p>
+## </desc>
+gen_tunable(daemons_use_tty, false)
+
+## <desc>
+## <p>
+## Allow all daemons to write corefiles to /
+## </p>
+## </desc>
+gen_tunable(daemons_dump_core, false)
+
 # used for direct running of init scripts
 # by admin domains
 attribute direct_run_init;
@@ -25,14 +53,18 @@ attribute direct_init_entry;
 attribute init_script_domain_type;
 attribute init_script_file_type;
 attribute init_run_all_scripts_domain;
+attribute initrc_transition_domain;
+# Attribute used for systemd so domains can allow systemd to create sock_files
+attribute init_sock_file_type;
 
 # Mark process types as daemons
 attribute daemon;
+attribute systemprocess;
 
 #
 # init_t is the domain of the init process.
 #
-type init_t;
+type init_t, initrc_transition_domain;
 type init_exec_t;
 domain_type(init_t)
 domain_entry_file(init_t, init_exec_t)
@@ -45,6 +77,9 @@ role system_r types init_t;
 type init_var_run_t;
 files_pid_file(init_var_run_t)
 
+type machineid_t;
+files_config_file(machineid_t)
+
 #
 # initctl_t is the type of the named pipe created
 # by init during initialization.  This pipe is used
@@ -63,6 +98,8 @@ role system_r types initrc_t;
 # of the below init_upstart tunable
 # but this has a typeattribute in it
 corecmd_shell_entry_type(initrc_t)
+corecmd_bin_entry_type(initrc_t)
+corecmd_bin_domtrans(init_t, initrc_t)
 
 type initrc_devpts_t;
 term_pty(initrc_devpts_t)
@@ -92,7 +129,7 @@ ifdef(`enable_mls',`
 #
 
 # Use capabilities. old rule:
-allow init_t self:capability ~sys_module;
+allow init_t self:capability ~{ sys_ptrace audit_control audit_write sys_module };
 # is ~sys_module really needed? observed:
 # sys_boot
 # sys_tty_config
@@ -104,12 +141,25 @@ allow init_t self:fifo_file rw_fifo_file_perms;
 
 # Re-exec itself
 can_exec(init_t, init_exec_t)
-
-allow init_t initrc_t:unix_stream_socket connectto;
-
-# For /var/run/shutdown.pid.
-allow init_t init_var_run_t:file manage_file_perms;
-files_pid_filetrans(init_t, init_var_run_t, file)
+# executing content in /run/initramfs
+manage_files_pattern(init_t, initrc_state_t, initrc_state_t)
+can_exec(init_t, initrc_state_t)
+
+allow init_t initrc_t:unix_stream_socket { connectto create_stream_socket_perms };
+allow initrc_t init_t:unix_stream_socket { connectto rw_stream_socket_perms sendto };
+allow initrc_t init_t:fifo_file rw_fifo_file_perms;
+
+manage_dirs_pattern(init_t, init_var_run_t, init_var_run_t)
+manage_files_pattern(init_t, init_var_run_t, init_var_run_t)
+manage_lnk_files_pattern(init_t, init_var_run_t, init_var_run_t)
+manage_sock_files_pattern(init_t, init_var_run_t, init_var_run_t)
+files_pid_filetrans(init_t, init_var_run_t, { dir file })
+allow init_t init_var_run_t:dir mounton;
+
+allow init_t machineid_t:file manage_file_perms;
+files_pid_filetrans(init_t, machineid_t, file, "machine-id")
+files_etc_filetrans(init_t, machineid_t, file, "machine-id")
+allow init_t machineid_t:file mounton;
 
 allow init_t initctl_t:fifo_file manage_fifo_file_perms;
 dev_filetrans(init_t, initctl_t, fifo_file)
@@ -119,25 +169,34 @@ allow init_t initrc_var_run_t:file { rw_file_perms setattr };
 
 kernel_read_system_state(init_t)
 kernel_share_state(init_t)
+kernel_stream_connect(init_t)
 
 corecmd_exec_chroot(init_t)
 corecmd_exec_bin(init_t)
 
-dev_read_sysfs(init_t)
+dev_rw_sysfs(init_t)
+dev_read_urand(init_t)
 # Early devtmpfs
 dev_rw_generic_chr_files(init_t)
+dev_filetrans_all_named_dev(init_t)
 
 domain_getpgid_all_domains(init_t)
 domain_kill_all_domains(init_t)
 domain_signal_all_domains(init_t)
 domain_signull_all_domains(init_t)
 domain_sigstop_all_domains(init_t)
+domain_sigstop_all_domains(init_t)
 domain_sigchld_all_domains(init_t)
+domain_read_all_domains_state(init_t)
 
 files_read_etc_files(init_t)
+files_read_all_pids(init_t)
+files_read_system_conf_files(init_t)
 files_rw_generic_pids(init_t)
 files_dontaudit_search_isid_type_dirs(init_t)
+files_read_etc_runtime_files(init_t)
 files_manage_etc_runtime_files(init_t)
+files_manage_etc_symlinks(init_t)
 files_etc_filetrans_etc_runtime(init_t, file)
 # Run /etc/X11/prefdm:
 files_exec_etc_files(init_t)
@@ -149,6 +208,8 @@ fs_list_inotifyfs(init_t)
 # cjp: this may be related to /dev/log
 fs_write_ramfs_sockets(init_t)
 
+mcs_file_read_all(init_t)
+mcs_file_write_all(init_t)
 mcs_process_set_categories(init_t)
 mcs_killall(init_t)
 
@@ -156,22 +217,40 @@ mls_file_read_all_levels(init_t)
 mls_file_write_all_levels(init_t)
 mls_process_write_down(init_t)
 mls_fd_use_all_levels(init_t)
+mls_socket_read_all_levels(init_t)
+mls_socket_write_all_levels(init_t)
+
+mls_rangetrans_source(initrc_t)
 
 selinux_set_all_booleans(init_t)
+selinux_load_policy(init_t)
+selinux_mounton_fs(init_t)
+allow init_t security_t:security load_policy;
 
-term_use_all_terms(init_t)
+term_use_unallocated_ttys(init_t)
+term_use_console(init_t)
+term_use_all_inherited_terms(init_t)
 
 # Run init scripts.
 init_domtrans_script(init_t)
 
 libs_rw_ld_so_cache(init_t)
 
+logging_create_devlog_dev(init_t)
 logging_send_syslog_msg(init_t)
+logging_send_audit_msgs(init_t)
 logging_rw_generic_logs(init_t)
 
 seutil_read_config(init_t)
+seutil_read_module_store(init_t)
 
 miscfiles_read_localization(init_t)
+miscfiles_manage_localization(init_t)
+miscfiles_filetrans_named_content(init_t)
+
+userdom_use_user_ttys(init_t)
+
+allow init_t self:process setsched;
 
 ifdef(`distro_gentoo',`
 	allow init_t self:process { getcap setcap };
@@ -180,12 +259,14 @@ ifdef(`distro_gentoo',`
 ')
 
 ifdef(`distro_redhat',`
+	fs_manage_tmpfs_files(init_t)
+	fs_exec_tmpfs_files(init_t)
 	fs_read_tmpfs_symlinks(init_t)
 	fs_rw_tmpfs_chr_files(init_t)
 	fs_tmpfs_filetrans(init_t, initctl_t, fifo_file)
 ')
 
-tunable_policy(`init_upstart',`
+tunable_policy(`init_upstart || init_systemd',`
 	corecmd_shell_domtrans(init_t, initrc_t)
 ',`
 	# Run the shell in the sysadm role for single-user mode.
@@ -193,16 +274,146 @@ tunable_policy(`init_upstart',`
 	sysadm_shell_domtrans(init_t)
 ')
 
+storage_raw_rw_fixed_disk(init_t)
+
 optional_policy(`
-	auth_rw_login_records(init_t)
+	modutils_domtrans_insmod(init_t)
 ')
 
 optional_policy(`
+	postfix_exec(init_t)
+	postfix_list_spool(init_t)
+	mta_read_aliases(init_t)
+')
+
+tunable_policy(`init_systemd',`
+	allow init_t self:unix_dgram_socket { create_socket_perms sendto };
+	allow init_t self:process { setsockcreate setfscreate setrlimit };
+	allow init_t self:process { getcap setcap };
+	allow init_t self:unix_stream_socket { create_stream_socket_perms connectto };
+	allow init_t self:netlink_kobject_uevent_socket create_socket_perms; 
+	# Until systemd is fixed
+	allow daemon init_t:socket_class_set { getopt read getattr ioctl setopt write };
+	allow init_t self:udp_socket create_socket_perms;
+	allow init_t self:netlink_route_socket create_netlink_socket_perms;
+
+	allow init_t initrc_t:unix_dgram_socket create_socket_perms;
+
+	kernel_list_unlabeled(init_t)
+	kernel_read_network_state(init_t)
+	kernel_rw_kernel_sysctl(init_t)
+	kernel_rw_net_sysctls(init_t)
+	kernel_read_all_sysctls(init_t)
+	kernel_read_software_raid_state(init_t)
+	kernel_unmount_debugfs(init_t)
+	kernel_setsched(init_t)
+
+	dev_write_kmsg(init_t)
+	dev_write_urand(init_t)
+	dev_rw_lvm_control(init_t)
+	dev_rw_autofs(init_t)
+	dev_manage_generic_symlinks(init_t)
+	dev_manage_generic_dirs(init_t)
+	dev_manage_generic_files(init_t)
+	dev_read_generic_chr_files(init_t)
+	dev_relabel_generic_dev_dirs(init_t)
+	dev_relabel_all_dev_nodes(init_t)
+	dev_relabel_all_dev_files(init_t)
+	dev_manage_sysfs_dirs(init_t)
+	dev_relabel_sysfs_dirs(init_t)
+
+	files_search_all(init_t)
+	files_mounton_all_mountpoints(init_t)
+	files_unmount_all_file_type_fs(init_t)
+	files_manage_all_pid_dirs(init_t)
+	files_manage_generic_tmp_dirs(init_t)
+	files_relabel_all_pid_dirs(init_t)
+	files_relabel_all_pid_files(init_t)
+	files_create_all_pid_sockets(init_t)
+	files_delete_all_pids(init_t)
+	files_exec_generic_pid_files(init_t)
+	files_create_all_pid_pipes(init_t)
+	files_create_all_spool_sockets(init_t)
+	files_delete_all_spool_sockets(init_t)
+	files_manage_urandom_seed(init_t)
+	files_list_locks(init_t)
+	files_list_spool(init_t)
+	files_list_var(init_t)
+	files_create_lock_dirs(init_t)
+	files_relabel_all_lock_dirs(init_t)
+
+	fs_getattr_all_fs(init_t)
+	fs_manage_cgroup_dirs(init_t)
+	fs_manage_cgroup_files(init_t)
+	fs_manage_hugetlbfs_dirs(init_t)
+	fs_manage_tmpfs_dirs(init_t)
+	fs_relabel_tmpfs_dirs(init_t)
+	fs_relabel_tmpfs_files(init_t)
+	fs_mount_all_fs(init_t)
+	fs_unmount_all_fs(init_t)
+	fs_remount_all_fs(init_t)
+	fs_list_auto_mountpoints(init_t)
+	fs_relabel_cgroup_dirs(init_t)
+	fs_search_cgroup_dirs(daemon)
+
+	selinux_compute_create_context(init_t)
+	selinux_validate_context(init_t)
+	selinux_unmount_fs(init_t)
+
+	storage_getattr_removable_dev(init_t)
+
+	term_relabel_ptys_dirs(init_t)
+
+	auth_relabel_login_records(init_t)
+	auth_relabel_pam_console_data_dirs(init_t)
+
+	clock_read_adjtime(init_t)
+
+	init_read_script_state(init_t)
+
+	seutil_read_file_contexts(init_t)
+
+	systemd_exec_systemctl(init_t)
+	systemd_manage_unit_dirs(init_t)
+	systemd_manage_all_unit_files(init_t)
+	systemd_logger_stream_connect(init_t)
+
+	create_sock_files_pattern(init_t, init_sock_file_type, init_sock_file_type)
+
+')
+
+auth_use_nsswitch(init_t)
+auth_rw_login_records(init_t)
+
+optional_policy(`
+	systemd_filetrans_named_content(init_t)
+')
+
+optional_policy(`
+	lvm_rw_pipes(init_t)
+')
+
+optional_policy(`
+	consolekit_manage_log(init_t)
+')
+
+optional_policy(`
+	dbus_connect_system_bus(init_t)
 	dbus_system_bus_client(init_t)
+	dbus_delete_pid_files(init_t)
 ')
 
 optional_policy(`
-	nscd_socket_use(init_t)
+	# /var/run/dovecot/login/ssl-parameters.dat is a hard link to
+	# /var/lib/dovecot/ssl-parameters.dat and init tries to clean up
+	# the directory. But we do not want to allow this.
+	# The master process of dovecot will manage this file.
+	dovecot_dontaudit_unlink_lib_files(initrc_t)
+')
+
+optional_policy(`
+	plymouthd_stream_connect(init_t)
+	plymouthd_exec_plymouth(init_t)
 ')
 
 optional_policy(`
@@ -210,6 +421,17 @@ optional_policy(`
 ')
 
 optional_policy(`
+	udev_read_db(init_t)
+	udev_relabelto_db(init_t)
+	udev_create_kobject_uevent_socket(init_t)
+')
+
+optional_policy(`
+	xserver_relabel_xdm_tmp_dirs(init_t)
+	xserver_manage_xdm_tmp_dirs(init_t)
+')
+
+optional_policy(`
 	unconfined_domain(init_t)
 ')
 
@@ -219,8 +441,8 @@ optional_policy(`
 #
 
 allow initrc_t self:process { getpgid setsched setpgid setrlimit getsched };
-allow initrc_t self:capability ~{ sys_admin sys_module };
-dontaudit initrc_t self:capability sys_module; # sysctl is triggering this
+allow initrc_t self:capability ~{ sys_ptrace audit_control audit_write sys_admin sys_module };
+dontaudit initrc_t self:capability { sys_ptrace sys_module }; # sysctl is triggering this
 allow initrc_t self:passwd rootok;
 allow initrc_t self:key manage_key_perms;
 
@@ -248,12 +470,15 @@ manage_fifo_files_pattern(initrc_t, initrc_state_t, initrc_state_t)
 
 allow initrc_t initrc_var_run_t:file manage_file_perms;
 files_pid_filetrans(initrc_t, initrc_var_run_t, file)
+files_manage_generic_pids_symlinks(initrc_t)
+files_create_var_run_dirs(initrc_t)
 
 can_exec(initrc_t, initrc_tmp_t)
 manage_files_pattern(initrc_t, initrc_tmp_t, initrc_tmp_t)
 manage_dirs_pattern(initrc_t, initrc_tmp_t, initrc_tmp_t)
 manage_lnk_files_pattern(initrc_t, initrc_tmp_t, initrc_tmp_t)
 files_tmp_filetrans(initrc_t, initrc_tmp_t, { file dir })
+allow initrc_t initrc_tmp_t:dir relabelfrom;
 
 init_write_initctl(initrc_t)
 
@@ -265,20 +490,34 @@ kernel_change_ring_buffer_level(initrc_t)
 kernel_clear_ring_buffer(initrc_t)
 kernel_get_sysvipc_info(initrc_t)
 kernel_read_all_sysctls(initrc_t)
+kernel_request_load_module(initrc_t)
 kernel_rw_all_sysctls(initrc_t)
 # for lsof which is used by alsa shutdown:
 kernel_dontaudit_getattr_message_if(initrc_t)
+kernel_stream_connect(initrc_t)
+files_read_kernel_modules(initrc_t)
+files_read_config_files(initrc_t)
+files_read_var_lib_symlinks(initrc_t)
+files_setattr_pid_dirs(initrc_t)
 
 files_read_kernel_symbol_table(initrc_t)
+files_exec_etc_files(initrc_t)
+files_manage_etc_symlinks(initrc_t)
+files_manage_system_conf_files(initrc_t)
+
+fs_manage_tmpfs_dirs(initrc_t)
+fs_manage_tmpfs_symlinks(initrc_t)
+fs_delete_tmpfs_files(initrc_t)
+fs_tmpfs_filetrans(initrc_t, initrc_state_t, file)
 
 corecmd_exec_all_executables(initrc_t)
 
 corenet_all_recvfrom_unlabeled(initrc_t)
 corenet_all_recvfrom_netlabel(initrc_t)
-corenet_tcp_sendrecv_all_if(initrc_t)
-corenet_udp_sendrecv_all_if(initrc_t)
-corenet_tcp_sendrecv_all_nodes(initrc_t)
-corenet_udp_sendrecv_all_nodes(initrc_t)
+corenet_tcp_sendrecv_generic_if(initrc_t)
+corenet_udp_sendrecv_generic_if(initrc_t)
+corenet_tcp_sendrecv_generic_node(initrc_t)
+corenet_udp_sendrecv_generic_node(initrc_t)
 corenet_tcp_sendrecv_all_ports(initrc_t)
 corenet_udp_sendrecv_all_ports(initrc_t)
 corenet_tcp_connect_all_ports(initrc_t)
@@ -286,6 +525,7 @@ corenet_sendrecv_all_client_packets(initrc_t)
 
 dev_read_rand(initrc_t)
 dev_read_urand(initrc_t)
+dev_dontaudit_read_kmsg(initrc_t)
 dev_write_kmsg(initrc_t)
 dev_write_rand(initrc_t)
 dev_write_urand(initrc_t)
@@ -296,8 +536,10 @@ dev_write_framebuffer(initrc_t)
 dev_read_realtime_clock(initrc_t)
 dev_read_sound_mixer(initrc_t)
 dev_write_sound_mixer(initrc_t)
+dev_setattr_generic_dirs(initrc_t)
 dev_setattr_all_chr_files(initrc_t)
 dev_rw_lvm_control(initrc_t)
+dev_rw_generic_chr_files(initrc_t)
 dev_delete_lvm_control_dev(initrc_t)
 dev_manage_generic_symlinks(initrc_t)
 dev_manage_generic_files(initrc_t)
@@ -305,17 +547,16 @@ dev_manage_generic_files(initrc_t)
 dev_delete_generic_symlinks(initrc_t)
 dev_getattr_all_blk_files(initrc_t)
 dev_getattr_all_chr_files(initrc_t)
-# Early devtmpfs
-dev_rw_generic_chr_files(initrc_t)
+dev_rw_xserver_misc(initrc_t)
 
 domain_kill_all_domains(initrc_t)
 domain_signal_all_domains(initrc_t)
 domain_signull_all_domains(initrc_t)
 domain_sigstop_all_domains(initrc_t)
+domain_sigstop_all_domains(initrc_t)
 domain_sigchld_all_domains(initrc_t)
 domain_read_all_domains_state(initrc_t)
 domain_getattr_all_domains(initrc_t)
-domain_dontaudit_ptrace_all_domains(initrc_t)
 domain_getsession_all_domains(initrc_t)
 domain_use_interactive_fds(initrc_t)
 # for lsof which is used by alsa shutdown:
@@ -323,6 +564,7 @@ domain_dontaudit_getattr_all_udp_sockets(initrc_t)
 domain_dontaudit_getattr_all_tcp_sockets(initrc_t)
 domain_dontaudit_getattr_all_dgram_sockets(initrc_t)
 domain_dontaudit_getattr_all_pipes(initrc_t)
+domain_obj_id_change_exemption(initrc_t)
 
 files_getattr_all_dirs(initrc_t)
 files_getattr_all_files(initrc_t)
@@ -330,8 +572,10 @@ files_getattr_all_symlinks(initrc_t)
 files_getattr_all_pipes(initrc_t)
 files_getattr_all_sockets(initrc_t)
 files_purge_tmp(initrc_t)
-files_delete_all_locks(initrc_t)
+files_manage_all_locks(initrc_t)
+files_manage_boot_files(initrc_t)
 files_read_all_pids(initrc_t)
+files_delete_root_files(initrc_t)
 files_delete_all_pids(initrc_t)
 files_delete_all_pid_dirs(initrc_t)
 files_read_etc_files(initrc_t)
@@ -347,8 +591,12 @@ files_list_isid_type_dirs(initrc_t)
 files_mounton_isid_type_dirs(initrc_t)
 files_list_default(initrc_t)
 files_mounton_default(initrc_t)
+files_manage_mnt_dirs(initrc_t)
+files_manage_mnt_files(initrc_t)
 
-fs_write_cgroup_files(initrc_t)
+fs_delete_cgroup_dirs(initrc_t)
+fs_list_cgroup_dirs(initrc_t)
+fs_rw_cgroup_files(initrc_t)
 fs_list_inotifyfs(initrc_t)
 fs_register_binary_executable_type(initrc_t)
 # rhgb-console writes to ramfs
@@ -358,9 +606,12 @@ fs_mount_all_fs(initrc_t)
 fs_unmount_all_fs(initrc_t)
 fs_remount_all_fs(initrc_t)
 fs_getattr_all_fs(initrc_t)
+fs_search_all(initrc_t)
+fs_getattr_nfsd_files(initrc_t)
 
 # initrc_t needs to do a pidof which requires ptrace
-mcs_ptrace_all(initrc_t)
+mcs_file_read_all(initrc_t)
+mcs_file_write_all(initrc_t)
 mcs_killall(initrc_t)
 mcs_process_set_categories(initrc_t)
 
@@ -370,6 +621,7 @@ mls_process_read_up(initrc_t)
 mls_process_write_down(initrc_t)
 mls_rangetrans_source(initrc_t)
 mls_fd_share_all_levels(initrc_t)
+mls_socket_write_to_clearance(initrc_t)
 
 selinux_get_enforce_mode(initrc_t)
 
@@ -381,6 +633,7 @@ term_use_all_terms(initrc_t)
 term_reset_tty_labels(initrc_t)
 
 auth_rw_login_records(initrc_t)
+auth_manage_faillog(initrc_t)
 auth_setattr_login_records(initrc_t)
 auth_rw_lastlog(initrc_t)
 auth_read_pam_pid(initrc_t)
@@ -401,18 +654,17 @@ logging_read_audit_config(initrc_t)
 
 miscfiles_read_localization(initrc_t)
 # slapd needs to read cert files from its initscript
-miscfiles_read_generic_certs(initrc_t)
+miscfiles_manage_generic_cert_files(initrc_t)
 
-modutils_read_module_config(initrc_t)
-modutils_domtrans_insmod(initrc_t)
 
 seutil_read_config(initrc_t)
 
+userdom_read_admin_home_files(initrc_t)
 userdom_read_user_home_content_files(initrc_t)
 # Allow access to the sysadm TTYs. Note that this will give access to the
 # TTYs to any process in the initrc_t domain. Therefore, daemons and such
 # started from init should be placed in their own domain.
-userdom_use_user_terminals(initrc_t)
+userdom_use_inherited_user_terminals(initrc_t)
 
 ifdef(`distro_debian',`
 	dev_setattr_generic_dirs(initrc_t)
@@ -465,6 +717,10 @@ ifdef(`distro_gentoo',`
 	sysnet_setattr_config(initrc_t)
 
 	optional_policy(`
+		abrt_manage_pid_files(initrc_t)
+	')
+
+	optional_policy(`
 		alsa_read_lib(initrc_t)
 	')
 
@@ -485,7 +741,7 @@ ifdef(`distro_redhat',`
 
 	# Red Hat systems seem to have a stray
 	# fd open from the initrd
-	kernel_dontaudit_use_fds(initrc_t)
+	kernel_use_fds(initrc_t)
 	files_dontaudit_read_root_files(initrc_t)
 
 	# These seem to be from the initrd
@@ -500,6 +756,7 @@ ifdef(`distro_redhat',`
 	files_create_boot_dirs(initrc_t)
 	files_create_boot_flag(initrc_t)
 	files_rw_boot_symlinks(initrc_t)
+
 	# wants to read /.fonts directory
 	files_read_default_files(initrc_t)
 	files_mountpoint(initrc_tmp_t)
@@ -520,6 +777,7 @@ ifdef(`distro_redhat',`
 	miscfiles_rw_localization(initrc_t)
 	miscfiles_setattr_localization(initrc_t)
 	miscfiles_relabel_localization(initrc_t)
+	miscfiles_filetrans_named_content(initrc_t)
 
 	miscfiles_read_fonts(initrc_t)
 	miscfiles_read_hwdata(initrc_t)
@@ -529,8 +787,35 @@ ifdef(`distro_redhat',`
 	')
 
 	optional_policy(`
+	        abrt_manage_pid_files(initrc_t)
+	')
+
+	optional_policy(`
 		bind_manage_config_dirs(initrc_t)
+		bind_manage_config(initrc_t)
 		bind_write_config(initrc_t)
+		bind_setattr_zone_dirs(initrc_t)
+	')
+
+	optional_policy(`
+		devicekit_append_inherited_log_files(initrc_t)
+	')
+
+	optional_policy(`
+		dirsrvadmin_read_config(initrc_t)
+		dirsrv_manage_var_run(initrc_t)
+	')
+
+	optional_policy(`
+		gnome_manage_gconf_config(initrc_t)
+	')
+
+	optional_policy(`
+		ldap_read_db_files(initrc_t)
+	')
+
+	optional_policy(`
+		pulseaudio_stream_connect(initrc_t)
 	')
 
 	optional_policy(`
@@ -538,14 +823,27 @@ ifdef(`distro_redhat',`
 		rpc_write_exports(initrc_t)
 		rpc_manage_nfs_state_data(initrc_t)
 	')
+	optional_policy(`
+		rpcbind_stream_connect(initrc_t)
+	')
 
 	optional_policy(`
 		sysnet_rw_dhcp_config(initrc_t)
 		sysnet_manage_config(initrc_t)
+		sysnet_manage_dhcpc_state(initrc_t)
+		sysnet_relabelfrom_dhcpc_state(initrc_t)
+		sysnet_relabelfrom_net_conf(initrc_t)
+		sysnet_relabelto_net_conf(initrc_t)
+		sysnet_filetrans_named_content(initrc_t)
+	')
+
+	optional_policy(`
+		wdmd_manage_pid_files(initrc_t)
 	')
 
 	optional_policy(`
 		xserver_delete_log(initrc_t)
+		xserver_manage_user_fonts_dir(initrc_t)
 	')
 ')
 
@@ -556,6 +854,39 @@ ifdef(`distro_suse',`
 	')
 ')
 
+domain_dontaudit_use_interactive_fds(daemon)
+
+userdom_dontaudit_list_admin_dir(daemon)
+userdom_dontaudit_search_user_tmp(daemon)
+
+tunable_policy(`daemons_use_tcp_wrapper',`
+    corenet_tcp_connect_auth_port(daemon)
+')
+
+tunable_policy(`daemons_use_tty',`
+	term_use_unallocated_ttys(daemon)
+	term_use_generic_ptys(daemon)
+	term_use_all_ttys(daemon)
+	term_use_all_ptys(daemon)
+',`
+	term_dontaudit_use_unallocated_ttys(daemon)
+	term_dontaudit_use_generic_ptys(daemon)
+	term_dontaudit_use_all_ttys(daemon)
+	term_dontaudit_use_all_ptys(daemon)
+ ')
+ 
+# system-config-services causes avc messages that should be dontaudited
+tunable_policy(`daemons_dump_core',`
+	files_manage_root_files(daemon)
+')
+
+optional_policy(`
+	unconfined_dontaudit_rw_pipes(daemon)
+	unconfined_dontaudit_rw_stream(daemon)
+	userdom_dontaudit_read_user_tmp_files(daemon)
+	userdom_dontaudit_write_user_tmp_files(daemon)
+')
+ 
 optional_policy(`
 	amavis_search_lib(initrc_t)
 	amavis_setattr_pid_files(initrc_t)
@@ -568,6 +899,8 @@ optional_policy(`
 optional_policy(`
 	apache_read_config(initrc_t)
 	apache_list_modules(initrc_t)
+	# webmin seems to cause this.
+	apache_search_sys_content(daemon)
 ')
 
 optional_policy(`
@@ -589,6 +922,7 @@ optional_policy(`
 
 optional_policy(`
 	cgroup_stream_connect_cgred(initrc_t)
+	domain_setpriority_all_domains(initrc_t)
 ')
 
 optional_policy(`
@@ -601,6 +935,17 @@ optional_policy(`
 ')
 
 optional_policy(`
+	chronyd_append_keys(initrc_t)
+	chronyd_read_keys(initrc_t)
+')
+
+optional_policy(`
+	cron_read_pipes(initrc_t)
+	# managing /etc/cron.d/mailman content
+	cron_manage_system_spool(initrc_t)
+')
+
+optional_policy(`
 	dev_getattr_printer_dev(initrc_t)
 
 	cups_read_log(initrc_t)
@@ -617,9 +962,13 @@ optional_policy(`
 	dbus_connect_system_bus(initrc_t)
 	dbus_system_bus_client(initrc_t)
 	dbus_read_config(initrc_t)
+	dbus_manage_lib_files(initrc_t)
+
+	init_dbus_chat(initrc_t)
 
 	optional_policy(`
 		consolekit_dbus_chat(initrc_t)
+		consolekit_manage_log(initrc_t)
 	')
 
 	optional_policy(`
@@ -644,6 +993,10 @@ optional_policy(`
 ')
 
 optional_policy(`
+	glance_manage_pid_files(initrc_t)
+')
+
+optional_policy(`
 	gpm_setattr_gpmctl(initrc_t)
 ')
 
@@ -661,6 +1014,15 @@ optional_policy(`
 ')
 
 optional_policy(`
+	firewalld_dbus_chat(initrc_t)
+')
+
+optional_policy(`
+	modutils_read_module_config(initrc_t)
+	modutils_domtrans_insmod(initrc_t)
+')
+
+optional_policy(`
 	inn_exec_config(initrc_t)
 ')
 
@@ -701,6 +1063,7 @@ optional_policy(`
 	lpd_list_spool(initrc_t)
 
 	lpd_read_config(initrc_t)
+	lpd_manage_spool(init_t)
 ')
 
 optional_policy(`
@@ -718,7 +1081,13 @@ optional_policy(`
 ')
 
 optional_policy(`
+        milter_delete_dkim_pid_files(initrc_t)
+	milter_setattr_all_dirs(initrc_t)
+')
+
+optional_policy(`
 	mta_read_config(initrc_t)
+	mta_write_config(initrc_t)
 	mta_dontaudit_read_spool_symlinks(initrc_t)
 ')
 
@@ -741,6 +1110,10 @@ optional_policy(`
 ')
 
 optional_policy(`
+	plymouthd_stream_connect(initrc_t)
+')
+
+optional_policy(`
 	postgresql_manage_db(initrc_t)
 	postgresql_read_config(initrc_t)
 ')
@@ -750,10 +1123,20 @@ optional_policy(`
 ')
 
 optional_policy(`
+	psad_setattr_fifo_file(initrc_t)
+	psad_setattr_log(initrc_t)
+	psad_write_log(initrc_t)
+')
+
+optional_policy(`
 	puppet_rw_tmp(initrc_t)
 ')
 
 optional_policy(`
+	qpidd_manage_var_run(initrc_t)
+')
+
+optional_policy(`
 	quota_manage_flags(initrc_t)
 ')
 
@@ -762,6 +1145,10 @@ optional_policy(`
 ')
 
 optional_policy(`
+	ricci_manage_lib_files(initrc_t)
+')
+
+optional_policy(`
 	fs_write_ramfs_sockets(initrc_t)
 	fs_search_ramfs(initrc_t)
 
@@ -783,8 +1170,6 @@ optional_policy(`
 	# bash tries ioctl for some reason
 	files_dontaudit_ioctl_all_pids(initrc_t)
 
-	# why is this needed:
-	rpm_manage_db(initrc_t)
 ')
 
 optional_policy(`
@@ -793,6 +1178,10 @@ optional_policy(`
 ')
 
 optional_policy(`
+	sendmail_setattr_pid_files(initrc_t)
+')
+
+optional_policy(`
 	# shorewall-init script run /var/lib/shorewall/firewall
 	shorewall_lib_domtrans(initrc_t)
 ')
@@ -802,10 +1191,12 @@ optional_policy(`
 	squid_manage_logs(initrc_t)
 ')
 
+ifdef(`enabled_mls',`
 optional_policy(`
 	# allow init scripts to su
 	su_restricted_domain_template(initrc, initrc_t, system_r)
 ')
+')
 
 optional_policy(`
 	ssh_dontaudit_read_server_keys(initrc_t)
@@ -817,7 +1208,6 @@ optional_policy(`
 ')
 
 optional_policy(`
-	udev_rw_db(initrc_t)
 	udev_manage_pid_files(initrc_t)
 	udev_manage_rules_files(initrc_t)
 ')
@@ -827,12 +1217,30 @@ optional_policy(`
 ')
 
 optional_policy(`
-	virt_stream_connect(initrc_t)
-	virt_manage_svirt_cache(initrc_t)
+	virt_manage_pid_dirs(initrc_t)
+	virt_manage_cache(initrc_t)
+	virt_manage_lib_files(initrc_t)
+')
+
+# Cron jobs used to start and stop services
+optional_policy(`
+	cron_rw_pipes(daemon)
+	cron_rw_inherited_user_spool_files(daemon)
+')
+
+optional_policy(`
+	cfengine_append_inherited_log(daemon)
 ')
 
 optional_policy(`
 	unconfined_domain(initrc_t)
+	domain_role_change_exemption(initrc_t)
+	mcs_file_read_all(initrc_t)
+	mcs_file_write_all(initrc_t)
+	mcs_socket_write_all_levels(initrc_t)
+	mcs_killall(initrc_t)
+
+	files_tmp_filetrans(initrc_t, initrc_tmp_t, { dir_file_class_set })
 
 	ifdef(`distro_redhat',`
 		# system-config-services causes avc messages that should be dontaudited
@@ -842,6 +1250,18 @@ optional_policy(`
 	optional_policy(`
 		mono_domtrans(initrc_t)
 	')
+
+	# Allow SELinux aware applications to request rpm_script_t execution
+	rpm_transition_script(initrc_t)
+	
+	optional_policy(`
+		rtkit_scheduled(initrc_t)
+	')
+')
+
+optional_policy(`
+	rpm_read_db(initrc_t)
+	rpm_delete_db(initrc_t)
 ')
 
 optional_policy(`
@@ -857,6 +1277,10 @@ optional_policy(`
 ')
 
 optional_policy(`
+	sanlock_manage_pid_files(initrc_t)
+')
+
+optional_policy(`
 	# Set device ownerships/modes.
 	xserver_setattr_console_pipes(initrc_t)
 
@@ -867,3 +1291,165 @@ optional_policy(`
 optional_policy(`
 	zebra_read_config(initrc_t)
 ')
+
+userdom_inherit_append_user_home_content_files(daemon)
+userdom_inherit_append_user_tmp_files(daemon)
+userdom_dontaudit_rw_stream(daemon)
+
+logging_inherit_append_all_logs(daemon)
+
+optional_policy(`
+	# sudo service restart causes this 
+	unconfined_signull(daemon)
+')
+
+
+optional_policy(`
+	xserver_dontaudit_append_xdm_home_files(daemon)
+	tunable_policy(`use_nfs_home_dirs',`
+		fs_dontaudit_rw_nfs_files(daemon)
+	')
+	tunable_policy(`use_samba_home_dirs',`
+		fs_dontaudit_rw_cifs_files(daemon)
+	')
+')
+
+init_rw_script_stream_sockets(daemon)
+
+optional_policy(`
+	abrt_stream_connect(daemon)
+')
+
+optional_policy(`
+	fail2ban_read_lib_files(daemon)
+')
+
+optional_policy(`
+	firstboot_dontaudit_leaks(daemon)
+')
+
+init_rw_stream_sockets(daemon)
+
+allow init_t var_run_t:dir relabelto;
+
+init_stream_connect(initrc_t)
+
+allow initrc_t daemon:process siginh;
+allow daemon initrc_transition_domain:fifo_file rw_inherited_fifo_file_perms;
+allow daemon initrc_transition_domain:fd use;
+
+tunable_policy(`init_systemd',`
+	allow init_t daemon:unix_stream_socket create_stream_socket_perms;
+	allow init_t daemon:unix_dgram_socket create_socket_perms;
+	allow init_t daemon:tcp_socket create_stream_socket_perms;
+	allow init_t daemon:udp_socket create_socket_perms;
+	allow daemon init_t:unix_dgram_socket sendto;
+	# need write to /var/run/systemd/notify
+	init_write_pid_socket(daemon)
+	allow daemon init_t:unix_stream_socket { append write read getattr ioctl };
+')
+
+# daemons started from init will
+# inherit fds from init for the console
+init_dontaudit_use_fds(daemon)
+term_dontaudit_use_console(daemon)
+# init script ptys are the stdin/out/err
+# when using run_init
+init_use_script_ptys(daemon)
+
+allow init_t daemon:process siginh;
+
+ifdef(`hide_broken_symptoms',`
+	# RHEL4 systems seem to have a stray
+	# fds open from the initrd
+	ifdef(`distro_rhel4',`
+		kernel_dontaudit_use_fds(daemon)
+	')
+
+	dontaudit daemon init_t:dir search_dir_perms;
+')
+
+optional_policy(`
+	nscd_socket_use(daemon)
+')
+
+optional_policy(`
+	puppet_rw_tmp(daemon)
+')
+
+allow direct_run_init daemon:process { noatsecure siginh rlimitinh };
+
+allow initrc_t systemprocess:process siginh;
+allow systemprocess initrc_transition_domain:fifo_file rw_inherited_fifo_file_perms;
+allow systemprocess initrc_transition_domain:fd use;
+
+dontaudit systemprocess init_t:unix_stream_socket getattr;
+
+
+tunable_policy(`init_systemd',`
+	# Handle upstart/systemd direct transition to a executable
+	allow init_t systemprocess:process { dyntransition siginh };
+	allow init_t systemprocess:unix_stream_socket create_stream_socket_perms;
+	allow init_t systemprocess:unix_dgram_socket create_socket_perms;
+	allow systemprocess init_t:unix_dgram_socket sendto;
+	allow systemprocess init_t:unix_stream_socket { append write read getattr ioctl };
+')
+
+ifdef(`hide_broken_symptoms',`
+	# RHEL4 systems seem to have a stray
+	# fds open from the initrd
+	ifdef(`distro_rhel4',`
+		kernel_dontaudit_use_fds(systemprocess)
+	')
+')
+
+userdom_dontaudit_search_user_home_dirs(systemprocess)
+userdom_dontaudit_rw_stream(systemprocess)
+userdom_dontaudit_write_user_tmp_files(systemprocess)
+
+tunable_policy(`daemons_use_tty',`
+   term_use_all_ttys(systemprocess)
+   term_use_all_ptys(systemprocess)
+',`
+   term_dontaudit_use_all_ttys(systemprocess)
+   term_dontaudit_use_all_ptys(systemprocess)
+')
+
+# these apps are often redirect output to random log files
+logging_inherit_append_all_logs(systemprocess)
+
+optional_policy(`
+	abrt_stream_connect(systemprocess)
+')
+
+optional_policy(`
+    cfengine_append_inherited_log(systemprocess)
+')
+
+optional_policy(`
+	cron_rw_pipes(systemprocess)
+')
+
+optional_policy(`
+	puppet_rw_tmp(systemprocess)
+')
+
+optional_policy(`
+	xserver_dontaudit_append_xdm_home_files(systemprocess)
+')
+
+optional_policy(`
+	unconfined_dontaudit_rw_pipes(systemprocess)
+	unconfined_dontaudit_rw_stream(systemprocess)
+	userdom_dontaudit_read_user_tmp_files(systemprocess)
+')
+
+init_rw_script_stream_sockets(systemprocess)
+
+role system_r types systemprocess;
+role system_r types daemon;
+
+#ifdef(`enable_mls',`
+#	mls_rangetrans_target(systemprocess)
+#')
+
diff --git a/policy/modules/system/ipsec.fc b/policy/modules/system/ipsec.fc
index ec85acb..1135ebc 100644
--- a/policy/modules/system/ipsec.fc
+++ b/policy/modules/system/ipsec.fc
@@ -27,10 +27,10 @@
 /usr/libexec/ipsec/spi		--	gen_context(system_u:object_r:ipsec_exec_t,s0)
 /usr/libexec/nm-openswan-service -- 	gen_context(system_u:object_r:ipsec_mgmt_exec_t,s0)
 
-/usr/local/lib(64)?/ipsec/eroute --	gen_context(system_u:object_r:ipsec_exec_t,s0)
-/usr/local/lib(64)?/ipsec/klipsdebug -- gen_context(system_u:object_r:ipsec_exec_t,s0)
-/usr/local/lib(64)?/ipsec/pluto --	gen_context(system_u:object_r:ipsec_exec_t,s0)
-/usr/local/lib(64)?/ipsec/spi	--	gen_context(system_u:object_r:ipsec_exec_t,s0)
+/usr/local/lib/ipsec/eroute --	gen_context(system_u:object_r:ipsec_exec_t,s0)
+/usr/local/lib/ipsec/klipsdebug -- gen_context(system_u:object_r:ipsec_exec_t,s0)
+/usr/local/lib/ipsec/pluto --	gen_context(system_u:object_r:ipsec_exec_t,s0)
+/usr/local/lib/ipsec/spi	--	gen_context(system_u:object_r:ipsec_exec_t,s0)
 
 /usr/sbin/ipsec			-- 	gen_context(system_u:object_r:ipsec_mgmt_exec_t,s0)
 /usr/sbin/racoon		--	gen_context(system_u:object_r:racoon_exec_t,s0)
diff --git a/policy/modules/system/ipsec.if b/policy/modules/system/ipsec.if
index 0d4c8d3..9d66bf7 100644
--- a/policy/modules/system/ipsec.if
+++ b/policy/modules/system/ipsec.if
@@ -120,7 +120,6 @@ interface(`ipsec_exec_mgmt',`
 ##	</summary>
 ## </param>
 #
-#
 interface(`ipsec_signal_mgmt',`
 	gen_require(`
 		type ipsec_mgmt_t;
@@ -139,7 +138,6 @@ interface(`ipsec_signal_mgmt',`
 ##	</summary>
 ## </param>
 #
-#
 interface(`ipsec_signull_mgmt',`
 	gen_require(`
 		type ipsec_mgmt_t;
@@ -158,7 +156,6 @@ interface(`ipsec_signull_mgmt',`
 ##	</summary>
 ## </param>
 #
-#
 interface(`ipsec_kill_mgmt',`
 	gen_require(`
 		type ipsec_mgmt_t;
@@ -225,6 +222,7 @@ interface(`ipsec_match_default_spd',`
 
 	allow $1 ipsec_spd_t:association polmatch;
 	allow $1 self:association sendto;
+	allow $1 self:peer recv;
 ')
 
 ########################################
diff --git a/policy/modules/system/ipsec.te b/policy/modules/system/ipsec.te
index fac0a01..6af70bb 100644
--- a/policy/modules/system/ipsec.te
+++ b/policy/modules/system/ipsec.te
@@ -73,13 +73,15 @@ role system_r types setkey_t;
 #
 
 allow ipsec_t self:capability { net_admin dac_override dac_read_search setpcap sys_nice };
-dontaudit ipsec_t self:capability { sys_ptrace sys_tty_config };
+dontaudit ipsec_t self:capability sys_tty_config;
 allow ipsec_t self:process { getcap setcap getsched signal setsched };
 allow ipsec_t self:tcp_socket create_stream_socket_perms;
 allow ipsec_t self:udp_socket create_socket_perms;
 allow ipsec_t self:key_socket create_socket_perms;
 allow ipsec_t self:fifo_file read_fifo_file_perms;
 allow ipsec_t self:netlink_xfrm_socket { create_netlink_socket_perms nlmsg_write };
+allow ipsec_t self:netlink_selinux_socket create_socket_perms;
+allow ipsec_t self:unix_stream_socket create_stream_socket_perms;
 
 allow ipsec_t ipsec_initrc_exec_t:file read_file_perms;
 
@@ -128,19 +130,21 @@ corecmd_exec_bin(ipsec_t)
 
 # Pluto needs network access
 corenet_all_recvfrom_unlabeled(ipsec_t)
-corenet_tcp_sendrecv_all_if(ipsec_t)
-corenet_raw_sendrecv_all_if(ipsec_t)
-corenet_tcp_sendrecv_all_nodes(ipsec_t)
-corenet_raw_sendrecv_all_nodes(ipsec_t)
+corenet_tcp_sendrecv_generic_if(ipsec_t)
+corenet_raw_sendrecv_generic_if(ipsec_t)
+corenet_tcp_sendrecv_generic_node(ipsec_t)
+corenet_raw_sendrecv_generic_node(ipsec_t)
 corenet_tcp_sendrecv_all_ports(ipsec_t)
-corenet_tcp_bind_all_nodes(ipsec_t)
-corenet_udp_bind_all_nodes(ipsec_t)
+corenet_tcp_bind_generic_node(ipsec_t)
+corenet_udp_bind_generic_node(ipsec_t)
 corenet_tcp_bind_reserved_port(ipsec_t)
 corenet_tcp_bind_isakmp_port(ipsec_t)
 corenet_udp_bind_isakmp_port(ipsec_t)
 corenet_udp_bind_ipsecnat_port(ipsec_t)
 corenet_sendrecv_generic_server_packets(ipsec_t)
 corenet_sendrecv_isakmp_server_packets(ipsec_t)
+corenet_tcp_connect_http_port(ipsec_t)
+corenet_tcp_connect_ldap_port(ipsec_t)
 
 dev_read_sysfs(ipsec_t)
 dev_read_rand(ipsec_t)
@@ -156,6 +160,8 @@ files_dontaudit_search_home(ipsec_t)
 fs_getattr_all_fs(ipsec_t)
 fs_search_auto_mountpoints(ipsec_t)
 
+selinux_compute_access_vector(ipsec_t)
+
 term_use_console(ipsec_t)
 term_dontaudit_use_all_ttys(ipsec_t)
 
@@ -169,6 +175,8 @@ logging_send_syslog_msg(ipsec_t)
 miscfiles_read_localization(ipsec_t)
 
 sysnet_domtrans_ifconfig(ipsec_t)
+sysnet_manage_config(ipsec_t)
+sysnet_etc_filetrans_config(ipsec_t)
 
 userdom_dontaudit_use_unpriv_user_fds(ipsec_t)
 userdom_dontaudit_search_user_home_dirs(ipsec_t)
@@ -186,9 +194,9 @@ optional_policy(`
 # ipsec_mgmt Local policy
 #
 
-allow ipsec_mgmt_t self:capability { dac_override dac_read_search net_admin setpcap sys_nice };
-dontaudit ipsec_mgmt_t self:capability { sys_ptrace sys_tty_config };
-allow ipsec_mgmt_t self:process { getsched ptrace setrlimit setsched signal };
+allow ipsec_mgmt_t self:capability { dac_override dac_read_search net_admin setpcap sys_nice sys_ptrace };
+dontaudit ipsec_mgmt_t self:capability sys_tty_config;
+allow ipsec_mgmt_t self:process { getsched setrlimit setsched signal };
 allow ipsec_mgmt_t self:unix_stream_socket create_stream_socket_perms;
 allow ipsec_mgmt_t self:tcp_socket create_stream_socket_perms;
 allow ipsec_mgmt_t self:udp_socket create_socket_perms;
@@ -245,6 +253,16 @@ kernel_read_kernel_sysctls(ipsec_mgmt_t)
 kernel_getattr_core_if(ipsec_mgmt_t)
 kernel_getattr_message_if(ipsec_mgmt_t)
 
+domain_dontaudit_getattr_all_sockets(ipsec_mgmt_t)
+domain_dontaudit_getattr_all_pipes(ipsec_mgmt_t)
+
+dev_dontaudit_getattr_all_blk_files(ipsec_mgmt_t)
+dev_dontaudit_getattr_all_chr_files(ipsec_mgmt_t)
+
+dev_read_sysfs(ipsec_mgmt_t)
+
+files_dontaudit_getattr_all_files(ipsec_mgmt_t)
+files_dontaudit_getattr_all_sockets(ipsec_mgmt_t)
 files_read_kernel_symbol_table(ipsec_mgmt_t)
 files_getattr_kernel_modules(ipsec_mgmt_t)
 
@@ -254,6 +272,8 @@ files_getattr_kernel_modules(ipsec_mgmt_t)
 corecmd_exec_bin(ipsec_mgmt_t)
 corecmd_exec_shell(ipsec_mgmt_t)
 
+corenet_tcp_connect_rndc_port(ipsec_mgmt_t)
+
 dev_read_rand(ipsec_mgmt_t)
 dev_read_urand(ipsec_mgmt_t)
 
@@ -277,9 +297,10 @@ fs_getattr_xattr_fs(ipsec_mgmt_t)
 fs_list_tmpfs(ipsec_mgmt_t)
 
 term_use_console(ipsec_mgmt_t)
-term_dontaudit_getattr_unallocated_ttys(ipsec_mgmt_t)
+term_use_all_inherited_terms(ipsec_mgmt_t)
 
 auth_dontaudit_read_login_records(ipsec_mgmt_t)
+auth_use_nsswitch(ipsec_mgmt_t)
 
 init_read_utmp(ipsec_mgmt_t)
 init_use_script_ptys(ipsec_mgmt_t)
@@ -297,7 +318,12 @@ sysnet_manage_config(ipsec_mgmt_t)
 sysnet_domtrans_ifconfig(ipsec_mgmt_t)
 sysnet_etc_filetrans_config(ipsec_mgmt_t)
 
-userdom_use_user_terminals(ipsec_mgmt_t)
+userdom_use_inherited_user_terminals(ipsec_mgmt_t)
+
+optional_policy(`
+	bind_read_dnssec_keys(ipsec_mgmt_t)
+	bind_read_config(ipsec_mgmt_t)
+')
 
 optional_policy(`
 	consoletype_exec(ipsec_mgmt_t)
@@ -370,12 +396,12 @@ corecmd_exec_shell(racoon_t)
 corecmd_exec_bin(racoon_t)
 
 corenet_all_recvfrom_unlabeled(racoon_t)
-corenet_tcp_sendrecv_all_if(racoon_t)
-corenet_udp_sendrecv_all_if(racoon_t)
-corenet_tcp_sendrecv_all_nodes(racoon_t)
-corenet_udp_sendrecv_all_nodes(racoon_t)
-corenet_tcp_bind_all_nodes(racoon_t)
-corenet_udp_bind_all_nodes(racoon_t)
+corenet_tcp_sendrecv_generic_if(racoon_t)
+corenet_udp_sendrecv_generic_if(racoon_t)
+corenet_tcp_sendrecv_generic_node(racoon_t)
+corenet_udp_sendrecv_generic_node(racoon_t)
+corenet_tcp_bind_generic_node(racoon_t)
+corenet_udp_bind_generic_node(racoon_t)
 corenet_udp_bind_isakmp_port(racoon_t)
 corenet_udp_bind_ipsecnat_port(racoon_t)
 
@@ -404,6 +430,8 @@ miscfiles_read_localization(racoon_t)
 
 sysnet_exec_ifconfig(racoon_t)
 
+auth_use_pam(racoon_t)
+
 auth_can_read_shadow_passwords(racoon_t)
 tunable_policy(`racoon_read_shadow',`
 	auth_tunable_read_shadow(racoon_t)
@@ -441,5 +469,6 @@ miscfiles_read_localization(setkey_t)
 
 seutil_read_config(setkey_t)
 
-userdom_use_user_terminals(setkey_t)
+userdom_use_inherited_user_terminals(setkey_t)
+userdom_read_user_tmp_files(setkey_t)
 
diff --git a/policy/modules/system/iptables.fc b/policy/modules/system/iptables.fc
index 14cffd2..5effebe 100644
--- a/policy/modules/system/iptables.fc
+++ b/policy/modules/system/iptables.fc
@@ -1,7 +1,8 @@
 /etc/rc\.d/init\.d/ip6?tables	--	gen_context(system_u:object_r:iptables_initrc_exec_t,s0)
-/etc/rc\.d/init\.d/ebtables	--	gen_context(system_u:object_r:iptables_initrc_exec_t,s0)
-/etc/sysconfig/ip6?tables.*	--	gen_context(system_u:object_r:iptables_conf_t,s0)
-/etc/sysconfig/system-config-firewall.* -- gen_context(system_u:object_r:iptables_conf_t,s0)
+/etc/rc\.d/init\.d/ebtables		--  gen_context(system_u:object_r:iptables_initrc_exec_t,s0)
+
+/usr/lib/systemd/system/iptables.* 		--	gen_context(system_u:object_r:iptables_unit_file_t,s0)
+/usr/lib/systemd/system/ip6tables.* 		--	gen_context(system_u:object_r:iptables_unit_file_t,s0)
 
 /sbin/ebtables			--	gen_context(system_u:object_r:iptables_exec_t,s0)
 /sbin/ebtables-restore		--	gen_context(system_u:object_r:iptables_exec_t,s0)
@@ -14,7 +15,13 @@
 /sbin/ipvsadm-save		--	gen_context(system_u:object_r:iptables_exec_t,s0)
 /sbin/xtables-multi		--	gen_context(system_u:object_r:iptables_exec_t,s0)
 
+/usr/sbin/ebtables		--	gen_context(system_u:object_r:iptables_exec_t,s0)
+/usr/sbin/ebtables-restore	--	gen_context(system_u:object_r:iptables_exec_t,s0)
 /usr/sbin/ipchains.*		--	gen_context(system_u:object_r:iptables_exec_t,s0)
-/usr/sbin/iptables		--	gen_context(system_u:object_r:iptables_exec_t,s0)
-/usr/sbin/iptables-multi 	--	gen_context(system_u:object_r:iptables_exec_t,s0)
-/usr/sbin/iptables-restore	--	gen_context(system_u:object_r:iptables_exec_t,s0)
+/usr/sbin/ip6?tables		--	gen_context(system_u:object_r:iptables_exec_t,s0)
+/usr/sbin/ip6?tables-restore	--	gen_context(system_u:object_r:iptables_exec_t,s0)
+/usr/sbin/ip6?tables-multi	--	gen_context(system_u:object_r:iptables_exec_t,s0)
+/usr/sbin/ipvsadm		--	gen_context(system_u:object_r:iptables_exec_t,s0)
+/usr/sbin/ipvsadm-restore	--	gen_context(system_u:object_r:iptables_exec_t,s0)
+/usr/sbin/ipvsadm-save		--	gen_context(system_u:object_r:iptables_exec_t,s0)
+/usr/sbin/xtables-multi		--	gen_context(system_u:object_r:iptables_exec_t,s0)
diff --git a/policy/modules/system/iptables.if b/policy/modules/system/iptables.if
index c42fbc3..7071460 100644
--- a/policy/modules/system/iptables.if
+++ b/policy/modules/system/iptables.if
@@ -17,10 +17,6 @@ interface(`iptables_domtrans',`
 
 	corecmd_search_bin($1)
 	domtrans_pattern($1, iptables_exec_t, iptables_t)
-
-	ifdef(`hide_broken_symptoms', `
-		dontaudit iptables_t $1:socket_class_set { read write };
-	')
 ')
 
 ########################################
@@ -42,11 +38,22 @@ interface(`iptables_domtrans',`
 #
 interface(`iptables_run',`
 	gen_require(`
-		attribute_role iptables_roles;
+		#attribute_role iptables_roles;
+		type iptables_t;
 	')
 
+	#iptables_domtrans($1)
+	#roleattribute $2 iptables_roles;
+
 	iptables_domtrans($1)
-	roleattribute $2 iptables_roles;
+        role $2 types iptables_t;
+
+        sysnet_run_ifconfig(iptables_t, $2)
+
+        optional_policy(`
+                modutils_run_insmod(iptables_t, $2)
+        ')
+
 ')
 
 ########################################
@@ -86,6 +93,29 @@ interface(`iptables_initrc_domtrans',`
 	init_labeled_script_domtrans($1, iptables_initrc_exec_t)
 ')
 
+########################################
+## <summary>
+##	Execute iptables server in the iptables domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+#
+interface(`iptables_systemctl',`
+	gen_require(`
+		type iptables_unit_file_t;
+		type iptables_t;
+	')
+
+	systemd_exec_systemctl($1)
+	allow $1 iptables_unit_file_t:file read_file_perms;
+	allow $1 iptables_unit_file_t:service manage_service_perms;
+
+	ps_process_pattern($1, iptables_t)
+')
+
 #####################################
 ## <summary>
 ##	Set the attributes of iptables config files.
diff --git a/policy/modules/system/iptables.te b/policy/modules/system/iptables.te
index 0646ee7..36e02fa 100644
--- a/policy/modules/system/iptables.te
+++ b/policy/modules/system/iptables.te
@@ -5,26 +5,27 @@ policy_module(iptables, 1.13.0)
 # Declarations
 #
 
-attribute_role iptables_roles;
-roleattribute system_r iptables_roles;
+#attribute_role iptables_roles;
+#roleattribute system_r iptables_roles;
 
 type iptables_t;
 type iptables_exec_t;
 init_system_domain(iptables_t, iptables_exec_t)
-role iptables_roles types iptables_t;
+#role iptables_roles types iptables_t;
+role system_r types iptables_t;
 
 type iptables_initrc_exec_t;
 init_script_file(iptables_initrc_exec_t)
 
-type iptables_conf_t;
-files_config_file(iptables_conf_t)
-
 type iptables_tmp_t;
 files_tmp_file(iptables_tmp_t)
 
 type iptables_var_run_t;
 files_pid_file(iptables_var_run_t)
 
+type iptables_unit_file_t;
+systemd_unit_file(iptables_unit_file_t)
+
 ########################################
 #
 # Iptables local policy
@@ -37,8 +38,8 @@ allow iptables_t self:process { sigchld sigkill sigstop signull signal };
 allow iptables_t self:netlink_socket create_socket_perms;
 allow iptables_t self:rawip_socket create_socket_perms;
 
-manage_files_pattern(iptables_t, iptables_conf_t, iptables_conf_t)
-files_etc_filetrans(iptables_t, iptables_conf_t, file)
+files_manage_system_conf_files(iptables_t)
+files_etc_filetrans_system_conf(iptables_t)
 
 manage_files_pattern(iptables_t, iptables_var_run_t, iptables_var_run_t)
 files_pid_filetrans(iptables_t, iptables_var_run_t, file)
@@ -49,6 +50,7 @@ allow iptables_t iptables_tmp_t:dir manage_dir_perms;
 allow iptables_t iptables_tmp_t:file manage_file_perms;
 files_tmp_filetrans(iptables_t, iptables_tmp_t, { file dir })
 
+kernel_getattr_proc(iptables_t)
 kernel_request_load_module(iptables_t)
 kernel_read_system_state(iptables_t)
 kernel_read_network_state(iptables_t)
@@ -64,6 +66,9 @@ corenet_relabelto_all_packets(iptables_t)
 corenet_dontaudit_rw_tun_tap_dev(iptables_t)
 
 dev_read_sysfs(iptables_t)
+ifdef(`hide_broken_symptoms',`
+	dev_dontaudit_write_mtrr(iptables_t)
+')
 
 fs_getattr_xattr_fs(iptables_t)
 fs_search_auto_mountpoints(iptables_t)
@@ -72,11 +77,13 @@ fs_list_inotifyfs(iptables_t)
 mls_file_read_all_levels(iptables_t)
 
 term_dontaudit_use_console(iptables_t)
+term_use_all_inherited_terms(iptables_t)
 
 domain_use_interactive_fds(iptables_t)
 
 files_read_etc_files(iptables_t)
-files_read_etc_runtime_files(iptables_t)
+files_rw_etc_runtime_files(iptables_t)
+files_read_usr_files(iptables_t)
 
 auth_use_nsswitch(iptables_t)
 
@@ -85,15 +92,17 @@ init_use_script_ptys(iptables_t)
 # to allow rules to be saved on reboot:
 init_rw_script_tmp_files(iptables_t)
 init_rw_script_stream_sockets(iptables_t)
+init_dontaudit_script_leaks(iptables_t)
 
 logging_send_syslog_msg(iptables_t)
 
 miscfiles_read_localization(iptables_t)
 
-sysnet_run_ifconfig(iptables_t, iptables_roles)
+#sysnet_run_ifconfig(iptables_t, iptables_roles)
+sysnet_domtrans_ifconfig(iptables_t)
 sysnet_dns_name_resolve(iptables_t)
 
-userdom_use_user_terminals(iptables_t)
+userdom_use_inherited_user_terminals(iptables_t)
 userdom_use_all_users_fds(iptables_t)
 
 ifdef(`hide_broken_symptoms',`
@@ -102,6 +111,8 @@ ifdef(`hide_broken_symptoms',`
 
 optional_policy(`
 	fail2ban_append_log(iptables_t)
+	fail2ban_dontaudit_leaks(iptables_t)
+	fail2ban_rw_inherited_tmp_files(iptables_t)
 ')
 
 optional_policy(`
@@ -110,7 +121,8 @@ optional_policy(`
 ')
 
 optional_policy(`
-	modutils_run_insmod(iptables_t, iptables_roles)
+	modutils_domtrans_insmod(iptables_t)
+	#modutils_run_insmod(iptables_t, iptables_roles)
 ')
 
 optional_policy(`
@@ -124,6 +136,7 @@ optional_policy(`
 
 optional_policy(`
 	psad_rw_tmp_files(iptables_t)
+	psad_write_log(iptables_t)
 ')
 
 optional_policy(`
@@ -137,6 +150,7 @@ optional_policy(`
 optional_policy(`
 	shorewall_read_tmp_files(iptables_t)
 	shorewall_rw_lib_files(iptables_t)
+	shorewall_read_tmp_files(iptables_t)
 	shorewall_read_config(iptables_t)
 ')
 
diff --git a/policy/modules/system/libraries.fc b/policy/modules/system/libraries.fc
index ef8bbaf..2c2e6f4 100644
--- a/policy/modules/system/libraries.fc
+++ b/policy/modules/system/libraries.fc
@@ -28,14 +28,17 @@ ifdef(`distro_redhat',`
 # /etc
 #
 /etc/ld\.so\.cache			--	gen_context(system_u:object_r:ld_so_cache_t,s0)
+/etc/ld\.so\.cache~			--	gen_context(system_u:object_r:ld_so_cache_t,s0)
 /etc/ld\.so\.preload			--	gen_context(system_u:object_r:ld_so_cache_t,s0)
+/etc/ld\.so\.preload~			--	gen_context(system_u:object_r:ld_so_cache_t,s0)
 
 /etc/ppp/plugins/rp-pppoe\.so 		--	gen_context(system_u:object_r:lib_t,s0)
 
 #
 # /lib(64)?
 #
-/lib					-d	gen_context(system_u:object_r:lib_t,s0)
+/lib						gen_context(system_u:object_r:lib_t,s0)
+/lib64						gen_context(system_u:object_r:lib_t,s0)
 /lib/.*						gen_context(system_u:object_r:lib_t,s0)
 /lib/ld-[^/]*\.so(\.[^/]*)*		--	gen_context(system_u:object_r:ld_so_t,s0)
 
@@ -52,9 +55,8 @@ ifdef(`distro_gentoo',`
 #
 # /opt
 #
-/opt/.*\.so					gen_context(system_u:object_r:lib_t,s0)
+/opt/.*\.so(\.[^/]*)*				gen_context(system_u:object_r:lib_t,s0)
 /opt/(.*/)?lib(/.*)?				gen_context(system_u:object_r:lib_t,s0)
-/opt/(.*/)?lib64(/.*)?				gen_context(system_u:object_r:lib_t,s0)
 /opt/(.*/)?java/.+\.jar			--	gen_context(system_u:object_r:lib_t,s0)
 /opt/(.*/)?jre.*/.+\.so(\.[^/]*)*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /opt/(.*/)?jre/.+\.jar			--	gen_context(system_u:object_r:lib_t,s0)
@@ -103,6 +105,12 @@ ifdef(`distro_redhat',`
 #
 # /usr
 #
+/usr/lib					-d	gen_context(system_u:object_r:lib_t,s0)
+/usr/lib/.*						gen_context(system_u:object_r:lib_t,s0)
+/usr/lib/ld-[^/]*\.so(\.[^/]*)*		--	gen_context(system_u:object_r:ld_so_t,s0)
+
+/usr/lib/security/pam_poldi\.so		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
 /usr/(.*/)?/HelixPlayer/.+\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/(.*/)?/RealPlayer/.+\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 
@@ -111,9 +119,8 @@ ifdef(`distro_redhat',`
 /usr/(.*/)?java/.+\.jsa			--	gen_context(system_u:object_r:lib_t,s0)
 
 /usr/(.*/)?lib(/.*)?				gen_context(system_u:object_r:lib_t,s0)
-/usr/(.*/)?lib64(/.*)?				gen_context(system_u:object_r:lib_t,s0)
 
-/usr/(.*/)?lib(64)?(/.*)?/ld-[^/]*\.so(\.[^/]*)* gen_context(system_u:object_r:ld_so_t,s0)
+/usr/(.*/)?lib(/.*)?/ld-[^/]*\.so(\.[^/]*)* gen_context(system_u:object_r:ld_so_t,s0)
 
 /usr/(.*/)?nvidia/.+\.so(\..*)?		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 
@@ -151,8 +158,8 @@ ifdef(`distro_redhat',`
 /usr/lib/xorg/modules/glesx\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 
 /usr/(local/)?.*\.so(\.[^/]*)*		--	gen_context(system_u:object_r:lib_t,s0)
-/usr/(local/)?lib(64)?/wine/.+\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/(local/)?lib(64)?/(sse2/)?libfame-.*\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/(local/)?lib/wine/.+\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/(local/)?lib/(sse2/)?libfame-.*\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/NX/lib/libXcomp\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/NX/lib/libjpeg\.so.* 		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 
@@ -244,8 +251,6 @@ HOME_DIR/.*/plugins/nppdf\.so.* 	--	gen_context(system_u:object_r:textrel_shlib_
 /usr/lib/codecs/drv[1-9c]\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/local/lib/codecs/drv[1-9c]\.so(\.[^/]*)* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
 
-HOME_DIR/.*/plugins/nppdf\.so		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-HOME_DIR/.mozilla/plugins/nprhapengine\.so.* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/.*/nprhapengine\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/local/(.*/)?nprhapengine\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 
@@ -299,17 +304,153 @@ HOME_DIR/.mozilla/plugins/nprhapengine\.so.* --	gen_context(system_u:object_r:te
 #
 /var/cache/ldconfig(/.*)?			gen_context(system_u:object_r:ldconfig_cache_t,s0)
 
-/var/ftp/lib(64)?(/.*)?				gen_context(system_u:object_r:lib_t,s0)
-/var/ftp/lib(64)?/ld[^/]*\.so(\.[^/]*)*	--	gen_context(system_u:object_r:ld_so_t,s0)
-
-/var/lib/spamassassin/compiled/.*\.so.*	--	gen_context(system_u:object_r:lib_t,s0)
+/var/ftp/lib(/.*)?				gen_context(system_u:object_r:lib_t,s0)
+/var/ftp/lib/ld[^/]*\.so(\.[^/]*)*	--	gen_context(system_u:object_r:ld_so_t,s0)
 
 /var/mailman/pythonlib(/.*)?/.+\.so(\..*)? --	gen_context(system_u:object_r:lib_t,s0)
 
+/usr/lib/pgsql/.*\.so.*			--	gen_context(system_u:object_r:lib_t,s0)
+/usr/lib/pgsql/test/regress/.*\.so.*	--	gen_context(system_u:object_r:lib_t,s0)
+/var/lib/spamassassin/compiled/.*\.so.* --	gen_context(system_u:object_r:lib_t,s0)
+/usr/lib/xfce4/.*\.so.*			-- 	gen_context(system_u:object_r:lib_t,s0)
+
 ifdef(`distro_suse',`
 /var/lib/samba/bin/.+\.so(\.[^/]*)*	-l	gen_context(system_u:object_r:lib_t,s0)
 ')
 
-/var/spool/postfix/lib(64)?(/.*)? 		gen_context(system_u:object_r:lib_t,s0)
+/usr/share/hplip/prnt/plugins(/.*)?		gen_context(system_u:object_r:lib_t,s0)
+/usr/share/squeezeboxserver/CPAN/arch/.+\.so		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/var/spool/postfix/lib(/.*)? 		gen_context(system_u:object_r:lib_t,s0)
+/var/spool/postfix/lib64(/.*)? 		gen_context(system_u:object_r:lib_t,s0)
 /var/spool/postfix/usr(/.*)?			gen_context(system_u:object_r:lib_t,s0)
-/var/spool/postfix/lib(64)?/ld.*\.so.*	--	gen_context(system_u:object_r:ld_so_t,s0)
+/var/spool/postfix/lib/ld.*\.so.*	--	gen_context(system_u:object_r:ld_so_t,s0)
+
+/usr/lib/libmyth[^/]+\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/mythtv/filters/.*\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/jvm/java(.*/)bin(/.*)?/.*\.so 	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/oracle/.*/lib/libnnz10\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/opt/altera9.1/quartus/linux/libccl_err\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/opt/novell/groupwise/client/lib/libgwapijni\.so\.1	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/sse2/.*\.so.*    --     gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/i686/.*\.so.*    --     gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/local/google-earth/.*\.so.*    --     gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/googleearth/.*\.so.*    --     gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/google-earth/.*\.so.*    --     gen_context(system_u:object_r:textrel_shlib_t,s0)
+/opt/google-earth/.*\.so.*    --     gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/google-earth/.*\.so.*    --     gen_context(system_u:object_r:textrel_shlib_t,s0)
+/opt/google/.*\.so.*    --     gen_context(system_u:object_r:textrel_shlib_t,s0)
+/opt/google/chrome/.*\.so.*    --     gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/nspluginwrapper/np.*\.so	-- gen_context(system_u:object_r:lib_t,s0)
+
+/usr/lib/oracle/.*/lib/libnnz.*\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/oracle/.*/lib/libclntsh\.so(\.[^/]*)*	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/opt/(.*/)?oracle/(.*/)?libnnz.*\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/libnnz11.so(\.[^/]*)*	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/libxvidcore\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+
+/opt/matlab.*\.so(\.[^/]*)*		gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/matlab.*\.so(\.[^/]*)*		gen_context(system_u:object_r:textrel_shlib_t,s0)
+/opt/local/matlab.*\.so(\.[^/]*)*	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/local/matlab.*\.so(\.[^/]*)*	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/local/Zend/lib/ZendExtensionManager\.so	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/libcncpmslld328\.so(\.[^/]*)*	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/ICAClient/.*\.so(\.[^/]*)*	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/midori/.*\.so(\.[^/]*)*	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/libav.*\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/xine/plugins/.+\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/yafaray/libDarkSky.so 	   --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/libpostproc\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/libswscale\.so.*		 --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/libADM.*\.so.*			 --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/gstreamer-.*/[^/]*\.so.* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/libx264\.so(\.[^/]*)* 	-- gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/libmp3lame\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/libmpeg2\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/.*/libflashplayer\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/local/(.*/)?libflashplayer\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+ifdef(`fixed',`
+/usr/lib/libavfilter\.so(\..*)? -- gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/libavdevice\.so.*	 --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/libavformat.*\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/libavcodec.*\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/libavutil.*\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/libdv\.so.* 		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/libGLU\.so(\.[^/]*)*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/libgsm\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/libImlib2\.so.* 		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/libjackserver\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/X11R6/lib/libOSMesa.*\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/libOSMesa.*\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/libSDL-.*\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/xulrunner-[^/]*/libgtkembedmoz\.so -- gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/xulrunner-[^/]*/libxul\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+# Flash plugin, Macromedia
+/usr/lib/php/modules/.+\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/xorg/modules/dri/.+\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/X11R6/lib/modules/dri/.+\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/dri/.+\.so		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/httpd/modules/libphp5\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+')
+/opt/VBoxGuestAdditions.*/lib/VBox.*\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/nmm/liba52\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/opt/lampp/lib/libct\.so.* 	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/opt/lampp/lib/.*\.so.* 	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/opt/VirtualBox(/.*)?/VBox.*\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/chromium-browser/.*\.so 	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/local/zend/lib/apache2/libphp5\.so		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/python.*/site-packages/pymedia/muxer\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/local/games/darwinia/lib/libSDL.*\.so.* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/octagaplayer/libapplication\.so		     --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/opt/AutoScan/usr/lib/libvte\.so.*			     --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/bin/bsnes		     --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/libGLcore\.so.*	     --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/libkmplayercommon\.so.*     --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/opt/Unify/SQLBase/libgptsblmsui11\.so.*	     --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/opt/real/RealPlayer/plugins(/.*)?	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/opt/real/RealPlayer/codecs(/.*)?	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/vdpau/libvdpau_nvidia\.so.*  --	gen_context(system_u:object_r:textrel_shlib_t,s0)	
+
+/usr/lib/libGTL.*\.so.* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/lib/nsr/(.*/)?.*\.so		-- gen_context(system_u:object_r:textrel_shlib_t,s0)
+/opt/lgtonmc/bin/.*\.so(\.[0-9])?  	--  gen_context(system_u:object_r:textrel_shlib_t,s0)
+/opt/google/picasa/.*\.dll	--  gen_context(system_u:object_r:textrel_shlib_t,s0)
+/opt/google/picasa/.*\.yti	--  gen_context(system_u:object_r:textrel_shlib_t,s0)
+/opt/google/talkplugin/.*\.so.* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
+
+/usr/sbin/ldconfig		--	gen_context(system_u:object_r:ldconfig_exec_t,s0)
diff --git a/policy/modules/system/libraries.if b/policy/modules/system/libraries.if
index 808ba93..f94b80a 100644
--- a/policy/modules/system/libraries.if
+++ b/policy/modules/system/libraries.if
@@ -147,6 +147,7 @@ interface(`libs_manage_ld_so',`
 		type lib_t, ld_so_t;
 	')
 
+	read_lnk_files_pattern($1, lib_t, lib_t)
 	manage_files_pattern($1, lib_t, ld_so_t)
 ')
 
@@ -205,8 +206,26 @@ interface(`libs_search_lib',`
 		type lib_t;
 	')
 
+	read_lnk_files_pattern($1, lib_t, lib_t)
 	allow $1 lib_t:dir search_dir_perms;
 ')
+########################################
+## <summary>
+##	dontaudit attempts to setattr on library files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`libs_dontaudit_setattr_lib_files',`
+	gen_require(`
+		type lib_t;
+	')
+
+	dontaudit $1 lib_t:file setattr;
+')
 
 ########################################
 ## <summary>
@@ -248,29 +267,12 @@ interface(`libs_manage_lib_dirs',`
 		type lib_t;
 	')
 
+	read_lnk_files_pattern($1, lib_t, lib_t)
 	allow $1 lib_t:dir manage_dir_perms;
 ')
 
 ########################################
 ## <summary>
-##	dontaudit attempts to setattr on library files
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain to not audit.
-##	</summary>
-## </param>
-#
-interface(`libs_dontaudit_setattr_lib_files',`
-	gen_require(`
-		type lib_t;
-	')
-
-	dontaudit $1 lib_t:file setattr;
-')
-
-########################################
-## <summary>
 ##	Read files in the library directories, such
 ##	as static libraries.
 ## </summary>
@@ -345,6 +347,7 @@ interface(`libs_manage_lib_files',`
 		type lib_t;
 	')
 
+	read_lnk_files_pattern($1, lib_t, lib_t)
 	manage_files_pattern($1, lib_t, lib_t)
 ')
 
@@ -421,7 +424,8 @@ interface(`libs_manage_shared_libs',`
 		type lib_t, textrel_shlib_t;
 	')
 
-	manage_files_pattern($1, lib_t, { lib_t textrel_shlib_t })
+	read_lnk_files_pattern($1, lib_t, lib_t)
+	manage_files_pattern($1, { textrel_shlib_t lib_t }, { lib_t textrel_shlib_t })
 ')
 
 ########################################
@@ -440,9 +444,9 @@ interface(`libs_use_shared_libs',`
 	')
 
 	files_search_usr($1)
-	allow $1 lib_t:dir list_dir_perms;
-	read_lnk_files_pattern($1, lib_t, { lib_t textrel_shlib_t })
-	mmap_files_pattern($1, lib_t, { lib_t textrel_shlib_t })
+	allow $1 { textrel_shlib_t lib_t }:dir list_dir_perms;
+	read_lnk_files_pattern($1, { textrel_shlib_t lib_t }, { lib_t textrel_shlib_t })
+	mmap_files_pattern($1, { textrel_shlib_t lib_t }, { lib_t textrel_shlib_t })
 	allow $1 textrel_shlib_t:file execmod;
 ')
 
@@ -483,7 +487,7 @@ interface(`libs_relabel_shared_libs',`
 		type lib_t, textrel_shlib_t;
 	')
 
-	relabel_files_pattern($1, lib_t, { lib_t textrel_shlib_t })
+	relabel_files_pattern($1, { textrel_shlib_t lib_t }, { lib_t textrel_shlib_t })
 ')
 
 ########################################
@@ -534,3 +538,26 @@ interface(`lib_filetrans_shared_lib',`
 interface(`files_lib_filetrans_shared_lib',`
 	refpolicywarn(`$0($*) has been deprecated.')
 ')
+
+########################################
+## <summary>
+##	Transition to lib named content
+## </summary>
+## <param name="domain">
+##	<summary>
+##      Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`libs_filetrans_named_content',`
+	gen_require(`
+		type ld_so_cache_t;
+		type ldconfig_cache_t;
+	')
+
+	files_var_filetrans($1, ldconfig_cache_t, dir, "ldconfig")
+	files_etc_filetrans($1, ld_so_cache_t, file, "ld.so.cache")
+	files_etc_filetrans($1, ld_so_cache_t, file, "ld.so.cache~")
+	files_etc_filetrans($1, ld_so_cache_t, file, "ld.so.preload")
+	files_etc_filetrans($1, ld_so_cache_t, file, "ld.so.preload~")
+')
diff --git a/policy/modules/system/libraries.te b/policy/modules/system/libraries.te
index 992d105..501de4e 100644
--- a/policy/modules/system/libraries.te
+++ b/policy/modules/system/libraries.te
@@ -59,9 +59,11 @@ optional_policy(`
 
 allow ldconfig_t self:capability { dac_override sys_chroot };
 
+manage_dirs_pattern(ldconfig_t, ldconfig_cache_t, ldconfig_cache_t)
 manage_files_pattern(ldconfig_t, ldconfig_cache_t, ldconfig_cache_t)
+files_var_filetrans(ldconfig_t, ldconfig_cache_t, dir, "ldconfig")
 
-allow ldconfig_t ld_so_cache_t:file manage_file_perms;
+manage_files_pattern(ldconfig_t, ld_so_cache_t, ld_so_cache_t)
 files_etc_filetrans(ldconfig_t, ld_so_cache_t, file)
 
 manage_dirs_pattern(ldconfig_t, ldconfig_tmp_t, ldconfig_tmp_t)
@@ -75,10 +77,14 @@ kernel_read_system_state(ldconfig_t)
 
 fs_getattr_xattr_fs(ldconfig_t)
 
+files_list_var_lib(ldconfig_t)
+files_manage_var_lib_symlinks(ldconfig_t)
+
 corecmd_search_bin(ldconfig_t)
 
 domain_use_interactive_fds(ldconfig_t)
 
+files_search_home(ldconfig_t)
 files_search_var_lib(ldconfig_t)
 files_read_etc_files(ldconfig_t)
 files_read_usr_files(ldconfig_t)
@@ -94,7 +100,8 @@ miscfiles_read_localization(ldconfig_t)
 
 logging_send_syslog_msg(ldconfig_t)
 
-userdom_use_user_terminals(ldconfig_t)
+term_use_console(ldconfig_t)
+userdom_use_inherited_user_terminals(ldconfig_t)
 userdom_use_all_users_fds(ldconfig_t)
 
 ifdef(`distro_ubuntu',`
@@ -103,6 +110,12 @@ ifdef(`distro_ubuntu',`
 	')
 ')
 
+userdom_dontaudit_list_admin_dir(ldconfig_t)
+userdom_list_user_home_dirs(ldconfig_t)
+userdom_manage_user_home_content_files(ldconfig_t)
+userdom_manage_user_tmp_files(ldconfig_t)
+userdom_manage_user_tmp_symlinks(ldconfig_t)
+
 ifdef(`hide_broken_symptoms',`
 	ifdef(`distro_gentoo',`
 		# leaked fds from portage
@@ -114,6 +127,9 @@ ifdef(`hide_broken_symptoms',`
 		')
 	')
 
+	dev_dontaudit_rw_lvm_control(ldconfig_t)
+	term_dontaudit_use_unallocated_ttys(ldconfig_t)
+
 	optional_policy(`
 		unconfined_dontaudit_rw_tcp_sockets(ldconfig_t)
 	')
@@ -131,6 +147,10 @@ optional_policy(`
 ')
 
 optional_policy(`
+	gnome_append_generic_cache_files(ldconfig_t)
+')
+
+optional_policy(`
 	puppet_rw_tmp(ldconfig_t)
 ')
 
@@ -141,6 +161,3 @@ optional_policy(`
 	rpm_manage_script_tmp_files(ldconfig_t)
 ')
 
-optional_policy(`
-	unconfined_domain(ldconfig_t)
-')
diff --git a/policy/modules/system/locallogin.fc b/policy/modules/system/locallogin.fc
index be6a81b..a5303e9 100644
--- a/policy/modules/system/locallogin.fc
+++ b/policy/modules/system/locallogin.fc
@@ -1,3 +1,8 @@
+HOME_DIR/\.hushlogin	--	gen_context(system_u:object_r:local_login_home_t,s0)
+/root/\.hushlogin   --      gen_context(system_u:object_r:local_login_home_t,s0)
 
 /sbin/sulogin		--	gen_context(system_u:object_r:sulogin_exec_t,s0)
 /sbin/sushell		--	gen_context(system_u:object_r:sulogin_exec_t,s0)
+
+/usr/sbin/sulogin	--	gen_context(system_u:object_r:sulogin_exec_t,s0)
+/usr/sbin/sushell	--	gen_context(system_u:object_r:sulogin_exec_t,s0)
diff --git a/policy/modules/system/locallogin.if b/policy/modules/system/locallogin.if
index 0e3c2a9..40adf5a 100644
--- a/policy/modules/system/locallogin.if
+++ b/policy/modules/system/locallogin.if
@@ -129,3 +129,59 @@ interface(`locallogin_domtrans_sulogin',`
 
 	domtrans_pattern($1, sulogin_exec_t, sulogin_t)
 ')
+
+#######################################
+## <summary>
+##  Allow domain to gettatr local login home content
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`locallogin_getattr_home_content',`
+    gen_require(`
+        type local_login_home_t;
+    ')
+
+	getattr_files_pattern($1, local_login_home_t, local_login_home_t)
+')
+
+########################################
+## <summary>
+##	create local login content in the  in the /root directory
+##	with an correct label.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`locallogin_filetrans_admin_home_content',`
+	gen_require(`
+		type local_login_home_t;
+	')
+
+	userdom_admin_home_dir_filetrans($1, local_login_home_t, file, ".hushlogin")
+')
+
+########################################
+## <summary>
+##	Transition to local login named content
+## </summary>
+## <param name="domain">
+##	<summary>
+##      Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`locallogin_filetrans_home_content',`
+	gen_require(`
+		type local_login_home_t;
+	')
+
+	userdom_user_home_dir_filetrans($1, local_login_home_t, file, ".hushlogin")
+')
+
diff --git a/policy/modules/system/locallogin.te b/policy/modules/system/locallogin.te
index 9fd5be7..226328b 100644
--- a/policy/modules/system/locallogin.te
+++ b/policy/modules/system/locallogin.te
@@ -13,9 +13,8 @@ auth_login_entry_type(local_login_t)
 type local_login_lock_t;
 files_lock_file(local_login_lock_t)
 
-type local_login_tmp_t;
-files_tmp_file(local_login_tmp_t)
-files_poly_parent(local_login_tmp_t)
+type local_login_home_t;
+userdom_user_home_content(local_login_home_t)
 
 type sulogin_t;
 type sulogin_exec_t;
@@ -32,9 +31,8 @@ role system_r types sulogin_t;
 # Local login local policy
 #
 
-allow local_login_t self:capability { dac_override chown fowner fsetid kill setgid setuid sys_nice sys_resource sys_tty_config };
-allow local_login_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
-allow local_login_t self:process { setrlimit setexec };
+allow local_login_t self:capability { dac_override chown fowner fsetid kill setgid setuid sys_admin sys_nice sys_resource sys_tty_config };
+allow local_login_t self:process ~{ ptrace setcurrent setfscreate execmem execstack execheap };
 allow local_login_t self:fd use;
 allow local_login_t self:fifo_file rw_fifo_file_perms;
 allow local_login_t self:sock_file read_sock_file_perms;
@@ -51,9 +49,7 @@ allow local_login_t self:key { search write link };
 allow local_login_t local_login_lock_t:file manage_file_perms;
 files_lock_filetrans(local_login_t, local_login_lock_t, file)
 
-allow local_login_t local_login_tmp_t:dir manage_dir_perms;
-allow local_login_t local_login_tmp_t:file manage_file_perms;
-files_tmp_filetrans(local_login_t, local_login_tmp_t, { file dir })
+allow local_login_t local_login_home_t:file read_file_perms;
 
 kernel_read_system_state(local_login_t)
 kernel_read_kernel_sysctls(local_login_t)
@@ -73,6 +69,8 @@ dev_getattr_power_mgmt_dev(local_login_t)
 dev_setattr_power_mgmt_dev(local_login_t)
 dev_getattr_sound_dev(local_login_t)
 dev_setattr_sound_dev(local_login_t)
+dev_rw_generic_usb_dev(local_login_t)
+dev_read_video_dev(local_login_t)
 dev_dontaudit_getattr_apm_bios_dev(local_login_t)
 dev_dontaudit_setattr_apm_bios_dev(local_login_t)
 dev_dontaudit_read_framebuffer(local_login_t)
@@ -117,14 +115,18 @@ term_relabel_unallocated_ttys(local_login_t)
 term_relabel_all_ttys(local_login_t)
 term_setattr_all_ttys(local_login_t)
 term_setattr_unallocated_ttys(local_login_t)
+term_relabel_all_ptys(local_login_t)
+term_setattr_generic_ptys(local_login_t)
 
 auth_rw_login_records(local_login_t)
 auth_rw_faillog(local_login_t)
-auth_manage_pam_pid(local_login_t)
+#auth_manage_pam_pid(local_login_t)
 auth_manage_pam_console_data(local_login_t)
 auth_domtrans_pam_console(local_login_t)
+auth_use_nsswitch(local_login_t)
 
 init_dontaudit_use_fds(local_login_t)
+init_stream_connect(local_login_t)
 
 miscfiles_read_localization(local_login_t)
 
@@ -141,19 +143,19 @@ ifdef(`distro_ubuntu',`
 	')
 ')
 
-tunable_policy(`console_login',`
+tunable_policy(`login_console_enabled',`
 	# Able to relabel /dev/console to user tty types.
 	term_relabel_console(local_login_t)
 ')
 
-tunable_policy(`use_nfs_home_dirs',`
-	fs_read_nfs_files(local_login_t)
-	fs_read_nfs_symlinks(local_login_t)
-')
+userdom_home_reader(local_login_t)
+userdom_manage_tmp_files(local_login_t)
+userdom_tmp_filetrans_user_tmp(local_login_t, file)
 
-tunable_policy(`use_samba_home_dirs',`
-	fs_read_cifs_files(local_login_t)
-	fs_read_cifs_symlinks(local_login_t)
+tunable_policy(`login_console_enabled',`
+     term_use_console(local_login_t)
+     term_relabel_console(local_login_t)
+     term_setattr_console(local_login_t)
 ')
 
 optional_policy(`
@@ -177,14 +179,6 @@ optional_policy(`
 ')
 
 optional_policy(`
-	nis_use_ypbind(local_login_t)
-')
-
-optional_policy(`
-	nscd_socket_use(local_login_t)
-')
-
-optional_policy(`
 	unconfined_shell_domtrans(local_login_t)
 ')
 
@@ -215,6 +209,7 @@ allow sulogin_t self:sem create_sem_perms;
 allow sulogin_t self:msgq create_msgq_perms;
 allow sulogin_t self:msg { send receive };
 
+kernel_read_crypto_sysctls(sulogin_t)
 kernel_read_system_state(sulogin_t)
 
 fs_search_auto_mountpoints(sulogin_t)
@@ -223,13 +218,17 @@ fs_rw_tmpfs_chr_files(sulogin_t)
 files_read_etc_files(sulogin_t)
 # because file systems are not mounted:
 files_dontaudit_search_isid_type_dirs(sulogin_t)
+files_search_pids(sulogin_t)
 
 auth_read_shadow(sulogin_t)
+auth_use_nsswitch(sulogin_t)
 
 init_getpgid_script(sulogin_t)
 
 logging_send_syslog_msg(sulogin_t)
 
+miscfiles_read_localization(sulogin_t)
+
 seutil_read_config(sulogin_t)
 seutil_read_default_contexts(sulogin_t)
 
@@ -238,14 +237,24 @@ userdom_use_unpriv_users_fds(sulogin_t)
 userdom_search_user_home_dirs(sulogin_t)
 userdom_use_user_ptys(sulogin_t)
 
-sysadm_shell_domtrans(sulogin_t)
+term_use_console(sulogin_t)
+term_use_unallocated_ttys(sulogin_t)
+term_use_generic_ptys(sulogin_t)
+
+ifdef(`enable_mls',`
+	sysadm_shell_domtrans(sulogin_t)
+',`
+	optional_policy(`
+		unconfined_shell_domtrans(sulogin_t)
+	')
+')
 
 # suse and debian do not use pam with sulogin...
 ifdef(`distro_suse', `define(`sulogin_no_pam')')
 ifdef(`distro_debian', `define(`sulogin_no_pam')')
 
+allow sulogin_t self:capability sys_tty_config;
 ifdef(`sulogin_no_pam', `
-	allow sulogin_t self:capability sys_tty_config;
 	init_getpgid(sulogin_t)
 ', `
 	allow sulogin_t self:process setexec;
@@ -256,11 +265,3 @@ ifdef(`sulogin_no_pam', `
 	selinux_compute_relabel_context(sulogin_t)
 	selinux_compute_user_contexts(sulogin_t)
 ')
-
-optional_policy(`
-	nis_use_ypbind(sulogin_t)
-')
-
-optional_policy(`
-	nscd_socket_use(sulogin_t)
-')
diff --git a/policy/modules/system/logging.fc b/policy/modules/system/logging.fc
index 02f4c97..54c74fe 100644
--- a/policy/modules/system/logging.fc
+++ b/policy/modules/system/logging.fc
@@ -6,6 +6,8 @@
 /etc/rc\.d/init\.d/auditd --	gen_context(system_u:object_r:auditd_initrc_exec_t,s0)
 /etc/rc\.d/init\.d/rsyslog --	gen_context(system_u:object_r:syslogd_initrc_exec_t,s0)
 
+/usr/lib/systemd/system/auditd.*	--	gen_context(system_u:object_r:auditd_unit_file_t,s0)
+
 /sbin/audispd		--	gen_context(system_u:object_r:audisp_exec_t,s0)
 /sbin/audisp-remote	--	gen_context(system_u:object_r:audisp_remote_exec_t,s0)
 /sbin/auditctl		--	gen_context(system_u:object_r:auditctl_exec_t,s0)
@@ -17,12 +19,25 @@
 /sbin/syslogd		--	gen_context(system_u:object_r:syslogd_exec_t,s0)
 /sbin/syslog-ng		--	gen_context(system_u:object_r:syslogd_exec_t,s0)
 
+/opt/zimbra/log(/.*)?		gen_context(system_u:object_r:var_log_t,s0)
+/opt/Symantec/scspagent/IDS/system(/.*)?	gen_context(system_u:object_r:var_log_t,s0)
+
+/usr/lib/systemd/systemd-journald		--	gen_context(system_u:object_r:syslogd_exec_t,s0)
+/usr/lib/systemd/systemd-kmsg-syslogd	--	gen_context(system_u:object_r:syslogd_exec_t,s0)
+
+/usr/local/centreon/log(/.*)?	gen_context(system_u:object_r:var_log_t,s0)
+
+/usr/sbin/audispd	--	gen_context(system_u:object_r:audisp_exec_t,s0)
+/usr/sbin/audisp-remote	--	gen_context(system_u:object_r:audisp_remote_exec_t,s0)
+/usr/sbin/auditctl	--	gen_context(system_u:object_r:auditctl_exec_t,s0)
+/usr/sbin/auditd	--	gen_context(system_u:object_r:auditd_exec_t,s0)
 /usr/sbin/klogd		--	gen_context(system_u:object_r:klogd_exec_t,s0)
 /usr/sbin/metalog	--	gen_context(system_u:object_r:syslogd_exec_t,s0)
+/usr/sbin/minilogd	--	gen_context(system_u:object_r:syslogd_exec_t,s0)
 /usr/sbin/rklogd	--	gen_context(system_u:object_r:klogd_exec_t,s0)
 /usr/sbin/rsyslogd	--	gen_context(system_u:object_r:syslogd_exec_t,s0)
-/usr/sbin/syslog-ng	--	gen_context(system_u:object_r:syslogd_exec_t,s0)
 /usr/sbin/syslogd	--	gen_context(system_u:object_r:syslogd_exec_t,s0)
+/usr/sbin/syslog-ng	--	gen_context(system_u:object_r:syslogd_exec_t,s0)
 
 /var/lib/syslog-ng(/.*)? 	gen_context(system_u:object_r:syslogd_var_lib_t,s0)
 /var/lib/r?syslog(/.*)?		gen_context(system_u:object_r:syslogd_var_lib_t,s0)
@@ -34,11 +49,11 @@ ifdef(`distro_suse', `
 
 /var/axfrdns/log/main(/.*)?	gen_context(system_u:object_r:var_log_t,s0)
 /var/dnscache/log/main(/.*)?	gen_context(system_u:object_r:var_log_t,s0)
-/var/cfengine/outputs(/.*)?	gen_context(system_u:object_r:var_log_t,s0)
+#/var/cfengine/outputs(/.*)?	gen_context(system_u:object_r:var_log_t,s0)
 
 /var/log		-d	gen_context(system_u:object_r:var_log_t,s0-mls_systemhigh)
 /var/log/.*			gen_context(system_u:object_r:var_log_t,s0)
-/var/log/boot\.log	--	gen_context(system_u:object_r:var_log_t,mls_systemhigh)
+/var/log/boot\.log	--		gen_context(system_u:object_r:var_log_t,mls_systemhigh)
 /var/log/messages[^/]*		gen_context(system_u:object_r:var_log_t,mls_systemhigh)
 /var/log/secure[^/]*		gen_context(system_u:object_r:var_log_t,mls_systemhigh)
 /var/log/cron[^/]*		gen_context(system_u:object_r:var_log_t,mls_systemhigh)
@@ -46,6 +61,7 @@ ifdef(`distro_suse', `
 /var/log/spooler[^/]*		gen_context(system_u:object_r:var_log_t,mls_systemhigh)
 /var/log/audit(/.*)?		gen_context(system_u:object_r:auditd_log_t,mls_systemhigh)
 /var/log/syslog-ng(/.*)? 	gen_context(system_u:object_r:syslogd_var_run_t,mls_systemhigh)
+/var/run/log(/.*)?		gen_context(system_u:object_r:syslogd_var_run_t,mls_systemhigh)
 
 ifndef(`distro_gentoo',`
 /var/log/audit\.log	--	gen_context(system_u:object_r:auditd_log_t,mls_systemhigh)
@@ -54,6 +70,7 @@ ifndef(`distro_gentoo',`
 ifdef(`distro_redhat',`
 /var/named/chroot/var/log -d	gen_context(system_u:object_r:var_log_t,s0)
 /var/named/chroot/dev/log -s	gen_context(system_u:object_r:devlog_t,s0)
+/var/spool/postfix/dev/log -s	gen_context(system_u:object_r:devlog_t,s0)
 ')
 
 /var/run/audit_events	-s	gen_context(system_u:object_r:auditd_var_run_t,mls_systemhigh)
@@ -66,6 +83,7 @@ ifdef(`distro_redhat',`
 /var/run/syslogd\.pid	--	gen_context(system_u:object_r:syslogd_var_run_t,mls_systemhigh)
 /var/run/syslog-ng.ctl	--	gen_context(system_u:object_r:syslogd_var_run_t,s0)
 /var/run/syslog-ng(/.*)?	gen_context(system_u:object_r:syslogd_var_run_t,s0)
+/var/run/systemd/journal/syslog	-s	gen_context(system_u:object_r:devlog_t,mls_systemhigh)
 
 /var/spool/audit(/.*)?		gen_context(system_u:object_r:audit_spool_t,mls_systemhigh)
 /var/spool/bacula/log(/.*)? 	gen_context(system_u:object_r:var_log_t,s0)
@@ -73,4 +91,9 @@ ifdef(`distro_redhat',`
 /var/spool/plymouth/boot\.log	gen_context(system_u:object_r:var_log_t,mls_systemhigh)
 /var/spool/rsyslog(/.*)? 	gen_context(system_u:object_r:var_log_t,s0)
 
+/var/stockmaniac/templates_cache(/.*)? gen_context(system_u:object_r:var_log_t,s0)
+
 /var/tinydns/log/main(/.*)?	gen_context(system_u:object_r:var_log_t,s0)
+
+/var/webmin(/.*)?		gen_context(system_u:object_r:var_log_t,s0)
+
diff --git a/policy/modules/system/logging.if b/policy/modules/system/logging.if
index 321bb13..4d8e1a9 100644
--- a/policy/modules/system/logging.if
+++ b/policy/modules/system/logging.if
@@ -233,7 +233,7 @@ interface(`logging_run_auditd',`
 
 ########################################
 ## <summary>
-##	Connect to auditdstored over an unix stream socket.
+##	Connect to auditdstored over a unix stream socket.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -318,7 +318,7 @@ interface(`logging_dispatcher_domain',`
 
 ########################################
 ## <summary>
-##	Connect to the audit dispatcher over an unix stream socket.
+##	Connect to the audit dispatcher over a unix stream socket.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -496,6 +496,63 @@ interface(`logging_log_filetrans',`
 	filetrans_pattern($1, var_log_t, $2, $3, $4)
 ')
 
+#######################################
+## <summary>
+##  Create an object in the log directory, with a private type.
+## </summary>
+## <desc>
+##  <p>
+##  Allow the specified domain to create an object
+##  in the general system log directories (e.g., /var/log)
+##  with a private type.  Typically this is used for creating
+##  private log files in /var/log with the private type instead
+##  of the general system log type. To accomplish this goal,
+##  either the program must be SELinux-aware, or use this interface.
+##  </p>
+##  <p>
+##  Related interfaces:
+##  </p>
+##  <ul>
+##      <li>logging_log_file()</li>
+##  </ul>
+##  <p>
+##  Example usage with a domain that can create
+##  and append to a private log file stored in the
+##  general directories (e.g., /var/log):
+##  </p>
+##  <p>
+##  type mylogfile_t;
+##  logging_log_file(mylogfile_t)
+##  allow mydomain_t mylogfile_t:file { create_file_perms append_file_perms };
+##  logging_log_filetrans(mydomain_t, mylogfile_t, file)
+##  </p>
+## </desc>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <param name="private type">
+##  <summary>
+##  The type of the object to be created.
+##  </summary>
+## </param>
+## <param name="object">
+##  <summary>
+##  The object class of the object being created.
+##  </summary>
+## </param>
+## <infoflow type="write" weight="10"/>
+#
+interface(`logging_log_named_filetrans',`
+    gen_require(`
+        type var_log_t;
+    ')
+
+    files_search_var($1)
+    filetrans_pattern($1, var_log_t, $2, $3, $4)
+')
+
 ########################################
 ## <summary>
 ##	Send system log messages.
@@ -550,6 +607,45 @@ interface(`logging_send_syslog_msg',`
 
 ########################################
 ## <summary>
+##	Connect to the syslog control unix stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`logging_create_devlog_dev',`
+	gen_require(`
+		type devlog_t;
+	')
+
+	allow $1 devlog_t:sock_file manage_sock_file_perms;
+	dev_filetrans($1, devlog_t, sock_file)
+	init_pid_filetrans($1, devlog_t, sock_file, "syslog")
+')
+
+########################################
+## <summary>
+##	Connect to the syslog control unix stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`logging_stream_connect_syslog',`
+	gen_require(`
+		type syslogd_t, syslogd_var_run_t;
+	')
+
+	files_search_pids($1)
+	stream_connect_pattern($1, syslogd_var_run_t, syslogd_var_run_t, syslogd_t)
+')
+
+########################################
+## <summary>
 ##	Read the auditd configuration files.
 ## </summary>
 ## <param name="domain">
@@ -739,7 +835,25 @@ interface(`logging_append_all_logs',`
 	')
 
 	files_search_var($1)
-	append_files_pattern($1, var_log_t, logfile)
+	append_files_pattern($1, logfile, logfile)
+')
+
+########################################
+## <summary>
+##	Append to all log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`logging_inherit_append_all_logs',`
+	gen_require(`
+		attribute logfile;
+	')
+
+	allow $1 logfile:file { getattr append ioctl lock };
 ')
 
 ########################################
@@ -822,7 +936,7 @@ interface(`logging_manage_all_logs',`
 
 	files_search_var($1)
 	manage_files_pattern($1, logfile, logfile)
-	read_lnk_files_pattern($1, logfile, logfile)
+	manage_lnk_files_pattern($1, logfile, logfile)
 ')
 
 ########################################
@@ -848,6 +962,44 @@ interface(`logging_read_generic_logs',`
 
 ########################################
 ## <summary>
+##	Link generic log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`logging_link_generic_logs',`
+	gen_require(`
+		type var_log_t;
+	')
+
+	allow $1 var_log_t:file link;
+')
+
+########################################
+## <summary>
+##	Delete generic log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`logging_delete_generic_logs',`
+	gen_require(`
+		type var_log_t;
+	')
+
+	allow $1 var_log_t:file unlink;
+')
+
+########################################
+## <summary>
 ##	Write generic log files.
 ## </summary>
 ## <param name="domain">
@@ -947,11 +1099,16 @@ interface(`logging_admin_audit',`
 		type auditd_t, auditd_etc_t, auditd_log_t;
 		type auditd_var_run_t;
 		type auditd_initrc_exec_t;
+		type auditd_unit_file_t;
 	')
 
-	allow $1 auditd_t:process { ptrace signal_perms };
+	allow $1 auditd_t:process signal_perms;
 	ps_process_pattern($1, auditd_t)
 
+	tunable_policy(`deny_ptrace',`',`
+		allow $1 auditd_t:process ptrace;
+	')
+
 	manage_dirs_pattern($1, auditd_etc_t, auditd_etc_t)
 	manage_files_pattern($1, auditd_etc_t, auditd_etc_t)
 
@@ -967,6 +1124,33 @@ interface(`logging_admin_audit',`
 	domain_system_change_exemption($1)
 	role_transition $2 auditd_initrc_exec_t system_r;
 	allow $2 system_r;
+
+	logging_systemctl_audit($1)
+	admin_pattern($1, auditd_unit_file_t)
+	allow $1 auditd_unit_file_t:service all_service_perms;
+')
+
+########################################
+## <summary>
+##	Execute auditd server in the auditd domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+#
+interface(`logging_systemctl_audit',`
+	gen_require(`
+		type auditd_t;
+		type auditd_unit_file_t;
+	')
+
+	systemd_exec_systemctl($1)
+	allow $1 auditd_unit_file_t:file read_file_perms;
+	allow $1 auditd_unit_file_t:service manage_service_perms;
+
+	ps_process_pattern($1, auditd_t)
 ')
 
 ########################################
@@ -995,10 +1179,15 @@ interface(`logging_admin_syslog',`
 		type syslogd_initrc_exec_t;
 	')
 
-	allow $1 syslogd_t:process { ptrace signal_perms };
-	allow $1 klogd_t:process { ptrace signal_perms };
+	allow $1 self:capability2 syslog;
+	allow $1 syslogd_t:process signal_perms;
+	allow $1 klogd_t:process signal_perms;
 	ps_process_pattern($1, syslogd_t)
 	ps_process_pattern($1, klogd_t)
+	tunable_policy(`deny_ptrace',`',`
+		allow $1 syslogd_t:process ptrace;
+		allow $1 klogd_t:process ptrace;
+	')
 
 	manage_dirs_pattern($1, klogd_var_run_t, klogd_var_run_t)
 	manage_files_pattern($1, klogd_var_run_t, klogd_var_run_t)
@@ -1020,6 +1209,8 @@ interface(`logging_admin_syslog',`
 	manage_files_pattern($1, syslogd_var_run_t, syslogd_var_run_t)
 
 	logging_manage_all_logs($1)
+	allow $1 logfile:dir relabel_dir_perms;
+	allow $1 logfile:file relabel_file_perms;
 
 	init_labeled_script_domtrans($1, syslogd_initrc_exec_t)
 	domain_system_change_exemption($1)
@@ -1048,3 +1239,25 @@ interface(`logging_admin',`
 	logging_admin_audit($1, $2)
 	logging_admin_syslog($1, $2)
 ')
+
+########################################
+## <summary>
+##	Transition to logging named content
+## </summary>
+## <param name="domain">
+##	<summary>
+##      Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`logging_filetrans_named_content',`
+	gen_require(`
+		type var_log_t;
+		type audit_spool_t;
+	')
+
+	files_var_filetrans($1, var_log_t, dir, "webmin")
+	files_spool_filetrans($1, var_log_t, dir, "rsyslog")
+	files_spool_filetrans($1, var_log_t, dir, "log")
+	files_spool_filetrans($1, audit_spool_t, dir, "audit")
+')
diff --git a/policy/modules/system/logging.te b/policy/modules/system/logging.te
index 92555db..b9e5467 100644
--- a/policy/modules/system/logging.te
+++ b/policy/modules/system/logging.te
@@ -5,6 +5,20 @@ policy_module(logging, 1.18.2)
 # Declarations
 #
 
+## <desc>
+## <p>
+## Allow syslogd daemon to send mail
+## </p>
+## </desc>
+gen_tunable(logging_syslogd_can_sendmail, false)
+
+## <desc>
+## <p>
+## Allow syslogd the ability to read/write terminals
+## </p>
+## </desc>
+gen_tunable(logging_syslogd_use_tty, false)
+
 attribute logfile;
 
 type auditctl_t;
@@ -20,6 +34,7 @@ files_security_file(auditd_log_t)
 files_security_mountpoint(auditd_log_t)
 
 type audit_spool_t;
+files_spool_file(audit_spool_t)
 files_security_file(audit_spool_t)
 files_security_mountpoint(audit_spool_t)
 
@@ -33,6 +48,9 @@ init_script_file(auditd_initrc_exec_t)
 type auditd_var_run_t;
 files_pid_file(auditd_var_run_t)
 
+type auditd_unit_file_t;
+systemd_unit_file(auditd_unit_file_t)
+
 type audisp_t;
 type audisp_exec_t;
 init_system_domain(audisp_t, audisp_exec_t)
@@ -64,6 +82,7 @@ files_config_file(syslog_conf_t)
 type syslogd_t;
 type syslogd_exec_t;
 init_daemon_domain(syslogd_t, syslogd_exec_t)
+mls_trusted_object(syslogd_t)
 
 type syslogd_initrc_exec_t;
 init_script_file(syslogd_initrc_exec_t)
@@ -94,6 +113,8 @@ ifdef(`enable_mls',`
 allow auditctl_t self:capability { fsetid dac_read_search dac_override };
 allow auditctl_t self:netlink_audit_socket nlmsg_readpriv;
 
+allow auditctl_t self:process getcap;
+
 read_files_pattern(auditctl_t, auditd_etc_t, auditd_etc_t)
 allow auditctl_t auditd_etc_t:dir list_dir_perms;
 
@@ -111,7 +132,7 @@ domain_use_interactive_fds(auditctl_t)
 
 mls_file_read_all_levels(auditctl_t)
 
-term_use_all_terms(auditctl_t)
+term_use_all_inherited_terms(auditctl_t)
 
 init_dontaudit_use_fds(auditctl_t)
 
@@ -148,6 +169,7 @@ kernel_read_kernel_sysctls(auditd_t)
 # Needs to be able to run dispatcher.  see /etc/audit/auditd.conf
 # Probably want a transition, and a new auditd_helper app
 kernel_read_system_state(auditd_t)
+kernel_read_network_state(auditd_t)
 
 dev_read_sysfs(auditd_t)
 
@@ -183,16 +205,19 @@ logging_send_syslog_msg(auditd_t)
 logging_domtrans_dispatcher(auditd_t)
 logging_signal_dispatcher(auditd_t)
 
+auth_use_nsswitch(auditd_t)
+
 miscfiles_read_localization(auditd_t)
 
 mls_file_read_all_levels(auditd_t)
 mls_file_write_all_levels(auditd_t) # Need to be able to write to /var/run/ directory
+mls_socket_write_all_levels(auditd_t)
 
 seutil_dontaudit_read_config(auditd_t)
 
 sysnet_dns_name_resolve(auditd_t)
 
-userdom_use_user_terminals(auditd_t)
+userdom_use_inherited_user_terminals(auditd_t)
 userdom_dontaudit_use_unpriv_user_fds(auditd_t)
 userdom_dontaudit_search_user_home_dirs(auditd_t)
 
@@ -237,10 +262,17 @@ corecmd_exec_shell(audisp_t)
 
 domain_use_interactive_fds(audisp_t)
 
+fs_getattr_all_fs(audisp_t)
+
 files_read_etc_files(audisp_t)
 files_read_etc_runtime_files(audisp_t)
 
+mls_file_read_all_levels(audisp_t)
 mls_file_write_all_levels(audisp_t)
+mls_socket_write_all_levels(audisp_t)
+mls_dbus_send_all_levels(audisp_t)
+
+auth_use_nsswitch(audisp_t)
 
 logging_send_syslog_msg(audisp_t)
 
@@ -250,6 +282,10 @@ sysnet_dns_name_resolve(audisp_t)
 
 optional_policy(`
 	dbus_system_bus_client(audisp_t)
+
+	optional_policy(`
+		setroubleshoot_dbus_chat(audisp_t)
+	')
 ')
 
 ########################################
@@ -280,11 +316,20 @@ corenet_sendrecv_audit_client_packets(audisp_remote_t)
 
 files_read_etc_files(audisp_remote_t)
 
+mls_socket_write_all_levels(audisp_remote_t)
+
 logging_send_syslog_msg(audisp_remote_t)
 logging_send_audit_msgs(audisp_remote_t)
 
+auth_use_nsswitch(audisp_remote_t)
+auth_append_login_records(audisp_remote_t)
+
 miscfiles_read_localization(audisp_remote_t)
 
+init_telinit(audisp_remote_t)
+init_read_utmp(audisp_remote_t)
+init_dontaudit_write_utmp(audisp_remote_t)
+
 sysnet_dns_name_resolve(audisp_remote_t)
 
 ########################################
@@ -354,12 +399,12 @@ optional_policy(`
 # chown fsetid for syslog-ng
 # sys_admin for the integrated klog of syslog-ng and metalog
 # cjp: why net_admin!
-allow syslogd_t self:capability { dac_override sys_resource sys_tty_config net_admin sys_admin chown fsetid };
+allow syslogd_t self:capability { sys_ptrace dac_override sys_resource sys_tty_config ipc_lock net_admin sys_admin sys_nice chown fsetid setuid setgid };
 dontaudit syslogd_t self:capability sys_tty_config;
+allow syslogd_t self:capability2 syslog;
 # setpgid for metalog
 # setrlimit for syslog-ng
-# getsched for syslog-ng
-allow syslogd_t self:process { signal_perms setpgid setrlimit getsched };
+allow syslogd_t self:process { signal_perms getcap setcap setpgid getsched setsched setrlimit };
 # receive messages to be logged
 allow syslogd_t self:unix_dgram_socket create_socket_perms;
 allow syslogd_t self:unix_stream_socket create_stream_socket_perms;
@@ -377,6 +422,7 @@ files_pid_filetrans(syslogd_t, devlog_t, sock_file)
 # create/append log files.
 manage_files_pattern(syslogd_t, var_log_t, var_log_t)
 rw_fifo_files_pattern(syslogd_t, var_log_t, var_log_t)
+files_search_spool(syslogd_t)
 
 # Allow access for syslog-ng
 allow syslogd_t var_log_t:dir { create setattr };
@@ -386,9 +432,15 @@ manage_dirs_pattern(syslogd_t, syslogd_tmp_t, syslogd_tmp_t)
 manage_files_pattern(syslogd_t, syslogd_tmp_t, syslogd_tmp_t)
 files_tmp_filetrans(syslogd_t, syslogd_tmp_t, { dir file })
 
+manage_sock_files_pattern(syslogd_t, syslogd_var_lib_t, syslogd_var_lib_t)
 manage_files_pattern(syslogd_t, syslogd_var_lib_t, syslogd_var_lib_t)
 files_search_var_lib(syslogd_t)
 
+manage_dirs_pattern(syslogd_t, syslogd_var_run_t, syslogd_var_run_t)
+manage_files_pattern(syslogd_t, syslogd_var_run_t, syslogd_var_run_t)
+manage_sock_files_pattern(syslogd_t, syslogd_var_run_t, syslogd_var_run_t)
+files_pid_filetrans(syslogd_t, syslogd_var_run_t, { file dir })
+
 # manage pid file
 manage_files_pattern(syslogd_t, syslogd_var_run_t, syslogd_var_run_t)
 files_pid_filetrans(syslogd_t, syslogd_var_run_t, file)
@@ -427,10 +479,27 @@ corenet_sendrecv_syslogd_server_packets(syslogd_t)
 corenet_sendrecv_postgresql_client_packets(syslogd_t)
 corenet_sendrecv_mysqld_client_packets(syslogd_t)
 
+tunable_policy(`logging_syslogd_use_tty',`
+   term_use_all_ttys(syslogd_t)
+   term_use_all_ptys(syslogd_t)
+')
+
+tunable_policy(`logging_syslogd_can_sendmail',`
+	# support for ommail module to send logs via mail
+	corenet_tcp_connect_smtp_port(syslogd_t)
+')
+
 dev_filetrans(syslogd_t, devlog_t, sock_file)
 dev_read_sysfs(syslogd_t)
+dev_read_rand(syslogd_t)
+dev_read_urand(syslogd_t)
+# relating to systemd-kmsg-syslogd
+dev_write_kmsg(syslogd_t)
 
+domain_read_all_domains_state(syslogd_t)
 domain_use_interactive_fds(syslogd_t)
+domain_read_all_domains_state(syslogd_t)
+domain_getattr_all_domains(syslogd_t)
 
 files_read_etc_files(syslogd_t)
 files_read_usr_files(syslogd_t)
@@ -448,7 +517,9 @@ mls_file_write_all_levels(syslogd_t) # Need to be able to write to /var/run/ and
 term_write_console(syslogd_t)
 # Allow syslog to a terminal
 term_write_unallocated_ttys(syslogd_t)
+term_use_generic_ptys(syslogd_t)
 
+init_stream_connect(syslogd_t)
 # for sending messages to logged in users
 init_read_utmp(syslogd_t)
 init_dontaudit_write_utmp(syslogd_t)
@@ -460,6 +531,7 @@ init_use_fds(syslogd_t)
 
 # cjp: this doesnt make sense
 logging_send_syslog_msg(syslogd_t)
+logging_manage_all_logs(syslogd_t)
 
 miscfiles_read_localization(syslogd_t)
 
@@ -493,15 +565,29 @@ optional_policy(`
 ')
 
 optional_policy(`
+	mysql_read_config(syslogd_t)
 	mysql_stream_connect(syslogd_t)
 ')
 
 optional_policy(`
+	plymouthd_manage_log(syslogd_t)
+')
+
+optional_policy(`
+	postfix_search_spool(syslogd_t)
+')
+
+optional_policy(`
 	postgresql_stream_connect(syslogd_t)
 ')
 
 optional_policy(`
 	seutil_sigchld_newrole(syslogd_t)
+	snmp_read_snmp_var_lib_files(syslogd_t)
+')
+
+optional_policy(`
+    daemontools_search_svc_dir(syslogd_t)
 ')
 
 optional_policy(`
diff --git a/policy/modules/system/lvm.fc b/policy/modules/system/lvm.fc
index 879bb1e..101d1c0 100644
--- a/policy/modules/system/lvm.fc
+++ b/policy/modules/system/lvm.fc
@@ -28,23 +28,27 @@ ifdef(`distro_gentoo',`
 #
 /lib/lvm-10/.*		--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /lib/lvm-200/.*		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/lib/udev/udisks-lvm-pv-export	--	gen_context(system_u:object_r:lvm_exec_t,s0)
 
 #
 # /sbin
 #
+/sbin/mount\.crypt	--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/cryptsetup	--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/dmraid		--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/dmsetup		--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/dmsetup\.static	--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/e2fsadm		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/sbin/kpartx        --  gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/lvchange		--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/lvcreate		--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/lvdisplay		--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/lvextend		--	gen_context(system_u:object_r:lvm_exec_t,s0)
-/sbin/lvm		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/sbin/lvm			--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/lvm\.static	--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/lvmchange		--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/lvmdiskscan	--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/sbin/lvmetad		--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/lvmiopversion	--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/lvmsadc		--	gen_context(system_u:object_r:lvm_exec_t,s0)
 /sbin/lvmsar		--	gen_context(system_u:object_r:lvm_exec_t,s0)
@@ -88,8 +92,67 @@ ifdef(`distro_gentoo',`
 #
 # /usr
 #
-/usr/sbin/clvmd		--	gen_context(system_u:object_r:clvmd_exec_t,s0)
-/usr/sbin/lvm		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/clvmd			--	gen_context(system_u:object_r:clvmd_exec_t,s0)
+/usr/sbin/cryptsetup		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/dmraid		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/dmsetup		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/dmsetup\.static	--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/e2fsadm		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/kpartx        	--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/lvchange		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/lvcreate		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/lvdisplay		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/lvextend		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/lvm			--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/lvm\.static		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/lvmchange		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/lvmdiskscan		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/lvmetad		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/lvmiopversion		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/lvmsadc		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/lvmsar		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/lvreduce		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/lvremove		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/lvrename		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/lvresize		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/lvs			--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/lvscan		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/mount\.crypt		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/multipathd		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/multipath\.static	--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/pvchange		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/pvcreate		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/pvdata		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/pvdisplay		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/pvmove		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/pvremove		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/pvs			--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/pvscan		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/vgcfgbackup		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/vgcfgrestore		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/vgchange		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/vgchange\.static	--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/vgck			--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/vgcreate		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/vgdisplay		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/vgexport		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/vgextend		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/vgimport		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/vgmerge		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/vgmknodes		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/vgreduce		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/vgremove		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/vgrename		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/vgs			--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/vgscan		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/vgscan\.static	--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/vgsplit		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/sbin/vgwrapper		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+
+/usr/lib/lvm-10/.*		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/lib/lvm-200/.*		--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/lib/udev/udisks-lvm-pv-export	--	gen_context(system_u:object_r:lvm_exec_t,s0)
+/usr/lib/systemd/systemd-cryptsetup --	gen_context(system_u:object_r:lvm_exec_t,s0)
 
 #
 # /var
@@ -97,5 +160,7 @@ ifdef(`distro_gentoo',`
 /var/cache/multipathd(/.*)?	gen_context(system_u:object_r:lvm_metadata_t,s0)
 /var/lib/multipath(/.*)?	gen_context(system_u:object_r:lvm_var_lib_t,s0)
 /var/lock/lvm(/.*)?		gen_context(system_u:object_r:lvm_lock_t,s0)
+/var/run/lvm(/.*)?     gen_context(system_u:object_r:lvm_var_run_t,s0)
 /var/run/multipathd\.sock -s	gen_context(system_u:object_r:lvm_var_run_t,s0)
+/var/run/clvmd\.pid --  gen_context(system_u:object_r:clvmd_var_run_t,s0)
 /var/run/dmevent.*		gen_context(system_u:object_r:lvm_var_run_t,s0)
diff --git a/policy/modules/system/lvm.if b/policy/modules/system/lvm.if
index 58bc27f..51e9872 100644
--- a/policy/modules/system/lvm.if
+++ b/policy/modules/system/lvm.if
@@ -123,3 +123,94 @@ interface(`lvm_domtrans_clvmd',`
 	corecmd_search_bin($1)
 	domtrans_pattern($1, clvmd_exec_t, clvmd_t)
 ')
+
+########################################
+## <summary>
+##	Read and write to lvm temporary file system.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`lvm_rw_clvmd_tmpfs_files',`
+	gen_require(`
+		type clvmd_tmpfs_t;
+	')
+
+	allow $1 clvmd_tmpfs_t:file rw_file_perms;
+')
+
+########################################
+## <summary>
+##	Delete lvm temporary file system.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`lvm_delete_clvmd_tmpfs_files',`
+	gen_require(`
+		type clvmd_tmpfs_t;
+	')
+
+	allow $1 clvmd_tmpfs_t:file unlink;
+')
+
+########################################
+## <summary>
+##	Send lvm a null signal.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`lvm_signull',`
+	gen_require(`
+		type lvm_t;
+	')
+
+	allow $1 lvm_t:process signull;
+')
+
+########################################
+## <summary>
+##	Send a message to lvm over the 
+##	datagram socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`lvm_dgram_send',`
+	gen_require(`
+		type lvm_t;
+	')
+
+	allow $1 lvm_t:unix_dgram_socket sendto;
+')
+
+########################################
+## <summary>
+##	Read and write a lvm unnamed pipe.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`lvm_rw_pipes',`
+	gen_require(`
+		type lvm_var_run_t;
+	')
+
+	allow $1 lvm_var_run_t:fifo_file rw_inherited_fifo_file_perms;
+')
diff --git a/policy/modules/system/lvm.te b/policy/modules/system/lvm.te
index 7b6bcb9..cafc3af 100644
--- a/policy/modules/system/lvm.te
+++ b/policy/modules/system/lvm.te
@@ -12,6 +12,9 @@ init_daemon_domain(clvmd_t, clvmd_exec_t)
 type clvmd_initrc_exec_t;
 init_script_file(clvmd_initrc_exec_t)
 
+type clvmd_tmpfs_t alias clmvd_tmpfs_t;
+files_tmpfs_file(clvmd_tmpfs_t)
+
 type clvmd_var_run_t;
 files_pid_file(clvmd_var_run_t)
 
@@ -24,7 +27,7 @@ domain_obj_id_change_exemption(lvm_t)
 role system_r types lvm_t;
 
 type lvm_etc_t;
-files_type(lvm_etc_t)
+files_config_file(lvm_etc_t)
 
 type lvm_lock_t;
 files_lock_file(lvm_lock_t)
@@ -49,13 +52,16 @@ files_tmp_file(lvm_tmp_t)
 allow clvmd_t self:capability { sys_nice chown ipc_lock sys_admin mknod };
 dontaudit clvmd_t self:capability sys_tty_config;
 allow clvmd_t self:process { signal_perms setsched };
-dontaudit clvmd_t self:process ptrace;
 allow clvmd_t self:socket create_socket_perms;
 allow clvmd_t self:fifo_file rw_fifo_file_perms;
 allow clvmd_t self:unix_stream_socket { connectto create_stream_socket_perms };
 allow clvmd_t self:tcp_socket create_stream_socket_perms;
 allow clvmd_t self:udp_socket create_socket_perms;
 
+manage_dirs_pattern(clvmd_t, clvmd_tmpfs_t, clvmd_tmpfs_t)
+manage_files_pattern(clvmd_t, clvmd_tmpfs_t,clvmd_tmpfs_t)
+fs_tmpfs_filetrans(clvmd_t, clvmd_tmpfs_t, { dir file })
+
 manage_files_pattern(clvmd_t, clvmd_var_run_t, clvmd_var_run_t)
 files_pid_filetrans(clvmd_t, clvmd_var_run_t, file)
 
@@ -141,6 +147,11 @@ ifdef(`distro_redhat',`
 ')
 
 optional_policy(`
+	aisexec_stream_connect(clvmd_t)
+	corosync_stream_connect(clvmd_t)
+')
+
+optional_policy(`
 	ccs_stream_connect(clvmd_t)
 ')
 
@@ -170,6 +181,7 @@ dontaudit lvm_t self:capability sys_tty_config;
 allow lvm_t self:process { sigchld sigkill sigstop signull signal setfscreate };
 # LVM will complain a lot if it cannot set its priority.
 allow lvm_t self:process setsched;
+allow lvm_t self:sem create_sem_perms;
 allow lvm_t self:file rw_file_perms;
 allow lvm_t self:fifo_file manage_fifo_file_perms;
 allow lvm_t self:unix_dgram_socket create_socket_perms;
@@ -191,8 +203,9 @@ read_lnk_files_pattern(lvm_t, lvm_exec_t, lvm_exec_t)
 can_exec(lvm_t, lvm_exec_t)
 
 # Creating lock files
+manage_dirs_pattern(lvm_t, lvm_lock_t, lvm_lock_t)
 manage_files_pattern(lvm_t, lvm_lock_t, lvm_lock_t)
-files_lock_filetrans(lvm_t, lvm_lock_t, file)
+files_lock_filetrans(lvm_t, lvm_lock_t, { file dir })
 
 manage_dirs_pattern(lvm_t, lvm_var_lib_t, lvm_var_lib_t)
 manage_files_pattern(lvm_t, lvm_var_lib_t, lvm_var_lib_t)
@@ -200,8 +213,9 @@ files_var_lib_filetrans(lvm_t, lvm_var_lib_t, { dir file })
 
 manage_dirs_pattern(lvm_t, lvm_var_run_t, lvm_var_run_t)
 manage_files_pattern(lvm_t, lvm_var_run_t, lvm_var_run_t)
+manage_fifo_files_pattern(lvm_t, lvm_var_run_t, lvm_var_run_t)
 manage_sock_files_pattern(lvm_t, lvm_var_run_t, lvm_var_run_t)
-files_pid_filetrans(lvm_t, lvm_var_run_t, { file sock_file })
+files_pid_filetrans(lvm_t, lvm_var_run_t, { dir file fifo_file sock_file })
 
 read_files_pattern(lvm_t, lvm_etc_t, lvm_etc_t)
 read_lnk_files_pattern(lvm_t, lvm_etc_t, lvm_etc_t)
@@ -213,11 +227,13 @@ files_search_mnt(lvm_t)
 
 kernel_get_sysvipc_info(lvm_t)
 kernel_read_system_state(lvm_t)
+kernel_read_kernel_sysctls(lvm_t)
 # Read system variables in /proc/sys
 kernel_read_kernel_sysctls(lvm_t)
 # it has no reason to need this
 kernel_dontaudit_getattr_core_if(lvm_t)
 kernel_use_fds(lvm_t)
+kernel_request_load_module(lvm_t)
 kernel_search_debugfs(lvm_t)
 
 corecmd_exec_bin(lvm_t)
@@ -228,11 +244,13 @@ dev_delete_generic_dirs(lvm_t)
 dev_read_rand(lvm_t)
 dev_read_urand(lvm_t)
 dev_rw_lvm_control(lvm_t)
+dev_write_kmsg(lvm_t)
 dev_manage_generic_symlinks(lvm_t)
 dev_relabel_generic_dev_dirs(lvm_t)
 dev_manage_generic_blk_files(lvm_t)
 # Read /sys/block. Device mapper metadata is kept there.
-dev_read_sysfs(lvm_t)
+# cryptsetup writes read_ahead_kb
+dev_rw_sysfs(lvm_t)
 # cjp: this has no effect since LVM does not
 # have lnk_file relabelto for anything else.
 # perhaps this should be blk_files?
@@ -244,6 +262,7 @@ dev_dontaudit_getattr_generic_chr_files(lvm_t)
 dev_dontaudit_getattr_generic_blk_files(lvm_t)
 dev_dontaudit_getattr_generic_pipes(lvm_t)
 dev_create_generic_dirs(lvm_t)
+dev_rw_generic_files(lvm_t)
 
 domain_use_interactive_fds(lvm_t)
 domain_read_all_domains_state(lvm_t)
@@ -253,17 +272,21 @@ files_read_etc_files(lvm_t)
 files_read_etc_runtime_files(lvm_t)
 # for when /usr is not mounted:
 files_dontaudit_search_isid_type_dirs(lvm_t)
+files_dontaudit_getattr_tmpfs_files(lvm_t)
 
-fs_getattr_xattr_fs(lvm_t)
+fs_getattr_all_fs(lvm_t)
 fs_search_auto_mountpoints(lvm_t)
 fs_list_tmpfs(lvm_t)
 fs_read_tmpfs_symlinks(lvm_t)
 fs_dontaudit_read_removable_files(lvm_t)
 fs_dontaudit_getattr_tmpfs_files(lvm_t)
 fs_rw_anon_inodefs_files(lvm_t)
+fs_list_auto_mountpoints(lvm_t)
+fs_list_hugetlbfs(lvm_t)
 
 mls_file_read_all_levels(lvm_t)
 mls_file_write_to_clearance(lvm_t)
+mls_file_upgrade(lvm_t)
 
 selinux_get_fs_mount(lvm_t)
 selinux_validate_context(lvm_t)
@@ -283,7 +306,7 @@ storage_dev_filetrans_fixed_disk(lvm_t)
 # Access raw devices and old /dev/lvm (c 109,0).  Is this needed?
 storage_manage_fixed_disk(lvm_t)
 
-term_use_all_terms(lvm_t)
+term_use_all_inherited_terms(lvm_t)
 
 init_use_fds(lvm_t)
 init_dontaudit_getattr_initctl(lvm_t)
@@ -292,6 +315,8 @@ init_read_script_state(lvm_t)
 
 logging_send_syslog_msg(lvm_t)
 
+authlogin_rw_pipes(lvm_t)
+
 miscfiles_read_localization(lvm_t)
 
 seutil_read_config(lvm_t)
@@ -299,7 +324,10 @@ seutil_read_file_contexts(lvm_t)
 seutil_search_default_contexts(lvm_t)
 seutil_sigchld_newrole(lvm_t)
 
+userdom_use_inherited_user_terminals(lvm_t)
 userdom_use_user_terminals(lvm_t)
+userdom_rw_semaphores(lvm_t)
+userdom_search_user_home_dirs(lvm_t)
 
 ifdef(`distro_redhat',`
 	# this is from the initrd:
@@ -311,6 +339,11 @@ ifdef(`distro_redhat',`
 ')
 
 optional_policy(`
+	aisexec_stream_connect(lvm_t)
+	corosync_stream_connect(lvm_t)
+')
+
+optional_policy(`
 	bootloader_rw_tmp_files(lvm_t)
 ')
 
@@ -331,14 +364,27 @@ optional_policy(`
 ')
 
 optional_policy(`
+	livecd_rw_semaphores(lvm_t)
+')
+
+optional_policy(`
 	modutils_domtrans_insmod(lvm_t)
 ')
 
 optional_policy(`
+	raid_read_mdadm_pid(lvm_t)
+')
+
+optional_policy(`
 	rpm_manage_script_tmp_files(lvm_t)
 ')
 
 optional_policy(`
+	#systemd_passwd_agent_dev_template(lvm)
+	systemd_manage_passwd_run(lvm_t)
+')
+
+optional_policy(`
 	udev_read_db(lvm_t)
 ')
 
diff --git a/policy/modules/system/miscfiles.fc b/policy/modules/system/miscfiles.fc
index fe3427d..88fc786 100644
--- a/policy/modules/system/miscfiles.fc
+++ b/policy/modules/system/miscfiles.fc
@@ -9,8 +9,9 @@ ifdef(`distro_gentoo',`
 # /etc
 #
 /etc/avahi/etc/localtime --	gen_context(system_u:object_r:locale_t,s0)
-/etc/httpd/alias/[^/]*\.db(\.[^/]*)* -- gen_context(system_u:object_r:cert_t,s0)
+/etc/httpd/alias(/.*)?	        gen_context(system_u:object_r:cert_t,s0)
 /etc/localtime		--	gen_context(system_u:object_r:locale_t,s0)
+/etc/locale.conf	--	gen_context(system_u:object_r:locale_t,s0)
 /etc/pki(/.*)?			gen_context(system_u:object_r:cert_t,s0)
 /etc/timezone		--	gen_context(system_u:object_r:locale_t,s0)
 
diff --git a/policy/modules/system/miscfiles.if b/policy/modules/system/miscfiles.if
index 926ba65..b2a1675 100644
--- a/policy/modules/system/miscfiles.if
+++ b/policy/modules/system/miscfiles.if
@@ -582,6 +582,26 @@ interface(`miscfiles_manage_man_pages',`
 
 ########################################
 ## <summary>
+##	Allow process to relabel man_pages info
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`miscfiles_relabel_man_pages',`
+	gen_require(`
+		type man_t;
+	')
+
+	files_search_usr($1)
+	relabel_dirs_pattern($1, man_t, man_t)
+	relabel_files_pattern($1, man_t, man_t)
+')
+
+########################################
+## <summary>
 ##	Read public files used for file
 ##	transfer services.
 ## </summary>
@@ -745,7 +765,6 @@ interface(`miscfiles_etc_filetrans_localization',`
 	')
 
 	files_etc_filetrans($1, locale_t, file)
-
 ')
 
 ########################################
@@ -769,3 +788,43 @@ interface(`miscfiles_manage_localization',`
 	manage_lnk_files_pattern($1, locale_t, locale_t)
 ')
 
+########################################
+## <summary>
+##	Transition to miscfiles named content
+## </summary>
+## <param name="domain">
+##	<summary>
+##      Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`miscfiles_filetrans_named_content',`
+	gen_require(`
+		type locale_t;
+		type man_t;
+		type cert_t;
+		type fonts_t;
+		type fonts_cache_t;
+		type hwdata_t;
+		type tetex_data_t;
+		type public_content_t;
+	')
+
+	files_etc_filetrans($1, locale_t, file, "localtime")
+	files_etc_filetrans($1, locale_t, file, "locale.conf")
+	files_etc_filetrans($1, locale_t, file, "locale.conf.new")
+	files_var_filetrans($1, man_t, dir, "man")
+	files_etc_filetrans($1, locale_t, file, "timezone")
+	files_etc_filetrans($1, locale_t, file, "clock")
+	files_etc_filetrans($1, cert_t, dir, "pki")
+	files_usr_filetrans($1, locale_t, dir, "locale")
+	files_usr_filetrans($1, locale_t, dir, "zoneinfo")
+	files_usr_filetrans($1, cert_t, dir, "certs")
+	files_usr_filetrans($1, fonts_t, dir, "fonts")
+	files_usr_filetrans($1, hwdata_t, dir, "hwdata")
+	files_var_filetrans($1, fonts_cache_t, dir, "fontconfig")
+	files_var_filetrans($1, tetex_data_t, dir, "fonts")
+	files_spool_filetrans($1, tetex_data_t, dir, "texmf")
+	files_var_lib_filetrans($1, tetex_data_t, dir, "texmf")
+	files_var_filetrans($1, public_content_t, dir, "ftp")
+')
diff --git a/policy/modules/system/miscfiles.te b/policy/modules/system/miscfiles.te
index c885e4e..6d0881d 100644
--- a/policy/modules/system/miscfiles.te
+++ b/policy/modules/system/miscfiles.te
@@ -4,7 +4,6 @@ policy_module(miscfiles, 1.9.1)
 #
 # Declarations
 #
-
 attribute cert_type;
 
 #
diff --git a/policy/modules/system/modutils.fc b/policy/modules/system/modutils.fc
index 2410551..e5026a9 100644
--- a/policy/modules/system/modutils.fc
+++ b/policy/modules/system/modutils.fc
@@ -20,3 +20,15 @@ ifdef(`distro_gentoo',`
 /sbin/modules-update	--	gen_context(system_u:object_r:update_modules_exec_t,s0)
 /sbin/rmmod.*		--	gen_context(system_u:object_r:insmod_exec_t,s0)
 /sbin/update-modules	--	gen_context(system_u:object_r:update_modules_exec_t,s0)
+
+/usr/bin/kmod		--	gen_context(system_u:object_r:insmod_exec_t,s0)
+
+/usr/sbin/depmod.*	--	gen_context(system_u:object_r:depmod_exec_t,s0)
+/usr/sbin/generate-modprobe\.conf -- gen_context(system_u:object_r:update_modules_exec_t,s0)
+/usr/sbin/insmod.*	--	gen_context(system_u:object_r:insmod_exec_t,s0)
+/usr/sbin/modprobe.*	--	gen_context(system_u:object_r:insmod_exec_t,s0)
+/usr/sbin/modules-update	--	gen_context(system_u:object_r:update_modules_exec_t,s0)
+/usr/sbin/rmmod.*	--	gen_context(system_u:object_r:insmod_exec_t,s0)
+/usr/sbin/update-modules	--	gen_context(system_u:object_r:update_modules_exec_t,s0)
+
+/usr/lib/modules/modprobe\.conf -- 	gen_context(system_u:object_r:modules_conf_t,s0)
diff --git a/policy/modules/system/modutils.if b/policy/modules/system/modutils.if
index 350c450..2debedc 100644
--- a/policy/modules/system/modutils.if
+++ b/policy/modules/system/modutils.if
@@ -12,7 +12,7 @@
 #
 interface(`modutils_getattr_module_deps',`
 	gen_require(`
-		type modules_dep_t;
+		type modules_dep_t, modules_object_t;
 	')
 
 	getattr_files_pattern($1, modules_object_t, modules_dep_t)
@@ -39,6 +39,44 @@ interface(`modutils_read_module_deps',`
 
 ########################################
 ## <summary>
+##	Read the dependencies of kernel modules.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`modutils_delete_module_deps',`
+	gen_require(`
+		type modules_dep_t;
+	')
+
+	delete_files_pattern($1, modules_dep_t, modules_dep_t)
+')
+
+########################################
+## <summary>
+##	list the configuration options used when
+##	loading modules.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`modutils_list_module_config',`
+	gen_require(`
+		type modules_conf_t;
+	')
+
+	list_dirs_pattern($1, modules_conf_t, modules_conf_t)
+')
+
+########################################
+## <summary>
 ##	Read the configuration options used when
 ##	loading modules.
 ## </summary>
@@ -307,11 +345,18 @@ interface(`modutils_domtrans_update_mods',`
 #
 interface(`modutils_run_update_mods',`
 	gen_require(`
-		attribute_role update_modules_roles;
+		#attribute_role update_modules_roles;
+		type update_modules_t;
 	')
 
+	#modutils_domtrans_update_mods($1)
+	#roleattribute $2 update_modules_roles;
+
 	modutils_domtrans_update_mods($1)
-	roleattribute $2 update_modules_roles;
+	role $2 types update_modules_t;
+
+	modutils_run_insmod(update_modules_t, $2)
+
 ')
 
 ########################################
@@ -332,3 +377,25 @@ interface(`modutils_exec_update_mods',`
 	corecmd_search_bin($1)
 	can_exec($1, update_modules_exec_t)
 ')
+
+########################################
+## <summary>
+##	Transition to modutils named content
+## </summary>
+## <param name="domain">
+##	<summary>
+##      Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`modules_filetrans_named_content',`
+	gen_require(`
+		type modules_dep_t;
+		type modules_conf_t;
+	')
+
+	files_etc_filetrans($1, modules_conf_t, file, "modprobe.conf")
+	files_etc_filetrans($1, modules_conf_t, file, "modules.conf")
+	files_kernel_modules_filetrans($1, modules_dep_t, file, "modules.dep")
+	files_kernel_modules_filetrans($1, modules_dep_t, file, "modules.dep.bin")
+')
diff --git a/policy/modules/system/modutils.te b/policy/modules/system/modutils.te
index 560d5d9..86a7107 100644
--- a/policy/modules/system/modutils.te
+++ b/policy/modules/system/modutils.te
@@ -5,7 +5,7 @@ policy_module(modutils, 1.12.1)
 # Declarations
 #
 
-attribute_role update_modules_roles;
+#attribute_role update_modules_roles;
 
 type depmod_t;
 type depmod_exec_t;
@@ -16,11 +16,12 @@ type insmod_t;
 type insmod_exec_t;
 application_domain(insmod_t, insmod_exec_t)
 mls_file_write_all_levels(insmod_t)
+mls_process_write_down(insmod_t)
 role system_r types insmod_t;
 
 # module loading config
 type modules_conf_t;
-files_type(modules_conf_t)
+files_config_file(modules_conf_t)
 
 # module dependencies
 type modules_dep_t;
@@ -29,12 +30,16 @@ files_type(modules_dep_t)
 type update_modules_t;
 type update_modules_exec_t;
 init_system_domain(update_modules_t, update_modules_exec_t)
-roleattribute system_r update_modules_roles;
-role update_modules_roles types update_modules_t;
+#roleattribute system_r update_modules_roles;
+#role update_modules_roles types update_modules_t;
+role system_r types update_modules_t;
 
 type update_modules_tmp_t;
 files_tmp_file(update_modules_tmp_t)
 
+type insmod_tmpfs_t;
+files_tmpfs_file(insmod_tmpfs_t)
+
 ########################################
 #
 # depmod local policy
@@ -54,12 +59,15 @@ corecmd_search_bin(depmod_t)
 
 domain_use_interactive_fds(depmod_t)
 
+files_delete_kernel_modules(depmod_t)
 files_read_kernel_symbol_table(depmod_t)
 files_read_kernel_modules(depmod_t)
 files_read_etc_runtime_files(depmod_t)
 files_read_etc_files(depmod_t)
 files_read_usr_src_files(depmod_t)
 files_list_usr(depmod_t)
+files_append_var_files(depmod_t)
+files_read_boot_files(depmod_t)
 
 fs_getattr_xattr_fs(depmod_t)
 
@@ -69,10 +77,12 @@ init_use_fds(depmod_t)
 init_use_script_fds(depmod_t)
 init_use_script_ptys(depmod_t)
 
-userdom_use_user_terminals(depmod_t)
+userdom_use_inherited_user_terminals(depmod_t)
 # Read System.map from home directories.
 files_list_home(depmod_t)
 userdom_read_user_home_content_files(depmod_t)
+userdom_manage_user_tmp_files(depmod_t)
+userdom_home_reader(depmod_t)
 
 ifdef(`distro_ubuntu',`
 	optional_policy(`
@@ -80,12 +90,8 @@ ifdef(`distro_ubuntu',`
 	')
 ')
 
-tunable_policy(`use_nfs_home_dirs',`
-	fs_read_nfs_files(depmod_t)
-')
-
-tunable_policy(`use_samba_home_dirs',`
-	fs_read_cifs_files(depmod_t)
+optional_policy(`
+	bootloader_rw_tmp_files(insmod_t)
 ')
 
 optional_policy(`
@@ -94,7 +100,6 @@ optional_policy(`
 ')
 
 optional_policy(`
-	# Read System.map from home directories.
 	unconfined_domain(depmod_t)
 ')
 
@@ -103,11 +108,12 @@ optional_policy(`
 # insmod local policy
 #
 
-allow insmod_t self:capability { dac_override net_raw sys_nice sys_tty_config };
+allow insmod_t self:capability { dac_override mknod net_raw sys_nice sys_tty_config };
 allow insmod_t self:process { execmem sigchld sigkill sigstop signull signal };
 
 allow insmod_t self:udp_socket create_socket_perms;
 allow insmod_t self:rawip_socket create_socket_perms;
+allow insmod_t self:shm create_shm_perms;
 
 # Read module config and dependency information
 list_dirs_pattern(insmod_t, modules_conf_t, modules_conf_t)
@@ -117,7 +123,11 @@ read_files_pattern(insmod_t, modules_dep_t, modules_dep_t)
 
 can_exec(insmod_t, insmod_exec_t)
 
+manage_files_pattern(insmod_t,insmod_tmpfs_t,insmod_tmpfs_t)
+fs_tmpfs_filetrans(insmod_t,insmod_tmpfs_t,file)
+
 kernel_load_module(insmod_t)
+files_manage_kernel_modules(insmod_t)
 kernel_request_load_module(insmod_t)
 kernel_read_system_state(insmod_t)
 kernel_read_network_state(insmod_t)
@@ -125,6 +135,7 @@ kernel_write_proc_files(insmod_t)
 kernel_mount_debugfs(insmod_t)
 kernel_mount_kvmfs(insmod_t)
 kernel_read_debugfs(insmod_t)
+kernel_request_load_module(insmod_t)
 # Rules for /proc/sys/kernel/tainted
 kernel_read_kernel_sysctls(insmod_t)
 kernel_rw_kernel_sysctl(insmod_t)
@@ -142,6 +153,7 @@ dev_rw_agp(insmod_t)
 dev_read_sound(insmod_t)
 dev_write_sound(insmod_t)
 dev_rw_apm_bios(insmod_t)
+dev_create_generic_chr_files(insmod_t)
 
 domain_signal_all_domains(insmod_t)
 domain_use_interactive_fds(insmod_t)
@@ -151,20 +163,30 @@ files_read_etc_runtime_files(insmod_t)
 files_read_etc_files(insmod_t)
 files_read_usr_files(insmod_t)
 files_exec_etc_files(insmod_t)
+files_read_kernel_symbol_table(insmod_t)
 # for nscd:
 files_dontaudit_search_pids(insmod_t)
 # for when /var is not mounted early in the boot:
 files_dontaudit_search_isid_type_dirs(insmod_t)
 # for locking: (cjp: ????)
 files_write_kernel_modules(insmod_t)
+allow insmod_t modules_dep_t:file manage_file_perms;
+files_kernel_modules_filetrans(depmod_t, modules_dep_t, file)
 
 fs_getattr_xattr_fs(insmod_t)
 fs_dontaudit_use_tmpfs_chr_dev(insmod_t)
+fs_mount_rpc_pipefs(insmod_t)
+fs_search_rpc(insmod_t)
+
+auth_use_nsswitch(insmod_t)
 
 init_rw_initctl(insmod_t)
 init_use_fds(insmod_t)
 init_use_script_fds(insmod_t)
 init_use_script_ptys(insmod_t)
+init_spec_domtrans_script(insmod_t)
+init_rw_script_tmp_files(insmod_t)
+init_dontaudit_getattr_stream_socket(insmod_t)
 
 logging_send_syslog_msg(insmod_t)
 logging_search_logs(insmod_t)
@@ -173,8 +195,7 @@ miscfiles_read_localization(insmod_t)
 
 seutil_read_file_contexts(insmod_t)
 
-userdom_use_user_terminals(insmod_t)
-
+term_use_all_inherited_terms(insmod_t)
 userdom_dontaudit_search_user_home_dirs(insmod_t)
 
 kernel_domtrans_to(insmod_t, insmod_exec_t)
@@ -184,28 +205,28 @@ optional_policy(`
 ')
 
 optional_policy(`
-	firstboot_dontaudit_rw_pipes(insmod_t)
-	firstboot_dontaudit_rw_stream_sockets(insmod_t)
+	devicekit_use_fds_disk(insmod_t)
+	devicekit_dontaudit_read_pid_files(insmod_t)
 ')
 
 optional_policy(`
-	hal_write_log(insmod_t)
+	firstboot_dontaudit_leaks(insmod_t)
 ')
 
 optional_policy(`
-	hotplug_search_config(insmod_t)
+	firewallgui_dontaudit_rw_pipes(insmod_t)
 ')
 
 optional_policy(`
-	mount_domtrans(insmod_t)
+	hal_write_log(insmod_t)
 ')
 
 optional_policy(`
-	nis_use_ypbind(insmod_t)
+	hotplug_search_config(insmod_t)
 ')
 
 optional_policy(`
-	nscd_socket_use(insmod_t)
+	mount_domtrans(insmod_t)
 ')
 
 optional_policy(`
@@ -225,6 +246,7 @@ optional_policy(`
 
 optional_policy(`
 	rpm_rw_pipes(insmod_t)
+	rpm_manage_script_tmp_files(insmod_t)
 ')
 
 optional_policy(`
@@ -233,6 +255,10 @@ optional_policy(`
 ')
 
 optional_policy(`
+	virt_dontaudit_write_pipes(insmod_t)
+')
+
+optional_policy(`
 	# cjp: why is this needed:
 	dev_rw_xserver_misc(insmod_t)
 
@@ -293,9 +319,9 @@ logging_send_syslog_msg(update_modules_t)
 
 miscfiles_read_localization(update_modules_t)
 
-modutils_run_insmod(update_modules_t, update_modules_roles)
+#modutils_run_insmod(update_modules_t, update_modules_roles)
 
-userdom_use_user_terminals(update_modules_t)
+userdom_use_inherited_user_terminals(update_modules_t)
 userdom_dontaudit_search_user_home_dirs(update_modules_t)
 
 ifdef(`distro_gentoo',`
diff --git a/policy/modules/system/mount.fc b/policy/modules/system/mount.fc
index 72c746e..fa210cd 100644
--- a/policy/modules/system/mount.fc
+++ b/policy/modules/system/mount.fc
@@ -1,4 +1,21 @@
+/bin/fusermount    		--      gen_context(system_u:object_r:fusermount_exec_t,s0)
 /bin/mount.*			--	gen_context(system_u:object_r:mount_exec_t,s0)
 /bin/umount.*			--	gen_context(system_u:object_r:mount_exec_t,s0)
 
-/usr/bin/fusermount		--	gen_context(system_u:object_r:mount_exec_t,s0)
+/dev/\.mount(/.*)?			gen_context(system_u:object_r:mount_var_run_t,s0)
+/run/mount(/.*)?			gen_context(system_u:object_r:mount_var_run_t,s0)
+
+/sbin/mount.*			--	gen_context(system_u:object_r:mount_exec_t,s0)
+/sbin/umount.*			--	gen_context(system_u:object_r:mount_exec_t,s0)
+
+/usr/bin/fusermount		--	gen_context(system_u:object_r:fusermount_exec_t,s0)
+/usr/bin/mount.*			--	gen_context(system_u:object_r:mount_exec_t,s0)
+/usr/bin/umount.*			--	gen_context(system_u:object_r:mount_exec_t,s0)
+
+/usr/sbin/mount.*			--	gen_context(system_u:object_r:mount_exec_t,s0)
+/usr/sbin/umount.*			--	gen_context(system_u:object_r:mount_exec_t,s0)
+/usr/sbin/showmount		--  gen_context(system_u:object_r:showmount_exec_t,s0)
+
+/var/cache/davfs2(/.*)?		gen_context(system_u:object_r:mount_var_run_t,s0)
+/var/run/davfs2(/.*)?		gen_context(system_u:object_r:mount_var_run_t,s0)
+/var/run/mount(/.*)?		gen_context(system_u:object_r:mount_var_run_t,s0)
diff --git a/policy/modules/system/mount.if b/policy/modules/system/mount.if
index 4584457..4881d86 100644
--- a/policy/modules/system/mount.if
+++ b/policy/modules/system/mount.if
@@ -16,6 +16,12 @@ interface(`mount_domtrans',`
 	')
 
 	domtrans_pattern($1, mount_exec_t, mount_t)
+	mount_domtrans_fusermount($1)
+	
+	allow $1 mount_t:fd use;
+	ps_process_pattern(mount_t, $1)
+
+	allow mount_t $1:unix_stream_socket { read write };
 ')
 
 ########################################
@@ -38,11 +44,84 @@ interface(`mount_domtrans',`
 #
 interface(`mount_run',`
 	gen_require(`
-		attribute_role mount_roles;
+		#attribute_role mount_roles;
+		type mount_t;
 	')
 
+	#mount_domtrans($1)
+	#roleattribute $2 mount_roles;
+
 	mount_domtrans($1)
-	roleattribute $2 mount_roles;
+        role $2 types mount_t;
+
+        optional_policy(`
+                fstools_run(mount_t, $2)
+        ')
+
+	optional_policy(`
+                lvm_run(mount_t, $2)
+        ')
+
+        optional_policy(`
+                modutils_run_insmod(mount_t, $2)
+        ')
+
+        optional_policy(`
+                rpc_run_rpcd(mount_t, $2)
+        ')
+
+        optional_policy(`
+                samba_run_smbmount(mount_t, $2)
+        ')
+
+')
+
+########################################
+## <summary>
+##	Execute fusermount in the mount domain, and
+##	allow the specified role the mount domain,
+##	and use the caller's terminal.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed the mount domain.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`mount_run_fusermount',`
+	gen_require(`
+		type mount_t;
+	')
+
+	mount_domtrans_fusermount($1)
+	role $2 types mount_t;
+
+	fstools_run(mount_t, $2)
+')
+
+########################################
+## <summary>
+##	Read mount PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`mount_read_pid_files',`
+	gen_require(`
+		type mount_var_run_t;
+	')
+
+	allow $1 mount_var_run_t:file read_file_perms;
+	files_search_pids($1)
 ')
 
 ########################################
@@ -91,7 +170,7 @@ interface(`mount_signal',`
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	The type of the process performing this action.
+##	Domain allowed access.
 ##	</summary>
 ## </param>
 #
@@ -131,45 +210,119 @@ interface(`mount_send_nfs_client_request',`
 
 ########################################
 ## <summary>
-##	Execute mount in the unconfined mount domain.
+##	Read the mount tmp directory 
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed to transition.
+##	Domain allowed access.
 ##	</summary>
 ## </param>
 #
-interface(`mount_domtrans_unconfined',`
+interface(`mount_list_tmp',`
 	gen_require(`
-		type unconfined_mount_t, mount_exec_t;
+		type mount_tmp_t;
 	')
 
-	domtrans_pattern($1, mount_exec_t, unconfined_mount_t)
+	allow $1 mount_tmp_t:dir list_dir_perms;
 ')
 
 ########################################
 ## <summary>
-##	Execute mount in the unconfined mount domain, and
-##	allow the specified role the unconfined mount domain,
-##	and use the caller's terminal.
+##	Execute fusermount in the mount domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed to transition.
+##	Domain allowed access.
 ##	</summary>
 ## </param>
-## <param name="role">
+#
+interface(`mount_domtrans_fusermount',`
+	gen_require(`
+		type mount_t, fusermount_exec_t;
+	')
+
+	domtrans_pattern($1, fusermount_exec_t, mount_t)
+	ps_process_pattern(mount_t, $1)
+
+	allow mount_t $1:unix_stream_socket { read write };
+	allow $1 mount_t:fd use;
+')
+
+########################################
+## <summary>
+##	Execute fusermount.
+## </summary>
+## <param name="domain">
 ##	<summary>
-##	Role allowed access.
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`mount_exec_fusermount',`
+	gen_require(`
+		type fusermount_exec_t;
+	')
+
+	can_exec($1, fusermount_exec_t)
+')
+
+########################################
+## <summary>
+##	dontaudit Execute fusermount.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
 ##	</summary>
 ## </param>
-## <rolecap/>
 #
-interface(`mount_run_unconfined',`
+interface(`mount_dontaudit_exec_fusermount',`
 	gen_require(`
-		type unconfined_mount_t;
+		type fusermount_exec_t;
 	')
 
-	mount_domtrans_unconfined($1)
-	role $2 types unconfined_mount_t;
+	dontaudit $1 fusermount_exec_t:file exec_file_perms;
+')
+
+######################################
+## <summary>
+##  Execute a domain transition to run showmount.
+## </summary>
+## <param name="domain">
+## <summary>
+##  Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`mount_domtrans_showmount',`
+    gen_require(`
+        type showmount_t, showmount_exec_t;
+    ')
+
+    domtrans_pattern($1, showmount_exec_t, showmount_t)
+')
+
+######################################
+## <summary>
+##  Execute showmount in the showmount domain, and
+##  allow the specified role the showmount domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access
+##  </summary>
+## </param>
+## <param name="role">
+##  <summary>
+##  The role to be allowed the showmount domain.
+##  </summary>
+## </param>
+#
+interface(`mount_run_showmount',`
+    gen_require(`
+        type showmount_t;
+    ')
+
+    mount_domtrans_showmount($1)
+    role $2 types showmount_t;
 ')
diff --git a/policy/modules/system/mount.te b/policy/modules/system/mount.te
index 6d3b14b..3eddba2 100644
--- a/policy/modules/system/mount.te
+++ b/policy/modules/system/mount.te
@@ -10,35 +10,52 @@ policy_module(mount, 1.14.2)
 ## Allow the mount command to mount any directory or file.
 ## </p>
 ## </desc>
-gen_tunable(allow_mount_anyfile, false)
+gen_tunable(mount_anyfile, false)
 
-attribute_role mount_roles;
-roleattribute system_r mount_roles;
+#attribute_role mount_roles;
+#roleattribute system_r mount_roles;
 
 type mount_t;
 type mount_exec_t;
 init_system_domain(mount_t, mount_exec_t)
-role mount_roles types mount_t;
+#role mount_roles types mount_t;
+role system_r types mount_t;
+
+type fusermount_exec_t;
+domain_entry_file(mount_t, fusermount_exec_t)
+
+typealias mount_t alias mount_ntfs_t;
+typealias mount_exec_t alias mount_ntfs_exec_t;
 
 type mount_loopback_t; # customizable
 files_type(mount_loopback_t)
+typealias mount_loopback_t alias mount_loop_t;
 
 type mount_tmp_t;
 files_tmp_file(mount_tmp_t)
 
-# causes problems with interfaces when
-# this is optionally declared in monolithic
-# policy--duplicate type declaration
-type unconfined_mount_t;
-application_domain(unconfined_mount_t, mount_exec_t)
+type mount_var_run_t;
+files_pid_file(mount_var_run_t)
+dev_associate(mount_var_run_t)
+
+# showmount - show mount information for an NFS server
+
+type showmount_t;
+type showmount_exec_t;
+application_domain(showmount_t, showmount_exec_t)
+role system_r types showmount_t;
 
 ########################################
 #
 # mount local policy
 #
 
-# setuid/setgid needed to mount cifs
-allow mount_t self:capability { ipc_lock sys_rawio sys_admin dac_override chown sys_tty_config setuid setgid };
+# setuid/setgid needed to mount cifs 
+allow mount_t self:capability { fsetid fowner ipc_lock setpcap sys_rawio sys_resource sys_admin dac_override dac_read_search chown sys_tty_config setuid setgid sys_nice };
+allow mount_t self:process { getcap getsched setsched setcap setrlimit signal };
+allow mount_t self:fifo_file rw_fifo_file_perms;
+allow mount_t self:unix_stream_socket create_stream_socket_perms;
+allow mount_t self:unix_dgram_socket create_socket_perms; 
 
 allow mount_t mount_loopback_t:file read_file_perms;
 
@@ -49,9 +66,24 @@ can_exec(mount_t, mount_exec_t)
 
 files_tmp_filetrans(mount_t, mount_tmp_t, { file dir })
 
+manage_dirs_pattern(mount_t,mount_var_run_t,mount_var_run_t)
+manage_files_pattern(mount_t,mount_var_run_t,mount_var_run_t)
+files_pid_filetrans(mount_t,mount_var_run_t,dir)
+files_var_filetrans(mount_t,mount_var_run_t,dir)
+dev_filetrans(mount_t, mount_var_run_t, dir)
+
+# In order to mount reiserfs_t
+kernel_dontaudit_getattr_core_if(mount_t)
+kernel_list_unlabeled(mount_t)
+kernel_mount_unlabeled(mount_t)
+kernel_unmount_unlabeled(mount_t)
 kernel_read_system_state(mount_t)
+kernel_read_network_state(mount_t)
 kernel_read_kernel_sysctls(mount_t)
-kernel_dontaudit_getattr_core_if(mount_t)
+kernel_manage_debugfs(mount_t)
+kernel_setsched(mount_t)
+kernel_use_fds(mount_t)
+kernel_request_load_module(mount_t)
 kernel_dontaudit_write_debugfs_dirs(mount_t)
 kernel_dontaudit_write_proc_dirs(mount_t)
 # To load binfmt_misc kernel module
@@ -60,31 +92,46 @@ kernel_request_load_module(mount_t)
 # required for mount.smbfs
 corecmd_exec_bin(mount_t)
 
+dev_getattr_generic_blk_files(mount_t)
 dev_getattr_all_blk_files(mount_t)
 dev_list_all_dev_nodes(mount_t)
+dev_read_usbfs(mount_t)
+dev_read_rand(mount_t)
+dev_read_urand(mount_t)
 dev_read_sysfs(mount_t)
 dev_dontaudit_write_sysfs_dirs(mount_t)
 dev_rw_lvm_control(mount_t)
 dev_dontaudit_getattr_all_chr_files(mount_t)
 dev_dontaudit_getattr_memory_dev(mount_t)
 dev_getattr_sound_dev(mount_t)
+
+ifdef(`hide_broken_symptoms',`
+	dev_rw_generic_blk_files(mount_t)
+')
+
 # Early devtmpfs, before udev relabel
 dev_dontaudit_rw_generic_chr_files(mount_t)
 
 domain_use_interactive_fds(mount_t)
+domain_read_all_domains_state(mount_t)
 
 files_search_all(mount_t)
 files_read_etc_files(mount_t)
+files_read_etc_runtime_files(mount_t)
 files_manage_etc_runtime_files(mount_t)
 files_etc_filetrans_etc_runtime(mount_t, file)
+# for when /etc/mtab loses its type
+files_delete_etc_files(mount_t)
 files_mounton_all_mountpoints(mount_t)
+files_setattr_all_mountpoints(mount_t)
+# ntfs-3g checks whether the mountpoint is writable before mounting
+files_write_all_mountpoints(mount_t)
 files_unmount_rootfs(mount_t)
+
 # These rules need to be generalized.  Only admin, initrc should have it:
-files_relabelto_all_file_type_fs(mount_t)
+files_relabel_all_file_type_fs(mount_t)
 files_mount_all_file_type_fs(mount_t)
 files_unmount_all_file_type_fs(mount_t)
-# for when /etc/mtab loses its type
-# cjp: this seems wrong, the type should probably be etc
 files_read_isid_type_files(mount_t)
 # For reading cert files
 files_read_usr_files(mount_t)
@@ -92,28 +139,39 @@ files_list_mnt(mount_t)
 files_dontaudit_write_all_mountpoints(mount_t)
 files_dontaudit_setattr_all_mountpoints(mount_t)
 
-fs_getattr_xattr_fs(mount_t)
-fs_getattr_cifs(mount_t)
+fs_list_all(mount_t)
+fs_getattr_all_fs(mount_t)
 fs_mount_all_fs(mount_t)
 fs_unmount_all_fs(mount_t)
 fs_remount_all_fs(mount_t)
 fs_relabelfrom_all_fs(mount_t)
-fs_list_auto_mountpoints(mount_t)
+fs_rw_anon_inodefs_files(mount_t)
 fs_rw_tmpfs_chr_files(mount_t)
+fs_rw_nfsd_fs(mount_t)
+fs_rw_removable_blk_files(mount_t)
+#fs_manage_tmpfs_dirs(mount_t)
 fs_read_tmpfs_symlinks(mount_t)
+fs_read_fusefs_files(mount_t)
+fs_manage_nfs_dirs(mount_t)
+fs_read_nfs_symlinks(mount_t)
+fs_manage_cgroup_dirs(mount_t)
+fs_manage_cgroup_files(mount_t)
 fs_dontaudit_write_tmpfs_dirs(mount_t)
 
-mls_file_read_all_levels(mount_t)
-mls_file_write_all_levels(mount_t)
+mls_file_read_to_clearance(mount_t)
+mls_file_write_to_clearance(mount_t)
+mls_process_write_to_clearance(mount_t)
 
 selinux_get_enforce_mode(mount_t)
+selinux_mounton_fs(mount_t)
 
 storage_raw_read_fixed_disk(mount_t)
 storage_raw_write_fixed_disk(mount_t)
 storage_raw_read_removable_device(mount_t)
 storage_raw_write_removable_device(mount_t)
+storage_rw_fuse(mount_t)
 
-term_use_all_terms(mount_t)
+term_use_all_inherited_terms(mount_t)
 term_dontaudit_manage_pty_dirs(mount_t)
 
 auth_use_nsswitch(mount_t)
@@ -121,6 +179,8 @@ auth_use_nsswitch(mount_t)
 init_use_fds(mount_t)
 init_use_script_ptys(mount_t)
 init_dontaudit_getattr_initctl(mount_t)
+init_stream_connect_script(mount_t)
+init_rw_script_stream_sockets(mount_t)
 
 logging_send_syslog_msg(mount_t)
 
@@ -131,6 +191,8 @@ sysnet_use_portmap(mount_t)
 seutil_read_config(mount_t)
 
 userdom_use_all_users_fds(mount_t)
+userdom_manage_user_home_content_dirs(mount_t)
+userdom_read_user_home_content_symlinks(mount_t)
 
 ifdef(`distro_redhat',`
 	optional_policy(`
@@ -146,26 +208,28 @@ ifdef(`distro_ubuntu',`
 	')
 ')
 
-tunable_policy(`allow_mount_anyfile',`
-	files_list_non_auth_dirs(mount_t)
-	files_read_non_auth_files(mount_t)
+corecmd_exec_shell(mount_t)
+
+tunable_policy(`mount_anyfile',`
+	files_read_non_security_files(mount_t)
 	files_mounton_non_security(mount_t)
+	files_rw_all_inherited_files(mount_t)
 ')
 
 optional_policy(`
 	# for nfs
 	corenet_all_recvfrom_unlabeled(mount_t)
 	corenet_all_recvfrom_netlabel(mount_t)
-	corenet_tcp_sendrecv_all_if(mount_t)
-	corenet_raw_sendrecv_all_if(mount_t)
-	corenet_udp_sendrecv_all_if(mount_t)
-	corenet_tcp_sendrecv_all_nodes(mount_t)
-	corenet_raw_sendrecv_all_nodes(mount_t)
-	corenet_udp_sendrecv_all_nodes(mount_t)
+	corenet_tcp_sendrecv_generic_if(mount_t)
+	corenet_raw_sendrecv_generic_if(mount_t)
+	corenet_udp_sendrecv_generic_if(mount_t)
+	corenet_tcp_sendrecv_generic_node(mount_t)
+	corenet_raw_sendrecv_generic_node(mount_t)
+	corenet_udp_sendrecv_generic_node(mount_t)
 	corenet_tcp_sendrecv_all_ports(mount_t)
 	corenet_udp_sendrecv_all_ports(mount_t)
-	corenet_tcp_bind_all_nodes(mount_t)
-	corenet_udp_bind_all_nodes(mount_t)
+	corenet_tcp_bind_generic_node(mount_t)
+	corenet_udp_bind_generic_node(mount_t)
 	corenet_tcp_bind_generic_port(mount_t)
 	corenet_udp_bind_generic_port(mount_t)
 	corenet_tcp_bind_reserved_port(mount_t)
@@ -179,6 +243,8 @@ optional_policy(`
 	fs_search_rpc(mount_t)
 
 	rpc_stub(mount_t)
+
+	rpc_domtrans_rpcd(mount_t)
 ')
 
 optional_policy(`
@@ -186,6 +252,28 @@ optional_policy(`
 ')
 
 optional_policy(`
+	cron_system_entry(mount_t, mount_exec_t)
+')
+
+optional_policy(`
+	devicekit_read_state_power(mount_t)
+')
+
+optional_policy(`
+	dbus_system_bus_client(mount_t)
+
+	optional_policy(`
+		hal_dbus_chat(mount_t)
+	')
+')
+
+optional_policy(`
+	hal_write_log(mount_t)
+	hal_use_fds(mount_t)
+	hal_dontaudit_rw_pipes(mount_t)
+')
+
+optional_policy(`
 	ifdef(`hide_broken_symptoms',`
 		# for a bug in the X server
 		rhgb_dontaudit_rw_stream_sockets(mount_t)
@@ -193,21 +281,96 @@ optional_policy(`
 	')
 ')
 
+optional_policy(`
+	livecd_rw_tmp_files(mount_t)
+')
+
+# Needed for mount crypt https://bugzilla.redhat.com/show_bug.cgi?id=418711
+optional_policy(`
+#	lvm_run(mount_t, mount_roles)
+	lvm_domtrans(mount_t)
+')
+
+optional_policy(`
+	#modutils_run_insmod(mount_t, mount_roles)
+	modutils_domtrans_insmod(mount_t)
+	modutils_read_module_deps(mount_t)
+')
+
+optional_policy(`
+	fstools_domtrans(mount_t)
+	#fstools_run(mount_t, mount_roles)
+')
+
+optional_policy(`
+	rhcs_stream_connect_gfs_controld(mount_t)
+')
+
+#optional_policy(`
+#	rpc_run_rpcd(mount_t, mount_roles)
+#')
+
 # for kernel package installation
 optional_policy(`
 	rpm_rw_pipes(mount_t)
+	rpm_dontaudit_leaks(mount_t)
 ')
 
 optional_policy(`
-	samba_run_smbmount(mount_t, mount_roles)
+	samba_read_config(mount_t)
+	samba_domtrans_smbmount(mount_t)
+	#samba_run_smbmount(mount_t, mount_roles)
 ')
 
-########################################
-#
-# Unconfined mount local policy
-#
+optional_policy(`
+	ssh_exec(mount_t)
+')
 
 optional_policy(`
-	files_etc_filetrans_etc_runtime(unconfined_mount_t, file)
-	unconfined_domain(unconfined_mount_t)
+	usbmuxd_stream_connect(mount_t)
 ')
+
+optional_policy(`
+	userhelper_exec_console(mount_t)
+')
+
+optional_policy(`
+	virt_read_blk_images(mount_t)
+')
+
+optional_policy(`
+	vmware_exec_host(mount_t)
+')
+
+######################################
+#
+# showmount local policy
+#
+
+allow showmount_t self:tcp_socket create_stream_socket_perms;
+allow showmount_t self:udp_socket create_socket_perms;
+
+kernel_read_system_state(showmount_t)
+
+corenet_all_recvfrom_unlabeled(showmount_t)
+corenet_all_recvfrom_netlabel(showmount_t)
+corenet_tcp_sendrecv_generic_if(showmount_t)
+corenet_udp_sendrecv_generic_if(showmount_t)
+corenet_tcp_sendrecv_generic_node(showmount_t)
+corenet_udp_sendrecv_generic_node(showmount_t)
+corenet_tcp_sendrecv_all_ports(showmount_t)
+corenet_udp_sendrecv_all_ports(showmount_t)
+corenet_tcp_bind_generic_node(showmount_t)
+corenet_udp_bind_generic_node(showmount_t)
+corenet_tcp_bind_all_rpc_ports(showmount_t)
+corenet_udp_bind_all_rpc_ports(showmount_t)
+corenet_tcp_connect_all_ports(showmount_t)
+
+files_read_etc_files(showmount_t)
+files_read_etc_runtime_files(showmount_t)
+
+miscfiles_read_localization(showmount_t)
+
+sysnet_dns_name_resolve(showmount_t)
+
+userdom_use_inherited_user_terminals(showmount_t)
diff --git a/policy/modules/system/netlabel.fc b/policy/modules/system/netlabel.fc
index b263a8a..9348c8c 100644
--- a/policy/modules/system/netlabel.fc
+++ b/policy/modules/system/netlabel.fc
@@ -1 +1,3 @@
 /sbin/netlabelctl	--	gen_context(system_u:object_r:netlabel_mgmt_exec_t,s0)
+
+/usr/sbin/netlabelctl	--	gen_context(system_u:object_r:netlabel_mgmt_exec_t,s0)
diff --git a/policy/modules/system/netlabel.te b/policy/modules/system/netlabel.te
index cbbda4a..8dcc346 100644
--- a/policy/modules/system/netlabel.te
+++ b/policy/modules/system/netlabel.te
@@ -23,6 +23,11 @@ kernel_read_network_state(netlabel_mgmt_t)
 
 files_read_etc_files(netlabel_mgmt_t)
 
+term_use_all_inherited_terms(netlabel_mgmt_t) 
+
 seutil_use_newrole_fds(netlabel_mgmt_t)
 
-userdom_use_user_terminals(netlabel_mgmt_t)
+term_use_all_terms(netlabel_mgmt_t)
+
+userdom_use_inherited_user_terminals(netlabel_mgmt_t)
+
diff --git a/policy/modules/system/selinuxutil.fc b/policy/modules/system/selinuxutil.fc
index d43f3b1..5858c5f 100644
--- a/policy/modules/system/selinuxutil.fc
+++ b/policy/modules/system/selinuxutil.fc
@@ -6,13 +6,13 @@
 /etc/selinux(/.*)?			gen_context(system_u:object_r:selinux_config_t,s0)
 /etc/selinux/([^/]*/)?contexts(/.*)?	gen_context(system_u:object_r:default_context_t,s0)
 /etc/selinux/([^/]*/)?contexts/files(/.*)? gen_context(system_u:object_r:file_context_t,s0)
-/etc/selinux/([^/]*/)?policy(/.*)?	gen_context(system_u:object_r:policy_config_t,mls_systemhigh)
+/etc/selinux/([^/]*/)?policy(/.*)?	gen_context(system_u:object_r:semanage_store_t,s0)
 /etc/selinux/([^/]*/)?setrans\.conf --	gen_context(system_u:object_r:selinux_config_t,mls_systemhigh)
-/etc/selinux/([^/]*/)?seusers	--	gen_context(system_u:object_r:selinux_config_t,mls_systemhigh)
+/etc/selinux/([^/]*/)?seusers	--	gen_context(system_u:object_r:selinux_config_t,s0)
 /etc/selinux/([^/]*/)?modules/(active|tmp|previous)(/.*)? gen_context(system_u:object_r:semanage_store_t,s0)
 /etc/selinux/([^/]*/)?modules/semanage\.read\.LOCK -- gen_context(system_u:object_r:semanage_read_lock_t,s0)
 /etc/selinux/([^/]*/)?modules/semanage\.trans\.LOCK -- gen_context(system_u:object_r:semanage_trans_lock_t,s0)
-/etc/selinux/([^/]*/)?users(/.*)? --	gen_context(system_u:object_r:selinux_config_t,mls_systemhigh)
+/etc/selinux/([^/]*/)?users(/.*)? --	gen_context(system_u:object_r:selinux_config_t,s0)
 
 #
 # /root
@@ -35,12 +35,14 @@
 /usr/lib/selinux(/.*)?			gen_context(system_u:object_r:policy_src_t,s0)
 
 /usr/sbin/load_policy		--	gen_context(system_u:object_r:load_policy_exec_t,s0)
+/usr/sbin/restorecon		--	gen_context(system_u:object_r:setfiles_exec_t,s0)
 /usr/sbin/restorecond		--	gen_context(system_u:object_r:restorecond_exec_t,s0)
 /usr/sbin/run_init		--	gen_context(system_u:object_r:run_init_exec_t,s0)
 /usr/sbin/setfiles.*		--	gen_context(system_u:object_r:setfiles_exec_t,s0)
-/usr/sbin/setsebool		--	gen_context(system_u:object_r:semanage_exec_t,s0)
+/usr/sbin/setsebool		--	gen_context(system_u:object_r:setsebool_exec_t,s0)
 /usr/sbin/semanage		--	gen_context(system_u:object_r:semanage_exec_t,s0)
 /usr/sbin/semodule		--	gen_context(system_u:object_r:semanage_exec_t,s0)
+/usr/share/system-config-selinux/system-config-selinux-dbus\.py		--	gen_context(system_u:object_r:semanage_exec_t,s0)
 
 #
 # /var/lib
@@ -51,3 +53,7 @@
 # /var/run
 #
 /var/run/restorecond\.pid	--	gen_context(system_u:object_r:restorecond_var_run_t,s0)
+
+
+/etc/share/selinux/targeted(/.*)?	gen_context(system_u:object_r:semanage_store_t,s0)
+/etc/share/selinux/mls(/.*)?		gen_context(system_u:object_r:semanage_store_t,s0)
diff --git a/policy/modules/system/selinuxutil.if b/policy/modules/system/selinuxutil.if
index 3822072..a783cb1 100644
--- a/policy/modules/system/selinuxutil.if
+++ b/policy/modules/system/selinuxutil.if
@@ -192,11 +192,22 @@ interface(`seutil_domtrans_newrole',`
 #
 interface(`seutil_run_newrole',`
 	gen_require(`
-		attribute_role newrole_roles;
+		type newrole_t;
+		#attribute_role newrole_roles;
 	')
 
+	#seutil_domtrans_newrole($1)
+	#roleattribute $2 newrole_roles;
+
 	seutil_domtrans_newrole($1)
-	roleattribute $2 newrole_roles;
+        role $2 types newrole_t;
+
+        auth_run_upd_passwd(newrole_t, $2)
+
+        optional_policy(`
+                namespace_init_run(newrole_t, $2)
+        ')
+
 ')
 
 ########################################
@@ -359,6 +370,27 @@ interface(`seutil_exec_restorecon',`
 
 ########################################
 ## <summary>
+##	Execute restorecond in the caller domain. 
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`seutil_exec_restorecond',`
+	gen_require(`
+		type restorecond_exec_t;
+	')
+
+	files_search_usr($1)
+	corecmd_search_bin($1)
+	can_exec($1, restorecond_exec_t)
+')
+
+########################################
+## <summary>
 ##	Execute run_init in the run_init domain.
 ## </summary>
 ## <param name="domain">
@@ -425,11 +457,20 @@ interface(`seutil_init_script_domtrans_runinit',`
 #
 interface(`seutil_run_runinit',`
 	gen_require(`
-		attribute_role run_init_roles;
+		#attribute_role run_init_roles;
+		type run_init_t;
+                role system_r;
 	')
 
-	seutil_domtrans_runinit($1)
-	roleattribute $2 run_init_roles;
+	#seutil_domtrans_runinit($1)
+	#roleattribute $2 run_init_roles;
+
+	        auth_run_chk_passwd(run_init_t, $2)
+        seutil_domtrans_runinit($1)
+        role $2 types run_init_t;
+
+        allow $2 system_r;
+
 ')
 
 ########################################
@@ -461,11 +502,19 @@ interface(`seutil_run_runinit',`
 #
 interface(`seutil_init_script_run_runinit',`
 	gen_require(`
-		attribute_role run_init_roles;
+		#attribute_role run_init_roles;
+		type run_init_t;
+                role system_r;
 	')
 
-	seutil_init_script_domtrans_runinit($1)
-	roleattribute $2 run_init_roles;
+	#seutil_init_script_domtrans_runinit($1)
+	#roleattribute $2 run_init_roles;
+	        auth_run_chk_passwd(run_init_t, $2)
+        seutil_init_script_domtrans_runinit($1)
+        role $2 types run_init_t;
+
+        allow $2 system_r;
+
 ')
 
 ########################################
@@ -535,6 +584,53 @@ interface(`seutil_run_setfiles',`
 
 ########################################
 ## <summary>
+##	Execute setfiles in the setfiles domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`seutil_domtrans_setfiles_mac',`
+	gen_require(`
+		type setfiles_mac_t, setfiles_exec_t;
+	')
+
+	files_search_usr($1)
+	corecmd_search_bin($1)
+	domtrans_pattern($1, setfiles_exec_t, setfiles_mac_t)
+')
+
+########################################
+## <summary>
+##	Execute setfiles in the setfiles_mac domain, and
+##	allow the specified role the setfiles_mac domain,
+##	and use the caller's terminal.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed the setfiles_mac domain.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`seutil_run_setfiles_mac',`
+	gen_require(`
+		type setfiles_mac_t;
+	')
+
+	seutil_domtrans_setfiles_mac($1)
+	role $2 types setfiles_mac_t;
+')
+
+########################################
+## <summary>
 ##	Execute setfiles in the caller domain.
 ## </summary>
 ## <param name="domain">
@@ -680,6 +776,7 @@ interface(`seutil_manage_config',`
 	')
 
 	files_search_etc($1)
+	manage_dirs_pattern($1, selinux_config_t, selinux_config_t)
 	manage_files_pattern($1, selinux_config_t, selinux_config_t)
 	read_lnk_files_pattern($1, selinux_config_t, selinux_config_t)
 ')
@@ -746,6 +843,29 @@ interface(`seutil_read_default_contexts',`
 	read_files_pattern($1, default_context_t, default_context_t)
 ')
 
+#######################################
+## <summary>
+##  Read and write the default_contexts files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <rolecap/>
+#
+interface(`seutil_rw_default_contexts',`
+    gen_require(`
+        type default_context_t;
+		type selinux_config_t;
+    ')
+
+    files_search_etc($1)
+    allow $1 selinux_config_t:dir list_dir_perms;
+	allow $1 default_context_t:dir list_dir_perms;
+    rw_files_pattern($1, default_context_t, default_context_t)
+')
+
 ########################################
 ## <summary>
 ##	Create, read, write, and delete the default_contexts files.
@@ -999,6 +1119,26 @@ interface(`seutil_domtrans_semanage',`
 
 ########################################
 ## <summary>
+##	Execute a domain transition to run setsebool.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+#
+interface(`seutil_domtrans_setsebool',`
+	gen_require(`
+		type setsebool_t, setsebool_exec_t;
+	')
+
+	files_search_usr($1)
+	corecmd_search_bin($1)
+	domtrans_pattern($1, setsebool_exec_t, setsebool_t)
+')
+
+########################################
+## <summary>
 ##	Execute semanage in the semanage domain, and
 ##	allow the specified role the semanage domain,
 ##	and use the caller's terminal.
@@ -1017,11 +1157,66 @@ interface(`seutil_domtrans_semanage',`
 #
 interface(`seutil_run_semanage',`
 	gen_require(`
-		attribute_role semanage_roles;
+		#attribute_role semanage_roles;
+		type semanage_t;
 	')
 
+	#seutil_domtrans_semanage($1)
+	#roleattribute $2 semanage_roles;
+
 	seutil_domtrans_semanage($1)
-	roleattribute $2 semanage_roles;
+        seutil_run_setfiles(semanage_t, $2)
+        seutil_run_loadpolicy(semanage_t, $2)
+        role $2 types semanage_t;
+
+')
+
+########################################
+## <summary>
+##	Execute setsebool in the semanage domain, and
+##	allow the specified role the semanage domain,
+##	and use the caller's terminal.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed the setsebool domain.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`seutil_run_setsebool',`
+	gen_require(`
+		type semanage_t;
+	')
+
+	seutil_domtrans_setsebool($1)
+	role $2 types setsebool_t;
+')
+
+########################################
+## <summary>
+##	Full management of the semanage
+##	module store.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`seutil_read_module_store',`
+	gen_require(`
+		type selinux_config_t, semanage_store_t;
+	')
+
+	files_search_etc($1)
+	list_dirs_pattern($1, selinux_config_t, semanage_store_t)
+	read_files_pattern($1, semanage_store_t, semanage_store_t)
 ')
 
 ########################################
@@ -1137,3 +1332,107 @@ interface(`seutil_dontaudit_libselinux_linked',`
 	selinux_dontaudit_get_fs_mount($1)
 	seutil_dontaudit_read_config($1)
 ')
+
+#######################################
+## <summary>
+##	All rules necessary to run semanage command
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`seutil_semanage_policy',`
+	gen_require(`
+		type semanage_tmp_t;
+		type policy_config_t;
+	')
+	allow $1 self:capability { dac_override sys_resource };
+	dontaudit $1 self:capability sys_tty_config;
+	allow $1 self:process signal;
+	allow $1 self:unix_stream_socket create_stream_socket_perms;
+	allow $1 self:unix_dgram_socket create_socket_perms;
+	logging_send_audit_msgs($1)
+
+	# Running genhomedircon requires this for finding all users
+	auth_use_nsswitch($1)
+
+	allow $1 policy_config_t:file { read write };
+
+	allow $1 semanage_tmp_t:dir manage_dir_perms;
+	allow $1 semanage_tmp_t:file manage_file_perms;
+	files_tmp_filetrans($1, semanage_tmp_t, { file dir })
+
+	kernel_read_system_state($1)
+	kernel_read_kernel_sysctls($1)
+
+	corecmd_exec_bin($1)
+	corecmd_exec_shell($1)
+
+	dev_read_urand($1)
+
+	domain_use_interactive_fds($1)
+
+	files_read_etc_files($1)
+	files_read_etc_runtime_files($1)
+	files_read_usr_files($1)
+	files_list_pids($1)
+	fs_list_inotifyfs($1)
+	fs_getattr_all_fs($1)
+
+	mls_file_write_all_levels($1)
+	mls_file_read_all_levels($1)
+
+	selinux_getattr_fs($1)
+	selinux_validate_context($1)
+	selinux_get_enforce_mode($1)
+
+	term_use_all_inherited_terms($1)
+
+	locallogin_use_fds($1)
+
+	logging_send_syslog_msg($1)
+
+	miscfiles_read_localization($1)
+
+	seutil_search_default_contexts($1)
+	seutil_domtrans_loadpolicy($1)
+	seutil_read_config($1)
+	seutil_manage_bin_policy($1)
+	seutil_use_newrole_fds($1)
+	seutil_manage_module_store($1)
+	seutil_get_semanage_trans_lock($1)
+	seutil_get_semanage_read_lock($1)
+
+	userdom_dontaudit_write_user_home_content_files($1)
+')
+
+
+#######################################
+## <summary>
+##	All rules necessary to run setfiles command
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`seutil_setfiles',`
+
+	gen_require(`
+		attribute setfiles_domain;
+	')		
+        typeattribute $1 setfiles_domain;
+
+	files_relabel_all_files($1)
+
+	mls_file_read_all_levels($1)
+	mls_file_write_all_levels($1)
+	mls_file_upgrade($1)
+	mls_file_downgrade($1)
+
+	# this is to satisfy the assertion:
+	auth_relabelto_shadow($1)
+')
diff --git a/policy/modules/system/selinuxutil.te b/policy/modules/system/selinuxutil.te
index dc0c03b..03121df 100644
--- a/policy/modules/system/selinuxutil.te
+++ b/policy/modules/system/selinuxutil.te
@@ -11,14 +11,16 @@ gen_require(`
 
 attribute can_write_binary_policy;
 attribute can_relabelto_binary_policy;
+attribute setfiles_domain;
+attribute seutil_semanage_domain;
 
-attribute_role newrole_roles;
+#attribute_role newrole_roles;
 
-attribute_role run_init_roles;
-role system_r types run_init_t;
+#attribute_role run_init_roles;
+#role system_r types run_init_t;
 
-attribute_role semanage_roles;
-roleattribute system_r semanage_roles;
+#attribute_role semanage_roles;
+#roleattribute system_r semanage_roles;
 
 #
 # selinux_config_t is the type applied to
@@ -30,6 +32,9 @@ roleattribute system_r semanage_roles;
 type selinux_config_t;
 files_type(selinux_config_t)
 
+type selinux_var_lib_t;
+files_type(selinux_var_lib_t)
+
 type checkpolicy_t, can_write_binary_policy;
 type checkpolicy_exec_t;
 application_domain(checkpolicy_t, checkpolicy_exec_t)
@@ -60,14 +65,20 @@ application_domain(newrole_t, newrole_exec_t)
 domain_role_change_exemption(newrole_t)
 domain_obj_id_change_exemption(newrole_t)
 domain_interactive_fd(newrole_t)
-role newrole_roles types newrole_t;
+#role newrole_roles types newrole_t;
+role system_r types newrole_t;
 
 #
 # policy_config_t is the type of /etc/security/selinux/*
 # the security server policy configuration.
 #
-type policy_config_t;
-files_type(policy_config_t)
+#type policy_config_t;
+#files_type(policy_config_t)
+gen_require(`
+	type semanage_store_t;
+')
+
+typealias semanage_store_t alias policy_config_t;
 
 neverallow ~can_relabelto_binary_policy policy_config_t:file relabelto;
 #neverallow ~can_write_binary_policy policy_config_t:file { write append };
@@ -83,7 +94,6 @@ type restorecond_t;
 type restorecond_exec_t;
 init_daemon_domain(restorecond_t, restorecond_exec_t)
 domain_obj_id_change_exemption(restorecond_t)
-role system_r types restorecond_t;
 
 type restorecond_var_run_t;
 files_pid_file(restorecond_var_run_t)
@@ -92,25 +102,33 @@ type run_init_t;
 type run_init_exec_t;
 application_domain(run_init_t, run_init_exec_t)
 domain_system_change_exemption(run_init_t)
-role run_init_roles types run_init_t;
+#role run_init_roles types run_init_t;
+role system_r types run_init_t;
 
 type semanage_t;
 type semanage_exec_t;
 application_domain(semanage_t, semanage_exec_t)
+dbus_system_domain(semanage_t, semanage_exec_t)
+init_daemon_domain(semanage_t, semanage_exec_t)
 domain_interactive_fd(semanage_t)
-role semanage_roles types semanage_t;
+#role semanage_roles types semanage_t;
+role system_r types semanage_t;
+
+type setsebool_t;
+type setsebool_exec_t;
+init_system_domain(setsebool_t, setsebool_exec_t)
 
 type semanage_store_t;
 files_type(semanage_store_t)
 
 type semanage_read_lock_t;
-files_type(semanage_read_lock_t)
+files_lock_file(semanage_read_lock_t)
 
 type semanage_tmp_t;
 files_tmp_file(semanage_tmp_t)
 
-type semanage_trans_lock_t;
-files_type(semanage_trans_lock_t)
+type semanage_trans_lock_t; 
+files_lock_file(semanage_trans_lock_t)
 
 type semanage_var_lib_t;
 files_type(semanage_var_lib_t)
@@ -120,6 +138,11 @@ type setfiles_exec_t alias restorecon_exec_t;
 init_system_domain(setfiles_t, setfiles_exec_t)
 domain_obj_id_change_exemption(setfiles_t)
 
+type setfiles_mac_t;
+domain_type(setfiles_mac_t)
+domain_entry_file(setfiles_mac_t, setfiles_exec_t)
+domain_obj_id_change_exemption(setfiles_mac_t)
+
 ########################################
 #
 # Checkpolicy local policy
@@ -151,7 +174,7 @@ term_use_console(checkpolicy_t)
 init_use_fds(checkpolicy_t)
 init_use_script_ptys(checkpolicy_t)
 
-userdom_use_user_terminals(checkpolicy_t)
+userdom_use_inherited_user_terminals(checkpolicy_t)
 userdom_use_all_users_fds(checkpolicy_t)
 
 ifdef(`distro_ubuntu',`
@@ -188,13 +211,15 @@ term_list_ptys(load_policy_t)
 
 init_use_script_fds(load_policy_t)
 init_use_script_ptys(load_policy_t)
+init_write_script_pipes(load_policy_t)
 
 miscfiles_read_localization(load_policy_t)
 
 seutil_libselinux_linked(load_policy_t)
 
-userdom_use_user_terminals(load_policy_t)
+userdom_use_inherited_user_terminals(load_policy_t)
 userdom_use_all_users_fds(load_policy_t)
+userdom_dontaudit_read_user_tmp_files(load_policy_t)
 
 ifdef(`distro_ubuntu',`
 	optional_policy(`
@@ -220,7 +245,7 @@ optional_policy(`
 # Newrole local policy
 #
 
-allow newrole_t self:capability { fowner setuid setgid dac_override };
+allow newrole_t self:capability { fowner setpcap setuid setgid dac_override };
 allow newrole_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execheap execstack };
 allow newrole_t self:process setexec;
 allow newrole_t self:fd use;
@@ -232,7 +257,7 @@ allow newrole_t self:msgq create_msgq_perms;
 allow newrole_t self:msg { send receive };
 allow newrole_t self:unix_dgram_socket sendto;
 allow newrole_t self:unix_stream_socket { create_stream_socket_perms connectto };
-allow newrole_t self:netlink_audit_socket { create_netlink_socket_perms nlmsg_relay };
+logging_send_audit_msgs(newrole_t)
 
 read_files_pattern(newrole_t, default_context_t, default_context_t)
 read_lnk_files_pattern(newrole_t, default_context_t, default_context_t)
@@ -249,6 +274,7 @@ domain_use_interactive_fds(newrole_t)
 # for when the user types "exec newrole" at the command line:
 domain_sigchld_interactive_fds(newrole_t)
 
+files_list_var(newrole_t)
 files_read_etc_files(newrole_t)
 files_read_var_files(newrole_t)
 files_read_var_symlinks(newrole_t)
@@ -276,25 +302,39 @@ term_relabel_all_ptys(newrole_t)
 term_getattr_unallocated_ttys(newrole_t)
 term_dontaudit_use_unallocated_ttys(newrole_t)
 
-auth_use_nsswitch(newrole_t)
-auth_run_chk_passwd(newrole_t, newrole_roles)
-auth_run_upd_passwd(newrole_t, newrole_roles)
-auth_rw_faillog(newrole_t)
+#auth_use_nsswitch(newrole_t)
+#auth_run_chk_passwd(newrole_t, newrole_roles)
+#auth_run_upd_passwd(newrole_t, newrole_roles)
+#auth_rw_faillog(newrole_t)
+auth_use_pam(newrole_t)
 
 # Write to utmp.
 init_rw_utmp(newrole_t)
 init_use_fds(newrole_t)
 
-logging_send_syslog_msg(newrole_t)
-
 miscfiles_read_localization(newrole_t)
 
 seutil_libselinux_linked(newrole_t)
 
+userdom_use_unpriv_users_fds(newrole_t)
 # for some PAM modules and for cwd
 userdom_dontaudit_search_user_home_content(newrole_t)
 userdom_search_user_home_dirs(newrole_t)
 
+# need to talk with dbus
+optional_policy(`
+    dbus_system_bus_client(newrole_t)
+')
+
+#optional_policy(`
+#	namespace_init_run(newrole_t, newrole_roles)
+#')
+
+
+optional_policy(`
+	xserver_dontaudit_exec_xauth(newrole_t)
+')
+
 ifdef(`distro_ubuntu',`
 	optional_policy(`
 		unconfined_domain(newrole_t)
@@ -309,7 +349,7 @@ if(secure_mode) {
 	userdom_spec_domtrans_all_users(newrole_t)
 }
 
-tunable_policy(`allow_polyinstantiation',`
+tunable_policy(`polyinstantiation_enabled',`
 	files_polyinstantiate_all(newrole_t)
 ')
 
@@ -328,9 +368,13 @@ kernel_use_fds(restorecond_t)
 kernel_rw_pipes(restorecond_t)
 kernel_read_system_state(restorecond_t)
 
+dev_relabel_all_dev_nodes(restorecond_t)
+
+files_dontaudit_read_all_symlinks(restorecond_t)
+
 fs_relabelfrom_noxattr_fs(restorecond_t)
 fs_dontaudit_list_nfs(restorecond_t)
-fs_getattr_xattr_fs(restorecond_t)
+fs_getattr_all_fs(restorecond_t)
 fs_list_inotifyfs(restorecond_t)
 
 selinux_validate_context(restorecond_t)
@@ -341,6 +385,7 @@ selinux_compute_user_contexts(restorecond_t)
 
 files_relabel_non_auth_files(restorecond_t )
 files_read_non_auth_files(restorecond_t)
+
 auth_use_nsswitch(restorecond_t)
 
 locallogin_dontaudit_use_fds(restorecond_t)
@@ -351,6 +396,8 @@ miscfiles_read_localization(restorecond_t)
 
 seutil_libselinux_linked(restorecond_t)
 
+userdom_read_user_home_content_symlinks(restorecond_t)
+
 ifdef(`distro_ubuntu',`
 	optional_policy(`
 		unconfined_domain(restorecond_t)
@@ -366,21 +413,24 @@ optional_policy(`
 # Run_init local policy
 #
 
-allow run_init_roles system_r;
+#allow run_init_roles system_r;
 
 allow run_init_t self:process setexec;
 allow run_init_t self:capability setuid;
 allow run_init_t self:fifo_file rw_file_perms;
-allow run_init_t self:netlink_audit_socket { create_netlink_socket_perms nlmsg_relay };
+logging_send_audit_msgs(run_init_t)
 
 # often the administrator runs such programs from a directory that is owned
 # by a different user or has restrictive SE permissions, do not want to audit
 # the failed access to the current directory
 dontaudit run_init_t self:capability { dac_override dac_read_search };
 
+kernel_dontaudit_getattr_core_if(run_init_t)
+
 corecmd_exec_bin(run_init_t)
 corecmd_exec_shell(run_init_t)
 
+dev_dontaudit_getattr_all(run_init_t)
 dev_dontaudit_list_all_dev_nodes(run_init_t)
 
 domain_use_interactive_fds(run_init_t)
@@ -398,14 +448,23 @@ selinux_compute_create_context(run_init_t)
 selinux_compute_relabel_context(run_init_t)
 selinux_compute_user_contexts(run_init_t)
 
+term_use_console(run_init_t)
+
+#auth_use_nsswitch(run_init_t)
+#auth_run_chk_passwd(run_init_t, run_init_roles)
+#auth_run_upd_passwd(run_init_t, run_init_roles)
+#auth_dontaudit_read_shadow(run_init_t)
+
 auth_use_nsswitch(run_init_t)
-auth_run_chk_passwd(run_init_t, run_init_roles)
-auth_run_upd_passwd(run_init_t, run_init_roles)
+auth_domtrans_chk_passwd(run_init_t)
+auth_domtrans_upd_passwd(run_init_t)
 auth_dontaudit_read_shadow(run_init_t)
 
+
 init_spec_domtrans_script(run_init_t)
 # for utmp
 init_rw_utmp(run_init_t)
+init_dontaudit_getattr_initctl(run_init_t)
 
 logging_send_syslog_msg(run_init_t)
 
@@ -414,7 +473,7 @@ miscfiles_read_localization(run_init_t)
 seutil_libselinux_linked(run_init_t)
 seutil_read_default_contexts(run_init_t)
 
-userdom_use_user_terminals(run_init_t)
+userdom_use_inherited_user_terminals(run_init_t)
 
 ifndef(`direct_sysadm_daemon',`
 	ifdef(`distro_gentoo',`
@@ -425,6 +484,19 @@ ifndef(`direct_sysadm_daemon',`
 	')
 ')
 
+# need to talk with dbus
+optional_policy(`
+    dbus_system_bus_client(run_init_t)
+')
+
+optional_policy(`
+	gpm_dontaudit_getattr_gpmctl(run_init_t)
+')
+
+optional_policy(`
+	rpm_domtrans(run_init_t)
+')
+
 ifdef(`distro_ubuntu',`
 	optional_policy(`
 		unconfined_domain(run_init_t)
@@ -458,172 +530,204 @@ manage_files_pattern(semanage_t, semanage_var_lib_t, semanage_var_lib_t)
 kernel_read_system_state(semanage_t)
 kernel_read_kernel_sysctls(semanage_t)
 
-corecmd_exec_bin(semanage_t)
-
-dev_read_urand(semanage_t)
-
-domain_use_interactive_fds(semanage_t)
-
-files_read_etc_files(semanage_t)
-files_read_etc_runtime_files(semanage_t)
-files_read_usr_files(semanage_t)
-files_list_pids(semanage_t)
-
-mls_file_write_all_levels(semanage_t)
-mls_file_read_all_levels(semanage_t)
-
-selinux_validate_context(semanage_t)
-selinux_get_enforce_mode(semanage_t)
-selinux_getattr_fs(semanage_t)
-# for setsebool:
 selinux_set_all_booleans(semanage_t)
+can_exec(semanage_t, semanage_exec_t)
 
-term_use_all_terms(semanage_t)
-
-# Running genhomedircon requires this for finding all users
-auth_use_nsswitch(semanage_t)
-
-locallogin_use_fds(semanage_t)
+# Admins are creating pp files in random locations
+files_read_non_security_files(semanage_t)
 
-logging_send_syslog_msg(semanage_t)
-
-miscfiles_read_localization(semanage_t)
-
-seutil_libselinux_linked(semanage_t)
 seutil_manage_file_contexts(semanage_t)
 seutil_manage_config(semanage_t)
-seutil_run_setfiles(semanage_t, semanage_roles)
-seutil_run_loadpolicy(semanage_t, semanage_roles)
-seutil_manage_bin_policy(semanage_t)
-seutil_use_newrole_fds(semanage_t)
-seutil_manage_module_store(semanage_t)
-seutil_get_semanage_trans_lock(semanage_t)
-seutil_get_semanage_read_lock(semanage_t)
+seutil_domtrans_setfiles(semanage_t)
+
+#seutil_run_setfiles(semanage_t, semanage_roles)
+#seutil_run_loadpolicy(semanage_t, semanage_roles)
+#seutil_manage_bin_policy(semanage_t)
+#seutil_use_newrole_fds(semanage_t)
+#seutil_manage_module_store(semanage_t)
+#seutil_get_semanage_trans_lock(semanage_t)
+#seutil_get_semanage_read_lock(semanage_t)
 # netfilter_contexts:
 seutil_manage_default_contexts(semanage_t)
 
 # Handle pp files created in homedir and /tmp
 userdom_read_user_home_content_files(semanage_t)
 userdom_read_user_tmp_files(semanage_t)
+userdom_home_reader(semanage_t)
 
 ifdef(`distro_debian',`
 	files_read_var_lib_files(semanage_t)
 	files_read_var_lib_symlinks(semanage_t)
 ')
 
-ifdef(`distro_ubuntu',`
-	optional_policy(`
-		unconfined_domain(semanage_t)
-	')
+optional_policy(`
+	mock_manage_lib_files(semanage_t)
+	mock_manage_lib_dirs(semanage_t)
+')
+
+optional_policy(`
+	unconfined_domain(semanage_t)
 ')
 
+
+####################################n####
+#
+# setsebool local policy
+#
+seutil_semanage_policy(setsebool_t)
+selinux_set_all_booleans(setsebool_t)
+
+init_dontaudit_use_fds(setsebool_t)
+
+# Bug in semanage
+seutil_domtrans_setfiles(setsebool_t)
+seutil_manage_file_contexts(setsebool_t)
+seutil_manage_default_contexts(setsebool_t)
+seutil_manage_config(setsebool_t)
+
 ########################################
 #
-# Setfiles local policy
+# Setfiles mac local policy
 #
+seutil_setfiles(setfiles_mac_t)
+allow setfiles_mac_t self:capability2 mac_admin;
+kernel_relabelto_unlabeled(setfiles_mac_t)
 
-allow setfiles_t self:capability { dac_override dac_read_search fowner };
-dontaudit setfiles_t self:capability sys_tty_config;
-allow setfiles_t self:fifo_file rw_file_perms;
-
-allow setfiles_t { policy_src_t policy_config_t file_context_t default_context_t }:dir list_dir_perms;
-allow setfiles_t { policy_src_t policy_config_t file_context_t default_context_t }:file read_file_perms;
-allow setfiles_t { policy_src_t policy_config_t file_context_t default_context_t }:lnk_file { read_lnk_file_perms ioctl lock };
-
-kernel_read_system_state(setfiles_t)
-kernel_relabelfrom_unlabeled_dirs(setfiles_t)
-kernel_relabelfrom_unlabeled_files(setfiles_t)
-kernel_relabelfrom_unlabeled_symlinks(setfiles_t)
-kernel_relabelfrom_unlabeled_pipes(setfiles_t)
-kernel_relabelfrom_unlabeled_sockets(setfiles_t)
-kernel_use_fds(setfiles_t)
-kernel_rw_pipes(setfiles_t)
-kernel_rw_unix_dgram_sockets(setfiles_t)
-kernel_dontaudit_list_all_proc(setfiles_t)
-kernel_dontaudit_list_all_sysctls(setfiles_t)
-
-dev_relabel_all_dev_nodes(setfiles_t)
-
-domain_use_interactive_fds(setfiles_t)
-domain_dontaudit_search_all_domains_state(setfiles_t)
-
-files_read_etc_runtime_files(setfiles_t)
-files_read_etc_files(setfiles_t)
-files_list_all(setfiles_t)
-files_relabel_all_files(setfiles_t)
-files_read_usr_symlinks(setfiles_t)
-
-fs_getattr_xattr_fs(setfiles_t)
-fs_list_all(setfiles_t)
-fs_search_auto_mountpoints(setfiles_t)
-fs_relabelfrom_noxattr_fs(setfiles_t)
-
-mls_file_read_all_levels(setfiles_t)
-mls_file_write_all_levels(setfiles_t)
-mls_file_upgrade(setfiles_t)
-mls_file_downgrade(setfiles_t)
-
-selinux_validate_context(setfiles_t)
-selinux_compute_access_vector(setfiles_t)
-selinux_compute_create_context(setfiles_t)
-selinux_compute_relabel_context(setfiles_t)
-selinux_compute_user_contexts(setfiles_t)
-
-term_use_all_ttys(setfiles_t)
-term_use_all_ptys(setfiles_t)
-term_use_unallocated_ttys(setfiles_t)
-
-# this is to satisfy the assertion:
-auth_relabelto_shadow(setfiles_t)
-
-init_use_fds(setfiles_t)
-init_use_script_fds(setfiles_t)
-init_use_script_ptys(setfiles_t)
-init_exec_script_files(setfiles_t)
+optional_policy(`
+	files_dontaudit_write_isid_chr_files(setfiles_mac_t)
+	livecd_dontaudit_leaks(setfiles_mac_t)
+	livecd_rw_tmp_files(setfiles_mac_t)
+	dev_dontaudit_write_all_chr_files(setfiles_mac_t)
+')
 
-logging_send_audit_msgs(setfiles_t)
-logging_send_syslog_msg(setfiles_t)
+optional_policy(`
+	unconfined_domain(setfiles_mac_t)
+')
 
-miscfiles_read_localization(setfiles_t)
+########################################
+#
+# Setfiles local policy
+#
 
-seutil_libselinux_linked(setfiles_t)
+seutil_setfiles(setfiles_t)
+# During boot in Rawhide
+term_use_generic_ptys(setfiles_t)
 
-userdom_use_all_users_fds(setfiles_t)
-# for config files in a home directory
-userdom_read_user_home_content_files(setfiles_t)
+# needs to be able to read symlinks to make restorecon on symlink working
+files_read_all_symlinks(setfiles_t)
 
-ifdef(`distro_debian',`
-	# udev tmpfs is populated with static device nodes
-	# and then relabeled afterwards; thus
-	# /dev/console has the tmpfs type
-	fs_rw_tmpfs_chr_files(setfiles_t)
+logging_send_audit_msgs(setfiles_t)
+logging_send_syslog_msg(setfiles_t)
+
+optional_policy(`
+	devicekit_dontaudit_read_pid_files(setfiles_t)
+	devicekit_dontaudit_rw_log(setfiles_t)
 ')
 
-ifdef(`distro_redhat', `
-	fs_rw_tmpfs_chr_files(setfiles_t)
-	fs_rw_tmpfs_blk_files(setfiles_t)
-	fs_relabel_tmpfs_blk_file(setfiles_t)
-	fs_relabel_tmpfs_chr_file(setfiles_t)
+optional_policy(`
+	xserver_append_xdm_tmp_files(setfiles_t)
 ')
 
-ifdef(`distro_ubuntu',`
+ifdef(`hide_broken_symptoms',`
+
 	optional_policy(`
+		setroubleshoot_fixit_dontaudit_leaks(setfiles_t)
+		setroubleshoot_fixit_dontaudit_leaks(setsebool_t)
+	')
+')
+ifdef(`distro_ubuntu',`
+  	optional_policy(`
 		unconfined_domain(setfiles_t)
 	')
 ')
 
-ifdef(`hide_broken_symptoms',`
-	optional_policy(`
-		udev_dontaudit_rw_dgram_sockets(setfiles_t)
-	')
+########################################
+#
+# Setfiles common policy
+#
+allow setfiles_domain self:capability { dac_override dac_read_search fowner };
+dontaudit setfiles_domain self:capability sys_tty_config;
+allow setfiles_domain self:fifo_file rw_file_perms;
+dontaudit setfiles_domain self:dir relabelfrom;
+dontaudit setfiles_domain self:file relabelfrom;
+dontaudit setfiles_domain self:lnk_file relabelfrom;
+
+domain_relabelfrom(setfiles_domain)
+
+allow setfiles_domain { policy_src_t policy_config_t file_context_t default_context_t }:dir list_dir_perms;
+allow setfiles_domain { policy_src_t policy_config_t file_context_t default_context_t }:file read_file_perms;
+allow setfiles_domain { policy_src_t policy_config_t file_context_t default_context_t }:lnk_file { read_lnk_file_perms ioctl lock };
+
+logging_send_audit_msgs(setfiles_domain)
+
+kernel_read_system_state(setfiles_domain)
+kernel_relabelfrom_unlabeled_dirs(setfiles_domain)
+kernel_relabelfrom_unlabeled_files(setfiles_domain)
+kernel_relabelfrom_unlabeled_symlinks(setfiles_domain)
+kernel_relabelfrom_unlabeled_pipes(setfiles_domain)
+kernel_relabelfrom_unlabeled_sockets(setfiles_domain)
+kernel_use_fds(setfiles_domain)
+kernel_rw_pipes(setfiles_domain)
+kernel_rw_unix_dgram_sockets(setfiles_domain)
+kernel_dontaudit_list_all_proc(setfiles_domain)
+kernel_read_all_sysctls(setfiles_domain)
+kernel_read_network_state_symlinks(setfiles_domain)
+
+dev_relabel_all_dev_nodes(setfiles_domain)
+
+domain_use_interactive_fds(setfiles_domain)
+domain_read_all_domains_state(setfiles_domain)
+ 
+files_read_etc_runtime_files(setfiles_domain)
+files_read_etc_files(setfiles_domain)
+files_list_all(setfiles_domain)
+files_list_isid_type_dirs(setfiles_domain)
+files_read_isid_type_files(setfiles_domain)
+files_dontaudit_read_all_symlinks(setfiles_domain)
+
+fs_getattr_all_fs(setfiles_domain)
+fs_list_all(setfiles_domain)
+fs_getattr_all_files(setfiles_domain)
+fs_search_auto_mountpoints(setfiles_domain)
+fs_relabelfrom_noxattr_fs(setfiles_domain)
+
+selinux_validate_context(setfiles_domain)
+selinux_compute_access_vector(setfiles_domain)
+selinux_compute_create_context(setfiles_domain)
+selinux_compute_relabel_context(setfiles_domain)
+selinux_compute_user_contexts(setfiles_domain)
+
+term_use_all_inherited_terms(setfiles_domain)
+
+init_use_fds(setfiles_domain)
+init_use_script_fds(setfiles_domain)
+init_use_script_ptys(setfiles_domain)
+init_exec_script_files(setfiles_domain)
+
+logging_send_syslog_msg(setfiles_domain)
+
+miscfiles_read_localization(setfiles_domain)
+
+seutil_libselinux_linked(setfiles_domain)
+
+userdom_use_all_users_fds(setfiles_domain)
+# for config files in a home directory
+userdom_read_user_home_content_files(setfiles_domain)
 
-	# cjp: cover up stray file descriptors.
-	optional_policy(`
-		unconfined_dontaudit_read_pipes(setfiles_t)
-		unconfined_dontaudit_rw_tcp_sockets(setfiles_t)
-	')
+ifdef(`distro_debian',`
+	# udev tmpfs is populated with static device nodes
+	# and then relabeled afterwards; thus
+	# /dev/console has the tmpfs type
+	fs_rw_tmpfs_chr_files(setfiles_domain)
+')
+
+ifdef(`distro_redhat',`
+	fs_rw_tmpfs_chr_files(setfiles_domain)
+	fs_rw_tmpfs_blk_files(setfiles_domain)
+	fs_relabel_tmpfs_blk_file(setfiles_domain)
+	fs_relabel_tmpfs_chr_file(setfiles_domain)
 ')
 
 optional_policy(`
-	hotplug_use_fds(setfiles_t)
+	hotplug_use_fds(setfiles_domain)
 ')
diff --git a/policy/modules/system/setrans.fc b/policy/modules/system/setrans.fc
index bea4629..06e2834 100644
--- a/policy/modules/system/setrans.fc
+++ b/policy/modules/system/setrans.fc
@@ -2,4 +2,7 @@
 
 /sbin/mcstransd		--	gen_context(system_u:object_r:setrans_exec_t,s0)
 
+/usr/sbin/mcstransd	--	gen_context(system_u:object_r:setrans_exec_t,s0)
+
 /var/run/setrans(/.*)?		gen_context(system_u:object_r:setrans_var_run_t,mls_systemhigh)
+/var/run/mcstransd\.pid		gen_context(system_u:object_r:setrans_var_run_t,mls_systemhigh)
diff --git a/policy/modules/system/setrans.te b/policy/modules/system/setrans.te
index 1447687..cdc0223 100644
--- a/policy/modules/system/setrans.te
+++ b/policy/modules/system/setrans.te
@@ -12,6 +12,7 @@ gen_require(`
 type setrans_t;
 type setrans_exec_t;
 init_daemon_domain(setrans_t, setrans_exec_t)
+mls_trusted_object(setrans_t)
 
 type setrans_initrc_exec_t;
 init_script_file(setrans_initrc_exec_t)
diff --git a/policy/modules/system/sysnetwork.fc b/policy/modules/system/sysnetwork.fc
index 346a7cc..1285089 100644
--- a/policy/modules/system/sysnetwork.fc
+++ b/policy/modules/system/sysnetwork.fc
@@ -17,10 +17,10 @@ ifdef(`distro_debian',`
 /etc/dhclient.*conf	--	gen_context(system_u:object_r:dhcp_etc_t,s0)
 /etc/dhclient-script	--	gen_context(system_u:object_r:dhcp_etc_t,s0)
 /etc/dhcpc.*			gen_context(system_u:object_r:dhcp_etc_t,s0)
-/etc/dhcpd\.conf	--	gen_context(system_u:object_r:dhcp_etc_t,s0)
-/etc/dhcp/dhcpd\.conf	--	gen_context(system_u:object_r:dhcp_etc_t,s0)
+/etc/dhcpd(6)?\.conf	--	gen_context(system_u:object_r:dhcp_etc_t,s0)
+/etc/dhcp/dhcpd(6)?\.conf	--	gen_context(system_u:object_r:dhcp_etc_t,s0)
 /etc/ethers		--	gen_context(system_u:object_r:net_conf_t,s0)
-/etc/hosts		--	gen_context(system_u:object_r:net_conf_t,s0)
+/etc/hosts[^/]*		--	gen_context(system_u:object_r:net_conf_t,s0)
 /etc/hosts\.deny.*	--	gen_context(system_u:object_r:net_conf_t,s0)
 /etc/denyhosts.*	--	gen_context(system_u:object_r:net_conf_t,s0)
 /etc/resolv\.conf.*	--	gen_context(system_u:object_r:net_conf_t,s0)
@@ -55,6 +55,20 @@ ifdef(`distro_redhat',`
 #
 # /usr
 #
+/usr/bin/ip		--	gen_context(system_u:object_r:ifconfig_exec_t,s0)
+
+/usr/sbin/dhclient.*	--	gen_context(system_u:object_r:dhcpc_exec_t,s0)
+/usr/sbin/dhcdbd	--	gen_context(system_u:object_r:dhcpc_exec_t,s0)
+/usr/sbin/dhcpcd	--	gen_context(system_u:object_r:dhcpc_exec_t,s0)
+/usr/sbin/ethtool	--	gen_context(system_u:object_r:ifconfig_exec_t,s0)
+/usr/sbin/ifconfig	--	gen_context(system_u:object_r:ifconfig_exec_t,s0)
+/usr/sbin/ip		--	gen_context(system_u:object_r:ifconfig_exec_t,s0)
+/usr/sbin/ipx_configure	--	gen_context(system_u:object_r:ifconfig_exec_t,s0)
+/usr/sbin/ipx_interface	--	gen_context(system_u:object_r:ifconfig_exec_t,s0)
+/usr/sbin/ipx_internal_net --	gen_context(system_u:object_r:ifconfig_exec_t,s0)
+/usr/sbin/iwconfig	--	gen_context(system_u:object_r:ifconfig_exec_t,s0)
+/usr/sbin/mii-tool	--	gen_context(system_u:object_r:ifconfig_exec_t,s0)
+/usr/sbin/pump		--	gen_context(system_u:object_r:dhcpc_exec_t,s0)
 /usr/sbin/tc		--	gen_context(system_u:object_r:ifconfig_exec_t,s0)
 
 #
@@ -72,3 +86,5 @@ ifdef(`distro_redhat',`
 ifdef(`distro_gentoo',`
 /var/lib/dhcpc(/.*)?		gen_context(system_u:object_r:dhcpc_state_t,s0)
 ')
+
+/etc/firestarter/firestarter\.sh gen_context(system_u:object_r:dhcpc_helper_exec_t,s0)
diff --git a/policy/modules/system/sysnetwork.if b/policy/modules/system/sysnetwork.if
index 41a1853..f79ad37 100644
--- a/policy/modules/system/sysnetwork.if
+++ b/policy/modules/system/sysnetwork.if
@@ -38,11 +38,47 @@ interface(`sysnet_domtrans_dhcpc',`
 #
 interface(`sysnet_run_dhcpc',`
 	gen_require(`
-		attribute_role dhcpc_roles;
+		type dhcpc_t;
+		#attribute_role dhcpc_roles;
 	')
 
+	#sysnet_domtrans_dhcpc($1)
+	#roleattribute $2 dhcpc_roles;
+
 	sysnet_domtrans_dhcpc($1)
-	roleattribute $2 dhcpc_roles;
+        role $2 types dhcpc_t;
+
+        modutils_run_insmod(dhcpc_t, $2)
+
+        sysnet_run_ifconfig(dhcpc_t, $2)
+
+        optional_policy(`
+                hostname_run(dhcpc_t, $2)
+        ')
+
+        optional_policy(`
+                netutils_run(dhcpc_t, $2)
+                netutils_run_ping(dhcpc_t, $2)
+        ')
+
+        optional_policy(`
+                networkmanager_run(dhcpc_t, $2)
+        ')
+
+        optional_policy(`
+                nis_run_ypbind(dhcpc_t, $2)
+        ')
+
+        optional_policy(`
+                nscd_run(dhcpc_t, $2)
+        ')
+
+        optional_policy(`
+                ntp_run(dhcpc_t, $2)
+        ')
+
+        seutil_run_setfiles(dhcpc_t, $2)
+
 ')
 
 ########################################
@@ -271,6 +307,43 @@ interface(`sysnet_delete_dhcpc_state',`
 	delete_files_pattern($1, dhcpc_state_t, dhcpc_state_t)
 ')
 
+########################################
+## <summary>
+##	Allow caller to relabel dhcpc_state files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`sysnet_relabelfrom_dhcpc_state',`
+
+	gen_require(`
+		type dhcpc_state_t;
+	')
+
+	allow $1 dhcpc_state_t:file relabelfrom;
+')
+
+#######################################
+## <summary>
+##	Manage the dhcp client state files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`sysnet_manage_dhcpc_state',`
+	gen_require(`
+		type dhcpc_state_t;
+	')
+
+	manage_files_pattern($1, dhcpc_state_t, dhcpc_state_t)
+')
+
 #######################################
 ## <summary>
 ##	Set the attributes of network config files.
@@ -292,6 +365,44 @@ interface(`sysnet_setattr_config',`
 
 #######################################
 ## <summary>
+##      Allow caller to relabel net_conf files
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`sysnet_relabelfrom_net_conf',`
+
+        gen_require(`
+                type net_conf_t;
+        ')
+
+        allow $1 net_conf_t:file relabelfrom;
+')
+
+######################################
+## <summary>
+##      Allow caller to relabel net_conf files
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`sysnet_relabelto_net_conf',`
+
+        gen_require(`
+                type net_conf_t;
+        ')
+
+        allow $1 net_conf_t:file relabelto;
+')
+
+#######################################
+## <summary>
 ##	Read network config files.
 ## </summary>
 ## <desc>
@@ -331,6 +442,7 @@ interface(`sysnet_read_config',`
 
 	ifdef(`distro_redhat',`
 		allow $1 net_conf_t:dir list_dir_perms;
+		allow $1 net_conf_t:lnk_file read_lnk_file_perms;
 		read_files_pattern($1, net_conf_t, net_conf_t)
 	')
 ')
@@ -433,6 +545,7 @@ interface(`sysnet_manage_config',`
 	allow $1 net_conf_t:file manage_file_perms;
 
 	ifdef(`distro_redhat',`
+		allow $1 net_conf_t:dir list_dir_perms;
 		manage_files_pattern($1, net_conf_t, net_conf_t)
 	')
 ')
@@ -471,6 +584,7 @@ interface(`sysnet_delete_dhcpc_pid',`
 		type dhcpc_var_run_t;
 	')
 
+	files_rw_pid_dirs($1)
 	allow $1 dhcpc_var_run_t:file unlink;
 ')
 
@@ -561,6 +675,45 @@ interface(`sysnet_signal_ifconfig',`
 
 ########################################
 ## <summary>
+##	Send a null signal to ifconfig.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.pwd
+
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`sysnet_signull_ifconfig',`
+	gen_require(`
+		type ifconfig_t;
+	')
+
+	allow $1 ifconfig_t:process signull;
+')
+
+########################################
+## <summary>
+##	Send a kill signal to iconfig.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`sysnet_kill_ifconfig',`
+	gen_require(`
+		type ifconfig_t;
+	')
+
+	allow $1 ifconfig_t:process sigkill;
+')
+
+########################################
+## <summary>
 ##	Read the DHCP configuration files.
 ## </summary>
 ## <param name="domain">
@@ -673,6 +826,8 @@ interface(`sysnet_dns_name_resolve',`
 	corenet_tcp_connect_dns_port($1)
 	corenet_sendrecv_dns_client_packets($1)
 
+	miscfiles_read_generic_certs($1)
+
 	sysnet_read_config($1)
 
 	optional_policy(`
@@ -714,6 +869,9 @@ interface(`sysnet_use_ldap',`
 	dev_read_urand($1)
 
 	sysnet_read_config($1)
+
+	# LDAP Configuration using encrypted requires
+	dev_read_urand($1)
 ')
 
 ########################################
@@ -747,3 +905,73 @@ interface(`sysnet_use_portmap',`
 
 	sysnet_read_config($1)
 ')
+
+########################################
+## <summary>
+##	Do not audit attempts to use
+##	the dhcp file descriptors.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`sysnet_dontaudit_dhcpc_use_fds',`
+	gen_require(`
+		type dhcpc_t;
+	')
+
+	dontaudit $1 dhcpc_t:fd use;
+')
+
+########################################
+## <summary>
+##	Transition to system_r when execute an dhclient script
+## </summary>
+## <desc>
+##      <p>
+##	Execute dhclient script in a specified role
+##      </p>
+##      <p>
+##      No interprocess communication (signals, pipes,
+##      etc.) is provided by this interface since
+##      the domains are not owned by this module.
+##      </p>
+## </desc>
+## <param name="source_role">
+##	<summary>
+##	Role to transition from.
+##	</summary>
+## </param>
+interface(`sysnet_role_transition_dhcpc',`
+	gen_require(`
+		type dhcpc_exec_t;
+	')
+
+	role_transition $1 dhcpc_exec_t system_r;
+')
+
+########################################
+## <summary>
+##	Transition to sysnet named content
+## </summary>
+## <param name="domain">
+##	<summary>
+##      Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`sysnet_filetrans_named_content',`
+	gen_require(`
+		type net_conf_t;
+	')
+
+	files_etc_filetrans($1, net_conf_t, file, "resolv.conf")
+	files_etc_filetrans($1, net_conf_t, file, "resolv.conf.tmp")
+	files_etc_filetrans($1, net_conf_t, file, "denyhosts")
+	files_etc_filetrans($1, net_conf_t, file, "hosts")
+	files_etc_filetrans($1, net_conf_t, file, "hosts.deny")
+	files_etc_filetrans($1, net_conf_t, file, "ethers")
+	files_etc_filetrans($1, net_conf_t, file, "yp.conf")
+')
diff --git a/policy/modules/system/sysnetwork.te b/policy/modules/system/sysnetwork.te
index 8aed9d0..6a6f03f 100644
--- a/policy/modules/system/sysnetwork.te
+++ b/policy/modules/system/sysnetwork.te
@@ -5,8 +5,15 @@ policy_module(sysnetwork, 1.13.2)
 # Declarations
 #
 
-attribute_role dhcpc_roles;
-roleattribute system_r dhcpc_roles;
+## <desc>
+## <p>
+## Allow dhcpc client applications to execute iptables commands
+## </p>
+## </desc>
+gen_tunable(dhcpc_exec_iptables, false)
+
+#attribute_role dhcpc_roles;
+#roleattribute system_r dhcpc_roles;
 
 # this is shared between dhcpc and dhcpd:
 type dhcp_etc_t;
@@ -20,7 +27,11 @@ files_type(dhcp_state_t)
 type dhcpc_t;
 type dhcpc_exec_t;
 init_daemon_domain(dhcpc_t, dhcpc_exec_t)
-role dhcpc_roles types dhcpc_t;
+#role dhcpc_roles types dhcpc_t;
+role system_r types dhcpc_t;
+
+type dhcpc_helper_exec_t;
+init_script_file(dhcpc_helper_exec_t)
 
 type dhcpc_state_t;
 files_type(dhcpc_state_t)
@@ -37,17 +48,17 @@ init_system_domain(ifconfig_t, ifconfig_exec_t)
 role system_r types ifconfig_t;
 
 type net_conf_t alias resolv_conf_t;
-files_type(net_conf_t)
+files_config_file(net_conf_t)
 
 ########################################
 #
 # DHCP client local policy
 #
 allow dhcpc_t self:capability { dac_override fsetid net_admin net_raw net_bind_service setpcap sys_nice sys_resource sys_tty_config };
-dontaudit dhcpc_t self:capability { sys_tty_config sys_ptrace };
+dontaudit dhcpc_t self:capability sys_tty_config;
 # for access("/etc/bashrc", X_OK) on Red Hat
 dontaudit dhcpc_t self:capability { dac_read_search sys_module };
-allow dhcpc_t self:process { getsched getcap setcap setfscreate ptrace signal_perms };
+allow dhcpc_t self:process { getsched setsched getcap setcap setfscreate signal_perms };
 
 allow dhcpc_t self:fifo_file rw_fifo_file_perms;
 allow dhcpc_t self:tcp_socket create_stream_socket_perms;
@@ -60,8 +71,11 @@ read_lnk_files_pattern(dhcpc_t, dhcp_etc_t, dhcp_etc_t)
 exec_files_pattern(dhcpc_t, dhcp_etc_t, dhcp_etc_t)
 
 allow dhcpc_t dhcp_state_t:file read_file_perms;
+allow dhcpc_t dhcp_state_t:file relabel_file_perms;
+
 manage_files_pattern(dhcpc_t, dhcpc_state_t, dhcpc_state_t)
 filetrans_pattern(dhcpc_t, dhcp_state_t, dhcpc_state_t, file)
+allow dhcpc_t dhcpc_state_t:file relabel_file_perms;
 
 # create pid file
 manage_files_pattern(dhcpc_t, dhcpc_var_run_t, dhcpc_var_run_t)
@@ -69,6 +83,8 @@ files_pid_filetrans(dhcpc_t, dhcpc_var_run_t, file)
 
 # Allow read/write to /etc/resolv.conf and /etc/ntp.conf. Note that any files
 # in /etc created by dhcpcd will be labelled net_conf_t.
+allow dhcpc_t net_conf_t:file manage_file_perms;
+allow dhcpc_t net_conf_t:file relabel_file_perms;
 sysnet_manage_config(dhcpc_t)
 files_etc_filetrans(dhcpc_t, net_conf_t, file)
 
@@ -92,25 +108,28 @@ corecmd_exec_shell(dhcpc_t)
 
 corenet_all_recvfrom_unlabeled(dhcpc_t)
 corenet_all_recvfrom_netlabel(dhcpc_t)
-corenet_tcp_sendrecv_all_if(dhcpc_t)
-corenet_raw_sendrecv_all_if(dhcpc_t)
-corenet_udp_sendrecv_all_if(dhcpc_t)
-corenet_tcp_sendrecv_all_nodes(dhcpc_t)
-corenet_raw_sendrecv_all_nodes(dhcpc_t)
-corenet_udp_sendrecv_all_nodes(dhcpc_t)
+corenet_tcp_sendrecv_generic_if(dhcpc_t)
+corenet_raw_sendrecv_generic_if(dhcpc_t)
+corenet_udp_sendrecv_generic_if(dhcpc_t)
+corenet_tcp_sendrecv_generic_node(dhcpc_t)
+corenet_raw_sendrecv_generic_node(dhcpc_t)
+corenet_udp_sendrecv_generic_node(dhcpc_t)
 corenet_tcp_sendrecv_all_ports(dhcpc_t)
 corenet_udp_sendrecv_all_ports(dhcpc_t)
-corenet_tcp_bind_all_nodes(dhcpc_t)
-corenet_udp_bind_all_nodes(dhcpc_t)
+corenet_tcp_bind_generic_node(dhcpc_t)
+corenet_udp_bind_generic_node(dhcpc_t)
 corenet_udp_bind_dhcpc_port(dhcpc_t)
 corenet_tcp_connect_all_ports(dhcpc_t)
 corenet_sendrecv_dhcpd_client_packets(dhcpc_t)
 corenet_sendrecv_dhcpc_server_packets(dhcpc_t)
+corenet_dontaudit_udp_bind_all_reserved_ports(dhcpc_t)
+corenet_udp_bind_all_unreserved_ports(dhcpc_t)	
 
 dev_read_sysfs(dhcpc_t)
 # for SSP:
 dev_read_urand(dhcpc_t)
 
+domain_obj_id_change_exemption(dhcpc_t)
 domain_use_interactive_fds(dhcpc_t)
 domain_dontaudit_read_all_domains_state(dhcpc_t)
 
@@ -130,15 +149,21 @@ term_dontaudit_use_all_ptys(dhcpc_t)
 term_dontaudit_use_unallocated_ttys(dhcpc_t)
 term_dontaudit_use_generic_ptys(dhcpc_t)
 
+auth_use_nsswitch(dhcpc_t)
+
 init_rw_utmp(dhcpc_t)
+init_stream_connect(dhcpc_t)
+init_stream_send(dhcpc_t)
 
 logging_send_syslog_msg(dhcpc_t)
 
+miscfiles_read_generic_certs(dhcpc_t)
 miscfiles_read_localization(dhcpc_t)
 
-modutils_run_insmod(dhcpc_t, dhcpc_roles)
+#modutils_run_insmod(dhcpc_t, dhcpc_roles)
+modutils_domtrans_insmod(dhcpc_t)
+#sysnet_run_ifconfig(dhcpc_t, dhcpc_roles)
 
-sysnet_run_ifconfig(dhcpc_t, dhcpc_roles)
 
 userdom_use_user_terminals(dhcpc_t)
 userdom_dontaudit_search_user_home_dirs(dhcpc_t)
@@ -153,8 +178,19 @@ ifdef(`distro_ubuntu',`
 	')
 ')
 
+#optional_policy(`
+#	consoletype_run(dhcpc_t, dhcpc_roles)
+#')
+
 optional_policy(`
-	consoletype_run(dhcpc_t, dhcpc_roles)
+	chronyd_initrc_domtrans(dhcpc_t)
+	chronyd_systemctl(dhcpc_t)
+	chronyd_read_keys(dhcpc_t)
+')
+
+optional_policy(`
+	devicekit_dontaudit_rw_log(dhcpc_t)
+	devicekit_dontaudit_read_pid_files(dhcpc_t)
 ')
 
 optional_policy(`
@@ -169,11 +205,14 @@ optional_policy(`
 ')
 
 optional_policy(`
-	hostname_run(dhcpc_t, dhcpc_roles)
+	hostname_domtrans(dhcpc_t)
+#	hostname_run(dhcpc_t, dhcpc_roles)
 ')
 
 optional_policy(`
 	hal_dontaudit_rw_dgram_sockets(dhcpc_t)
+	hal_dontaudit_read_pid_files(dhcpc_t)
+	hal_dontaudit_write_log(dhcpc_t)
 ')
 
 optional_policy(`
@@ -187,25 +226,41 @@ optional_policy(`
 
 # for the dhcp client to run ping to check IP addresses
 optional_policy(`
-	netutils_run_ping(dhcpc_t, dhcpc_roles)
-	netutils_run(dhcpc_t, dhcpc_roles)
+	#netutils_run_ping(dhcpc_t, dhcpc_roles)
+	#netutils_run(dhcpc_t, dhcpc_roles)
+	netutils_domtrans_ping(dhcpc_t)
+        netutils_domtrans(dhcpc_t)
 ',`
 	allow dhcpc_t self:capability setuid;
 	allow dhcpc_t self:rawip_socket create_socket_perms;
 ')
 
 optional_policy(`
+	modutils_domtrans_insmod(dhcpc_t)
+')
+
+optional_policy(`
+	networkmanager_domtrans(dhcpc_t)
+	networkmanager_read_pid_files(dhcpc_t)
+	networkmanager_read_lib_files(dhcpc_t)
+')
+
+optional_policy(`
+	nis_initrc_domtrans_ypbind(dhcpc_t)
 	nis_read_ypbind_pid(dhcpc_t)
+	nis_systemctl_ypbind(dhcpc_t)
 ')
 
 optional_policy(`
 	nscd_initrc_domtrans(dhcpc_t)
+	nscd_systemctl(dhcpc_t)
 	nscd_domtrans(dhcpc_t)
 	nscd_read_pid(dhcpc_t)
 ')
 
 optional_policy(`
 	ntp_initrc_domtrans(dhcpc_t)
+	ntp_systemctl(dhcpc_t)
 ')
 
 optional_policy(`
@@ -216,6 +271,11 @@ optional_policy(`
 optional_policy(`
 	seutil_sigchld_newrole(dhcpc_t)
 	seutil_dontaudit_search_config(dhcpc_t)
+	seutil_domtrans_setfiles(dhcpc_t)
+')
+optional_policy(`
+	systemd_passwd_agent_domtrans(dhcpc_t)
+	systemd_signal_passwd_agent(dhcpc_t)
 ')
 
 optional_policy(`
@@ -258,6 +318,7 @@ allow ifconfig_t self:msgq create_msgq_perms;
 allow ifconfig_t self:msg { send receive };
 # Create UDP sockets, necessary when called from dhcpc
 allow ifconfig_t self:udp_socket create_socket_perms;
+allow ifconfig_t self:appletalk_socket create_socket_perms;
 # for /sbin/ip
 allow ifconfig_t self:packet_socket create_socket_perms;
 allow ifconfig_t self:netlink_route_socket create_netlink_socket_perms;
@@ -276,11 +337,17 @@ corenet_rw_tun_tap_dev(ifconfig_t)
 dev_read_sysfs(ifconfig_t)
 # for IPSEC setup:
 dev_read_urand(ifconfig_t)
+# needed by tuned
+dev_rw_netcontrol(ifconfig_t)
 
 domain_use_interactive_fds(ifconfig_t)
 
+read_files_pattern(ifconfig_t, dhcpc_state_t, dhcpc_state_t)
+
+files_dontaudit_read_root_files(ifconfig_t)
 files_read_etc_files(ifconfig_t)
 files_read_etc_runtime_files(ifconfig_t)
+files_read_usr_files(ifconfig_t)
 
 fs_getattr_xattr_fs(ifconfig_t)
 fs_search_auto_mountpoints(ifconfig_t)
@@ -293,7 +360,7 @@ term_dontaudit_use_all_ptys(ifconfig_t)
 term_dontaudit_use_ptmx(ifconfig_t)
 term_dontaudit_use_generic_ptys(ifconfig_t)
 
-files_dontaudit_read_root_files(ifconfig_t)
+auth_use_nsswitch(ifconfig_t)
 
 init_use_fds(ifconfig_t)
 init_use_script_ptys(ifconfig_t)
@@ -304,11 +371,11 @@ logging_send_syslog_msg(ifconfig_t)
 
 miscfiles_read_localization(ifconfig_t)
 
-modutils_domtrans_insmod(ifconfig_t)
-
 seutil_use_runinit_fds(ifconfig_t)
 
-userdom_use_user_terminals(ifconfig_t)
+sysnet_dns_name_resolve(ifconfig_t)
+
+userdom_use_inherited_user_terminals(ifconfig_t)
 userdom_use_all_users_fds(ifconfig_t)
 
 ifdef(`distro_ubuntu',`
@@ -317,7 +384,22 @@ ifdef(`distro_ubuntu',`
 	')
 ')
 
+optional_policy(`
+	brctl_domtrans(ifconfig_t)
+')
+
+optional_policy(`
+	cfengine_dontaudit_write_log(ifconfig_t)
+')
+
+optional_policy(`
+	ctdbd_read_lib_files(ifconfig_t)
+')
+
 ifdef(`hide_broken_symptoms',`
+	# caused by some bogus kernel code
+	dontaudit ifconfig_t self:capability sys_module;
+
 	optional_policy(`
 		dev_dontaudit_rw_cardmgr(ifconfig_t)
 	')
@@ -328,8 +410,14 @@ ifdef(`hide_broken_symptoms',`
 ')
 
 optional_policy(`
+	devicekit_dontaudit_read_pid_files(ifconfig_t)
+')
+
+optional_policy(`
 	hal_dontaudit_rw_pipes(ifconfig_t)
 	hal_dontaudit_rw_dgram_sockets(ifconfig_t)
+	hal_dontaudit_read_pid_files(ifconfig_t)
+	hal_write_log(ifconfig_t)
 ')
 
 optional_policy(`
@@ -338,7 +426,15 @@ optional_policy(`
 ')
 
 optional_policy(`
-	nis_use_ypbind(ifconfig_t)
+	kdump_dontaudit_read_config(ifconfig_t)
+')
+
+optional_policy(`
+	modutils_domtrans_insmod(ifconfig_t)
+')
+
+optional_policy(`
+	netutils_domtrans(dhcpc_t)
 ')
 
 optional_policy(`
@@ -359,3 +455,9 @@ optional_policy(`
 	xen_append_log(ifconfig_t)
 	xen_dontaudit_rw_unix_stream_sockets(ifconfig_t)
 ')
+
+optional_policy(`
+	tunable_policy(`dhcpc_exec_iptables',`
+		iptables_domtrans(dhcpc_t)
+	')
+')
diff --git a/policy/modules/system/systemd.fc b/policy/modules/system/systemd.fc
new file mode 100644
index 0000000..161f271
--- /dev/null
+++ b/policy/modules/system/systemd.fc
@@ -0,0 +1,23 @@
+/bin/systemd-notify				--		gen_context(system_u:object_r:systemd_notify_exec_t,s0)
+/bin/systemctl					--	gen_context(system_u:object_r:systemd_systemctl_exec_t,s0)
+/bin/systemd-tty-ask-password-agent		--		gen_context(system_u:object_r:systemd_passwd_agent_exec_t,s0)
+/bin/systemd-tmpfiles				--		gen_context(system_u:object_r:systemd_tmpfiles_exec_t,s0)
+
+/usr/bin/systemctl				--	gen_context(system_u:object_r:systemd_systemctl_exec_t,s0)
+/usr/bin/systemd-gnome-ask-password-agent	--		gen_context(system_u:object_r:systemd_passwd_agent_exec_t,s0)
+/usr/bin/systemd-notify				--		gen_context(system_u:object_r:systemd_notify_exec_t,s0)
+/usr/bin/systemd-tmpfiles			--		gen_context(system_u:object_r:systemd_tmpfiles_exec_t,s0)
+/usr/bin/systemd-tty-ask-password-agent		--		gen_context(system_u:object_r:systemd_passwd_agent_exec_t,s0)
+
+/usr/lib/systemd/system(/.*)?		gen_context(system_u:object_r:systemd_unit_file_t,s0)
+/usr/lib/systemd/systemd-logind	--	gen_context(system_u:object_r:systemd_logind_exec_t,s0)
+/usr/lib/systemd/systemd-logger	--	gen_context(system_u:object_r:systemd_logger_exec_t,s0)
+/usr/lib/systemd/systemd-tmpfiles --	gen_context(system_u:object_r:systemd_tmpfiles_exec_t,s0)
+
+/var/run/nologin		gen_context(system_u:object_r:systemd_logind_var_run_t,s0)
+/var/run/systemd/seats(/.*)?	gen_context(system_u:object_r:systemd_logind_var_run_t,s0)
+/var/run/systemd/sessions(/.*)?	gen_context(system_u:object_r:systemd_logind_sessions_t,s0)
+/var/run/systemd/users(/.*)?	gen_context(system_u:object_r:systemd_logind_var_run_t,s0)
+/var/run/systemd/ask-password-block(/.*)?	gen_context(system_u:object_r:systemd_passwd_var_run_t,s0)
+/var/run/systemd/ask-password(/.*)?	gen_context(system_u:object_r:systemd_passwd_var_run_t,s0)
+/var/run/initramfs(/.*)?	<<none>>
diff --git a/policy/modules/system/systemd.if b/policy/modules/system/systemd.if
new file mode 100644
index 0000000..2497606
--- /dev/null
+++ b/policy/modules/system/systemd.if
@@ -0,0 +1,697 @@
+## <summary>SELinux policy for systemd components</summary>
+
+#######################################
+## <summary>
+##      Create a domain for processes which are started 
+##      exuting systemctl.
+## </summary>
+## <param name="domain_prefix">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`systemd_systemctl_domain',`
+        gen_require(`
+                type systemd_systemctl_exec_t;
+                role system_r;
+		attribute systemctl_domain;
+        ')
+
+	type $1_systemctl_t, systemctl_domain;
+	domain_type($1_systemctl_t)
+	domain_entry_file($1_systemctl_t, systemd_systemctl_exec_t)	
+
+	role system_r types $1_systemctl_t;
+
+	domtrans_pattern($1_t, systemd_systemctl_exec_t , $1_systemctl_t)
+')
+
+########################################
+## <summary>
+##      Execute systemctl in the caller domain.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`systemd_exec_systemctl',`
+        gen_require(`
+                type systemd_systemctl_exec_t;
+        ')
+
+	corecmd_search_bin($1)
+	can_exec($1, systemd_systemctl_exec_t)
+
+	fs_list_cgroup_dirs($1)
+	fs_read_cgroup_files($1)
+	systemd_list_unit_dirs($1)
+	init_list_pid_dirs($1)
+	init_read_state($1)
+	init_stream_send($1)
+	init_stream_connect($1)
+
+	systemd_login_list_pid_dirs($1)
+	systemd_login_read_pid_files($1)
+')
+
+#######################################
+## <summary>
+##      Create a file type used for systemd unit files.
+## </summary>
+## <param name="script_file">
+##      <summary>
+##      Type to be used for an unit file.
+##      </summary>
+## </param>
+#
+interface(`systemd_unit_file',`
+        gen_require(`
+                attribute systemd_unit_file_type;
+        ')
+
+        typeattribute $1 systemd_unit_file_type;
+	files_type($1)
+')
+
+######################################
+## <summary>
+##      Allow domain to search systemd unit dirs.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`systemd_search_unit_dirs',`
+        gen_require(`
+                attribute systemd_unit_file_type;
+        ')
+	
+	files_search_var_lib($1)
+	allow $1 systemd_unit_file_type:dir search_dir_perms;
+')
+
+######################################
+## <summary>
+##      Allow domain to list systemd unit dirs.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`systemd_list_unit_dirs',`
+        gen_require(`
+                attribute systemd_unit_file_type;
+        ')
+	
+	files_search_var_lib($1)
+	allow $1 systemd_unit_file_type:dir list_dir_perms;
+')
+
+#####################################
+## <summary>
+##      Allow domain to getattr all systemd unit files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`systemd_getattr_unit_files',`
+        gen_require(`
+                attribute systemd_unit_file_type;
+        ')
+
+    files_search_var_lib($1)
+    allow $1 systemd_unit_file_type:file getattr_file_perms;
+')
+
+######################################
+## <summary>
+##      Allow domain to read all systemd unit files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`systemd_read_unit_files',`
+        gen_require(`
+                attribute systemd_unit_file_type;
+        ')
+	
+	files_search_var_lib($1)
+	allow $1 systemd_unit_file_type:file read_file_perms;
+	allow $1 systemd_unit_file_type:lnk_file read_lnk_file_perms;
+	allow $1 systemd_unit_file_type:dir list_dir_perms;
+')
+
+#####################################
+## <summary>
+##      Dontaudit domain to read all systemd unit files.
+## </summary>
+## <param name="domain">
+##      <summary>
+##	Domain to not audit.
+##      </summary>
+## </param>
+#
+interface(`systemd_dontaudit_read_unit_files',`
+        gen_require(`
+                attribute systemd_unit_file_type;
+        ')
+
+        dontaudit $1 systemd_unit_file_type:file read_file_perms;
+')
+
+######################################
+## <summary>
+##	Read systemd_login PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`systemd_login_read_pid_files',`
+	gen_require(`
+		type systemd_logind_var_run_t;
+	')
+
+	files_search_pids($1)
+	read_files_pattern($1, systemd_logind_var_run_t, systemd_logind_var_run_t)
+')
+
+######################################
+## <summary>
+##	Read systemd_login PID files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`systemd_login_list_pid_dirs',`
+	gen_require(`
+		type systemd_logind_var_run_t;
+	')
+
+	files_search_pids($1)
+	list_dirs_pattern($1, systemd_logind_var_run_t, systemd_logind_var_run_t)
+')
+
+######################################
+## <summary>
+##	Use and and inherited systemd
+##	logind file descriptors.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`systemd_use_fds_logind',`
+	gen_require(`
+		type systemd_logind_t;
+	')
+
+	allow $1 systemd_logind_t:fd use;
+')
+
+######################################
+## <summary>
+##	Read logind sessions files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`systemd_read_logind_sessions_files',`
+	gen_require(`
+		type systemd_logind_sessions_t;
+	')
+
+	init_search_pid_dirs($1)
+	allow $1 systemd_logind_sessions_t:dir list_dir_perms;
+	read_files_pattern($1, systemd_logind_sessions_t, systemd_logind_sessions_t)
+')
+
+######################################
+## <summary>
+##	Write inherited logind sessions pipes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`systemd_write_inherited_logind_sessions_pipes',`
+	gen_require(`
+		type systemd_logind_sessions_t;
+	')
+
+	allow $1 systemd_logind_sessions_t:fifo_file write;
+')
+
+########################################
+## <summary>
+##	Send and receive messages from
+##	systemd logind over dbus.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`systemd_dbus_chat_logind',`
+	gen_require(`
+		type systemd_logind_t;
+		class dbus send_msg;
+	')
+
+	allow $1 systemd_logind_t:dbus send_msg;
+	allow systemd_logind_t $1:dbus send_msg;
+	ps_process_pattern(systemd_logind_t, $1)
+	allow systemd_logind_t $1:process signal;
+')
+
+#######################################
+## <summary>
+##  Execute a domain transition to run systemd-tmpfiles.
+## </summary>
+## <param name="domain">
+## <summary>
+##  Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`systemd_tmpfiles_domtrans',`
+    gen_require(`
+        type systemd_tmpfiles_t, systemd_tmpfiles_exec_t;
+    ')
+
+    domtrans_pattern($1, systemd_tmpfiles_exec_t, systemd_tmpfiles_t)
+')
+
+########################################
+## <summary>
+##	Execute a domain transition to run systemd-tty-ask-password-agent.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`systemd_passwd_agent_domtrans',`
+	gen_require(`
+		type systemd_passwd_agent_t, systemd_passwd_agent_exec_t;
+	')
+
+	domtrans_pattern($1, systemd_passwd_agent_exec_t, systemd_passwd_agent_t)
+')
+
+#######################################
+## <summary>
+##  Execute systemd-tty-ask-password-agent in the caller domain
+## </summary>
+## <param name="domain">
+## <summary>
+##  Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`systemd_passwd_agent_exec',`
+    gen_require(`
+        type systemd_passwd_agent_t, systemd_passwd_agent_exec_t;
+    ')
+
+	can_exec($1, systemd_passwd_agent_exec_t)
+')
+
+########################################
+## <summary>
+##	Execute a domain transition to run systemd_notify.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`systemd_notify_domtrans',`
+	gen_require(`
+		type systemd_notify_t, systemd_notify_exec_t;
+	')
+
+	domtrans_pattern($1, systemd_notify_exec_t, systemd_notify_t)
+')
+
+########################################
+## <summary>
+##	Execute systemd-tty-ask-password-agent in the systemd_passwd_agent domain, and
+##	allow the specified role the systemd_passwd_agent domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	The role to be allowed the systemd_passwd_agent domain.
+##	</summary>
+## </param>
+#
+interface(`systemd_passwd_agent_run',`
+	gen_require(`
+		type systemd_passwd_agent_t;
+	')
+
+	systemd_passwd_agent_domtrans($1)
+	role $2 types systemd_passwd_agent_t;
+')
+
+########################################
+## <summary>
+##	Role access for systemd_passwd_agent
+## </summary>
+## <param name="role">
+##	<summary>
+##	Role allowed access
+##	</summary>
+## </param>
+## <param name="domain">
+##	<summary>
+##	User domain for the role
+##	</summary>
+## </param>
+#
+interface(`systemd_passwd_agent_role',`
+	gen_require(`
+              type systemd_passwd_agent_t;
+	')
+
+	role $1 types systemd_passwd_agent_t;
+
+	systemd_passwd_agent_domtrans($2)
+
+	ps_process_pattern($2, systemd_passwd_agent_t)
+	allow $2 systemd_passwd_agent_t:process signal;
+')
+
+########################################
+## <summary>
+##	Send generic signals to systemd_passwd_agent processes.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`systemd_signal_passwd_agent',`
+	gen_require(`
+              type systemd_passwd_agent_t;
+	')
+
+	allow $1 systemd_passwd_agent_t:process signal;
+')
+
+######################################
+## <summary>
+##  Allow to domain to read systemd-passwd pipe
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`systemd_read_fifo_file_passwd_run',`
+    gen_require(`
+        type systemd_passwd_var_run_t;
+    ')
+
+    init_search_pid_dirs($1)
+    read_sock_files_pattern($1, systemd_passwd_var_run_t, systemd_passwd_var_run_t)
+')
+
+#######################################
+## <summary>
+##  Send generic signals to systemd_passwd_agent processes.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`systemd_manage_passwd_run',`
+	gen_require(`
+		type systemd_passwd_agent_t;	
+		type systemd_passwd_var_run_t;
+	')
+
+	manage_files_pattern($1, systemd_passwd_var_run_t, systemd_passwd_var_run_t)
+	manage_sock_files_pattern($1, systemd_passwd_var_run_t, systemd_passwd_var_run_t)
+
+	allow systemd_passwd_agent_t $1:process signull;
+	allow systemd_passwd_agent_t $1:unix_dgram_socket sendto;
+')
+
+######################################
+## <summary>
+##  Template for temporary sockets and files in /dev/.systemd/ask-password
+##  which are used by systemd-passwd-agent
+## </summary>
+## <param name="userdomain_prefix">
+##  <summary>
+##  The prefix of the domain (e.g., user
+##  is the prefix for user_t).
+##  </summary>
+## </param>
+#
+interface(`systemd_passwd_agent_dev_template',`
+        gen_require(`
+                type systemd_passwd_agent_t;
+        ')
+
+	type systemd_$1_device_t;
+        files_type(systemd_$1_device_t)
+        dev_associate(systemd_$1_device_t)
+
+	dev_filetrans($1_t, systemd_$1_device_t, { file sock_file })
+	init_pid_filetrans($1_t, systemd_$1_device_t, { file sock_file })
+        allow $1_t systemd_$1_device_t:file manage_file_perms;
+        allow $1_t systemd_$1_device_t:sock_file manage_sock_file_perms;
+
+	allow systemd_passwd_agent_t $1_t:process signull;
+        allow systemd_passwd_agent_t $1_t:unix_dgram_socket sendto;
+	allow systemd_passwd_agent_t systemd_$1_device_t:sock_file write;
+        allow systemd_passwd_agent_t systemd_$1_device_t:file read_file_perms;
+')
+
+########################################
+## <summary>
+##	Allow the specified domain to connect to
+##	systemd_logger with a unix socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`systemd_logger_stream_connect',`
+	gen_require(`
+		type systemd_logger_t;
+	')
+
+	allow $1 systemd_logger_t:unix_stream_socket connectto;
+')
+
+########################################
+## <summary>
+##	manage systemd unit dirs
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`systemd_manage_unit_dirs',`
+	gen_require(`
+		attribute systemd_unit_file_type;
+	')
+
+	manage_dirs_pattern($1, systemd_unit_file_type, systemd_unit_file_type)
+')
+
+########################################
+## <summary>
+##	manage all systemd unit files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`systemd_manage_all_unit_files',`
+	gen_require(`
+		attribute systemd_unit_file_type;
+	')
+
+	manage_files_pattern($1, systemd_unit_file_type, systemd_unit_file_type)
+	manage_lnk_files_pattern($1, systemd_unit_file_type, systemd_unit_file_type)
+')
+
+########################################
+## <summary>
+##	manage all systemd unit lnk_files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`systemd_manage_all_unit_lnk_files',`
+	gen_require(`
+		attribute systemd_unit_file_type;
+	')
+
+	manage_lnk_files_pattern($1, systemd_unit_file_type, systemd_unit_file_type)
+')
+
+
+########################################
+## <summary>
+##	Allow the specified domain to connect to
+##	systemd_logger with a unix socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`systemd_config_all_services',`
+	gen_require(`
+		attribute systemd_unit_file_type;
+	')
+
+	allow $1 systemd_unit_file_type:service all_service_perms;
+')
+
+
+########################################
+## <summary>
+##	Transition to systemd named content
+## </summary>
+## <param name="domain">
+##	<summary>
+##      Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`systemd_filetrans_named_content',`
+	gen_require(`
+		type systemd_passwd_var_run_t;
+		type systemd_logind_var_run_t;
+	')
+
+	files_pid_filetrans($1, systemd_logind_var_run_t, file, "nologin")
+	init_named_pid_filetrans($1, systemd_passwd_var_run_t, dir, "ask-password-block")
+	init_named_pid_filetrans($1, systemd_passwd_var_run_t, dir, "ask-password")
+')
+
+########################################
+## <summary>
+##	Get the system status information from systemd_login
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`systemd_login_status',`
+	gen_require(`
+		type systemd_logind_t;
+	')
+
+	allow $1 systemd_logind_t:system status;
+')
+
+########################################
+## <summary>
+##	Tell systemd_login to reboot the system.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`systemd_login_reboot',`
+	gen_require(`
+		type systemd_logind_t;
+	')
+
+	allow $1 systemd_logind_t:system reboot;
+')
+
+########################################
+## <summary>
+##	Tell systemd_login to halt the system.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`systemd_login_halt',`
+	gen_require(`
+		type systemd_logind_t;
+	')
+
+	allow $1 systemd_logind_t:system halt;
+')
+
+########################################
+## <summary>
+##	Tell systemd_login to do an unknown access.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`systemd_login_undefined',`
+	gen_require(`
+		type systemd_logind_t;
+	')
+
+	allow $1 systemd_logind_t:system undefined;
+')
+
diff --git a/policy/modules/system/systemd.te b/policy/modules/system/systemd.te
new file mode 100644
index 0000000..eec7c72
--- /dev/null
+++ b/policy/modules/system/systemd.te
@@ -0,0 +1,423 @@
+policy_module(systemd, 1.0.0)
+
+#######################################
+#
+# Declarations
+#
+
+attribute systemd_unit_file_type;
+attribute systemd_domain;
+attribute systemctl_domain;
+
+type systemd_logger_t;
+type systemd_logger_exec_t;
+init_systemd_domain(systemd_logger_t, systemd_logger_exec_t)
+
+type systemd_logind_t;
+type systemd_logind_exec_t;
+init_systemd_domain(systemd_logind_t, systemd_logind_exec_t)
+
+# /run/systemd/sessions
+type systemd_logind_sessions_t;
+files_pid_file(systemd_logind_sessions_t)
+
+# /run/systemd/{seats, users}
+type systemd_logind_var_run_t;
+files_pid_file(systemd_logind_var_run_t)
+
+# domain for systemd-tty-ask-password-agent and systemd-gnome-ask-password-agent
+# systemd components
+
+type systemd_passwd_agent_t;
+type systemd_passwd_agent_exec_t;
+init_daemon_domain(systemd_passwd_agent_t, systemd_passwd_agent_exec_t)
+
+type systemd_passwd_var_run_t alias systemd_device_t;
+files_pid_file(systemd_passwd_var_run_t)
+
+# domain for systemd-tmpfiles component
+type systemd_tmpfiles_t;
+type systemd_tmpfiles_exec_t;
+init_systemd_domain(systemd_tmpfiles_t, systemd_tmpfiles_exec_t)
+
+type systemd_notify_t;
+type systemd_notify_exec_t;
+init_systemd_domain(systemd_notify_t, systemd_notify_exec_t)
+
+# type for systemd unit files
+type systemd_unit_file_t;
+systemd_unit_file(systemd_unit_file_t)
+
+# executable for systemctl
+type systemd_systemctl_exec_t;
+corecmd_executable_file(systemd_systemctl_exec_t)
+
+#######################################
+#
+# Systemd_logind local policy
+#
+
+# dac_override is for /run/user/$USER ($USER ownership is $USER:$USER)
+allow systemd_logind_t self:capability { chown kill dac_override fowner sys_tty_config };
+allow systemd_logind_t self:process getcap;
+allow systemd_logind_t self:netlink_kobject_uevent_socket create_socket_perms;
+allow systemd_logind_t self:unix_dgram_socket create_socket_perms;
+
+manage_dirs_pattern(systemd_logind_t, { systemd_logind_sessions_t systemd_logind_var_run_t }, { systemd_logind_sessions_t systemd_logind_var_run_t })
+manage_files_pattern(systemd_logind_t, { systemd_logind_sessions_t systemd_logind_var_run_t }, { systemd_logind_var_run_t systemd_logind_sessions_t })
+manage_fifo_files_pattern(systemd_logind_t, systemd_logind_sessions_t, { systemd_logind_sessions_t systemd_logind_var_run_t })
+init_named_pid_filetrans(systemd_logind_t, systemd_logind_sessions_t, dir, "sessions")
+init_pid_filetrans(systemd_logind_t, systemd_logind_var_run_t, dir)
+init_status(systemd_logind_t)
+init_reboot(systemd_logind_t)
+init_halt(systemd_logind_t)
+init_undefined(systemd_logind_t)
+
+kernel_read_system_state(systemd_logind_t)
+
+dev_getattr_all_chr_files(systemd_logind_t)
+dev_getattr_all_blk_files(systemd_logind_t)
+dev_rw_sysfs(systemd_logind_t)
+dev_rw_input_dev(systemd_logind_t)
+dev_setattr_all_chr_files(systemd_logind_t)
+dev_setattr_dri_dev(systemd_logind_t)
+dev_setattr_generic_usb_dev(systemd_logind_t)
+dev_setattr_input_dev(systemd_logind_t)
+dev_setattr_kvm_dev(systemd_logind_t)
+dev_setattr_mouse_dev(systemd_logind_t)
+dev_setattr_sound_dev(systemd_logind_t)
+dev_setattr_video_dev(systemd_logind_t)
+dev_write_kmsg(systemd_logind_t)
+
+domain_read_all_domains_state(systemd_logind_t)
+
+# /etc/udev/udev.conf should probably have a private type if only for confined administration
+# /etc/nsswitch.conf
+files_read_etc_files(systemd_logind_t)
+
+# /sys/fs/cgroup/systemd/user
+fs_manage_cgroup_dirs(systemd_logind_t)
+# write getattr open setattr
+fs_manage_cgroup_files(systemd_logind_t)
+
+mcs_killall(systemd_logind_t)
+
+storage_setattr_removable_dev(systemd_logind_t)
+storage_setattr_scsi_generic_dev(systemd_logind_t)
+
+term_use_unallocated_ttys(systemd_logind_t)
+
+# /run/user/.*
+# Actually only have proof of it creating dirs and symlinks (/run/user/$USER/X11/display)
+auth_manage_var_auth(systemd_logind_t)
+auth_use_nsswitch(systemd_logind_t)
+
+authlogin_read_state(systemd_logind_t)
+
+init_dbus_chat(systemd_logind_t)
+init_dbus_chat_script(systemd_logind_t)
+init_read_script_state(systemd_logind_t)
+init_read_state(systemd_logind_t)
+init_rw_stream_sockets(systemd_logind_t)
+
+logging_send_syslog_msg(systemd_logind_t)
+
+miscfiles_read_localization(systemd_logind_t)
+
+udev_read_db(systemd_logind_t)
+udev_manage_rules_files(systemd_logind_t)
+
+userdom_read_all_users_state(systemd_logind_t)
+userdom_use_user_ttys(systemd_logind_t)
+userdom_manage_user_tmp_dirs(systemd_logind_t)
+userdom_manage_user_tmp_files(systemd_logind_t)
+userdom_manage_user_tmp_symlinks(systemd_logind_t)
+userdom_manage_user_tmp_sockets(systemd_logind_t)
+userdom_signal_all_users(systemd_logind_t)
+userdom_signull_all_users(systemd_logind_t)
+userdom_kill_all_users(systemd_logind_t)
+
+application_signal(systemd_logind_t)
+application_signull(systemd_logind_t)
+application_sigkill(systemd_logind_t)
+
+optional_policy(`
+	cron_dbus_chat_crond(systemd_logind_t)
+	cron_read_state_crond(systemd_logind_t)
+	cron_signal(systemd_logind_t)
+')
+
+optional_policy(`
+	dbus_connect_system_bus(systemd_logind_t)
+	dbus_system_bus_client(systemd_logind_t)
+')
+
+optional_policy(`
+	devicekit_dbus_chat_power(systemd_logind_t)
+')
+
+optional_policy(`
+	# we label /run/user/$USER/dconf as config_home_t
+	gnome_manage_home_config_dirs(systemd_logind_t)
+	gnome_manage_home_config(systemd_logind_t)
+	gnome_list_gkeyringd_tmp_dirs(systemd_logind_t)
+')
+
+optional_policy(`
+	policykit_dbus_chat(systemd_logind_t)
+')
+
+optional_policy(`
+	# It links /run/user/$USER/X11/display to /tmp/.X11-unix/X* sock_file
+	xserver_search_xdm_tmp_dirs(systemd_logind_t)
+')
+
+#######################################
+#
+# Local policy
+#
+
+allow systemd_passwd_agent_t self:capability { chown sys_tty_config dac_override };
+allow systemd_passwd_agent_t self:process { setfscreate setsockcreate signal };
+allow systemd_passwd_agent_t self:unix_dgram_socket create_socket_perms;
+
+manage_dirs_pattern(systemd_passwd_agent_t, systemd_passwd_var_run_t, systemd_passwd_var_run_t);
+manage_files_pattern(systemd_passwd_agent_t, systemd_passwd_var_run_t, systemd_passwd_var_run_t);
+manage_sock_files_pattern(systemd_passwd_agent_t, systemd_passwd_var_run_t, systemd_passwd_var_run_t);
+manage_fifo_files_pattern(systemd_passwd_agent_t, systemd_passwd_var_run_t, systemd_passwd_var_run_t);
+init_pid_filetrans(systemd_passwd_agent_t, systemd_passwd_var_run_t, { dir fifo_file file })
+
+kernel_stream_connect(systemd_passwd_agent_t)
+
+files_read_etc_files(systemd_passwd_agent_t)
+
+dev_create_generic_dirs(systemd_passwd_agent_t)
+dev_read_generic_files(systemd_passwd_agent_t)
+dev_write_generic_sock_files(systemd_passwd_agent_t)
+
+term_read_console(systemd_passwd_agent_t)
+
+auth_use_nsswitch(systemd_passwd_agent_t)
+
+init_create_pid_dirs(systemd_passwd_agent_t)
+init_rw_pipes(systemd_passwd_agent_t)
+init_read_utmp(systemd_passwd_agent_t)
+init_stream_connect(systemd_passwd_agent_t)
+
+miscfiles_read_localization(systemd_passwd_agent_t)
+
+userdom_use_user_ptys(systemd_passwd_agent_t)
+
+optional_policy(`
+	lvm_signull(systemd_passwd_agent_t)
+')
+
+optional_policy(`
+	plymouthd_stream_connect(systemd_passwd_agent_t)
+')
+
+#######################################
+#
+# Local policy
+#
+
+allow systemd_tmpfiles_t self:capability { chown dac_override fsetid fowner mknod };
+allow systemd_tmpfiles_t self:process { setfscreate };
+
+allow systemd_tmpfiles_t self:unix_dgram_socket create_socket_perms;
+
+kernel_read_network_state(systemd_tmpfiles_t)
+kernel_request_load_module(systemd_tmpfiles_t)
+
+dev_write_kmsg(systemd_tmpfiles_t)
+dev_rw_sysfs(systemd_tmpfiles_t)
+dev_relabel_all_sysfs(systemd_tmpfiles_t)
+dev_relabel_cpu_online(systemd_tmpfiles_t)
+dev_read_cpu_online(systemd_tmpfiles_t)
+dev_manage_printer(systemd_tmpfiles_t)
+dev_relabel_printer(systemd_tmpfiles_t)
+
+domain_obj_id_change_exemption(systemd_tmpfiles_t)
+
+# systemd-tmpfiles relabel /run/lock and creates /run/lock/lockdev
+fs_manage_tmpfs_dirs(systemd_tmpfiles_t)
+fs_relabel_tmpfs_dirs(systemd_tmpfiles_t)
+fs_list_all(systemd_tmpfiles_t)
+
+files_read_etc_files(systemd_tmpfiles_t)
+files_getattr_all_dirs(systemd_tmpfiles_t)
+files_getattr_all_files(systemd_tmpfiles_t)
+files_getattr_all_sockets(systemd_tmpfiles_t)
+files_getattr_all_symlinks(systemd_tmpfiles_t)
+files_relabel_all_lock_dirs(systemd_tmpfiles_t)
+files_relabel_all_pid_dirs(systemd_tmpfiles_t)
+files_relabel_all_pid_files(systemd_tmpfiles_t)
+files_manage_all_pids(systemd_tmpfiles_t)
+files_manage_all_pid_dirs(systemd_tmpfiles_t)
+files_manage_all_locks(systemd_tmpfiles_t)
+files_read_generic_tmp_symlinks(systemd_tmpfiles_t)
+files_setattr_all_tmp_dirs(systemd_tmpfiles_t)
+files_delete_boot_flag(systemd_tmpfiles_t)
+files_delete_all_non_security_files(systemd_tmpfiles_t)
+files_delete_all_pid_sockets(systemd_tmpfiles_t)
+files_delete_all_pid_pipes(systemd_tmpfiles_t)
+files_purge_tmp(systemd_tmpfiles_t)
+files_manage_generic_tmp_files(systemd_tmpfiles_t)
+files_manage_generic_tmp_dirs(systemd_tmpfiles_t)
+files_relabelfrom_tmp_dirs(systemd_tmpfiles_t)
+files_relabelfrom_tmp_files(systemd_tmpfiles_t)
+files_relabel_all_tmp_dirs(systemd_tmpfiles_t)
+files_relabel_all_tmp_files(systemd_tmpfiles_t)
+files_list_lost_found(systemd_tmpfiles_t)
+
+mcs_file_read_all(systemd_tmpfiles_t)
+mcs_file_write_all(systemd_tmpfiles_t)
+mls_file_read_all_levels(systemd_tmpfiles_t)
+mls_file_write_all_levels(systemd_tmpfiles_t)
+
+selinux_get_enforce_mode(systemd_tmpfiles_t)
+
+auth_manage_faillog(systemd_tmpfiles_t)
+auth_relabel_faillog(systemd_tmpfiles_t)
+auth_manage_var_auth(systemd_tmpfiles_t)
+auth_relabel_var_auth_dirs(systemd_tmpfiles_t)
+auth_relabel_login_records(systemd_tmpfiles_t)
+auth_setattr_login_records(systemd_tmpfiles_t)
+auth_use_nsswitch(systemd_tmpfiles_t)
+
+init_dgram_send(systemd_tmpfiles_t)
+init_rw_stream_sockets(systemd_tmpfiles_t)
+
+logging_create_devlog_dev(systemd_tmpfiles_t)
+logging_send_syslog_msg(systemd_tmpfiles_t)
+
+miscfiles_filetrans_named_content(systemd_tmpfiles_t)
+miscfiles_manage_man_pages(systemd_tmpfiles_t)
+miscfiles_relabel_man_pages(systemd_tmpfiles_t)
+miscfiles_read_localization(systemd_tmpfiles_t)
+
+seutil_read_config(systemd_tmpfiles_t)
+seutil_read_file_contexts(systemd_tmpfiles_t)
+
+ifdef(`distro_redhat',`
+	userdom_list_user_home_content(systemd_tmpfiles_t)
+	userdom_delete_all_user_home_content_dirs(systemd_tmpfiles_t)
+	userdom_delete_all_user_home_content_files(systemd_tmpfiles_t)
+	userdom_delete_all_user_home_content_sock_files(systemd_tmpfiles_t)
+	userdom_delete_all_user_home_content_symlinks(systemd_tmpfiles_t)
+	userdom_delete_admin_home_files(systemd_tmpfiles_t)
+')
+
+optional_policy(`
+	apache_delete_sys_content_rw(systemd_tmpfiles_t)
+	apache_list_cache(systemd_tmpfiles_t)
+	apache_delete_cache_dirs(systemd_tmpfiles_t)
+	apache_delete_cache_files(systemd_tmpfiles_t)
+	apache_setattr_cache_dirs(systemd_tmpfiles_t)
+')
+
+
+optional_policy(`
+    auth_rw_login_records(systemd_tmpfiles_t)
+')
+
+optional_policy(`
+	# we have /run/user/$USER/dconf 
+	gnome_delete_home_config(systemd_tmpfiles_t)
+	gnome_delete_home_config_dirs(systemd_tmpfiles_t)
+	gnome_setattr_home_config_dirs(systemd_tmpfiles_t)
+')
+
+optional_policy(`
+	rpm_read_db(systemd_tmpfiles_t)
+	rpm_delete_db(systemd_tmpfiles_t)
+')
+
+optional_policy(`
+	sandbox_list(systemd_tmpfiles_t)
+	sandbox_delete_dirs(systemd_tmpfiles_t)
+	sandbox_delete_files(systemd_tmpfiles_t)
+	sandbox_delete_lnk_files(systemd_tmpfiles_t)
+	sandbox_delete_pipes(systemd_tmpfiles_t)
+	sandbox_delete_sock_files(systemd_tmpfiles_t)
+	sandbox_setattr_dirs(systemd_tmpfiles_t)
+')
+
+########################################
+#
+# systemd_notify local policy
+#
+allow systemd_notify_t self:capability chown;
+allow systemd_notify_t self:process { fork setfscreate setsockcreate };
+
+allow systemd_notify_t self:fifo_file rw_fifo_file_perms;
+allow systemd_notify_t self:unix_stream_socket create_stream_socket_perms;
+
+domain_use_interactive_fds(systemd_notify_t)
+
+files_read_etc_files(systemd_notify_t)
+files_read_usr_files(systemd_notify_t)
+
+fs_getattr_cgroup_files(systemd_notify_t)
+
+auth_use_nsswitch(systemd_notify_t)
+
+init_rw_stream_sockets(systemd_notify_t)
+
+miscfiles_read_localization(systemd_notify_t)
+
+optional_policy(`
+	readahead_manage_pid_files(systemd_notify_t)
+')
+
+########################################
+#
+# systemd_logger local policy
+#
+
+allow systemd_logger_t self:capability { sys_admin chown kill };
+allow systemd_logger_t self:process { fork setfscreate setsockcreate };
+
+allow systemd_logger_t self:fifo_file rw_fifo_file_perms;
+allow systemd_logger_t self:unix_stream_socket create_stream_socket_perms;
+
+kernel_use_fds(systemd_logger_t)
+
+dev_write_kmsg(systemd_logger_t)
+
+domain_use_interactive_fds(systemd_logger_t)
+
+files_read_etc_files(systemd_logger_t)
+files_read_usr_files(systemd_logger_t)
+
+# only needs write
+term_use_generic_ptys(systemd_logger_t)
+
+auth_use_nsswitch(systemd_logger_t)
+
+# /run/systemd/notify
+init_write_pid_socket(systemd_logger_t)
+
+logging_send_syslog_msg(systemd_logger_t)
+
+miscfiles_read_localization(systemd_logger_t)
+
+
+########################################
+#
+# systemd_sysctl domains local policy
+#
+
+allow systemctl_domain systemd_unit_file_type:dir search_dir_perms;
+
+fs_list_cgroup_dirs(systemctl_domain)
+fs_read_cgroup_files(systemctl_domain)
+
+# needed by systemctl
+init_dgram_send(systemctl_domain)
+init_stream_connect(systemctl_domain)
+init_read_state(systemctl_domain)
+init_list_pid_dirs(systemctl_domain)
+init_use_fds(systemctl_domain)
+
+miscfiles_read_localization(systemctl_domain)
diff --git a/policy/modules/system/udev.fc b/policy/modules/system/udev.fc
index 2575393..49fd32e 100644
--- a/policy/modules/system/udev.fc
+++ b/policy/modules/system/udev.fc
@@ -1,6 +1,8 @@
-/dev/\.udev(/.*)? --	gen_context(system_u:object_r:udev_tbl_t,s0)
-/dev/\.udevdb	--	gen_context(system_u:object_r:udev_tbl_t,s0)
-/dev/udev\.tbl	--	gen_context(system_u:object_r:udev_tbl_t,s0)
+/bin/udevadm	--	gen_context(system_u:object_r:udev_exec_t,s0)
+
+/dev/\.udev(/.*)? --	gen_context(system_u:object_r:udev_var_run_t,s0)
+/dev/\.udevdb	--	gen_context(system_u:object_r:udev_var_run_t,s0)
+/dev/udev\.tbl	--	gen_context(system_u:object_r:udev_var_run_t,s0)
 
 /etc/dev\.d/.+	--	gen_context(system_u:object_r:udev_helper_exec_t,s0)
 
@@ -10,6 +12,7 @@
 /etc/udev/scripts/.+ --	gen_context(system_u:object_r:udev_helper_exec_t,s0)
 
 /lib/udev/udev-acl --	gen_context(system_u:object_r:udev_exec_t,s0)
+/lib/udev/udevd	--	gen_context(system_u:object_r:udev_exec_t,s0)
 
 ifdef(`distro_debian',`
 /lib/udev/create_static_nodes -- gen_context(system_u:object_r:udev_exec_t,s0)
@@ -27,9 +30,23 @@ ifdef(`distro_redhat',`
 ')
 
 /usr/bin/udevinfo --	gen_context(system_u:object_r:udev_exec_t,s0)
-
-/var/run/PackageKit/udev(/.*)? gen_context(system_u:object_r:udev_var_run_t,s0)
-/var/run/udev(/.*)?	gen_context(system_u:object_r:udev_tbl_t,s0)
+/usr/bin/udevadm  --	gen_context(system_u:object_r:udev_exec_t,s0)
+
+/usr/sbin/start_udev 	--	gen_context(system_u:object_r:udev_exec_t,s0)
+/usr/sbin/udev		--	gen_context(system_u:object_r:udev_exec_t,s0)
+/usr/sbin/udevadm	--	gen_context(system_u:object_r:udev_exec_t,s0)
+/usr/sbin/udevd		--	gen_context(system_u:object_r:udev_exec_t,s0)
+/usr/sbin/udevsend	--	gen_context(system_u:object_r:udev_exec_t,s0)
+/usr/sbin/udevstart	--	gen_context(system_u:object_r:udev_exec_t,s0)
+/usr/sbin/wait_for_sysfs --	gen_context(system_u:object_r:udev_exec_t,s0)
+
+/usr/lib/systemd/systemd-udevd	--	gen_context(system_u:object_r:udev_exec_t,s0)
+/usr/lib/udev/udev-acl --	gen_context(system_u:object_r:udev_exec_t,s0)
+/usr/lib/udev/udevd	--	gen_context(system_u:object_r:udev_exec_t,s0)
+
+/var/run/PackageKit/udev(/.*)?	gen_context(system_u:object_r:udev_var_run_t,s0)
+/var/run/libgpod(/.*)?	        gen_context(system_u:object_r:udev_var_run_t,s0)    
+/var/run/udev(/.*)?		gen_context(system_u:object_r:udev_var_run_t,s0)
 
 ifdef(`distro_debian',`
 /var/run/xen-hotplug -d	gen_context(system_u:object_r:udev_var_run_t,s0)
diff --git a/policy/modules/system/udev.if b/policy/modules/system/udev.if
index 025348a..c15e57c 100644
--- a/policy/modules/system/udev.if
+++ b/policy/modules/system/udev.if
@@ -34,6 +34,7 @@ interface(`udev_domtrans',`
 	')
 
 	domtrans_pattern($1, udev_exec_t, udev_t)
+	allow $1 udev_t:process noatsecure;
 ')
 
 ########################################
@@ -88,8 +89,7 @@ interface(`udev_read_state',`
 	')
 
 	kernel_search_proc($1)
-	allow $1 udev_t:file read_file_perms;
-	allow $1 udev_t:lnk_file read_lnk_file_perms;
+	ps_process_pattern($1, udev_t)
 ')
 
 ########################################
@@ -160,10 +160,10 @@ interface(`udev_manage_rules_files',`
 #
 interface(`udev_dontaudit_search_db',`
 	gen_require(`
-		type udev_tbl_t;
+		type udev_var_run_t;
 	')
 
-	dontaudit $1 udev_tbl_t:dir search_dir_perms;
+	dontaudit $1 udev_var_run_t:dir search_dir_perms;
 ')
 
 ########################################
@@ -183,19 +183,32 @@ interface(`udev_dontaudit_search_db',`
 ## <infoflow type="read" weight="10"/>
 #
 interface(`udev_read_db',`
+	udev_read_pid_files($1)
+')
+
+########################################
+## <summary>
+##	Allow process to modify list of devices.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`udev_rw_db',`
 	gen_require(`
-		type udev_tbl_t;
+		type udev_var_run_t;
 	')
 
+	files_search_pids($1)
 	dev_list_all_dev_nodes($1)
-	allow $1 udev_tbl_t:dir list_dir_perms;
-	read_files_pattern($1, udev_tbl_t, udev_tbl_t)
-	read_lnk_files_pattern($1, udev_tbl_t, udev_tbl_t)
+	rw_files_pattern($1, udev_var_run_t, udev_var_run_t)
 ')
 
 ########################################
 ## <summary>
-##	Allow process to modify list of devices.
+##	Allow process to modify relabelto udev database
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -203,13 +216,36 @@ interface(`udev_read_db',`
 ##	</summary>
 ## </param>
 #
-interface(`udev_rw_db',`
+interface(`udev_relabelto_db',`
+	gen_require(`
+		type udev_var_run_t;
+	')
+
+	files_search_pids($1)
+	allow $1 udev_var_run_t:file relabelto_file_perms;
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete
+##	udev pid files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`udev_read_pid_files',`
 	gen_require(`
-		type udev_tbl_t;
+		type udev_var_run_t;
 	')
 
 	dev_list_all_dev_nodes($1)
-	allow $1 udev_tbl_t:file rw_file_perms;
+	files_search_pids($1)
+	allow $1 udev_var_run_t:dir list_dir_perms;
+	read_files_pattern($1, udev_var_run_t, udev_var_run_t)
+	read_lnk_files_pattern($1, udev_var_run_t, udev_var_run_t)
 ')
 
 ########################################
@@ -228,6 +264,84 @@ interface(`udev_manage_pid_files',`
 		type udev_var_run_t;
 	')
 
-	files_search_var_lib($1)
+	files_search_pids($1)
 	manage_files_pattern($1, udev_var_run_t, udev_var_run_t)
 ')
+
+#######################################
+## <summary>
+##  Execute udev in the udev domain, and
+##  allow the specified role the udev domain.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <param name="role">
+##  <summary>
+##  The role to be allowed the iptables domain.
+##  </summary>
+## </param>
+## <rolecap/>
+#
+interface(`udev_run',`
+    gen_require(`
+        type udev_t;
+    ')
+
+    udev_domtrans($1)
+    role $2 types udev_t;
+')
+
+#######################################
+## <summary>
+##	Allow caller to create kobject uevent socket for udev
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`udev_create_kobject_uevent_socket',`
+	gen_require(`
+		type udev_t;
+		role system_r;
+	')
+
+	allow $1 udev_t:netlink_kobject_uevent_socket create_socket_perms;
+')
+
+########################################
+## <summary>
+##	Create a domain for processes
+##	which can be started by udev.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Type to be used as a domain.
+##	</summary>
+## </param>
+## <param name="entry_point">
+##	<summary>
+##	Type of the program to be used as an entry point to this domain.
+##	</summary>
+## </param>
+#
+interface(`udev_system_domain',`
+	gen_require(`
+		type udev_t;
+		role system_r;
+	')
+
+	domain_type($1)
+	domain_entry_file($1, $2)
+
+	role system_r types $1;
+
+	domtrans_pattern(udev_t, $2, $1)
+
+	dontaudit $1 udev_t:unix_dgram_socket { read write };
+')
+
diff --git a/policy/modules/system/udev.te b/policy/modules/system/udev.te
index cf279df..5cd1cf1 100644
--- a/policy/modules/system/udev.te
+++ b/policy/modules/system/udev.te
@@ -17,14 +17,12 @@ init_daemon_domain(udev_t, udev_exec_t)
 type udev_etc_t alias etc_udev_t;
 files_config_file(udev_etc_t)
 
-type udev_tbl_t alias udev_tdb_t;
-files_type(udev_tbl_t)
-
 type udev_rules_t;
 files_type(udev_rules_t)
 
 type udev_var_run_t;
 files_pid_file(udev_var_run_t)
+typealias udev_var_run_t alias udev_tbl_t;
 
 ifdef(`enable_mcs',`
 	kernel_ranged_domtrans_to(udev_t, udev_exec_t, s0 - mcs_systemhigh)
@@ -36,9 +34,10 @@ ifdef(`enable_mcs',`
 # Local policy
 #
 
-allow udev_t self:capability { chown dac_override dac_read_search fowner fsetid sys_admin mknod net_raw net_admin sys_nice sys_rawio sys_resource setuid setgid sys_nice sys_ptrace };
+allow udev_t self:capability { chown dac_override dac_read_search fowner fsetid sys_admin mknod net_raw net_admin sys_nice sys_rawio sys_resource setuid setgid sys_nice };
 dontaudit udev_t self:capability sys_tty_config;
-allow udev_t self:process ~{ setcurrent setexec setfscreate setrlimit execmem execstack execheap };
+
+allow udev_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
 allow udev_t self:process { execmem setfscreate };
 allow udev_t self:fd use;
 allow udev_t self:fifo_file rw_fifo_file_perms;
@@ -52,6 +51,7 @@ allow udev_t self:unix_dgram_socket sendto;
 allow udev_t self:unix_stream_socket connectto;
 allow udev_t self:netlink_kobject_uevent_socket create_socket_perms;
 allow udev_t self:rawip_socket create_socket_perms;
+allow udev_t self:netlink_socket create_socket_perms;
 
 allow udev_t udev_exec_t:file write;
 can_exec(udev_t, udev_exec_t)
@@ -62,31 +62,35 @@ can_exec(udev_t, udev_helper_exec_t)
 # read udev config
 allow udev_t udev_etc_t:file read_file_perms;
 
-# create udev database in /dev/.udevdb
-allow udev_t udev_tbl_t:file manage_file_perms;
-dev_filetrans(udev_t, udev_tbl_t, file)
-
 list_dirs_pattern(udev_t, udev_rules_t, udev_rules_t)
-read_files_pattern(udev_t, udev_rules_t, udev_rules_t)
+manage_files_pattern(udev_t, udev_rules_t, udev_rules_t)
+manage_lnk_files_pattern(udev_t, udev_rules_t, udev_rules_t)
 
 manage_dirs_pattern(udev_t, udev_var_run_t, udev_var_run_t)
+manage_sock_files_pattern(udev_t, udev_var_run_t, udev_var_run_t)
 manage_files_pattern(udev_t, udev_var_run_t, udev_var_run_t)
 manage_lnk_files_pattern(udev_t, udev_var_run_t, udev_var_run_t)
-files_pid_filetrans(udev_t, udev_var_run_t, { dir file })
+files_pid_filetrans(udev_t, udev_var_run_t, { file dir })
+allow udev_t udev_var_run_t:file mounton;
+dev_filetrans(udev_t, udev_var_run_t, { file lnk_file } )
 
+kernel_load_module(udev_t)
 kernel_read_system_state(udev_t)
 kernel_request_load_module(udev_t)
 kernel_getattr_core_if(udev_t)
 kernel_use_fds(udev_t)
 kernel_read_device_sysctls(udev_t)
+kernel_read_fs_sysctls(udev_t)
 kernel_read_hotplug_sysctls(udev_t)
 kernel_read_modprobe_sysctls(udev_t)
 kernel_read_kernel_sysctls(udev_t)
 kernel_rw_hotplug_sysctls(udev_t)
 kernel_rw_unix_dgram_sockets(udev_t)
 kernel_dgram_send(udev_t)
-kernel_signal(udev_t)
 kernel_search_debugfs(udev_t)
+kernel_setsched(udev_t)
+kernel_stream_connect(udev_t)
+kernel_signal(udev_t)
 
 #https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=235182
 kernel_rw_net_sysctls(udev_t)
@@ -97,6 +101,7 @@ corecmd_exec_all_executables(udev_t)
 
 dev_rw_sysfs(udev_t)
 dev_manage_all_dev_nodes(udev_t)
+dev_rw_generic_usb_dev(udev_t)
 dev_rw_generic_files(udev_t)
 dev_delete_generic_files(udev_t)
 dev_search_usbfs(udev_t)
@@ -105,23 +110,31 @@ dev_relabel_all_dev_nodes(udev_t)
 # preserved, instead of short circuiting the relabel
 dev_relabel_generic_symlinks(udev_t)
 dev_manage_generic_symlinks(udev_t)
+dev_filetrans_all_named_dev(udev_t)
 
 domain_read_all_domains_state(udev_t)
-domain_dontaudit_ptrace_all_domains(udev_t) #pidof triggers these
 
 files_read_usr_files(udev_t)
 files_read_etc_runtime_files(udev_t)
-files_read_etc_files(udev_t)
+files_read_kernel_modules(udev_t)
+files_read_system_conf_files(udev_t)
+
+
+# console_init manages files in /etc/sysconfig
+files_manage_etc_files(udev_t)
 files_exec_etc_files(udev_t)
+files_exec_usr_files(udev_t)
 files_dontaudit_search_isid_type_dirs(udev_t)
 files_getattr_generic_locks(udev_t)
 files_search_mnt(udev_t)
+files_list_tmp(udev_t)
 
 fs_getattr_all_fs(udev_t)
 fs_list_inotifyfs(udev_t)
 fs_rw_anon_inodefs_files(udev_t)
-
-mcs_ptrace_all(udev_t)
+fs_list_auto_mountpoints(udev_t)
+fs_list_hugetlbfs(udev_t)
+fs_read_cgroup_files(udev_t)
 
 mls_file_read_all_levels(udev_t)
 mls_file_write_all_levels(udev_t)
@@ -143,6 +156,7 @@ auth_use_nsswitch(udev_t)
 init_read_utmp(udev_t)
 init_dontaudit_write_utmp(udev_t)
 init_getattr_initctl(udev_t)
+init_stream_connect(udev_t)
 
 logging_search_logs(udev_t)
 logging_send_syslog_msg(udev_t)
@@ -154,6 +168,8 @@ miscfiles_read_hwdata(udev_t)
 modutils_domtrans_insmod(udev_t)
 # read modules.inputmap:
 modutils_read_module_deps(udev_t)
+modutils_list_module_config(udev_t)
+modutils_read_module_config(udev_t)
 
 seutil_read_config(udev_t)
 seutil_read_default_contexts(udev_t)
@@ -169,6 +185,8 @@ sysnet_signal_dhcpc(udev_t)
 sysnet_manage_config(udev_t)
 sysnet_etc_filetrans_config(udev_t)
 
+systemd_login_read_pid_files(udev_t)
+
 userdom_dontaudit_search_user_home_content(udev_t)
 
 ifdef(`distro_gentoo',`
@@ -178,16 +196,9 @@ ifdef(`distro_gentoo',`
 ')
 
 ifdef(`distro_redhat',`
-	fs_manage_tmpfs_dirs(udev_t)
-	fs_manage_tmpfs_files(udev_t)
-	fs_manage_tmpfs_symlinks(udev_t)
-	fs_manage_tmpfs_sockets(udev_t)
-	fs_manage_tmpfs_blk_files(udev_t)
-	fs_manage_tmpfs_chr_files(udev_t)
-	fs_relabel_tmpfs_blk_file(udev_t)
-	fs_relabel_tmpfs_chr_file(udev_t)
+	fs_manage_hugetlbfs_dirs(udev_t)
 
-	term_search_ptys(udev_t)
+	term_use_generic_ptys(udev_t)
 
 	# for arping used for static IP addresses on PCMCIA ethernet
 	netutils_domtrans(udev_t)
@@ -216,11 +227,16 @@ optional_policy(`
 ')
 
 optional_policy(`
+	consolekit_read_pid_files(udev_t)
+')
+
+optional_policy(`
 	consoletype_exec(udev_t)
 ')
 
 optional_policy(`
 	cups_domtrans_config(udev_t)
+	cups_read_config(udev_t)
 ')
 
 optional_policy(`
@@ -230,10 +246,20 @@ optional_policy(`
 optional_policy(`
 	devicekit_read_pid_files(udev_t)
 	devicekit_dgram_send(udev_t)
+	devicekit_domtrans_disk(udev_t)
+')
+
+optional_policy(`
+	gnome_read_home_config(udev_t)
+')
+
+optional_policy(`
+	gpsd_domtrans(udev_t)
 ')
 
 optional_policy(`
 	lvm_domtrans(udev_t)
+	lvm_dgram_send(udev_t)
 ')
 
 optional_policy(`
@@ -259,6 +285,10 @@ optional_policy(`
 ')
 
 optional_policy(`
+	networkmanager_dbus_chat(udev_t)
+')
+
+optional_policy(`
 	openct_read_pid_files(udev_t)
 	openct_domtrans(udev_t)
 ')
@@ -273,6 +303,11 @@ optional_policy(`
 ')
 
 optional_policy(`
+	usbmuxd_domtrans(udev_t)
+	usbmuxd_stream_connect(udev_t)
+')
+
+optional_policy(`
 	unconfined_signal(udev_t)
 ')
 
@@ -285,6 +320,7 @@ optional_policy(`
 	kernel_read_xen_state(udev_t)
 	xen_manage_log(udev_t)
 	xen_read_image_files(udev_t)
+	xen_stream_connect_xenstore(udev_t)
 ')
 
 optional_policy(`
diff --git a/policy/modules/system/unconfined.fc b/policy/modules/system/unconfined.fc
index 0abaf84..8b34dbc 100644
--- a/policy/modules/system/unconfined.fc
+++ b/policy/modules/system/unconfined.fc
@@ -1,21 +1 @@
 # Add programs here which should not be confined by SELinux
-# e.g.:
-# /usr/local/bin/appsrv		--	gen_context(system_u:object_r:unconfined_exec_t,s0)
-# For the time being until someone writes a sane policy, we need initrc to transition to unconfined_t
-/usr/bin/valgrind 		--	gen_context(system_u:object_r:unconfined_execmem_exec_t,s0)
-/usr/bin/vncserver		--	gen_context(system_u:object_r:unconfined_exec_t,s0)
-
-/usr/lib/ia32el/ia32x_loader 	--	gen_context(system_u:object_r:unconfined_execmem_exec_t,s0)
-/usr/lib/openoffice\.org.*/program/.+\.bin -- gen_context(system_u:object_r:unconfined_execmem_exec_t,s0)
-
-/usr/local/RealPlayer/realplay\.bin --	gen_context(system_u:object_r:unconfined_execmem_exec_t,s0)
-
-ifdef(`distro_debian',`
-/usr/bin/gcj-dbtool-4\.1	--	gen_context(system_u:object_r:unconfined_execmem_exec_t,s0)
-/usr/bin/gij-4\.1		--	gen_context(system_u:object_r:unconfined_execmem_exec_t,s0)
-/usr/lib/openoffice/program/soffice\.bin -- gen_context(system_u:object_r:unconfined_execmem_exec_t,s0)
-')
-
-ifdef(`distro_gentoo',`
-/usr/lib/openoffice/program/[^/]+\.bin -- gen_context(system_u:object_r:unconfined_execmem_exec_t,s0)
-')
diff --git a/policy/modules/system/unconfined.if b/policy/modules/system/unconfined.if
index db7aabb..2ffcae9 100644
--- a/policy/modules/system/unconfined.if
+++ b/policy/modules/system/unconfined.if
@@ -12,53 +12,59 @@
 #
 interface(`unconfined_domain_noaudit',`
 	gen_require(`
-		type unconfined_t;
 		class dbus all_dbus_perms;
 		class nscd all_nscd_perms;
 		class passwd all_passwd_perms;
 	')
 
-	# Use most Linux capabilities
-	allow $1 self:capability ~sys_module;
-	allow $1 self:fifo_file manage_fifo_file_perms;
+	# Use any Linux capability.
+
+	allow $1 self:capability ~{ sys_module };
+	allow $1 self:capability2 syslog;
+	allow $1 self:fifo_file { manage_fifo_file_perms relabelfrom relabelto };
 
 	# Transition to myself, to make get_ordered_context_list happy.
-	allow $1 self:process transition;
+	allow $1 self:process { dyntransition transition };
 
 	# Write access is for setting attributes under /proc/self/attr.
 	allow $1 self:file rw_file_perms;
+	allow $1 self:dir rw_dir_perms;
 
 	# Userland object managers
-	allow $1 self:nscd *;
-	allow $1 self:dbus *;
-	allow $1 self:passwd *;
-	allow $1 self:association *;
+	allow $1 self:nscd all_nscd_perms;
+	allow $1 self:dbus all_dbus_perms;
+	allow $1 self:passwd all_passwd_perms;
+	allow $1 self:association all_association_perms;
+	allow $1 self:socket_class_set create_socket_perms;
 
 	kernel_unconfined($1)
 	corenet_unconfined($1)
 	dev_unconfined($1)
 	domain_unconfined($1)
-	domain_dontaudit_read_all_domains_state($1)
-	domain_dontaudit_ptrace_all_domains($1)
 	files_unconfined($1)
 	fs_unconfined($1)
 	selinux_unconfined($1)
+	systemd_config_all_services($1)
+
+	domain_mmap_low($1)
+
+	mcs_file_read_all($1)
 
-	tunable_policy(`allow_execheap',`
+	ubac_process_exempt($1)
+
+	tunable_policy(`selinuxuser_execheap',`
 		# Allow making the stack executable via mprotect.
 		allow $1 self:process execheap;
 	')
 
-	tunable_policy(`allow_execmem',`
+	tunable_policy(`deny_execmem',`',`
 		# Allow making anonymous memory executable, e.g. 
 		# for runtime-code generation or executable stack.
 		allow $1 self:process execmem;
 	')
 
-	tunable_policy(`allow_execstack',`
-		# Allow making the stack executable via mprotect;
-		# execstack implies execmem;
-		allow $1 self:process { execstack execmem };
+	tunable_policy(`selinuxuser_execstack',`
+		allow $1 self:process execstack;
 #		auditallow $1 self:process execstack;
 	')
 
@@ -69,6 +75,7 @@ interface(`unconfined_domain_noaudit',`
 	optional_policy(`
 		# Communicate via dbusd.
 		dbus_system_bus_unconfined($1)
+		dbus_unconfined($1)
 	')
 
 	optional_policy(`
@@ -122,9 +129,13 @@ interface(`unconfined_domain_noaudit',`
 ## </param>
 #
 interface(`unconfined_domain',`
+	gen_require(`
+		attribute unconfined_services;
+	')	
+
 	unconfined_domain_noaudit($1)
 
-	tunable_policy(`allow_execheap',`
+	tunable_policy(`selinuxuser_execheap',`
 		auditallow $1 self:process execheap;
 	')
 ')
@@ -150,7 +161,7 @@ interface(`unconfined_domain',`
 ## </param>
 #
 interface(`unconfined_alias_domain',`
-	refpolicywarn(`$0($1) has been deprecated.')
+	refpolicywarn(`$0() has been deprecated.')
 ')
 
 ########################################
@@ -176,414 +187,5 @@ interface(`unconfined_alias_domain',`
 ## </param>
 #
 interface(`unconfined_execmem_alias_program',`
-	refpolicywarn(`$0($1) has been deprecated.')
-')
-
-########################################
-## <summary>
-##	Transition to the unconfined domain.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed to transition.
-##	</summary>
-## </param>
-#
-interface(`unconfined_domtrans',`
-	gen_require(`
-		type unconfined_t, unconfined_exec_t;
-	')
-
-	domtrans_pattern($1, unconfined_exec_t, unconfined_t)
-')
-
-########################################
-## <summary>
-##	Execute specified programs in the unconfined domain.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed to transition.
-##	</summary>
-## </param>
-## <param name="role">
-##	<summary>
-##	The role to allow the unconfined domain.
-##	</summary>
-## </param>
-#
-interface(`unconfined_run',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	unconfined_domtrans($1)
-	role $2 types unconfined_t;
-')
-
-########################################
-## <summary>
-##	Transition to the unconfined domain by executing a shell.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed to transition.
-##	</summary>
-## </param>
-#
-interface(`unconfined_shell_domtrans',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	corecmd_shell_domtrans($1, unconfined_t)
-	allow unconfined_t $1:fd use;
-	allow unconfined_t $1:fifo_file rw_file_perms;
-	allow unconfined_t $1:process sigchld;
-')
-
-########################################
-## <summary>
-##	Allow unconfined to execute the specified program in
-##	the specified domain.
-## </summary>
-## <desc>
-##	<p>
-##	Allow unconfined to execute the specified program in
-##	the specified domain.
-##	</p>
-##	<p>
-##	This is a interface to support third party modules
-##	and its use is not allowed in upstream reference
-##	policy.
-##	</p>
-## </desc>
-## <param name="domain">
-##	<summary>
-##	Domain to execute in.
-##	</summary>
-## </param>
-## <param name="entry_file">
-##	<summary>
-##	Domain entry point file.
-##	</summary>
-## </param>
-#
-interface(`unconfined_domtrans_to',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	domtrans_pattern(unconfined_t,$2,$1)
-')
-
-########################################
-## <summary>
-##	Allow unconfined to execute the specified program in
-##	the specified domain.  Allow the specified domain the
-##	unconfined role and use of unconfined user terminals.
-## </summary>
-## <desc>
-##	<p>
-##	Allow unconfined to execute the specified program in
-##	the specified domain.  Allow the specified domain the
-##	unconfined role and use of unconfined user terminals.
-##	</p>
-##	<p>
-##	This is a interface to support third party modules
-##	and its use is not allowed in upstream reference
-##	policy.
-##	</p>
-## </desc>
-## <param name="domain">
-##	<summary>
-##	Domain to execute in.
-##	</summary>
-## </param>
-## <param name="entry_file">
-##	<summary>
-##	Domain entry point file.
-##	</summary>
-## </param>
-#
-interface(`unconfined_run_to',`
-	gen_require(`
-		type unconfined_t;
-		role unconfined_r;
-	')
-
-	domtrans_pattern(unconfined_t,$2,$1)
-	role unconfined_r types $1;
-	userdom_use_user_terminals($1)
-')
-
-########################################
-## <summary>
-##	Inherit file descriptors from the unconfined domain.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_use_fds',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	allow $1 unconfined_t:fd use;
-')
-
-########################################
-## <summary>
-##	Send a SIGCHLD signal to the unconfined domain.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_sigchld',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	allow $1 unconfined_t:process sigchld;
-')
-
-########################################
-## <summary>
-##	Send a SIGNULL signal to the unconfined domain.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_signull',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	allow $1 unconfined_t:process signull;
-')
-
-########################################
-## <summary>
-##	Send generic signals to the unconfined domain.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_signal',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	allow $1 unconfined_t:process signal;
-')
-
-########################################
-## <summary>
-##	Read unconfined domain unnamed pipes.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_read_pipes',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	allow $1 unconfined_t:fifo_file read_fifo_file_perms;
-')
-
-########################################
-## <summary>
-##	Do not audit attempts to read unconfined domain unnamed pipes.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain to not audit.
-##	</summary>
-## </param>
-#
-interface(`unconfined_dontaudit_read_pipes',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	dontaudit $1 unconfined_t:fifo_file read;
-')
-
-########################################
-## <summary>
-##	Read and write unconfined domain unnamed pipes.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_rw_pipes',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	allow $1 unconfined_t:fifo_file rw_fifo_file_perms;
-')
-
-########################################
-## <summary>
-##	Do not audit attempts to read and write
-##	unconfined domain unnamed pipes.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain to not audit.
-##	</summary>
-## </param>
-#
-interface(`unconfined_dontaudit_rw_pipes',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	dontaudit $1 unconfined_t:fifo_file rw_file_perms;
-')
-
-########################################
-## <summary>
-##	Connect to the unconfined domain using
-##	a unix domain stream socket.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_stream_connect',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	allow $1 unconfined_t:unix_stream_socket connectto;
-')
-
-########################################
-## <summary>
-##	Do not audit attempts to read or write
-##	unconfined domain tcp sockets.
-## </summary>
-## <desc>
-##	<p>
-##	Do not audit attempts to read or write
-##	unconfined domain tcp sockets.
-##	</p>
-##	<p>
-##	This interface was added due to a broken
-##	symptom in ldconfig.
-##	</p>
-## </desc>
-## <param name="domain">
-##	<summary>
-##	Domain to not audit.
-##	</summary>
-## </param>
-#
-interface(`unconfined_dontaudit_rw_tcp_sockets',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	dontaudit $1 unconfined_t:tcp_socket { read write };
-')
-
-########################################
-## <summary>
-##	Create keys for the unconfined domain.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_create_keys',`
-	gen_require(`
-		type unconfined_t;
-	')
-
-	allow $1 unconfined_t:key create;
-')
-
-########################################
-## <summary>
-##	Send messages to the unconfined domain over dbus.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_dbus_send',`
-	gen_require(`
-		type unconfined_t;
-		class dbus send_msg;
-	')
-
-	allow $1 unconfined_t:dbus send_msg;
-')
-
-########################################
-## <summary>
-##	Send and receive messages from
-##	unconfined_t over dbus.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_dbus_chat',`
-	gen_require(`
-		type unconfined_t;
-		class dbus send_msg;
-	')
-
-	allow $1 unconfined_t:dbus send_msg;
-	allow unconfined_t $1:dbus send_msg;
-')
-
-########################################
-## <summary>
-##	Connect to the the unconfined DBUS
-##	for service (acquire_svc).
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`unconfined_dbus_connect',`
-	gen_require(`
-		type unconfined_t;
-		class dbus acquire_svc;
-	')
-
-	allow $1 unconfined_t:dbus acquire_svc;
+	refpolicywarn(`$0() has been deprecated.')
 ')
diff --git a/policy/modules/system/unconfined.te b/policy/modules/system/unconfined.te
index 4f60203..71e46b2 100644
--- a/policy/modules/system/unconfined.te
+++ b/policy/modules/system/unconfined.te
@@ -1,240 +1,7 @@
-policy_module(unconfined, 3.4.1)
+policy_module(unconfined, 3.3.0)
 
 ########################################
 #
 # Declarations
 #
-
-# usage in this module of types created by these
-# calls is not correct, however we dont currently
-# have another method to add access to these types
-userdom_base_user_template(unconfined)
-userdom_manage_home_role(unconfined_r, unconfined_t)
-userdom_manage_tmp_role(unconfined_r, unconfined_t)
-userdom_manage_tmpfs_role(unconfined_r, unconfined_t)
-
-type unconfined_exec_t;
-init_system_domain(unconfined_t, unconfined_exec_t)
-
-type unconfined_execmem_t;
-type unconfined_execmem_exec_t;
-init_system_domain(unconfined_execmem_t, unconfined_execmem_exec_t)
-role unconfined_r types unconfined_execmem_t;
-
-########################################
-#
-# Local policy
-#
-
-domtrans_pattern(unconfined_t, unconfined_execmem_exec_t, unconfined_execmem_t)
-
-files_create_boot_flag(unconfined_t)
-
-mcs_killall(unconfined_t)
-mcs_ptrace_all(unconfined_t)
-
-init_run_daemon(unconfined_t, unconfined_r)
-
-libs_run_ldconfig(unconfined_t, unconfined_r)
-
-logging_send_syslog_msg(unconfined_t)
-logging_run_auditctl(unconfined_t, unconfined_r)
-
-mount_run_unconfined(unconfined_t, unconfined_r)
-
-seutil_run_setfiles(unconfined_t, unconfined_r)
-seutil_run_semanage(unconfined_t, unconfined_r)
-
-unconfined_domain(unconfined_t)
-
-userdom_user_home_dir_filetrans_user_home_content(unconfined_t, { dir file lnk_file fifo_file sock_file })
-
-ifdef(`distro_gentoo',`
-	seutil_run_runinit(unconfined_t, unconfined_r)
-	seutil_init_script_run_runinit(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	ada_domtrans(unconfined_t)
-')
-
-optional_policy(`
-	apache_run_helper(unconfined_t, unconfined_r)
-	apache_role(unconfined_r, unconfined_t)
-')
-
-optional_policy(`
-	bind_run_ndc(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	bootloader_run(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	cron_unconfined_role(unconfined_r, unconfined_t)
-')
-
-optional_policy(`
-	init_dbus_chat_script(unconfined_t)
-
-	dbus_stub(unconfined_t)
-
-	optional_policy(`
-		avahi_dbus_chat(unconfined_t)
-	')
-
-	optional_policy(`
-		bluetooth_dbus_chat(unconfined_t)
-	')
-
-	optional_policy(`
-		consolekit_dbus_chat(unconfined_t)
-	')
-
-	optional_policy(`
-		cups_dbus_chat_config(unconfined_t)
-	')
-
-	optional_policy(`
-		hal_dbus_chat(unconfined_t)
-	')
-
-	optional_policy(`
-		networkmanager_dbus_chat(unconfined_t)
-	')
-
-	optional_policy(`
-		oddjob_dbus_chat(unconfined_t)
-	')
-')
-
-optional_policy(`
-	firstboot_run(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	ftp_run_ftpdctl(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	hadoop_role(unconfined_r, unconfined_t)
-')
-
-optional_policy(`
-	inn_domtrans(unconfined_t)
-')
-
-optional_policy(`
-	java_run_unconfined(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	lpd_run_checkpc(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	modutils_run_update_mods(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	mono_domtrans(unconfined_t)
-')
-
-optional_policy(`
-	mta_role(unconfined_r, unconfined_t)
-')
-
-optional_policy(`
-	oddjob_domtrans_mkhomedir(unconfined_t)
-')
-
-optional_policy(`
-	portage_run(unconfined_t, unconfined_r)
-	portage_run_fetch(unconfined_t, unconfined_r)
-	portage_run_gcc_config(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	prelink_run(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	portmap_run_helper(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	postfix_run_map(unconfined_t, unconfined_r)
-	# cjp: this should probably be removed:
-	postfix_domtrans_master(unconfined_t)
-')
-
-optional_policy(`
-	pyzor_role(unconfined_r, unconfined_t)
-')
-
-optional_policy(`
-	# cjp: this should probably be removed:
-	rpc_domtrans_nfsd(unconfined_t)
-')
-
-optional_policy(`
-	rpm_run(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	samba_run_net(unconfined_t, unconfined_r)
-	samba_run_winbind_helper(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	spamassassin_role(unconfined_r, unconfined_t)
-')
-
-optional_policy(`
-	sysnet_run_dhcpc(unconfined_t, unconfined_r)
-	sysnet_dbus_chat_dhcpc(unconfined_t)
-')
-
-optional_policy(`
-	tzdata_run(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	usermanage_run_admin_passwd(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	vpn_run(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	webalizer_run(unconfined_t, unconfined_r)
-')
-
-optional_policy(`
-	wine_domtrans(unconfined_t)
-')
-
-optional_policy(`
-	xserver_domtrans(unconfined_t)
-')
-
-########################################
-#
-# Unconfined Execmem Local policy
-#
-
-allow unconfined_execmem_t self:process { execstack execmem };
-unconfined_domain_noaudit(unconfined_execmem_t)
-
-optional_policy(`
-	dbus_stub(unconfined_execmem_t)
-
-	init_dbus_chat_script(unconfined_execmem_t)
-	unconfined_dbus_chat(unconfined_execmem_t)
-
-	optional_policy(`
-		hal_dbus_chat(unconfined_execmem_t)
-	')
-')
+attribute unconfined_services;
diff --git a/policy/modules/system/userdomain.fc b/policy/modules/system/userdomain.fc
index db75976..ce61aed 100644
--- a/policy/modules/system/userdomain.fc
+++ b/policy/modules/system/userdomain.fc
@@ -1,4 +1,20 @@
 HOME_DIR	-d	gen_context(system_u:object_r:user_home_dir_t,s0-mls_systemhigh)
+HOME_DIR	-l	gen_context(system_u:object_r:user_home_dir_t,s0-mls_systemhigh)
 HOME_DIR/.+		gen_context(system_u:object_r:user_home_t,s0)
-
 /tmp/gconfd-USER -d	gen_context(system_u:object_r:user_tmp_t,s0)
+/root(/.*)?	 	gen_context(system_u:object_r:admin_home_t,s0)
+/root/\.cert(/.*)?	gen_context(system_u:object_r:home_cert_t,s0)
+/root/\.debug(/.*)?	<<none>>
+/dev/shm/pulse-shm.*	gen_context(system_u:object_r:user_tmpfs_t,s0)
+/dev/shm/mono.*		gen_context(system_u:object_r:user_tmpfs_t,s0)
+HOME_DIR/bin(/.*)?	gen_context(system_u:object_r:home_bin_t,s0)
+HOME_DIR/\.local/bin(/.*)?	gen_context(system_u:object_r:home_bin_t,s0)
+HOME_DIR/Audio(/.*)?    gen_context(system_u:object_r:audio_home_t,s0)
+HOME_DIR/Music(/.*)?    gen_context(system_u:object_r:audio_home_t,s0)
+HOME_DIR/\.cert(/.*)?	gen_context(system_u:object_r:home_cert_t,s0)
+HOME_DIR/.kde/share/apps/networkmanagement/certificates(/.*)?	gen_context(system_u:object_r:home_cert_t,s0)
+HOME_DIR/\.pki(/.*)?		gen_context(system_u:object_r:home_cert_t,s0)
+HOME_DIR/\.gvfs/.*	<<none>>
+HOME_DIR/\.debug(/.*)?	<<none>>
+
+/var/run/user(/.*)?	gen_context(system_u:object_r:user_tmp_t,s0)
diff --git a/policy/modules/system/userdomain.if b/policy/modules/system/userdomain.if
index e720dcd..3361868 100644
--- a/policy/modules/system/userdomain.if
+++ b/policy/modules/system/userdomain.if
@@ -30,9 +30,11 @@ template(`userdom_base_user_template',`
 	')
 
 	attribute $1_file_type;
+	attribute $1_usertype;
 
-	type $1_t, userdomain;
+	type $1_t, userdomain, $1_usertype;
 	domain_type($1_t)
+	role $1_r;
 	corecmd_shell_entry_type($1_t)
 	corecmd_bin_entry_type($1_t)
 	domain_user_exemption_target($1_t)
@@ -44,79 +46,134 @@ template(`userdom_base_user_template',`
 	term_user_pty($1_t, user_devpts_t)
 
 	term_user_tty($1_t, user_tty_device_t)
-
-	allow $1_t self:process { signal_perms getsched setsched share getpgid setpgid setcap getsession getattr };
-	allow $1_t self:fd use;
-	allow $1_t self:fifo_file rw_fifo_file_perms;
-	allow $1_t self:unix_dgram_socket { create_socket_perms sendto };
-	allow $1_t self:unix_stream_socket { create_stream_socket_perms connectto };
-	allow $1_t self:shm create_shm_perms;
-	allow $1_t self:sem create_sem_perms;
-	allow $1_t self:msgq create_msgq_perms;
-	allow $1_t self:msg { send receive };
-	allow $1_t self:context contains;
-	dontaudit $1_t self:socket create;
-
-	allow $1_t user_devpts_t:chr_file { setattr rw_chr_file_perms };
-	term_create_pty($1_t, user_devpts_t)
+	term_dontaudit_getattr_generic_ptys($1_t)
+
+	allow $1_usertype $1_usertype:process { signal_perms getsched setsched share getpgid setpgid getcap setcap getsession getattr };
+	tunable_policy(`deny_ptrace',`',`
+		allow $1_usertype $1_usertype:process ptrace;
+	')
+	allow $1_usertype $1_usertype:fd use;
+	allow $1_usertype $1_t:key { create view read write search link setattr };
+
+	allow $1_usertype $1_usertype:fifo_file rw_fifo_file_perms;
+	allow $1_usertype $1_usertype:unix_dgram_socket { create_socket_perms sendto };
+	allow $1_usertype $1_usertype:unix_stream_socket { create_stream_socket_perms connectto };
+	allow $1_usertype $1_usertype:shm create_shm_perms;
+	allow $1_usertype $1_usertype:sem create_sem_perms;
+	allow $1_usertype $1_usertype:msgq create_msgq_perms;
+	allow $1_usertype $1_usertype:msg { send receive };
+	allow $1_usertype $1_usertype:context contains;
+	dontaudit $1_usertype $1_usertype:socket create;
+
+	allow $1_usertype user_devpts_t:chr_file { setattr rw_chr_file_perms };
+	term_create_pty($1_usertype, user_devpts_t)
 	# avoid annoying messages on terminal hangup on role change
-	dontaudit $1_t user_devpts_t:chr_file ioctl;
+	dontaudit $1_usertype user_devpts_t:chr_file ioctl;
 
-	allow $1_t user_tty_device_t:chr_file { setattr rw_chr_file_perms };
+	allow $1_usertype user_tty_device_t:chr_file { setattr rw_chr_file_perms };
 	# avoid annoying messages on terminal hangup on role change
-	dontaudit $1_t user_tty_device_t:chr_file ioctl;
-
-	kernel_read_kernel_sysctls($1_t)
-	kernel_dontaudit_list_unlabeled($1_t)
-	kernel_dontaudit_getattr_unlabeled_files($1_t)
-	kernel_dontaudit_getattr_unlabeled_symlinks($1_t)
-	kernel_dontaudit_getattr_unlabeled_pipes($1_t)
-	kernel_dontaudit_getattr_unlabeled_sockets($1_t)
-	kernel_dontaudit_getattr_unlabeled_blk_files($1_t)
-	kernel_dontaudit_getattr_unlabeled_chr_files($1_t)
-
-	dev_dontaudit_getattr_all_blk_files($1_t)
-	dev_dontaudit_getattr_all_chr_files($1_t)
+	dontaudit $1_usertype user_tty_device_t:chr_file ioctl;
+
+	application_exec_all($1_usertype)
+
+	kernel_read_kernel_sysctls($1_usertype)
+	kernel_read_all_sysctls($1_usertype)
+	kernel_dontaudit_list_unlabeled($1_usertype)
+	kernel_dontaudit_getattr_unlabeled_files($1_usertype)
+	kernel_dontaudit_getattr_unlabeled_symlinks($1_usertype)
+	kernel_dontaudit_getattr_unlabeled_pipes($1_usertype)
+	kernel_dontaudit_getattr_unlabeled_sockets($1_usertype)
+	kernel_dontaudit_getattr_unlabeled_blk_files($1_usertype)
+	kernel_dontaudit_getattr_unlabeled_chr_files($1_usertype)
+	kernel_dontaudit_list_proc($1_usertype)
+
+	dev_dontaudit_getattr_all_blk_files($1_usertype)
+	dev_dontaudit_getattr_all_chr_files($1_usertype)
+	dev_getattr_mtrr_dev($1_t)
 
 	# When the user domain runs ps, there will be a number of access
 	# denials when ps tries to search /proc. Do not audit these denials.
-	domain_dontaudit_read_all_domains_state($1_t)
-	domain_dontaudit_getattr_all_domains($1_t)
-	domain_dontaudit_getsession_all_domains($1_t)
-
-	files_read_etc_files($1_t)
-	files_read_etc_runtime_files($1_t)
-	files_read_usr_files($1_t)
+	domain_dontaudit_read_all_domains_state($1_usertype)
+	domain_dontaudit_getattr_all_domains($1_usertype)
+	domain_dontaudit_getsession_all_domains($1_usertype)
+	dev_dontaudit_all_access_check($1_usertype)
+
+	files_read_etc_files($1_usertype)
+	files_list_mnt($1_usertype)
+	files_list_var($1_usertype)
+	files_read_mnt_files($1_usertype)
+	files_dontaudit_access_check_mnt($1_usertype)
+	files_read_etc_runtime_files($1_usertype)
+	files_read_usr_files($1_usertype)
+	files_read_usr_src_files($1_usertype)
 	# Read directories and files with the readable_t type.
 	# This type is a general type for "world"-readable files.
-	files_list_world_readable($1_t)
-	files_read_world_readable_files($1_t)
-	files_read_world_readable_symlinks($1_t)
-	files_read_world_readable_pipes($1_t)
-	files_read_world_readable_sockets($1_t)
+	files_list_world_readable($1_usertype)
+	files_read_world_readable_files($1_usertype)
+	files_read_world_readable_symlinks($1_usertype)
+	files_read_world_readable_pipes($1_usertype)
+	files_read_world_readable_sockets($1_usertype)
 	# old broswer_domain():
-	files_dontaudit_list_non_security($1_t)
-	files_dontaudit_getattr_non_security_files($1_t)
-	files_dontaudit_getattr_non_security_symlinks($1_t)
-	files_dontaudit_getattr_non_security_pipes($1_t)
-	files_dontaudit_getattr_non_security_sockets($1_t)
+	files_dontaudit_getattr_all_dirs($1_usertype)
+	files_dontaudit_list_non_security($1_usertype)
+	files_dontaudit_getattr_all_files($1_usertype)
+	files_dontaudit_getattr_non_security_symlinks($1_usertype)
+	files_dontaudit_getattr_non_security_pipes($1_usertype)
+	files_dontaudit_getattr_non_security_sockets($1_usertype)
+	files_dontaudit_setattr_etc_runtime_files($1_usertype)
+
+	files_exec_usr_files($1_t)
+
+	fs_list_cgroup_dirs($1_usertype)
+	fs_dontaudit_rw_cgroup_files($1_usertype)
+
+	storage_rw_fuse($1_usertype)
+
+	auth_use_nsswitch($1_t)
+
+	init_stream_connect($1_usertype)
+	# The library functions always try to open read-write first,
+	# then fall back to read-only if it fails. 
+	init_dontaudit_rw_utmp($1_usertype)
 
-	libs_exec_ld_so($1_t)
+	libs_exec_ld_so($1_usertype)
+
+	logging_send_audit_msgs($1_t)
 
 	miscfiles_read_localization($1_t)
 	miscfiles_read_generic_certs($1_t)
 
-	sysnet_read_config($1_t)
+	miscfiles_read_all_certs($1_usertype)
+	miscfiles_read_localization($1_usertype)
+	miscfiles_read_man_pages($1_usertype)
+	miscfiles_read_public_files($1_usertype)
 
-	tunable_policy(`allow_execmem',`
+	systemd_dbus_chat_logind($1_usertype)
+	systemd_read_logind_sessions_files($1_usertype)
+
+	tunable_policy(`deny_execmem',`', `
 		# Allow loading DSOs that require executable stack.
 		allow $1_t self:process execmem;
 	')
 
-	tunable_policy(`allow_execmem && allow_execstack',`
+	tunable_policy(`selinuxuser_execstack',`
 		# Allow making the stack executable via mprotect.
 		allow $1_t self:process execstack;
 	')
+
+	optional_policy(`
+		abrt_stream_connect($1_usertype)
+	')
+
+	optional_policy(`
+		fs_list_cgroup_dirs($1_usertype)
+	')
+	
+	optional_policy(`
+		ssh_rw_stream_sockets($1_usertype)
+		ssh_delete_tmp($1_t)
+		ssh_signal($1_t)
+	')
 ')
 
 #######################################
@@ -150,6 +207,8 @@ interface(`userdom_ro_home_role',`
 		type user_home_t, user_home_dir_t;
 	')
 
+	role $1 types { user_home_t user_home_dir_t };
+
 	##############################
 	#
 	# Domain access to home dir
@@ -167,27 +226,6 @@ interface(`userdom_ro_home_role',`
 	read_sock_files_pattern($2, { user_home_t user_home_dir_t }, user_home_t)
 	files_list_home($2)
 
-	tunable_policy(`use_nfs_home_dirs',`
-		fs_list_nfs($2)
-		fs_read_nfs_files($2)
-		fs_read_nfs_symlinks($2)
-		fs_read_nfs_named_sockets($2)
-		fs_read_nfs_named_pipes($2)
-	',`
-		fs_dontaudit_list_nfs($2)
-		fs_dontaudit_read_nfs_files($2)
-	')
-
-	tunable_policy(`use_samba_home_dirs',`
-		fs_list_cifs($2)
-		fs_read_cifs_files($2)
-		fs_read_cifs_symlinks($2)
-		fs_read_cifs_named_sockets($2)
-		fs_read_cifs_named_pipes($2)
-	',`
-		fs_dontaudit_list_cifs($2)
-		fs_dontaudit_read_cifs_files($2)
-	')
 ')
 
 #######################################
@@ -219,8 +257,11 @@ interface(`userdom_ro_home_role',`
 interface(`userdom_manage_home_role',`
 	gen_require(`
 		type user_home_t, user_home_dir_t;
+		attribute user_home_type;
 	')
 
+	role $1 types { user_home_type user_home_dir_t };
+
 	##############################
 	#
 	# Domain access to home dir
@@ -229,43 +270,47 @@ interface(`userdom_manage_home_role',`
 	type_member $2 user_home_dir_t:dir user_home_dir_t;
 
 	# full control of the home directory
+	allow $2 user_home_t:dir mounton;
 	allow $2 user_home_t:file entrypoint;
-	manage_dirs_pattern($2, { user_home_dir_t user_home_t }, user_home_t)
-	manage_files_pattern($2, { user_home_dir_t user_home_t }, user_home_t)
-	manage_lnk_files_pattern($2, { user_home_dir_t user_home_t }, user_home_t)
-	manage_sock_files_pattern($2, { user_home_dir_t user_home_t }, user_home_t)
-	manage_fifo_files_pattern($2, { user_home_dir_t user_home_t }, user_home_t)
-	relabel_dirs_pattern($2, { user_home_dir_t user_home_t }, user_home_t)
-	relabel_files_pattern($2, { user_home_dir_t user_home_t }, user_home_t)
-	relabel_lnk_files_pattern($2, { user_home_dir_t user_home_t }, user_home_t)
-	relabel_sock_files_pattern($2, { user_home_dir_t user_home_t }, user_home_t)
-	relabel_fifo_files_pattern($2, { user_home_dir_t user_home_t }, user_home_t)
+
+	allow $2 user_home_type:dir_file_class_set { relabelto relabelfrom };
+	allow $2 user_home_dir_t:lnk_file read_lnk_file_perms;
+	manage_dirs_pattern($2, { user_home_dir_t user_home_type }, user_home_type)
+	manage_files_pattern($2, { user_home_dir_t user_home_type }, user_home_type)
+	manage_lnk_files_pattern($2, { user_home_dir_t user_home_type }, user_home_type)
+	manage_sock_files_pattern($2, { user_home_dir_t user_home_type }, user_home_type)
+	manage_fifo_files_pattern($2, { user_home_dir_t user_home_type }, user_home_type)
+	relabel_dirs_pattern($2, { user_home_dir_t user_home_type }, user_home_type)
+	relabel_files_pattern($2, { user_home_dir_t user_home_type }, user_home_type)
+	relabel_lnk_files_pattern($2, { user_home_dir_t user_home_type }, user_home_type)
+	relabel_sock_files_pattern($2, { user_home_dir_t user_home_type }, user_home_type)
+	relabel_fifo_files_pattern($2, { user_home_dir_t user_home_type }, user_home_type)
 	filetrans_pattern($2, user_home_dir_t, user_home_t, { dir file lnk_file sock_file fifo_file })
+	userdom_filetrans_home_content($2)
+
 	files_list_home($2)
 
 	# cjp: this should probably be removed:
 	allow $2 user_home_dir_t:dir { manage_dir_perms relabel_dir_perms };
 
 	tunable_policy(`use_nfs_home_dirs',`
+		fs_mount_nfs($2)
+		fs_mounton_nfs($2)
 		fs_manage_nfs_dirs($2)
 		fs_manage_nfs_files($2)
 		fs_manage_nfs_symlinks($2)
 		fs_manage_nfs_named_sockets($2)
 		fs_manage_nfs_named_pipes($2)
-	',`
-		fs_dontaudit_manage_nfs_dirs($2)
-		fs_dontaudit_manage_nfs_files($2)
 	')
 
 	tunable_policy(`use_samba_home_dirs',`
+		fs_mount_cifs($2)
+		fs_mounton_cifs($2)
 		fs_manage_cifs_dirs($2)
 		fs_manage_cifs_files($2)
 		fs_manage_cifs_symlinks($2)
 		fs_manage_cifs_named_sockets($2)
 		fs_manage_cifs_named_pipes($2)
-	',`
-		fs_dontaudit_manage_cifs_dirs($2)
-		fs_dontaudit_manage_cifs_files($2)
 	')
 ')
 
@@ -273,6 +318,25 @@ interface(`userdom_manage_home_role',`
 ## <summary>
 ##	Manage user temporary files
 ## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolebase/>
+#
+interface(`userdom_manage_tmp_files',`
+	gen_require(`
+		type user_tmp_t;
+	')
+
+	allow $1 user_tmp_t:file manage_file_perms;
+')
+
+#######################################
+## <summary>
+##	Manage user temporary files
+## </summary>
 ## <param name="role">
 ##	<summary>
 ##	Role allowed access.
@@ -287,17 +351,64 @@ interface(`userdom_manage_home_role',`
 #
 interface(`userdom_manage_tmp_role',`
 	gen_require(`
+		attribute user_tmp_type;
 		type user_tmp_t;
 	')
 
+	role $1 types user_tmp_t;
+
 	files_poly_member_tmp($2, user_tmp_t)
 
-	manage_dirs_pattern($2, user_tmp_t, user_tmp_t)
-	manage_files_pattern($2, user_tmp_t, user_tmp_t)
-	manage_lnk_files_pattern($2, user_tmp_t, user_tmp_t)
-	manage_sock_files_pattern($2, user_tmp_t, user_tmp_t)
-	manage_fifo_files_pattern($2, user_tmp_t, user_tmp_t)
+	allow $2 user_tmp_type:dir mounton;
+	manage_dirs_pattern($2, user_tmp_type, user_tmp_type)
+	manage_files_pattern($2, user_tmp_type, user_tmp_type)
+	manage_lnk_files_pattern($2, user_tmp_type, user_tmp_type)
+	manage_sock_files_pattern($2, user_tmp_type, user_tmp_type)
+	manage_fifo_files_pattern($2, user_tmp_type, user_tmp_type)
 	files_tmp_filetrans($2, user_tmp_t, { dir file lnk_file sock_file fifo_file })
+	relabel_dirs_pattern($2, user_tmp_type, user_tmp_type)
+	relabel_files_pattern($2, user_tmp_type, user_tmp_type)
+	relabel_lnk_files_pattern($2, user_tmp_type, user_tmp_type)
+	relabel_sock_files_pattern($2, user_tmp_type, user_tmp_type)
+	relabel_fifo_files_pattern($2, user_tmp_type, user_tmp_type)
+')
+
+#######################################
+## <summary>
+##	Dontaudit search of user bin dirs.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaudit_search_user_bin_dirs',`
+	gen_require(`
+		type home_bin_t;
+	')
+
+	dontaudit $1 home_bin_t:dir search_dir_perms;
+')
+
+#######################################
+## <summary>
+##	Execute user bin files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_exec_user_bin_files',`
+	gen_require(`
+		attribute user_home_type;
+		type home_bin_t, user_home_dir_t;
+	')
+
+	exec_files_pattern($1, { user_home_dir_t user_home_type }, home_bin_t)
+	files_search_home($1)
 ')
 
 #######################################
@@ -317,6 +428,7 @@ interface(`userdom_exec_user_tmp_files',`
 	')
 
 	exec_files_pattern($1, user_tmp_t, user_tmp_t)
+	dontaudit $1 user_tmp_t:sock_file execute;
 	files_search_tmp($1)
 ')
 
@@ -348,59 +460,62 @@ interface(`userdom_exec_user_tmp_files',`
 #
 interface(`userdom_manage_tmpfs_role',`
 	gen_require(`
+		attribute user_tmpfs_type;
 		type user_tmpfs_t;
 	')
 
-	manage_dirs_pattern($2, user_tmpfs_t, user_tmpfs_t)
-	manage_files_pattern($2, user_tmpfs_t, user_tmpfs_t)
-	manage_lnk_files_pattern($2, user_tmpfs_t, user_tmpfs_t)
-	manage_sock_files_pattern($2, user_tmpfs_t, user_tmpfs_t)
-	manage_fifo_files_pattern($2, user_tmpfs_t, user_tmpfs_t)
+	role $1 types user_tmpfs_t;
+
+	manage_dirs_pattern($2, user_tmpfs_type, user_tmpfs_type)
+	manage_files_pattern($2, user_tmpfs_type, user_tmpfs_type)
+	manage_lnk_files_pattern($2, user_tmpfs_type, user_tmpfs_type)
+	manage_sock_files_pattern($2, user_tmpfs_type, user_tmpfs_type)
+	manage_fifo_files_pattern($2, user_tmpfs_type, user_tmpfs_type)
 	fs_tmpfs_filetrans($2, user_tmpfs_t, { dir file lnk_file sock_file fifo_file })
+	relabel_dirs_pattern($2, user_tmpfs_type, user_tmpfs_type)
+	relabel_files_pattern($2, user_tmpfs_type, user_tmpfs_type)
+	relabel_lnk_files_pattern($2, user_tmpfs_type, user_tmpfs_type)
+	relabel_sock_files_pattern($2, user_tmpfs_type, user_tmpfs_type)
+	relabel_fifo_files_pattern($2, user_tmpfs_type, user_tmpfs_type)
 ')
 
 #######################################
 ## <summary>
-##	The template allowing the user basic
+##	The interface allowing the user basic
 ##	network permissions
 ## </summary>
-## <param name="userdomain_prefix">
+## <param name="userdomain">
 ##	<summary>
-##	The prefix of the user domain (e.g., user
-##	is the prefix for user_t).
+##	The user domain 
 ##	</summary>
 ## </param>
 ## <rolebase/>
 #
-template(`userdom_basic_networking_template',`
-	gen_require(`
-		type $1_t;
-	')
-
-	allow $1_t self:tcp_socket create_stream_socket_perms;
-	allow $1_t self:udp_socket create_socket_perms;
-
-	corenet_all_recvfrom_unlabeled($1_t)
-	corenet_all_recvfrom_netlabel($1_t)
-	corenet_tcp_sendrecv_generic_if($1_t)
-	corenet_udp_sendrecv_generic_if($1_t)
-	corenet_tcp_sendrecv_generic_node($1_t)
-	corenet_udp_sendrecv_generic_node($1_t)
-	corenet_tcp_sendrecv_all_ports($1_t)
-	corenet_udp_sendrecv_all_ports($1_t)
-	corenet_tcp_connect_all_ports($1_t)
-	corenet_sendrecv_all_client_packets($1_t)
-
-	corenet_all_recvfrom_labeled($1_t, $1_t)
+interface(`userdom_basic_networking',`
+
+	allow $1 self:tcp_socket create_stream_socket_perms;
+	allow $1 self:udp_socket create_socket_perms;
+
+	corenet_all_recvfrom_unlabeled($1)
+	corenet_all_recvfrom_netlabel($1)
+	corenet_tcp_sendrecv_generic_if($1)
+	corenet_udp_sendrecv_generic_if($1)
+	corenet_tcp_sendrecv_generic_node($1)
+	corenet_udp_sendrecv_generic_node($1)
+	corenet_tcp_sendrecv_all_ports($1)
+	corenet_udp_sendrecv_all_ports($1)
+	corenet_tcp_connect_all_ports($1)
+	corenet_sendrecv_all_client_packets($1)
 
 	optional_policy(`
-		init_tcp_recvfrom_all_daemons($1_t)
-		init_udp_recvfrom_all_daemons($1_t)
+		init_tcp_recvfrom_all_daemons($1)
+		init_udp_recvfrom_all_daemons($1)
 	')
 
 	optional_policy(`
-		ipsec_match_default_spd($1_t)
+		ipsec_match_default_spd($1)
 	')
+
 ')
 
 #######################################
@@ -431,6 +546,7 @@ template(`userdom_xwindows_client_template',`
 	dev_dontaudit_rw_dri($1_t)
 	# GNOME checks for usb and other devices:
 	dev_rw_usbfs($1_t)
+	dev_rw_generic_usb_dev($1_t)
 
 	xserver_user_x_domain_template($1, $1_t, user_tmpfs_t)
 	xserver_xsession_entry_type($1_t)
@@ -463,8 +579,8 @@ template(`userdom_change_password_template',`
 	')
 
 	optional_policy(`
-		usermanage_run_chfn($1_t, $1_r)
-		usermanage_run_passwd($1_t, $1_r)
+		usermanage_run_chfn($1_t,$1_r)
+		usermanage_run_passwd($1_t,$1_r)
 	')
 ')
 
@@ -491,7 +607,7 @@ template(`userdom_common_user_template',`
 		attribute unpriv_userdomain;
 	')
 
-	userdom_basic_networking_template($1)
+	userdom_basic_networking($1_usertype)
 
 	##############################
 	#
@@ -501,73 +617,83 @@ template(`userdom_common_user_template',`
 	# evolution and gnome-session try to create a netlink socket
 	dontaudit $1_t self:netlink_socket { create ioctl read getattr write setattr append bind connect getopt setopt shutdown };
 	dontaudit $1_t self:netlink_route_socket { create ioctl read getattr write setattr append bind connect getopt setopt shutdown nlmsg_read nlmsg_write };
+	allow $1_t self:netlink_kobject_uevent_socket create_socket_perms;
+	allow $1_t self:socket create_socket_perms;
 
-	allow $1_t unpriv_userdomain:fd use;
+	allow $1_usertype unpriv_userdomain:fd use;
 
-	kernel_read_system_state($1_t)
-	kernel_read_network_state($1_t)
-	kernel_read_net_sysctls($1_t)
+	kernel_read_system_state($1_usertype)
+	kernel_read_network_state($1_usertype)
+	kernel_read_software_raid_state($1_usertype)
+	kernel_read_net_sysctls($1_usertype)
 	# Very permissive allowing every domain to see every type:
-	kernel_get_sysvipc_info($1_t)
+	kernel_get_sysvipc_info($1_usertype)
 	# Find CDROM devices:
-	kernel_read_device_sysctls($1_t)
+	kernel_read_device_sysctls($1_usertype)
+	kernel_request_load_module($1_usertype)
 
-	corecmd_exec_bin($1_t)
+	corenet_udp_bind_generic_node($1_usertype)
+	corenet_udp_bind_generic_port($1_usertype)
 
-	corenet_udp_bind_generic_node($1_t)
-	corenet_udp_bind_generic_port($1_t)
+	dev_read_rand($1_usertype)
+	dev_write_sound($1_usertype)
+	dev_read_sound($1_usertype)
+	dev_read_sound_mixer($1_usertype)
+	dev_write_sound_mixer($1_usertype)
 
-	dev_read_rand($1_t)
-	dev_write_sound($1_t)
-	dev_read_sound($1_t)
-	dev_read_sound_mixer($1_t)
-	dev_write_sound_mixer($1_t)
-
-	files_exec_etc_files($1_t)
-	files_search_locks($1_t)
+	files_exec_etc_files($1_usertype)
+	files_search_locks($1_usertype)
 	# Check to see if cdrom is mounted
-	files_search_mnt($1_t)
+	files_search_mnt($1_usertype)
 	# cjp: perhaps should cut back on file reads:
-	files_read_var_files($1_t)
-	files_read_var_symlinks($1_t)
-	files_read_generic_spool($1_t)
-	files_read_var_lib_files($1_t)
+	files_read_var_files($1_usertype)
+	files_read_var_symlinks($1_usertype)
+	files_read_generic_spool($1_usertype)
+	files_read_var_lib_files($1_usertype)
 	# Stat lost+found.
-	files_getattr_lost_found_dirs($1_t)
+	files_getattr_lost_found_dirs($1_usertype)
+	files_read_config_files($1_usertype)
+	fs_read_noxattr_fs_files($1_usertype)
+	fs_read_noxattr_fs_symlinks($1_usertype)
+	fs_rw_cgroup_files($1_usertype)
+
+	application_getattr_socket($1_usertype)
 
-	fs_rw_cgroup_files($1_t)
+	logging_send_syslog_msg($1_usertype)
+	logging_send_audit_msgs($1_usertype)
+	selinux_get_enforce_mode($1_usertype)
 
 	# cjp: some of this probably can be removed
-	selinux_get_fs_mount($1_t)
-	selinux_validate_context($1_t)
-	selinux_compute_access_vector($1_t)
-	selinux_compute_create_context($1_t)
-	selinux_compute_relabel_context($1_t)
-	selinux_compute_user_contexts($1_t)
+	selinux_get_fs_mount($1_usertype)
+	selinux_validate_context($1_usertype)
+	selinux_compute_access_vector($1_usertype)
+	selinux_compute_create_context($1_usertype)
+	selinux_compute_relabel_context($1_usertype)
+	selinux_compute_user_contexts($1_usertype)
 
 	# for eject
-	storage_getattr_fixed_disk_dev($1_t)
+	storage_getattr_fixed_disk_dev($1_usertype)
 
-	auth_use_nsswitch($1_t)
-	auth_read_login_records($1_t)
-	auth_search_pam_console_data($1_t)
-	auth_run_pam($1_t, $1_r)
-	auth_run_utempter($1_t, $1_r)
+	auth_read_login_records($1_usertype)
+	auth_run_pam($1_t,$1_r)
+	auth_run_utempter($1_t,$1_r)
+	auth_filetrans_admin_home_content($1_t)
+	auth_filetrans_home_content($1_t)
 
-	init_read_utmp($1_t)
+	init_read_utmp($1_usertype)
 
-	seutil_read_file_contexts($1_t)
-	seutil_read_default_contexts($1_t)
-	seutil_run_newrole($1_t, $1_r)
+	seutil_read_file_contexts($1_usertype)
+	seutil_read_default_contexts($1_usertype)
+	seutil_run_newrole($1_t,$1_r)
 	seutil_exec_checkpolicy($1_t)
-	seutil_exec_setfiles($1_t)
+	seutil_exec_setfiles($1_usertype)
 	# for when the network connection is killed
 	# this is needed when a login role can change
 	# to this one.
 	seutil_dontaudit_signal_newrole($1_t)
 
 	tunable_policy(`user_direct_mouse',`
-		dev_read_mouse($1_t)
+		dev_read_mouse($1_usertype)
 	')
 
 	tunable_policy(`user_ttyfile_stat',`
@@ -575,71 +701,117 @@ template(`userdom_common_user_template',`
 	')
 
 	optional_policy(`
-		alsa_manage_home_files($1_t)
-		alsa_read_rw_config($1_t)
-		alsa_relabel_home_files($1_t)
+		# Allow graphical boot to check battery lifespan
+		apm_stream_connect($1_usertype)
 	')
 
 	optional_policy(`
-		# Allow graphical boot to check battery lifespan
-		apm_stream_connect($1_t)
+		canna_stream_connect($1_usertype)
 	')
 
 	optional_policy(`
-		canna_stream_connect($1_t)
+		chrome_role($1_r, $1_usertype)
 	')
 
 	optional_policy(`
-		dbus_system_bus_client($1_t)
+		colord_read_lib_files($1_usertype)
+	')
+
+	optional_policy(`
+		dbus_system_bus_client($1_usertype)
+
+		allow $1_usertype $1_usertype:dbus  send_msg;
+
+		optional_policy(`
+			avahi_dbus_chat($1_usertype)
+		')
+
+		optional_policy(`
+			policykit_dbus_chat($1_usertype)
+		')
+
+		optional_policy(`
+			bluetooth_dbus_chat($1_usertype)
+		')
+
+		optional_policy(`
+			consolekit_dbus_chat($1_usertype)
+			consolekit_read_log($1_usertype)
+		')
+
+		optional_policy(`
+			devicekit_dbus_chat($1_usertype)
+			devicekit_dbus_chat_power($1_usertype)
+			devicekit_dbus_chat_disk($1_usertype)
+		')
+
+		optional_policy(`
+			evolution_dbus_chat($1_usertype)
+			evolution_alarm_dbus_chat($1_usertype)
+		')
+
+		optional_policy(`
+			gnome_dbus_chat_gconfdefault($1_usertype)
+		')
 
 		optional_policy(`
-			bluetooth_dbus_chat($1_t)
+			hal_dbus_chat($1_usertype)
 		')
 
 		optional_policy(`
-			evolution_dbus_chat($1_t)
-			evolution_alarm_dbus_chat($1_t)
+			kde_dbus_chat_backlighthelper($1_usertype)
 		')
 
 		optional_policy(`
-			cups_dbus_chat_config($1_t)
+			modemmanager_dbus_chat($1_usertype)
 		')
 
 		optional_policy(`
-			hal_dbus_chat($1_t)
+			networkmanager_dbus_chat($1_usertype)
+			networkmanager_read_lib_files($1_usertype)
 		')
 
 		optional_policy(`
-			networkmanager_dbus_chat($1_t)
+			vpn_dbus_chat($1_usertype)
 		')
 	')
 
 	optional_policy(`
-		inetd_use_fds($1_t)
-		inetd_rw_tcp_sockets($1_t)
+		git_session_role($1_r, $1_usertype)
+	')
+
+	optional_policy(`
+		inetd_use_fds($1_usertype)
+		inetd_rw_tcp_sockets($1_usertype)
 	')
 
 	optional_policy(`
-		inn_read_config($1_t)
-		inn_read_news_lib($1_t)
-		inn_read_news_spool($1_t)
+		inn_read_config($1_usertype)
+		inn_read_news_lib($1_usertype)
+		inn_read_news_spool($1_usertype)
 	')
 
 	optional_policy(`
-		locate_read_lib_files($1_t)
+		lircd_stream_connect($1_usertype)
+	')
+
+	optional_policy(`
+		locate_read_lib_files($1_usertype)
 	')
 
 	# for running depmod as part of the kernel packaging process
 	optional_policy(`
-		modutils_read_module_config($1_t)
+		modutils_read_module_config($1_usertype)
 	')
 
 	optional_policy(`
-		mta_rw_spool($1_t)
+		mta_rw_spool($1_usertype)
+		mta_manage_queue($1_usertype)
+		mta_filetrans_home_content($1_usertype)
 	')
 
 	optional_policy(`
-		tunable_policy(`allow_user_mysql_connect',`
+		tunable_policy(`user_mysql_connect',`
 			mysql_stream_connect($1_t)
 		')
 	')
@@ -651,40 +823,52 @@ template(`userdom_common_user_template',`
 
 	optional_policy(`
 		# to allow monitoring of pcmcia status
-		pcmcia_read_pid($1_t)
+		pcmcia_read_pid($1_usertype)
 	')
 
 	optional_policy(`
-		pcscd_read_pub_files($1_t)
-		pcscd_stream_connect($1_t)
+		pcscd_read_pub_files($1_usertype)
+		pcscd_stream_connect($1_usertype)
 	')
 
 	optional_policy(`
-		tunable_policy(`allow_user_postgresql_connect',`
-			postgresql_stream_connect($1_t)
-			postgresql_tcp_connect($1_t)
+		tunable_policy(`user_postgresql_connect',`
+			postgresql_stream_connect($1_usertype)
+			postgresql_tcp_connect($1_usertype)
 		')
 	')
 
 	optional_policy(`
-		resmgr_stream_connect($1_t)
+		resmgr_stream_connect($1_usertype)
+	')
+
+	optional_policy(`
+		rpc_dontaudit_getattr_exports($1_usertype)
+		rpc_manage_nfs_rw_content($1_usertype)
+	')
+
+	optional_policy(`
+		rpcbind_stream_connect($1_usertype)
+	')
+
+	optional_policy(`
+		samba_stream_connect_winbind($1_usertype)
 	')
 
 	optional_policy(`
-		rpc_dontaudit_getattr_exports($1_t)
-		rpc_manage_nfs_rw_content($1_t)
+		sandbox_transition($1_usertype, $1_r)
 	')
 
 	optional_policy(`
-		samba_stream_connect_winbind($1_t)
+		seunshare_role_template($1, $1_r, $1_t)
 	')
 
 	optional_policy(`
-		slrnpull_search_spool($1_t)
+		slrnpull_search_spool($1_usertype)
 	')
 
 	optional_policy(`
-		usernetctl_run($1_t, $1_r)
+		thumb_role($1_r, $1_usertype)
 	')
 ')
 
@@ -709,17 +893,33 @@ template(`userdom_common_user_template',`
 template(`userdom_login_user_template', `
 	gen_require(`
 		class context contains;
+		attribute login_userdomain;
 	')
 
 	userdom_base_user_template($1)
 
-	userdom_manage_home_role($1_r, $1_t)
+	typeattribute $1_t login_userdomain;
 
-	userdom_manage_tmp_role($1_r, $1_t)
-	userdom_manage_tmpfs_role($1_r, $1_t)
+	userdom_manage_home_role($1_r, $1_usertype)
+
+	userdom_manage_tmp_role($1_r, $1_usertype)
+	userdom_manage_tmpfs_role($1_r, $1_usertype)
+
+	ifelse(`$1',`unconfined',`',`
+		gen_tunable($1_exec_content, true)
+
+		tunable_policy(`$1_exec_content',`
+			userdom_exec_user_tmp_files($1_usertype)
+			userdom_exec_user_home_content_files($1_usertype)
+		')
+		tunable_policy(`$1_exec_content && use_nfs_home_dirs',`
+                        fs_exec_nfs_files($1_usertype)
+		')
 
-	userdom_exec_user_tmp_files($1_t)
-	userdom_exec_user_home_content_files($1_t)
+		tunable_policy(`$1_exec_content && use_samba_home_dirs',`
+			fs_exec_cifs_files($1_usertype)
+		')
+	')
 
 	userdom_change_password_template($1)
 
@@ -728,81 +928,98 @@ template(`userdom_login_user_template', `
 	# User domain Local policy
 	#
 
-	allow $1_t self:capability { setgid chown fowner };
+	allow $1_t self:capability { setgid setuid chown fowner };
+	allow $1_t self:process setcurrent;
+	domain_dyntrans_type($1_t)
 	dontaudit $1_t self:capability { sys_nice fsetid };
 
-	allow $1_t self:process ~{ setcurrent setexec setrlimit execmem execstack execheap };
+	allow $1_t self:process ~{ ptrace setrlimit execmem execstack execheap };
 	dontaudit $1_t self:process setrlimit;
 	dontaudit $1_t self:netlink_route_socket { create ioctl read getattr write setattr append bind connect getopt setopt shutdown nlmsg_read nlmsg_write };
 
 	allow $1_t self:context contains;
 
-	kernel_dontaudit_read_system_state($1_t)
+	kernel_dontaudit_read_system_state($1_usertype)
+	kernel_dontaudit_list_all_proc($1_usertype)
 
-	dev_read_sysfs($1_t)
-	dev_read_urand($1_t)
+	dev_read_sysfs($1_usertype)
+	dev_read_rand($1_usertype)
+	dev_read_urand($1_usertype)
 
-	domain_use_interactive_fds($1_t)
+	domain_use_interactive_fds($1_usertype)
 	# Command completion can fire hundreds of denials
-	domain_dontaudit_exec_all_entry_files($1_t)
+	domain_dontaudit_exec_all_entry_files($1_usertype)
 
-	files_dontaudit_list_default($1_t)
-	files_dontaudit_read_default_files($1_t)
+	files_dontaudit_list_default($1_usertype)
+	files_dontaudit_read_default_files($1_usertype)
 	# Stat lost+found.
-	files_getattr_lost_found_dirs($1_t)
+	files_getattr_lost_found_dirs($1_usertype)
 
-	fs_get_all_fs_quotas($1_t)
-	fs_getattr_all_fs($1_t)
-	fs_getattr_all_dirs($1_t)
-	fs_search_auto_mountpoints($1_t)
-	fs_list_cgroup_dirs($1_t)
-	fs_list_inotifyfs($1_t)
-	fs_rw_anon_inodefs_files($1_t)
-	fs_dontaudit_rw_cgroup_files($1_t)
+	fs_get_all_fs_quotas($1_usertype)
+	fs_getattr_all_fs($1_usertype)
+	fs_search_all($1_usertype)
+	fs_list_inotifyfs($1_usertype)
+	fs_rw_anon_inodefs_files($1_usertype)
 
+	auth_role($1_r, $1_t)
+	auth_rw_cache($1_t)
+	auth_search_pam_console_data($1_t)
+	auth_dontaudit_read_login_records($1_t)
 	auth_dontaudit_write_login_records($1_t)
 
 	application_exec_all($1_t)
-
 	# The library functions always try to open read-write first,
 	# then fall back to read-only if it fails.
 	init_dontaudit_rw_utmp($1_t)
+
 	# Stop warnings about access to /dev/console
-	init_dontaudit_use_fds($1_t)
-	init_dontaudit_use_script_fds($1_t)
+	init_dontaudit_use_fds($1_usertype)
+	init_dontaudit_use_script_fds($1_usertype)
 
-	libs_exec_lib_files($1_t)
+	libs_exec_lib_files($1_usertype)
 
-	logging_dontaudit_getattr_all_logs($1_t)
+	logging_dontaudit_getattr_all_logs($1_usertype)
 
-	miscfiles_read_man_pages($1_t)
 	# for running TeX programs
-	miscfiles_read_tetex_data($1_t)
-	miscfiles_exec_tetex_data($1_t)
+	miscfiles_read_tetex_data($1_usertype)
+	miscfiles_exec_tetex_data($1_usertype)
 
-	seutil_read_config($1_t)
+	seutil_read_config($1_usertype)
+	seutil_read_file_contexts($1_usertype)
+	seutil_read_default_contexts($1_usertype)
+	seutil_exec_setfiles($1_usertype)
 
 	optional_policy(`
-		cups_read_config($1_t)
-		cups_stream_connect($1_t)
-		cups_stream_connect_ptal($1_t)
+		cups_read_config($1_usertype)
+		cups_stream_connect($1_usertype)
+		cups_stream_connect_ptal($1_usertype)
 	')
 
 	optional_policy(`
-		kerberos_use($1_t)
+		kerberos_use($1_usertype)
+		kerberos_filetrans_home_content($1_usertype)
 	')
 
 	optional_policy(`
-		mta_dontaudit_read_spool_symlinks($1_t)
+		mysql_filetrans_named_content($1_usertype)
 	')
 
 	optional_policy(`
-		quota_dontaudit_getattr_db($1_t)
+		mta_dontaudit_read_spool_symlinks($1_usertype)
 	')
 
 	optional_policy(`
-		rpm_read_db($1_t)
-		rpm_dontaudit_manage_db($1_t)
+		quota_dontaudit_getattr_db($1_usertype)
+	')
+
+	optional_policy(`
+		rpm_read_db($1_usertype)
+		rpm_dontaudit_manage_db($1_usertype)
+		rpm_read_cache($1_usertype)
+	')
+
+	optional_policy(`
+		oddjob_run_mkhomedir($1_t, $1_r)
 	')
 ')
 
@@ -834,6 +1051,12 @@ template(`userdom_restricted_user_template',`
 	typeattribute $1_t unpriv_userdomain;
 	domain_interactive_fd($1_t)
 
+	allow $1_usertype self:netlink_kobject_uevent_socket create_socket_perms;
+	dontaudit $1_usertype self:netlink_audit_socket create_socket_perms;
+
+    seutil_read_file_contexts($1_t)
+    seutil_read_default_contexts($1_t)
+
 	##############################
 	#
 	# Local policy
@@ -874,46 +1097,115 @@ template(`userdom_restricted_xwindows_user_template',`
 	# Local policy
 	#
 
-	auth_role($1_r, $1_t)
-	auth_search_pam_console_data($1_t)
-
-	dev_read_sound($1_t)
-	dev_write_sound($1_t)
+	dev_read_sound($1_usertype)
+	dev_write_sound($1_usertype)
 	# gnome keyring wants to read this.
-	dev_dontaudit_read_rand($1_t)
+	dev_dontaudit_read_rand($1_usertype)
+	# temporarily allow since openoffice requires this
+	dev_read_rand($1_usertype)
 
-	logging_send_syslog_msg($1_t)
+	dev_read_video_dev($1_usertype)
+	dev_write_video_dev($1_usertype)
+	dev_rw_wireless($1_usertype)
+
+	libs_dontaudit_setattr_lib_files($1_usertype)
+
+	tunable_policy(`user_rw_noexattrfile',`
+		dev_rw_usbfs($1_t)
+		dev_rw_generic_usb_dev($1_usertype)
+
+		fs_manage_noxattr_fs_files($1_usertype)
+		fs_manage_noxattr_fs_dirs($1_usertype)
+		fs_manage_dos_dirs($1_usertype)
+		fs_manage_dos_files($1_usertype)
+		storage_raw_read_removable_device($1_usertype)
+		storage_raw_write_removable_device($1_usertype)
+	')
+
+	logging_send_syslog_msg($1_usertype)
 	logging_dontaudit_send_audit_msgs($1_t)
 
 	# Need to to this just so screensaver will work. Should be moved to screensaver domain
 	logging_send_audit_msgs($1_t)
 	selinux_get_enforce_mode($1_t)
+	seutil_exec_restorecond($1_t)
+	seutil_read_file_contexts($1_t)
+	seutil_read_default_contexts($1_t)
 
 	xserver_restricted_role($1_r, $1_t)
 
 	optional_policy(`
-		alsa_read_rw_config($1_t)
+		alsa_read_rw_config($1_usertype)
+	')
+
+	 # cjp: needed by KDE apps
+	 # bug: #682499
+	 optional_policy(`
+	 	gnome_read_usr_config($1_usertype)
+		gnome_role_gkeyringd($1, $1_r, $1_usertype)
+		# cjp: telepathy F15 bugs
+		telepathy_role($1_r, $1_t, $1)
+	')
+
+	optional_policy(`
+		obex_role($1_r, $1_t, $1)
 	')
 
 	optional_policy(`
-		dbus_role_template($1, $1_r, $1_t)
-		dbus_system_bus_client($1_t)
+		dbus_role_template($1, $1_r, $1_usertype)
+		dbus_system_bus_client($1_usertype)
+		allow $1_usertype $1_usertype:dbus send_msg;
+
+		optional_policy(`
+			abrt_dbus_chat($1_usertype)
+			abrt_run_helper($1_usertype, $1_r)
+		')
+
+		optional_policy(`
+			consolekit_dontaudit_read_log($1_usertype)
+			consolekit_dbus_chat($1_usertype)
+		')
+
+		optional_policy(`
+			cups_dbus_chat($1_usertype)
+			cups_dbus_chat_config($1_usertype)
+		')
 
 		optional_policy(`
-			consolekit_dbus_chat($1_t)
+			devicekit_dbus_chat($1_usertype)
+			devicekit_dbus_chat_disk($1_usertype)
+			devicekit_dbus_chat_power($1_usertype)
 		')
 
 		optional_policy(`
-			cups_dbus_chat($1_t)
+			fprintd_dbus_chat($1_t)
 		')
 	')
 
 	optional_policy(`
-		java_role($1_r, $1_t)
+		policykit_role($1_r, $1_usertype)
+	')
+
+	optional_policy(`
+		pulseaudio_role($1_r, $1_usertype)
+		pulseaudio_filetrans_admin_home_content($1_usertype)
+		pulseaudio_filetrans_home_content($1_usertype)
+	')
+
+	optional_policy(`
+		rtkit_scheduled($1_usertype)
 	')
 
 	optional_policy(`
 		setroubleshoot_dontaudit_stream_connect($1_t)
+        ')
+
+	optional_policy(`
+		udev_read_db($1_usertype)
+        ')
+
+	optional_policy(`
+		wm_role_template($1, $1_r, $1_t)
 	')
 ')
 
@@ -948,7 +1240,7 @@ template(`userdom_unpriv_user_template', `
 	#
 
 	# Inherit rules for ordinary users.
-	userdom_restricted_user_template($1)
+	userdom_restricted_xwindows_user_template($1)
 	userdom_common_user_template($1)
 
 	##############################
@@ -957,12 +1249,15 @@ template(`userdom_unpriv_user_template', `
 	#
 
 	# port access is audited even if dac would not have allowed it, so dontaudit it here
-	corenet_dontaudit_tcp_bind_all_reserved_ports($1_t)
+#	corenet_dontaudit_tcp_bind_all_reserved_ports($1_t)
 	# Need the following rule to allow users to run vpnc
 	corenet_tcp_bind_xserver_port($1_t)
+	corenet_tcp_bind_generic_node($1_usertype)
+
+	storage_rw_fuse($1_t)
 
 	files_exec_usr_files($1_t)
-	# cjp: why?
+   # cjp: why?
 	files_read_kernel_symbol_table($1_t)
 
 	ifndef(`enable_mls',`
@@ -979,23 +1274,60 @@ template(`userdom_unpriv_user_template', `
 		')
 	')
 
-	tunable_policy(`user_dmesg',`
-		kernel_read_ring_buffer($1_t)
-	',`
-		kernel_dontaudit_read_ring_buffer($1_t)
-	')
+	miscfiles_read_hwdata($1_usertype)
 
 	# Allow users to run TCP servers (bind to ports and accept connection from
 	# the same domain and outside users) disabling this forces FTP passive mode
 	# and may change other protocols
+
+	tunable_policy(`user_share_music',`
+		corenet_tcp_bind_daap_port($1_usertype)
+	')
+
 	tunable_policy(`user_tcp_server',`
-		corenet_tcp_bind_generic_node($1_t)
-		corenet_tcp_bind_generic_port($1_t)
+		corenet_tcp_bind_all_unreserved_ports($1_usertype)
+	')
+
+	tunable_policy(`user_setrlimit',`
+		allow $1_usertype self:process setrlimit;
+	')
+
+	optional_policy(`
+		cdrecord_role($1_r, $1_t)
+	')
+
+	optional_policy(`
+		cron_role($1_r, $1_t)
+	')
+
+	optional_policy(`
+		games_rw_data($1_usertype)
+	')
+
+	optional_policy(`
+		gpg_role($1_r, $1_usertype)
+	')
+
+	optional_policy(`
+		gnomeclock_dbus_chat($1_t)
+	')
+
+	optional_policy(`
+		gpm_stream_connect($1_usertype)
+	')
+
+	optional_policy(`
+		mount_run_fusermount($1_t, $1_r)
+		mount_read_pid_files($1_t)
+	')
+
+	optional_policy(`
+		wine_role_template($1, $1_r, $1_t)
 	')
 
 	optional_policy(`
-		netutils_run_ping_cond($1_t, $1_r)
-		netutils_run_traceroute_cond($1_t, $1_r)
+		postfix_run_postdrop($1_t, $1_r)
+		postfix_search_spool($1_t)
 	')
 
 	# Run pppd in pppd_t by default for user
@@ -1004,7 +1336,9 @@ template(`userdom_unpriv_user_template', `
 	')
 
 	optional_policy(`
-		setroubleshoot_stream_connect($1_t)
+		vdagent_getattr_log($1_t)
+		vdagent_getattr_exec_files($1_t)
+		vdagent_stream_connect($1_t)
 	')
 ')
 
@@ -1040,7 +1374,7 @@ template(`userdom_unpriv_user_template', `
 template(`userdom_admin_user_template',`
 	gen_require(`
 		attribute admindomain;
-		class passwd { passwd chfn chsh rootok };
+		class passwd { passwd chfn chsh rootok crontab };
 	')
 
 	##############################
@@ -1067,6 +1401,7 @@ template(`userdom_admin_user_template',`
 	#
 
 	allow $1_t self:capability ~{ sys_module audit_control audit_write };
+	allow $1_t self:capability2 syslog;
 	allow $1_t self:process { setexec setfscreate };
 	allow $1_t self:netlink_audit_socket nlmsg_readpriv;
 	allow $1_t self:tun_socket create;
@@ -1075,6 +1410,9 @@ template(`userdom_admin_user_template',`
 	# Skip authentication when pam_rootok is specified.
 	allow $1_t self:passwd rootok;
 
+	# Manipulate other users crontab.
+	allow $1_t self:passwd crontab;
+
 	kernel_read_software_raid_state($1_t)
 	kernel_getattr_core_if($1_t)
 	kernel_getattr_message_if($1_t)
@@ -1089,6 +1427,7 @@ template(`userdom_admin_user_template',`
 	kernel_sigstop_unlabeled($1_t)
 	kernel_signull_unlabeled($1_t)
 	kernel_sigchld_unlabeled($1_t)
+	kernel_signal($1_t)
 
 	corenet_tcp_bind_generic_port($1_t)
 	# allow setting up tunnels
@@ -1106,10 +1445,13 @@ template(`userdom_admin_user_template',`
 	dev_rename_all_blk_files($1_t)
 	dev_rename_all_chr_files($1_t)
 	dev_create_generic_symlinks($1_t)
+	dev_rw_generic_usb_dev($1_t)
+	dev_rw_usbfs($1_t)
 
 	domain_setpriority_all_domains($1_t)
 	domain_read_all_domains_state($1_t)
 	domain_getattr_all_domains($1_t)
+	domain_getcap_all_domains($1_t)
 	domain_dontaudit_ptrace_all_domains($1_t)
 	# signal all domains:
 	domain_kill_all_domains($1_t)
@@ -1120,29 +1462,38 @@ template(`userdom_admin_user_template',`
 	domain_sigchld_all_domains($1_t)
 	# for lsof
 	domain_getattr_all_sockets($1_t)
+	domain_dontaudit_getattr_all_sockets($1_t)
 
 	files_exec_usr_src_files($1_t)
 
 	fs_getattr_all_fs($1_t)
+	fs_getattr_all_files($1_t)
+	fs_list_all($1_t)
 	fs_set_all_quotas($1_t)
 	fs_exec_noxattr($1_t)
 
 	storage_raw_read_removable_device($1_t)
 	storage_raw_write_removable_device($1_t)
+	storage_dontaudit_read_fixed_disk($1_t)
 
-	term_use_all_terms($1_t)
+	term_use_all_inherited_terms($1_t)
+	term_use_unallocated_ttys($1_t)
 
 	auth_getattr_shadow($1_t)
 	# Manage almost all files
-	files_manage_non_auth_files($1_t)
+	files_manage_non_security_dirs($1_t)
+	files_manage_non_security_files($1_t)
 	# Relabel almost all files
-	files_relabel_non_auth_files($1_t)
+	files_relabel_non_security_files($1_t)
 
 	init_telinit($1_t)
 
 	logging_send_syslog_msg($1_t)
 
-	modutils_domtrans_insmod($1_t)
+	optional_policy(`
+		modutils_domtrans_insmod($1_t)
+		modutils_domtrans_depmod($1_t)
+	')
 
 	# The following rule is temporary until such time that a complete
 	# policy management infrastructure is in place so that an administrator
@@ -1152,6 +1503,8 @@ template(`userdom_admin_user_template',`
 	# But presently necessary for installing the file_contexts file.
 	seutil_manage_bin_policy($1_t)
 
+	systemd_config_all_services($1_t)
+
 	userdom_manage_user_home_content_dirs($1_t)
 	userdom_manage_user_home_content_files($1_t)
 	userdom_manage_user_home_content_symlinks($1_t)
@@ -1166,6 +1519,10 @@ template(`userdom_admin_user_template',`
 		fs_read_noxattr_fs_files($1_t)
 	')
 
+	tunable_policy(`user_tcp_server',`
+        corenet_tcp_bind_all_unreserved_ports($1_t)
+    ')
+
 	optional_policy(`
 		postgresql_unconfined($1_t)
 	')
@@ -1211,6 +1568,8 @@ template(`userdom_security_admin_template',`
 	dev_relabel_all_dev_nodes($1)
 
 	files_create_boot_flag($1)
+	files_create_default_dir($1)
+	files_root_filetrans_default($1, dir)
 
 	# Necessary for managing /boot/efi
 	fs_manage_dos_files($1)
@@ -1223,8 +1582,10 @@ template(`userdom_security_admin_template',`
 	selinux_set_enforce_mode($1)
 	selinux_set_all_booleans($1)
 	selinux_set_parameters($1)
+	selinux_read_policy($1)
+
+	files_relabel_all_files($1)
 
-	files_relabel_non_auth_files($1)
 	auth_relabel_shadow($1)
 
 	init_exec($1)
@@ -1235,13 +1596,18 @@ template(`userdom_security_admin_template',`
 	logging_read_audit_config($1)
 
 	seutil_manage_bin_policy($1)
-	seutil_run_checkpolicy($1, $2)
-	seutil_run_loadpolicy($1, $2)
-	seutil_run_semanage($1, $2)
+	seutil_manage_default_contexts($1)
+	seutil_manage_file_contexts($1)
+	seutil_manage_module_store($1)
+	seutil_manage_config($1)
+	seutil_run_checkpolicy($1,$2)
+	seutil_run_loadpolicy($1,$2)
+	seutil_run_semanage($1,$2)
+	seutil_run_setsebool($1,$2)
 	seutil_run_setfiles($1, $2)
 
 	optional_policy(`
-		aide_run($1, $2)
+		aide_run($1,$2)
 	')
 
 	optional_policy(`
@@ -1252,12 +1618,12 @@ template(`userdom_security_admin_template',`
 		dmesg_exec($1)
 	')
 
-	optional_policy(`
-		ipsec_run_setkey($1, $2)
+	optional_policy(`	
+		ipsec_run_setkey($1,$2)
 	')
 
 	optional_policy(`
-		netlabel_run_mgmt($1, $2)
+		netlabel_run_mgmt($1,$2)
 	')
 
 	optional_policy(`
@@ -1317,12 +1683,15 @@ interface(`userdom_user_application_domain',`
 interface(`userdom_user_home_content',`
 	gen_require(`
 		type user_home_t;
+		attribute user_home_type;
 	')
 
 	allow $1 user_home_t:filesystem associate;
 	files_type($1)
-	files_poly_member($1)
 	ubac_constrained($1)
+
+	files_poly_member($1)
+	typeattribute $1  user_home_type;
 ')
 
 ########################################
@@ -1363,18 +1732,63 @@ interface(`userdom_user_tmpfs_file',`
 ## <summary>
 ##	Allow domain to attach to TUN devices created by administrative users.
 ## </summary>
-## <param name="domain">
+## <param name="type">
 ##	<summary>
-##	Domain allowed access.
+##	Type to be used as a file in the
+##	generic temporary directory.
 ##	</summary>
 ## </param>
 #
-interface(`userdom_attach_admin_tun_iface',`
+interface(`userdom_user_tmp_content',`
 	gen_require(`
-		attribute admindomain;
+		attribute user_tmp_type;
 	')
 
-	allow $1 admindomain:tun_socket relabelfrom;
+	typeattribute $1 user_tmp_type;
+
+	files_tmp_file($1)
+	ubac_constrained($1)
+')
+
+########################################
+## <summary>
+##	Make the specified type usable in a
+##	generic tmpfs_t directory.
+## </summary>
+## <param name="type">
+##	<summary>
+##	Type to be used as a file in the
+##	generic temporary directory.
+##	</summary>
+## </param>
+#
+interface(`userdom_user_tmpfs_content',`
+	gen_require(`
+		attribute user_tmpfs_type;
+	')
+
+	typeattribute $1 user_tmpfs_type;
+
+	files_tmpfs_file($1)
+	ubac_constrained($1)
+')
+
+########################################
+## <summary>
+##	Allow domain to attach to TUN devices created by administrative users.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_attach_admin_tun_iface',`
+	gen_require(`
+		attribute admindomain;
+	')
+
+	allow $1 admindomain:tun_socket relabelfrom;
 	allow $1 self:tun_socket relabelto;
 ')
 
@@ -1467,11 +1881,31 @@ interface(`userdom_search_user_home_dirs',`
 	')
 
 	allow $1 user_home_dir_t:dir search_dir_perms;
+	allow $1 user_home_dir_t:lnk_file read_lnk_file_perms;
 	files_search_home($1)
 ')
 
 ########################################
 ## <summary>
+##	Search user tmp directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_search_user_tmp_dirs',`
+	gen_require(`
+		type user_tmp_t;
+	')
+
+	files_search_tmp($1)
+	allow $1 user_tmp_t:dir search_dir_perms;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to search user home directories.
 ## </summary>
 ## <desc>
@@ -1513,6 +1947,14 @@ interface(`userdom_list_user_home_dirs',`
 
 	allow $1 user_home_dir_t:dir list_dir_perms;
 	files_search_home($1)
+
+	tunable_policy(`use_nfs_home_dirs',`
+		fs_list_nfs($1)
+	')
+
+	tunable_policy(`use_samba_home_dirs',`
+		fs_list_cifs($1)
+	')
 ')
 
 ########################################
@@ -1528,9 +1970,11 @@ interface(`userdom_list_user_home_dirs',`
 interface(`userdom_dontaudit_list_user_home_dirs',`
 	gen_require(`
 		type user_home_dir_t;
+		type user_home_t;
 	')
 
 	dontaudit $1 user_home_dir_t:dir list_dir_perms;
+	dontaudit $1 user_home_t:dir list_dir_perms;
 ')
 
 ########################################
@@ -1587,6 +2031,42 @@ interface(`userdom_relabelto_user_home_dirs',`
 	allow $1 user_home_dir_t:dir relabelto;
 ')
 
+
+########################################
+## <summary>
+##	Relabel to user home files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_relabelto_user_home_files',`
+	gen_require(`
+		type user_home_t;
+	')
+
+	allow $1 user_home_t:file relabelto;
+')
+########################################
+## <summary>
+##	Relabel user home files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_relabel_user_home_files',`
+	gen_require(`
+		type user_home_t;
+	')
+
+	allow $1 user_home_t:file relabel_file_perms;
+')
+
 ########################################
 ## <summary>
 ##	Create directories in the home dir root with
@@ -1666,6 +2146,8 @@ interface(`userdom_dontaudit_search_user_home_content',`
 	')
 
 	dontaudit $1 user_home_t:dir search_dir_perms;
+	fs_dontaudit_list_nfs($1)
+	fs_dontaudit_list_cifs($1)
 ')
 
 ########################################
@@ -1680,10 +2162,12 @@ interface(`userdom_dontaudit_search_user_home_content',`
 #
 interface(`userdom_list_user_home_content',`
 	gen_require(`
-		type user_home_t;
+		type user_home_dir_t;
+		attribute user_home_type;
 	')
 
-	allow $1 user_home_t:dir list_dir_perms;
+	files_list_home($1)
+	allow $1 { user_home_dir_t user_home_type }:dir list_dir_perms;
 ')
 
 ########################################
@@ -1726,6 +2210,43 @@ interface(`userdom_delete_user_home_content_dirs',`
 
 ########################################
 ## <summary>
+##	Delete all directories in a user home subdirectory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_delete_all_user_home_content_dirs',`
+	gen_require(`
+		attribute user_home_type;
+	')
+
+	allow $1 user_home_type:dir delete_dir_perms;
+')
+
+########################################
+## <summary>
+##	Set the attributes of user home files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`userdom_setattr_user_home_content_files',`
+	gen_require(`
+		type user_home_t;
+	')
+
+	allow $1 user_home_t:file setattr;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to set the
 ##	attributes of user home files.
 ## </summary>
@@ -1745,6 +2266,25 @@ interface(`userdom_dontaudit_setattr_user_home_content_files',`
 
 ########################################
 ## <summary>
+##	Set the attributes of all user home directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`userdom_setattr_all_user_home_content_dirs',`
+	gen_require(`
+		attribute user_home_type;
+	')
+
+	allow $1 user_home_type:dir setattr_dir_perms;
+')
+
+########################################
+## <summary>
 ##	Mmap user home files.
 ## </summary>
 ## <param name="domain">
@@ -1775,14 +2315,36 @@ interface(`userdom_mmap_user_home_content_files',`
 interface(`userdom_read_user_home_content_files',`
 	gen_require(`
 		type user_home_dir_t, user_home_t;
+		attribute user_home_type;
 	')
 
-	read_files_pattern($1, { user_home_dir_t user_home_t }, user_home_t)
+	allow $1 user_home_dir_t:lnk_file read_lnk_file_perms;
+	list_dirs_pattern($1, { user_home_dir_t user_home_type }, { user_home_dir_t user_home_type })
+	read_files_pattern($1, { user_home_dir_t user_home_type }, user_home_type)
 	files_search_home($1)
 ')
 
 ########################################
 ## <summary>
+##	Do not audit attempts to getattr user home files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaudit_getattr_user_home_content',`
+	gen_require(`
+		attribute user_home_type;
+	')
+
+	dontaudit $1 user_home_type:dir getattr;
+	dontaudit $1 user_home_type:file getattr;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to read user home files.
 ## </summary>
 ## <param name="domain">
@@ -1793,11 +2355,14 @@ interface(`userdom_read_user_home_content_files',`
 #
 interface(`userdom_dontaudit_read_user_home_content_files',`
 	gen_require(`
-		type user_home_t;
+		attribute user_home_type;
+		type user_home_dir_t;
 	')
 
-	dontaudit $1 user_home_t:dir list_dir_perms;
-	dontaudit $1 user_home_t:file read_file_perms;
+	dontaudit $1 user_home_dir_t:dir list_dir_perms;
+	dontaudit $1 user_home_type:dir list_dir_perms;
+	dontaudit $1 user_home_type:file read_file_perms;
+	dontaudit $1 user_home_type:lnk_file read_lnk_file_perms;
 ')
 
 ########################################
@@ -1856,6 +2421,60 @@ interface(`userdom_delete_user_home_content_files',`
 
 ########################################
 ## <summary>
+##	Delete all files in a user home subdirectory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_delete_all_user_home_content_files',`
+	gen_require(`
+		attribute user_home_type;
+	')
+
+	allow $1 user_home_type:file delete_file_perms;
+')
+
+########################################
+## <summary>
+##	Delete sock files in a user home subdirectory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_delete_user_home_content_sock_files',`
+	gen_require(`
+		type user_home_t;
+	')
+
+	allow $1 user_home_t:sock_file delete_file_perms;
+')
+
+########################################
+## <summary>
+##	Delete all sock files in a user home subdirectory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_delete_all_user_home_content_sock_files',`
+	gen_require(`
+		attribute user_home_type;
+	')
+
+	allow $1 user_home_type:sock_file delete_file_perms;
+')
+
+########################################
+## <summary>
 ##	Do not audit attempts to write user home files.
 ## </summary>
 ## <param name="domain">
@@ -1887,8 +2506,7 @@ interface(`userdom_read_user_home_content_symlinks',`
 		type user_home_dir_t, user_home_t;
 	')
 
-	read_lnk_files_pattern($1, { user_home_dir_t user_home_t }, user_home_t)
-	files_search_home($1)
+	allow $1 { user_home_dir_t user_home_t }:lnk_file  read_lnk_file_perms;
 ')
 
 ########################################
@@ -1904,20 +2522,14 @@ interface(`userdom_read_user_home_content_symlinks',`
 #
 interface(`userdom_exec_user_home_content_files',`
 	gen_require(`
-		type user_home_dir_t, user_home_t;
+		type user_home_dir_t;
+		attribute user_home_type;
 	')
 
 	files_search_home($1)
-	exec_files_pattern($1, { user_home_dir_t user_home_t }, user_home_t)
-
-	tunable_policy(`use_nfs_home_dirs',`
-		fs_exec_nfs_files($1)
-	')
-
-	tunable_policy(`use_samba_home_dirs',`
-		fs_exec_cifs_files($1)
+	exec_files_pattern($1, { user_home_dir_t user_home_type }, user_home_type)
+	dontaudit $1 user_home_type:sock_file execute;
 	')
-')
 
 ########################################
 ## <summary>
@@ -2018,6 +2630,24 @@ interface(`userdom_delete_user_home_content_symlinks',`
 
 ########################################
 ## <summary>
+##	Delete all symbolic links in a user home directory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_delete_all_user_home_content_symlinks',`
+	gen_require(`
+		attribute user_home_type;
+	')
+
+	allow $1 user_home_type:lnk_file delete_lnk_file_perms;
+')
+
+########################################
+## <summary>
 ##	Create, read, write, and delete named pipes
 ##	in a user home subdirectory.
 ## </summary>
@@ -2250,11 +2880,11 @@ interface(`userdom_dontaudit_manage_user_tmp_dirs',`
 #
 interface(`userdom_read_user_tmp_files',`
 	gen_require(`
-		type user_tmp_t;
+		attribute user_tmp_type;
 	')
 
-	read_files_pattern($1, user_tmp_t, user_tmp_t)
-	allow $1 user_tmp_t:dir list_dir_perms;
+	read_files_pattern($1, user_tmp_type, user_tmp_type)
+	allow $1 user_tmp_type:dir list_dir_perms;
 	files_search_tmp($1)
 ')
 
@@ -2274,7 +2904,7 @@ interface(`userdom_dontaudit_read_user_tmp_files',`
 		type user_tmp_t;
 	')
 
-	dontaudit $1 user_tmp_t:file read_file_perms;
+	dontaudit $1 user_tmp_t:file read_inherited_file_perms;
 ')
 
 ########################################
@@ -2521,6 +3151,25 @@ interface(`userdom_tmp_filetrans_user_tmp',`
 	files_tmp_filetrans($1, user_tmp_t, $2, $3)
 ')
 
+#######################################
+## <summary>
+##  Getattr user tmpfs files.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`userdom_getattr_user_tmpfs_files',`
+    gen_require(`
+        type user_tmpfs_t;
+    ')
+
+    getattr_files_pattern($1, user_tmpfs_t, user_tmpfs_t)
+    fs_search_tmpfs($1)
+')
+
 ########################################
 ## <summary>
 ##	Read user tmpfs files.
@@ -2537,13 +3186,14 @@ interface(`userdom_read_user_tmpfs_files',`
 	')
 
 	read_files_pattern($1, user_tmpfs_t, user_tmpfs_t)
+	read_lnk_files_pattern($1, user_tmpfs_t, user_tmpfs_t)
 	allow $1 user_tmpfs_t:dir list_dir_perms;
 	fs_search_tmpfs($1)
 ')
 
 ########################################
 ## <summary>
-##	Read user tmpfs files.
+##	Read/Write user tmpfs files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -2564,7 +3214,7 @@ interface(`userdom_rw_user_tmpfs_files',`
 
 ########################################
 ## <summary>
-##	Create, read, write, and delete user tmpfs files.
+##	Read/Write inherited user tmpfs files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -2572,14 +3222,30 @@ interface(`userdom_rw_user_tmpfs_files',`
 ##	</summary>
 ## </param>
 #
-interface(`userdom_manage_user_tmpfs_files',`
+interface(`userdom_rw_inherited_user_tmpfs_files',`
 	gen_require(`
 		type user_tmpfs_t;
 	')
 
-	manage_files_pattern($1, user_tmpfs_t, user_tmpfs_t)
-	allow $1 user_tmpfs_t:dir list_dir_perms;
-	fs_search_tmpfs($1)
+	allow $1 user_tmpfs_t:file rw_inherited_file_perms;
+')
+
+########################################
+## <summary>
+##	Execute user tmpfs files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_execute_user_tmpfs_files',`
+	gen_require(`
+		type user_tmpfs_t;
+	')
+
+	allow $1 user_tmpfs_t:file execute;
 ')
 
 ########################################
@@ -2674,7 +3340,25 @@ interface(`userdom_use_user_ttys',`
 
 ########################################
 ## <summary>
-##	Read and write a user domain pty.
+##	Read and write a inherited user domain tty.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_use_inherited_user_ttys',`
+	gen_require(`
+		type user_tty_device_t;
+	')
+
+	allow $1 user_tty_device_t:chr_file rw_inherited_term_perms;
+')
+
+########################################
+## <summary>
+##	Read and write a user domain pty.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -2692,22 +3376,34 @@ interface(`userdom_use_user_ptys',`
 
 ########################################
 ## <summary>
-##	Read and write a user TTYs and PTYs.
+##	Read and write a inherited user domain pty.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_use_inherited_user_ptys',`
+	gen_require(`
+		type user_devpts_t;
+	')
+
+	allow $1 user_devpts_t:chr_file rw_inherited_term_perms;
+')
+
+########################################
+## <summary>
+##	Read and write a inherited user TTYs and PTYs.
 ## </summary>
 ## <desc>
 ##	<p>
-##	Allow the specified domain to read and write user
+##	Allow the specified domain to read and write inherited user
 ##	TTYs and PTYs. This will allow the domain to
 ##	interact with the user via the terminal. Typically
 ##	all interactive applications will require this
 ##	access.
 ##	</p>
-##	<p>
-##	However, this also allows the applications to spy
-##	on user sessions or inject information into the
-##	user session.  Thus, this access should likely
-##	not be allowed for non-interactive domains.
-##	</p>
 ## </desc>
 ## <param name="domain">
 ##	<summary>
@@ -2716,14 +3412,33 @@ interface(`userdom_use_user_ptys',`
 ## </param>
 ## <infoflow type="both" weight="10"/>
 #
-interface(`userdom_use_user_terminals',`
+interface(`userdom_use_inherited_user_terminals',`
 	gen_require(`
 		type user_tty_device_t, user_devpts_t;
 	')
 
-	allow $1 user_tty_device_t:chr_file rw_term_perms;
-	allow $1 user_devpts_t:chr_file rw_term_perms;
-	term_list_ptys($1)
+	allow $1 user_tty_device_t:chr_file rw_inherited_term_perms;
+	allow $1 user_devpts_t:chr_file rw_inherited_term_perms;
+')
+
+#######################################
+## <summary>
+##  Allow attempts to read and write
+##  a user domain tty and pty.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`userdom_use_user_terminals',`
+    gen_require(`
+        type user_tty_device_t, user_devpts_t;
+    ')
+
+    allow $1 user_tty_device_t:chr_file rw_term_perms;
+    allow $1 user_devpts_t:chr_file rw_term_perms;
 ')
 
 ########################################
@@ -2742,8 +3457,27 @@ interface(`userdom_dontaudit_use_user_terminals',`
 		type user_tty_device_t, user_devpts_t;
 	')
 
-	dontaudit $1 user_tty_device_t:chr_file rw_term_perms;
-	dontaudit $1 user_devpts_t:chr_file rw_term_perms;
+	dontaudit $1 user_tty_device_t:chr_file rw_inherited_term_perms;
+	dontaudit $1 user_devpts_t:chr_file rw_inherited_term_perms;
+')
+
+
+########################################
+## <summary>
+##	Get attributes of user domain tty and pty.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_getattr_user_terminals',`
+	gen_require(`
+		type user_tty_device_t, user_devpts_t;
+	')
+
+	allow $1 { user_tty_device_t user_devpts_t }:chr_file getattr_chr_file_perms;
 ')
 
 ########################################
@@ -2815,69 +3549,68 @@ interface(`userdom_spec_domtrans_unpriv_users',`
 	allow unpriv_userdomain $1:process sigchld;
 ')
 
-########################################
+#####################################
 ## <summary>
-##	Execute an Xserver session in all unprivileged user domains.  This
-##	is an explicit transition, requiring the
-##	caller to use setexeccon().
+##  Allow domain dyntrans to unpriv userdomain.
 ## </summary>
 ## <param name="domain">
-##	<summary>
-##	Domain allowed to transition.
-##	</summary>
+##  <summary>
+##  Domain allowed access.
+##  </summary>
 ## </param>
 #
-interface(`userdom_xsession_spec_domtrans_unpriv_users',`
-	gen_require(`
-		attribute unpriv_userdomain;
-	')
+interface(`userdom_dyntransition_unpriv_users',`
+    gen_require(`
+        attribute unpriv_userdomain;
+    ')
 
-	xserver_xsession_spec_domtrans($1, unpriv_userdomain)
-	allow unpriv_userdomain $1:fd use;
-	allow unpriv_userdomain $1:fifo_file rw_file_perms;
-	allow unpriv_userdomain $1:process sigchld;
+    allow $1 unpriv_userdomain:process dyntransition;
 ')
 
-#######################################
+####################################
 ## <summary>
-##	Read and write unpriviledged user SysV sempaphores.
+##  Allow domain dyntrans to admin userdomain.
 ## </summary>
 ## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
+##  <summary>
+##  Domain allowed access.
+##  </summary>
 ## </param>
 #
-interface(`userdom_rw_unpriv_user_semaphores',`
-	gen_require(`
-		attribute unpriv_userdomain;
-	')
+interface(`userdom_dyntransition_admin_users',`
+    gen_require(`
+        attribute admindomain;
+    ')
 
-	allow $1 unpriv_userdomain:sem rw_sem_perms;
+    allow $1 admindomain:process dyntransition;
 ')
 
 ########################################
 ## <summary>
-##	Manage unpriviledged user SysV sempaphores.
+##	Execute an Xserver session in all unprivileged user domains.  This
+##	is an explicit transition, requiring the
+##	caller to use setexeccon().
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain allowed to transition.
 ##	</summary>
 ## </param>
 #
-interface(`userdom_manage_unpriv_user_semaphores',`
+interface(`userdom_xsession_spec_domtrans_unpriv_users',`
 	gen_require(`
 		attribute unpriv_userdomain;
 	')
 
-	allow $1 unpriv_userdomain:sem create_sem_perms;
+	xserver_xsession_spec_domtrans($1, unpriv_userdomain)
+	allow unpriv_userdomain $1:fd use;
+	allow unpriv_userdomain $1:fifo_file rw_file_perms;
+	allow unpriv_userdomain $1:process sigchld;
 ')
 
-#######################################
+########################################
 ## <summary>
-##	Read and write unpriviledged user SysV shared
-##	memory segments.
+##	Manage unpriviledged user SysV sempaphores.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -2885,12 +3618,12 @@ interface(`userdom_manage_unpriv_user_semaphores',`
 ##	</summary>
 ## </param>
 #
-interface(`userdom_rw_unpriv_user_shared_mem',`
+interface(`userdom_manage_unpriv_user_semaphores',`
 	gen_require(`
 		attribute unpriv_userdomain;
 	')
 
-	allow $1 unpriv_userdomain:shm rw_shm_perms;
+	allow $1 unpriv_userdomain:sem create_sem_perms;
 ')
 
 ########################################
@@ -2954,7 +3687,7 @@ interface(`userdom_entry_spec_domtrans_unpriv_users',`
 
 	domain_entry_file_spec_domtrans($1, unpriv_userdomain)
 	allow unpriv_userdomain $1:fd use;
-	allow unpriv_userdomain $1:fifo_file rw_file_perms;
+	allow unpriv_userdomain $1:fifo_file rw_fifo_file_perms;
 	allow unpriv_userdomain $1:process sigchld;
 ')
 
@@ -2970,29 +3703,13 @@ interface(`userdom_entry_spec_domtrans_unpriv_users',`
 #
 interface(`userdom_search_user_home_content',`
 	gen_require(`
-		type user_home_dir_t, user_home_t;
+		type user_home_dir_t;
+		attribute user_home_type;
 	')
 
 	files_list_home($1)
-	allow $1 { user_home_dir_t user_home_t }:dir search_dir_perms;
-')
-
-########################################
-## <summary>
-##	Send signull to unprivileged user domains.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`userdom_signull_unpriv_users',`
-	gen_require(`
-		attribute unpriv_userdomain;
-	')
-
-	allow $1 unpriv_userdomain:process signull;
+	allow $1 { user_home_dir_t user_home_type }:dir search_dir_perms;
+	allow $1 { user_home_dir_t user_home_type }:lnk_file read_lnk_file_perms;
 ')
 
 ########################################
@@ -3074,7 +3791,7 @@ interface(`userdom_dontaudit_use_user_ptys',`
 		type user_devpts_t;
 	')
 
-	dontaudit $1 user_devpts_t:chr_file rw_file_perms;
+	dontaudit $1 user_devpts_t:chr_file rw_inherited_file_perms;
 ')
 
 ########################################
@@ -3129,7 +3846,45 @@ interface(`userdom_write_user_tmp_files',`
 		type user_tmp_t;
 	')
 
-	allow $1 user_tmp_t:file write_file_perms;
+	write_files_pattern($1, user_tmp_t, user_tmp_t)
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to write users
+##	temporary files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaudit_write_user_tmp_files',`
+	gen_require(`
+		type user_tmp_t;
+	')
+
+	dontaudit $1 user_tmp_t:file write;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read/write users
+##	temporary fifo files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaudit_rw_user_tmp_pipes',`
+	gen_require(`
+		type user_tmp_t;
+	')
+
+	dontaudit $1 user_tmp_t:fifo_file rw_inherited_fifo_file_perms;
 ')
 
 ########################################
@@ -3147,7 +3902,7 @@ interface(`userdom_dontaudit_use_user_ttys',`
 		type user_tty_device_t;
 	')
 
-	dontaudit $1 user_tty_device_t:chr_file rw_file_perms;
+	dontaudit $1 user_tty_device_t:chr_file rw_inherited_file_perms;
 ')
 
 ########################################
@@ -3166,6 +3921,7 @@ interface(`userdom_read_all_users_state',`
 	')
 
 	read_files_pattern($1, userdomain, userdomain)
+	read_lnk_files_pattern($1,userdomain,userdomain)
 	kernel_search_proc($1)
 ')
 
@@ -3242,6 +3998,42 @@ interface(`userdom_signal_all_users',`
 	allow $1 userdomain:process signal;
 ')
 
+#######################################
+## <summary>
+##  Send signull to all user domains.
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+interface(`userdom_signull_all_users',`
+    gen_require(`
+        attribute userdomain;
+    ')
+
+    allow $1 userdomain:process signull;
+')
+
+########################################
+## <summary>
+##	Send kill signals to all user domains.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_kill_all_users',`
+	gen_require(`
+		attribute userdomain;
+	')
+
+	allow $1 userdomain:process sigkill;
+')
+
 ########################################
 ## <summary>
 ##	Send a SIGCHLD signal to all user domains.
@@ -3262,6 +4054,24 @@ interface(`userdom_sigchld_all_users',`
 
 ########################################
 ## <summary>
+##	Read keys for all user domains.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_read_all_users_keys',`
+	gen_require(`
+		attribute userdomain;
+	')
+
+	allow $1 userdomain:key read;
+')
+
+########################################
+## <summary>
 ##	Create keys for all user domains.
 ## </summary>
 ## <param name="domain">
@@ -3296,3 +4106,1292 @@ interface(`userdom_dbus_send_all_users',`
 
 	allow $1 userdomain:dbus send_msg;
 ')
+
+########################################
+## <summary>
+##	Allow apps to set rlimits on userdomain
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_set_rlimitnh',`
+	gen_require(`
+		attribute userdomain;
+	')
+
+	allow $1 userdomain:process rlimitinh;
+')
+
+########################################
+## <summary>
+##	Define this type as a Allow apps to set rlimits on userdomain
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="userdomain_prefix">
+##	<summary>
+##	The prefix of the user domain (e.g., user
+##	is the prefix for user_t).
+## </summary>
+## </param>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+template(`userdom_unpriv_usertype',`
+	gen_require(`
+		attribute unpriv_userdomain, userdomain;
+		attribute $1_usertype;
+	')
+	typeattribute $2  $1_usertype;
+	typeattribute $2  unpriv_userdomain;
+	typeattribute $2  userdomain;
+	
+	auth_use_nsswitch($2)
+	ubac_constrained($2)
+')
+
+#######################################
+## <summary>
+##  Define this type as a Allow apps to set rlimits on userdomain
+## </summary>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+## <param name="userdomain_prefix">
+##  <summary>
+##  The prefix of the user domain (e.g., user
+##  is the prefix for user_t).
+## </summary>
+## </param>
+## <param name="domain">
+##  <summary>
+##  Domain allowed access.
+##  </summary>
+## </param>
+#
+template(`userdom_unpriv_type',`
+    gen_require(`
+        attribute unpriv_userdomain, userdomain;
+    ')
+    typeattribute $2  unpriv_userdomain;
+    typeattribute $2  userdomain;
+
+    auth_use_nsswitch($2)
+    ubac_constrained($2)
+')
+
+########################################
+## <summary>
+##	Connect to users over a unix stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_stream_connect',`
+	gen_require(`
+		type user_tmp_t;
+		attribute userdomain;
+	')
+
+	stream_connect_pattern($1, user_tmp_t, user_tmp_t, userdomain)
+')
+
+########################################
+## <summary>
+##	Ptrace user domains.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_ptrace_all_users',`
+	gen_require(`
+		attribute userdomain;
+	')
+
+	tunable_policy(`deny_ptrace',`',`
+		allow $1 userdomain:process ptrace;
+	')
+')
+
+########################################
+## <summary>
+##	dontaudit Search /root
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaudit_search_admin_dir',`
+	gen_require(`
+		type admin_home_t;
+	')
+
+	dontaudit $1 admin_home_t:dir search_dir_perms;
+')
+
+########################################
+## <summary>
+##	dontaudit list /root
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaudit_list_admin_dir',`
+	gen_require(`
+		type admin_home_t;
+	')
+
+	dontaudit $1 admin_home_t:dir list_dir_perms;
+')
+
+########################################
+## <summary>
+##	Allow domain to  list /root
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_list_admin_dir',`
+	gen_require(`
+		type admin_home_t;
+	')
+
+	allow $1 admin_home_t:dir list_dir_perms;
+')
+
+########################################
+## <summary>
+##	Allow Search /root
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_search_admin_dir',`
+	gen_require(`
+		type admin_home_t;
+	')
+
+	allow $1 admin_home_t:dir search_dir_perms;
+')
+
+########################################
+## <summary>
+##	RW unpriviledged user SysV sempaphores.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_rw_semaphores',`
+	gen_require(`
+		attribute unpriv_userdomain;
+	')
+
+	allow $1 unpriv_userdomain:sem rw_sem_perms;
+')
+
+########################################
+## <summary>
+##	Send a message to unpriv users over a unix domain
+##	datagram socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_dgram_send',`
+	gen_require(`
+		attribute unpriv_userdomain;
+	')
+
+	allow $1 unpriv_userdomain:unix_dgram_socket sendto;
+')
+
+######################################
+## <summary>
+##      Send a message to users over a unix domain
+##      datagram socket.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+#
+interface(`userdom_users_dgram_send',`
+        gen_require(`
+                 attribute userdomain;
+      ')
+
+       allow $1 userdomain:unix_dgram_socket sendto;
+')
+
+#######################################
+## <summary>
+##	Allow execmod on files in homedirectory 
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolebase/>
+#
+interface(`userdom_execmod_user_home_files',`
+	gen_require(`
+		type user_home_type;
+	')
+
+	allow $1 user_home_type:file execmod;
+')
+
+########################################
+## <summary>
+##	Read admin home files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`userdom_read_admin_home_files',`
+	gen_require(`
+		type admin_home_t;
+	')
+
+	read_files_pattern($1, admin_home_t, admin_home_t)
+')
+
+########################################
+## <summary>
+##	Delete admin home files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`userdom_delete_admin_home_files',`
+	gen_require(`
+		type admin_home_t;
+	')
+
+	allow $1 admin_home_t:file delete_file_perms;
+')
+
+########################################
+## <summary>
+##	Execute admin home files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`userdom_exec_admin_home_files',`
+	gen_require(`
+		type admin_home_t;
+	')
+
+	exec_files_pattern($1, admin_home_t, admin_home_t)
+')
+
+########################################
+## <summary>
+##	Append files inherited
+##	in the /root directory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_inherit_append_admin_home_files',`
+	gen_require(`
+		type admin_home_t;
+	')
+
+	allow $1 admin_home_t:file { getattr append };
+')
+
+
+#######################################
+## <summary>
+##	Manage all files/directories in the homedir
+## </summary>
+## <param name="userdomain">
+##	<summary>
+##	The user domain
+##	</summary>
+## </param>
+## <rolebase/>
+#
+interface(`userdom_manage_user_home_content',`
+	gen_require(`
+		type user_home_dir_t, user_home_t;
+		attribute user_home_type;
+	')
+
+	files_list_home($1)
+	manage_dirs_pattern($1, { user_home_dir_t user_home_type }, user_home_type)
+	manage_files_pattern($1, { user_home_dir_t user_home_type }, user_home_type)
+	manage_lnk_files_pattern($1, { user_home_dir_t user_home_type }, user_home_type)
+	manage_sock_files_pattern($1, { user_home_dir_t user_home_type }, user_home_type)
+	manage_fifo_files_pattern($1, { user_home_dir_t user_home_type }, user_home_type)
+	filetrans_pattern($1, user_home_dir_t, user_home_t, { dir file lnk_file sock_file fifo_file })
+
+')
+
+
+########################################
+## <summary>
+##	Create objects in a user home directory
+##	with an automatic type transition to
+##	the user home file type.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="object_class">
+##	<summary>
+##	The class of the object to be created.
+##	</summary>
+## </param>
+#
+interface(`userdom_user_home_dir_filetrans_pattern',`
+	gen_require(`
+		type user_home_dir_t, user_home_t;
+	')
+
+	type_transition $1 user_home_dir_t:$2 user_home_t;
+')
+
+########################################
+## <summary>
+##	Create objects in the /root directory
+##	with an automatic type transition to
+##	a specified private type.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="private_type">
+##	<summary>
+##	The type of the object to create.
+##	</summary>
+## </param>
+## <param name="object_class">
+##	<summary>
+##	The class of the object to be created.
+##	</summary>
+## </param>
+#
+interface(`userdom_admin_home_dir_filetrans',`
+	gen_require(`
+		type admin_home_t;
+	')
+
+	filetrans_pattern($1, admin_home_t, $2, $3, $4)
+')
+
+########################################
+## <summary>
+##	Send signull to unprivileged user domains.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_signull_unpriv_users',`
+	gen_require(`
+		attribute unpriv_userdomain;
+	')
+
+	allow $1 unpriv_userdomain:process signull;
+')
+
+########################################
+## <summary>
+##	Write all users files in /tmp
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_write_user_tmp_dirs',`
+	gen_require(`
+		type user_tmp_t;
+	')
+
+	write_files_pattern($1, user_tmp_t, user_tmp_t)
+')
+
+########################################
+## <summary>
+##	Manage keys for all user domains.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_manage_all_users_keys',`
+	gen_require(`
+		attribute userdomain;
+	')
+
+	allow $1 userdomain:key manage_key_perms;
+')
+
+
+########################################
+## <summary>
+##	Do not audit attempts to read and write
+##	unserdomain stream.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaudit_rw_stream',`
+	gen_require(`
+		attribute userdomain;
+	')
+
+	dontaudit $1 userdomain:unix_stream_socket rw_socket_perms;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read and write
+##	unserdomain datagram socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaudit_rw_dgram_socket',`
+	gen_require(`
+		attribute userdomain;
+	')
+
+	dontaudit $1 userdomain:unix_dgram_socket { read write };
+')
+
+########################################
+## <summary>
+##	Append files
+##	in a user home subdirectory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_append_user_home_content_files',`
+	gen_require(`
+		type user_home_dir_t, user_home_t;
+	')
+
+	append_files_pattern($1, user_home_t, user_home_t)
+	allow $1 user_home_dir_t:dir search_dir_perms;
+	files_search_home($1)
+')
+
+########################################
+## <summary>
+##	Read files inherited
+##	in a user home subdirectory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_read_inherited_user_home_content_files',`
+	gen_require(`
+		attribute user_home_type;
+	')
+
+	allow $1 user_home_type:file { getattr read };
+')
+
+########################################
+## <summary>
+##	Read/Write files inherited
+##	in a user home subdirectory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_rw_inherited_user_home_content_files',`
+	gen_require(`
+		attribute user_home_type;
+	')
+
+	allow $1 user_home_type:file rw_inherited_file_perms;
+')
+
+########################################
+## <summary>
+##	Append files inherited
+##	in a user home subdirectory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_inherit_append_user_home_content_files',`
+	gen_require(`
+		type user_home_t;
+	')
+
+	allow $1 user_home_t:file { getattr append };
+')
+
+########################################
+## <summary>
+##	Append files inherited
+##	in a user tmp files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_inherit_append_user_tmp_files',`
+	gen_require(`
+		type user_tmp_t;
+	')
+
+	allow $1 user_tmp_t:file { getattr append };
+')
+
+######################################
+## <summary>
+##      Read audio files in the users homedir.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain allowed access.
+##      </summary>
+## </param>
+## <rolecap/>
+#
+interface(`userdom_read_home_audio_files',`
+        gen_require(`
+                type audio_home_t;
+        ')
+
+        userdom_search_user_home_dirs($1)
+        allow $1 audio_home_t:dir list_dir_perms;
+        read_files_pattern($1, audio_home_t, audio_home_t)
+        read_lnk_files_pattern($1, audio_home_t, audio_home_t)
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to write all user home content files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaudit_write_all_user_home_content_files',`
+	gen_require(`
+		attribute user_home_type;
+	')
+
+	dontaudit $1 user_home_type:file write_file_perms;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to write all user tmp content files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaudit_write_all_user_tmp_content_files',`
+	gen_require(`
+		attribute user_tmp_type;
+	')
+
+	dontaudit $1 user_tmp_type:file write_file_perms;
+')
+
+########################################
+## <summary>
+##	Manage all user temporary content.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_manage_all_user_tmp_content',`
+	gen_require(`
+		attribute user_tmp_type;
+	')
+
+	manage_dirs_pattern($1, user_tmp_type, user_tmp_type)
+	manage_files_pattern($1, user_tmp_type, user_tmp_type)
+	manage_lnk_files_pattern($1, user_tmp_type, user_tmp_type)
+	manage_sock_files_pattern($1, user_tmp_type, user_tmp_type)
+	manage_fifo_files_pattern($1, user_tmp_type, user_tmp_type)
+	files_search_tmp($1)
+')
+
+########################################
+## <summary>
+##	List all user temporary content.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_list_all_user_tmp_content',`
+	gen_require(`
+		attribute user_tmp_type;
+	')
+
+	list_dirs_pattern($1, user_tmp_type, user_tmp_type)
+	getattr_files_pattern($1, user_tmp_type, user_tmp_type)
+	read_lnk_files_pattern($1, user_tmp_type, user_tmp_type)
+	getattr_sock_files_pattern($1, user_tmp_type, user_tmp_type)
+	getattr_fifo_files_pattern($1, user_tmp_type, user_tmp_type)
+	files_search_var($1)
+	files_search_tmp($1)
+')
+
+########################################
+## <summary>
+##	Manage all user tmpfs content.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_manage_all_user_tmpfs_content',`
+	gen_require(`
+		attribute user_tmpfs_type;
+	')
+
+	manage_dirs_pattern($1, user_tmpfs_type, user_tmpfs_type)
+	manage_files_pattern($1, user_tmpfs_type, user_tmpfs_type)
+	manage_lnk_files_pattern($1, user_tmpfs_type, user_tmpfs_type)
+	manage_sock_files_pattern($1, user_tmpfs_type, user_tmpfs_type)
+	manage_fifo_files_pattern($1, user_tmpfs_type, user_tmpfs_type)
+	fs_search_tmpfs($1)
+')
+
+########################################
+## <summary>
+##	Delete all user temporary content.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_delete_all_user_tmp_content',`
+	gen_require(`
+		attribute user_tmp_type;
+	')
+
+	delete_dirs_pattern($1, user_tmp_type, user_tmp_type)
+	delete_files_pattern($1, user_tmp_type, user_tmp_type)
+	delete_lnk_files_pattern($1, user_tmp_type, user_tmp_type)
+	delete_sock_files_pattern($1, user_tmp_type, user_tmp_type)
+	delete_fifo_files_pattern($1, user_tmp_type, user_tmp_type)
+	# /var/tmp
+	files_search_var($1)
+	files_delete_tmp_dir_entry($1)
+')
+
+########################################
+## <summary>
+##	Read system SSL certificates in the users homedir.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_read_home_certs',`
+	gen_require(`
+		type home_cert_t;
+	')
+
+	userdom_search_user_home_content($1)
+	allow $1 home_cert_t:dir list_dir_perms;
+	read_files_pattern($1, home_cert_t, home_cert_t)
+	read_lnk_files_pattern($1, home_cert_t, home_cert_t)
+')
+
+########################################
+## <summary>
+##	Manage system SSL certificates in the users homedir.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_manage_home_certs',`
+	gen_require(`
+		type home_cert_t;
+	')
+
+	allow $1 home_cert_t:dir list_dir_perms;
+	manage_dirs_pattern($1, home_cert_t, home_cert_t)
+	manage_files_pattern($1, home_cert_t, home_cert_t)
+	manage_lnk_files_pattern($1, home_cert_t, home_cert_t)
+
+	userdom_user_home_dir_filetrans($1, home_cert_t, dir, ".cert")
+	userdom_user_home_dir_filetrans($1, home_cert_t, dir, ".pki")
+')
+
+#######################################
+## <summary>
+##  Dontaudit Write system SSL certificates in the users homedir.
+## </summary>
+## <param name="domain">
+##  <summary>
+##	Domain to not audit.
+##  </summary>
+## </param>
+#
+interface(`userdom_dontaudit_write_home_certs',`
+    gen_require(`
+        type home_cert_t;
+    ')
+
+    dontaudit $1 home_cert_t:file write;
+')
+
+########################################
+## <summary>
+##	dontaudit Search getatrr /root files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaudit_getattr_admin_home_files',`
+	gen_require(`
+		type admin_home_t;
+	')
+
+	dontaudit $1 admin_home_t:file getattr;
+')
+
+########################################
+## <summary>
+##	dontaudit read /root lnk files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaudit_read_admin_home_lnk_files',`
+	gen_require(`
+		type admin_home_t;
+	')
+
+	dontaudit $1 admin_home_t:lnk_file read;
+')
+
+########################################
+## <summary>
+##	dontaudit read /root files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaudit_read_admin_home_files',`
+	gen_require(`
+		type admin_home_t;
+	')
+
+	dontaudit $1 admin_home_t:file read_file_perms;
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete user
+##	temporary chr files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_manage_user_tmp_chr_files',`
+	gen_require(`
+		type user_tmp_t;
+	')
+
+	manage_chr_files_pattern($1, user_tmp_t, user_tmp_t)
+	files_search_tmp($1)
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete user
+##	temporary blk files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_manage_user_tmp_blk_files',`
+	gen_require(`
+		type user_tmp_t;
+	')
+
+	manage_blk_files_pattern($1, user_tmp_t, user_tmp_t)
+	files_search_tmp($1)
+')
+
+########################################
+## <summary>
+##	Dontaudit attempt to set attributes on  user temporary directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaudit_setattr_user_tmp',`
+	gen_require(`
+		type user_tmp_t;
+	')
+
+	dontaudit $1 user_tmp_t:dir setattr;
+')
+
+########################################
+## <summary>
+##	Read all inherited users files in /tmp
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_read_inherited_user_tmp_files',`
+	gen_require(`
+		type user_tmp_t;
+	')
+
+	allow $1 user_tmp_t:file read_inherited_file_perms;
+')
+
+########################################
+## <summary>
+##	Read/write all inherited users files in /tmp
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_rw_inherited_user_tmp_files',`
+	gen_require(`
+		type user_tmp_t;
+	')
+
+	allow $1 user_tmp_t:file rw_inherited_file_perms;
+')
+
+########################################
+## <summary>
+##	Write all inherited users files in /tmp
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_write_inherited_user_tmp_files',`
+	gen_require(`
+		type user_tmp_t;
+	')
+
+	allow $1 user_tmp_t:file write;
+')
+
+########################################
+## <summary>
+##	Write all inherited users home files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_rw_inherited_user_home_sock_files',`
+	gen_require(`
+		type user_home_t;
+	')
+
+	allow $1 user_home_t:sock_file write;
+')
+
+########################################
+## <summary>
+##	Delete all users files in /tmp
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_delete_user_tmp_files',`
+	gen_require(`
+		type user_tmp_t;
+	')
+
+	allow $1 user_tmp_t:file delete_file_perms;
+')
+
+########################################
+## <summary>
+##	Delete user tmpfs files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_delete_user_tmpfs_files',`
+	gen_require(`
+		type user_tmpfs_t;
+	')
+
+	allow $1 user_tmpfs_t:file delete_file_perms;
+')
+
+########################################
+## <summary>
+##	Read/Write unpriviledged user SysV shared
+##	memory segments.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_rw_unpriv_user_shared_mem',`
+	gen_require(`
+		attribute unpriv_userdomain;
+	')
+
+	allow $1 unpriv_userdomain:shm rw_shm_perms;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to search user
+##	temporary directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaudit_search_user_tmp',`
+	gen_require(`
+		type user_tmp_t;
+	')
+
+	dontaudit $1 user_tmp_t:dir search_dir_perms;
+')
+
+########################################
+## <summary>
+##	Execute a file in a user home directory
+##	in the specified domain.
+## </summary>
+## <desc>
+##	<p>
+##	Execute a file in a user home directory
+##	in the specified domain.
+##	</p>
+##	<p>
+##	No interprocess communication (signals, pipes,
+##	etc.) is provided by this interface since
+##	the domains are not owned by this module.
+##	</p>
+## </desc>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="target_domain">
+##	<summary>
+##	The type of the new process.
+##	</summary>
+## </param>
+#
+interface(`userdom_domtrans_user_home',`
+	gen_require(`
+		type user_home_t;
+	')
+
+	read_lnk_files_pattern($1, user_home_t, user_home_t)
+	domain_transition_pattern($1, user_home_t, $2)
+	type_transition $1 user_home_t:process $2;
+')
+
+########################################
+## <summary>
+##	Execute a file in a user tmp directory
+##	in the specified domain.
+## </summary>
+## <desc>
+##	<p>
+##	Execute a file in a user tmp directory
+##	in the specified domain.
+##	</p>
+##	<p>
+##	No interprocess communication (signals, pipes,
+##	etc.) is provided by this interface since
+##	the domains are not owned by this module.
+##	</p>
+## </desc>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="target_domain">
+##	<summary>
+##	The type of the new process.
+##	</summary>
+## </param>
+#
+interface(`userdom_domtrans_user_tmp',`
+	gen_require(`
+		type user_tmp_t;
+	')
+
+	files_search_tmp($1)
+	read_lnk_files_pattern($1, user_tmp_t, user_tmp_t)
+	domain_transition_pattern($1, user_tmp_t, $2)
+	type_transition $1 user_tmp_t:process $2;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read all user home content files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaudit_read_all_user_home_content_files',`
+	gen_require(`
+		attribute user_home_type;
+	')
+
+	dontaudit $1 user_home_type:file read_file_perms;
+')
+
+########################################
+## <summary>
+##	Do not audit attempts to read all user tmp content files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`userdom_dontaudit_read_all_user_tmp_content_files',`
+	gen_require(`
+		attribute user_tmp_type;
+	')
+
+	dontaudit $1 user_tmp_type:file read_file_perms;
+')
+
+#######################################
+## <summary>
+## Read and write unpriviledged user SysV sempaphores.
+## </summary>
+## <param name="domain">
+## <summary>
+## Domain allowed access.
+## </summary>
+## </param>
+#
+interface(`userdom_rw_unpriv_user_semaphores',`
+   gen_require(`
+       attribute unpriv_userdomain;
+   ')
+
+   allow $1 unpriv_userdomain:sem rw_sem_perms;
+')
+
+########################################
+## <summary>
+##	Transition to userdom named content
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_filetrans_home_content',`
+	gen_require(`
+		type home_bin_t, home_cert_t;
+		type audio_home_t;
+	')
+
+	userdom_user_home_dir_filetrans($1, home_bin_t, dir, "bin")
+	userdom_user_home_dir_filetrans($1, audio_home_t, dir, "Audio")
+	userdom_user_home_dir_filetrans($1, audio_home_t, dir, "Music")
+	userdom_user_home_dir_filetrans($1, home_cert_t, dir, ".cert")
+	userdom_user_home_dir_filetrans($1, home_cert_t, dir, ".pki")
+	userdom_user_home_dir_filetrans($1, home_cert_t, dir, "certificates")
+	gnome_config_filetrans($1, home_cert_t, dir, "certificates")
+
+	#optional_policy(`
+	#	gnome_admin_home_gconf_filetrans($1, home_bin_t, dir, "bin")
+	#')
+')
+
+########################################
+## <summary>
+##	Make the specified type able to read content in user home dirs
+## </summary>
+## <param name="type">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_home_reader',`
+	gen_require(`
+		attribute userdom_home_reader_type;
+	')
+
+	typeattribute $1 userdom_home_reader_type;
+')
+
+
+########################################
+## <summary>
+##	Make the specified type able to manage content in user home dirs
+## </summary>
+## <param name="type">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`userdom_home_manager',`
+	gen_require(`
+		attribute userdom_home_manager_type;
+	')
+
+	typeattribute $1 userdom_home_manager_type;
+')
diff --git a/policy/modules/system/userdomain.te b/policy/modules/system/userdomain.te
index 47efe9a..55dc5cc 100644
--- a/policy/modules/system/userdomain.te
+++ b/policy/modules/system/userdomain.te
@@ -7,17 +7,17 @@ policy_module(userdomain, 4.7.2)
 
 ## <desc>
 ## <p>
-## Allow users to connect to mysql
+## Allow users to connect to the local mysql server
 ## </p>
 ## </desc>
-gen_tunable(allow_user_mysql_connect, false)
+gen_tunable(user_mysql_connect, false)
 
 ## <desc>
 ## <p>
 ## Allow users to connect to PostgreSQL
 ## </p>
 ## </desc>
-gen_tunable(allow_user_postgresql_connect, false)
+gen_tunable(user_postgresql_connect, false)
 
 ## <desc>
 ## <p>
@@ -43,12 +43,27 @@ gen_tunable(user_rw_noexattrfile, false)
 
 ## <desc>
 ## <p>
+## Allow user music sharing
+## </p>
+## </desc>
+gen_tunable(user_share_music, false)
+
+## <desc>
+## <p>
+## Allow user processes to change their priority 
+## </p>
+## </desc>
+gen_tunable(user_setrlimit, false)
+
+## <desc>
+## <p>
 ## Allow w to display everyone
 ## </p>
 ## </desc>
 gen_tunable(user_ttyfile_stat, false)
 
 attribute admindomain;
+attribute login_userdomain;
 
 # all user domains
 attribute userdomain;
@@ -59,6 +74,22 @@ attribute unpriv_userdomain;
 attribute untrusted_content_type;
 attribute untrusted_content_tmp_type;
 
+attribute userdom_home_reader_type;
+attribute userdom_home_manager_type;
+
+# unprivileged user domains
+attribute user_home_type;
+attribute user_tmp_type;
+attribute user_tmpfs_type;
+
+type admin_home_t;
+files_type(admin_home_t)
+files_associate_tmp(admin_home_t)
+fs_associate_tmpfs(admin_home_t)
+files_mountpoint(admin_home_t)
+files_poly_member(admin_home_t)
+files_poly_parent(admin_home_t)
+
 type user_home_dir_t alias { staff_home_dir_t sysadm_home_dir_t secadm_home_dir_t auditadm_home_dir_t unconfined_home_dir_t };
 fs_associate_tmpfs(user_home_dir_t)
 files_type(user_home_dir_t)
@@ -71,26 +102,111 @@ ubac_constrained(user_home_dir_t)
 
 type user_home_t alias { staff_home_t sysadm_home_t secadm_home_t auditadm_home_t unconfined_home_t };
 typealias user_home_t alias { staff_untrusted_content_t sysadm_untrusted_content_t secadm_untrusted_content_t auditadm_untrusted_content_t unconfined_untrusted_content_t };
+typeattribute user_home_t user_home_type;
 userdom_user_home_content(user_home_t)
 fs_associate_tmpfs(user_home_t)
 files_associate_tmp(user_home_t)
+files_poly_member(user_home_t)
 files_poly_parent(user_home_t)
 files_mountpoint(user_home_t)
+ubac_constrained(user_home_t)
 
 type user_devpts_t alias { staff_devpts_t sysadm_devpts_t secadm_devpts_t auditadm_devpts_t unconfined_devpts_t };
 dev_node(user_devpts_t)
 files_type(user_devpts_t)
 ubac_constrained(user_devpts_t)
 
-type user_tmp_t alias { staff_tmp_t sysadm_tmp_t secadm_tmp_t auditadm_tmp_t unconfined_tmp_t };
+type user_tmp_t, user_tmp_type;
+typealias user_tmp_t alias { winbind_tmp_t sshd_tmp_t staff_tmp_t sysadm_tmp_t secadm_tmp_t auditadm_tmp_t unconfined_tmp_t };
 typealias user_tmp_t alias { staff_untrusted_content_tmp_t sysadm_untrusted_content_tmp_t secadm_untrusted_content_tmp_t auditadm_untrusted_content_tmp_t unconfined_untrusted_content_tmp_t };
 files_tmp_file(user_tmp_t)
 userdom_user_home_content(user_tmp_t)
+files_poly_parent(user_tmp_t)
 
-type user_tmpfs_t alias { staff_tmpfs_t sysadm_tmpfs_t secadm_tmpfs_t auditadm_tmpfs_t unconfined_tmpfs_t };
+type user_tmpfs_t, user_tmpfs_type;
+typealias user_tmpfs_t alias { staff_tmpfs_t sysadm_tmpfs_t secadm_tmpfs_t auditadm_tmpfs_t unconfined_tmpfs_t };
 files_tmpfs_file(user_tmpfs_t)
 userdom_user_home_content(user_tmpfs_t)
 
 type user_tty_device_t alias { staff_tty_device_t sysadm_tty_device_t secadm_tty_device_t auditadm_tty_device_t unconfined_tty_device_t };
 dev_node(user_tty_device_t)
 ubac_constrained(user_tty_device_t)
+
+type audio_home_t;
+userdom_user_home_content(audio_home_t)
+ubac_constrained(audio_home_t)
+
+type home_bin_t;
+userdom_user_home_content(home_bin_t)
+ubac_constrained(home_bin_t)
+
+type home_cert_t;
+miscfiles_cert_type(home_cert_t)
+userdom_user_home_content(home_cert_t)
+ubac_constrained(home_cert_t)
+
+tunable_policy(`login_console_enabled',`
+	term_use_console(userdomain)
+')
+
+allow userdomain userdomain:process signull;
+
+# Nautilus causes this avc
+dontaudit unpriv_userdomain self:dir setattr;
+allow unpriv_userdomain self:key manage_key_perms;
+
+optional_policy(`
+	alsa_read_rw_config(unpriv_userdomain)
+	alsa_manage_home_files(unpriv_userdomain)
+	alsa_relabel_home_files(unpriv_userdomain)
+')
+
+optional_policy(`
+	gnome_filetrans_home_content(userdomain)
+')
+
+optional_policy(`
+	ssh_filetrans_home_content(userdomain)
+	ssh_rw_tcp_sockets(userdomain)
+')
+
+optional_policy(`
+	telepathy_filetrans_home_content(userdomain)
+')
+
+optional_policy(`
+	xserver_filetrans_home_content(userdomain)
+')
+
+
+tunable_policy(`use_nfs_home_dirs',`
+    fs_read_nfs_files(userdom_home_reader_type)
+')
+
+tunable_policy(`use_samba_home_dirs',`
+    fs_read_cifs_files(userdom_home_reader_type)
+')
+
+tunable_policy(`use_fusefs_home_dirs',`
+    fs_read_fusefs_files(userdom_home_reader_type)
+')
+
+tunable_policy(`use_nfs_home_dirs',`
+    fs_list_auto_mountpoints(userdom_home_manager_type)
+    fs_manage_nfs_dirs(userdom_home_manager_type)
+    fs_manage_nfs_files(userdom_home_manager_type)
+    fs_manage_nfs_symlinks(userdom_home_manager_type)
+')
+
+tunable_policy(`use_samba_home_dirs',`
+    fs_manage_cifs_dirs(userdom_home_manager_type)
+    fs_manage_cifs_files(userdom_home_manager_type)
+    fs_manage_cifs_symlinks(userdom_home_manager_type)
+')
+
+tunable_policy(`use_fusefs_home_dirs',`
+    fs_manage_fusefs_dirs(userdom_home_manager_type)
+    fs_manage_fusefs_files(userdom_home_manager_type)
+    fs_manage_fusefs_symlinks(userdom_home_manager_type)
+')
+
diff --git a/policy/support/misc_patterns.spt b/policy/support/misc_patterns.spt
index e79d545..101086d 100644
--- a/policy/support/misc_patterns.spt
+++ b/policy/support/misc_patterns.spt
@@ -4,7 +4,7 @@
 define(`domain_transition_pattern',`
 	allow $1 $2:file { getattr open read execute };
 	allow $1 $3:process transition;
-	dontaudit $1 $3:process { noatsecure siginh rlimitinh };
+#	dontaudit $1 $3:process { noatsecure siginh rlimitinh };
 ')
 
 # compatibility:
@@ -15,7 +15,7 @@ define(`spec_domtrans_pattern',`
 	domain_transition_pattern($1,$2,$3)
 
 	allow $3 $1:fd use;
-	allow $3 $1:fifo_file rw_fifo_file_perms;
+	allow $3 $1:fifo_file rw_inherited_fifo_file_perms;
 	allow $3 $1:process sigchld;
 ')
 
@@ -34,7 +34,7 @@ define(`domtrans_pattern',`
 	domain_auto_transition_pattern($1,$2,$3)
 
 	allow $3 $1:fd use;
-	allow $3 $1:fifo_file rw_fifo_file_perms;
+	allow $3 $1:fifo_file rw_inherited_fifo_file_perms;
 	allow $3 $1:process sigchld;
 ')
 
diff --git a/policy/support/obj_perm_sets.spt b/policy/support/obj_perm_sets.spt
index 6e91317..34d96df 100644
--- a/policy/support/obj_perm_sets.spt
+++ b/policy/support/obj_perm_sets.spt
@@ -28,8 +28,7 @@ define(`devfile_class_set', `{ chr_file blk_file }')
 #
 # All socket classes.
 #
-define(`socket_class_set', `{ tcp_socket udp_socket rawip_socket netlink_socket packet_socket unix_stream_socket unix_dgram_socket appletalk_socket netlink_route_socket netlink_firewall_socket netlink_tcpdiag_socket netlink_nflog_socket netlink_xfrm_socket netlink_selinux_socket netlink_audit_socket netlink_ip6fw_socket netlink_dnrt_socket netlink_kobject_uevent_socket tun_socket }')
-
+define(`socket_class_set', `{ socket dccp_socket tcp_socket udp_socket rawip_socket netlink_socket packet_socket unix_stream_socket unix_dgram_socket appletalk_socket netlink_route_socket netlink_firewall_socket netlink_tcpdiag_socket netlink_nflog_socket netlink_xfrm_socket netlink_selinux_socket netlink_audit_socket netlink_ip6fw_socket netlink_dnrt_socket netlink_kobject_uevent_socket tun_socket }')
 
 #
 # Datagram socket classes.
@@ -59,7 +58,7 @@ define(`mount_fs_perms', `{ mount remount unmount getattr }')
 #
 # Permissions for using sockets.
 # 
-define(`rw_socket_perms', `{ ioctl read getattr write setattr append bind connect getopt setopt shutdown }')
+define(`rw_socket_perms', `{ ioctl read getattr lock write setattr append bind connect getopt setopt shutdown }')
 
 #
 # Permissions for creating and using sockets.
@@ -153,12 +152,15 @@ define(`relabel_dir_perms',`{ getattr relabelfrom relabelto }')
 #
 define(`getattr_file_perms',`{ getattr }')
 define(`setattr_file_perms',`{ setattr }')
-define(`read_file_perms',`{ getattr open read lock ioctl }')
+define(`read_inherited_file_perms',`{ getattr read ioctl lock }')
+define(`read_file_perms',`{ open read_inherited_file_perms }')
 define(`mmap_file_perms',`{ getattr open read execute ioctl }')
 define(`exec_file_perms',`{ getattr open read execute ioctl execute_no_trans }')
-define(`append_file_perms',`{ getattr open append lock ioctl }')
+define(`append_inherited_file_perms',`{ getattr append }')
+define(`append_file_perms',`{ open lock ioctl append_inherited_file_perms }')
 define(`write_file_perms',`{ getattr open write append lock ioctl }')
-define(`rw_file_perms',`{ getattr open read write append ioctl lock }')
+define(`rw_inherited_file_perms',`{ getattr read write append ioctl lock }')
+define(`rw_file_perms',`{ open rw_inherited_file_perms }')
 define(`create_file_perms',`{ getattr create open }')
 define(`rename_file_perms',`{ getattr rename }')
 define(`delete_file_perms',`{ getattr unlink }')
@@ -179,7 +181,7 @@ define(`rw_lnk_file_perms',`{ getattr read write lock ioctl }')
 define(`create_lnk_file_perms',`{ create getattr }')
 define(`rename_lnk_file_perms',`{ getattr rename }')
 define(`delete_lnk_file_perms',`{ getattr unlink }')
-define(`manage_lnk_file_perms',`{ create read write getattr setattr link unlink rename }')
+define(`manage_lnk_file_perms',`{ create getattr setattr read write append rename link unlink ioctl lock }')
 define(`relabelfrom_lnk_file_perms',`{ getattr relabelfrom }')
 define(`relabelto_lnk_file_perms',`{ getattr relabelto }')
 define(`relabel_lnk_file_perms',`{ getattr relabelfrom relabelto }')
@@ -192,7 +194,8 @@ define(`setattr_fifo_file_perms',`{ setattr }')
 define(`read_fifo_file_perms',`{ getattr open read lock ioctl }')
 define(`append_fifo_file_perms',`{ getattr open append lock ioctl }')
 define(`write_fifo_file_perms',`{ getattr open write append lock ioctl }')
-define(`rw_fifo_file_perms',`{ getattr open read write append ioctl lock }')
+define(`rw_inherited_fifo_file_perms',`{ getattr read write append ioctl lock }')
+define(`rw_fifo_file_perms',`{ open rw_inherited_fifo_file_perms }')
 define(`create_fifo_file_perms',`{ getattr create open }')
 define(`rename_fifo_file_perms',`{ getattr rename }')
 define(`delete_fifo_file_perms',`{ getattr unlink }')
@@ -208,7 +211,8 @@ define(`getattr_sock_file_perms',`{ getattr }')
 define(`setattr_sock_file_perms',`{ setattr }')
 define(`read_sock_file_perms',`{ getattr open read }')
 define(`write_sock_file_perms',`{ getattr write open append }')
-define(`rw_sock_file_perms',`{ getattr open read write append }')
+define(`rw_inherited_sock_file_perms',`{ getattr read write append }')
+define(`rw_sock_file_perms',`{ open rw_inherited_sock_file_perms }')
 define(`create_sock_file_perms',`{ getattr create open }')
 define(`rename_sock_file_perms',`{ getattr rename }')
 define(`delete_sock_file_perms',`{ getattr unlink }')
@@ -225,7 +229,8 @@ define(`setattr_blk_file_perms',`{ setattr }')
 define(`read_blk_file_perms',`{ getattr open read lock ioctl }')
 define(`append_blk_file_perms',`{ getattr open append lock ioctl }')
 define(`write_blk_file_perms',`{ getattr open write append lock ioctl }')
-define(`rw_blk_file_perms',`{ getattr open read write append ioctl lock }')
+define(`rw_inherited_blk_file_perms',`{ getattr read write append ioctl lock }')
+define(`rw_blk_file_perms',`{ open rw_inherited_blk_file_perms }')
 define(`create_blk_file_perms',`{ getattr create }')
 define(`rename_blk_file_perms',`{ getattr rename }')
 define(`delete_blk_file_perms',`{ getattr unlink }')
@@ -242,7 +247,8 @@ define(`setattr_chr_file_perms',`{ setattr }')
 define(`read_chr_file_perms',`{ getattr open read lock ioctl }')
 define(`append_chr_file_perms',`{ getattr open append lock ioctl }')
 define(`write_chr_file_perms',`{ getattr open write append lock ioctl }')
-define(`rw_chr_file_perms',`{ getattr open read write append ioctl lock }')
+define(`rw_inherited_chr_file_perms',`{ getattr read write append ioctl lock }')
+define(`rw_chr_file_perms',`{ open rw_inherited_chr_file_perms }')
 define(`create_chr_file_perms',`{ getattr create }')
 define(`rename_chr_file_perms',`{ getattr rename }')
 define(`delete_chr_file_perms',`{ getattr unlink }')
@@ -259,7 +265,8 @@ define(`relabel_chr_file_perms',`{ getattr relabelfrom relabelto }')
 #
 # Use (read and write) terminals
 #
-define(`rw_term_perms', `{ getattr open read write append ioctl }')
+define(`rw_inherited_term_perms', `{ getattr read write append ioctl }')
+define(`rw_term_perms', `{ rw_inherited_term_perms open }')
 
 #
 # Sockets
@@ -271,3 +278,20 @@ define(`server_stream_socket_perms', `{ client_stream_socket_perms listen accept
 # Keys
 #
 define(`manage_key_perms', `{ create link read search setattr view write } ')
+
+#
+# Service
+#
+define(`manage_service_perms', `{ start stop status reload kill load } ')
+
+#
+# All 
+#
+define(`all_capabilities', `{ chown dac_override dac_read_search fowner fsetid kill setgid setuid setpcap linux_immutable net_bind_service net_broadcast net_admin net_raw ipc_lock ipc_owner sys_module sys_rawio sys_chroot sys_ptrace sys_pacct sys_admin sys_boot sys_nice sys_resource sys_time sys_tty_config mknod lease audit_write audit_control setfcap }
+')
+
+define(`all_nscd_perms', `{ getserv getpwd getgrp gethost getstat admin shmempwd shmemgrp shmemhost shmemserv } ')
+define(`all_dbus_perms', `{ acquire_svc send_msg } ')
+define(`all_passwd_perms', `{ passwd chfn chsh rootok crontab } ')
+define(`all_service_perms', `{ enable disable manage_service_perms } ')
+define(`all_association_perms', `{ sendto recvfrom setcontext polmatch } ')
diff --git a/policy/users b/policy/users
index c4ebc7e..30d6d7a 100644
--- a/policy/users
+++ b/policy/users
@@ -15,7 +15,7 @@
 # and a user process should never be assigned the system user
 # identity.
 #
-gen_user(system_u,, system_r, s0, s0 - mls_systemhigh, mcs_allcats)
+gen_user(system_u,, system_r unconfined_r, s0, s0 - mls_systemhigh, mcs_allcats)
 
 #
 # user_u is a generic user identity for Linux users who have no
@@ -24,12 +24,9 @@ gen_user(system_u,, system_r, s0, s0 - mls_systemhigh, mcs_allcats)
 # SELinux user identity for a Linux user.  If you do not want to
 # permit any access to such users, then remove this entry.
 #
-gen_user(user_u, user, user_r, s0, s0)
-gen_user(staff_u, staff, staff_r sysadm_r ifdef(`enable_mls',`secadm_r auditadm_r'), s0, s0 - mls_systemhigh, mcs_allcats)
-gen_user(sysadm_u, sysadm, sysadm_r, s0, s0 - mls_systemhigh, mcs_allcats)
-
-# Until order dependence is fixed for users:
-gen_user(unconfined_u, unconfined, unconfined_r, s0, s0 - mls_systemhigh, mcs_allcats)
+gen_user(user_u, user, user_r, s0, s0 - mls_systemhigh, mcs_allcats)
+gen_user(staff_u, user, staff_r system_r sysadm_r ifdef(`enable_mls',`secadm_r auditadm_r'), s0, s0 - mls_systemhigh, mcs_allcats)
+gen_user(sysadm_u, user, sysadm_r, s0, s0 - mls_systemhigh, mcs_allcats)
 
 #
 # The following users correspond to Unix identities.
@@ -38,8 +35,4 @@ gen_user(unconfined_u, unconfined, unconfined_r, s0, s0 - mls_systemhigh, mcs_al
 # role should use the staff_r role instead of the user_r role when
 # not in the sysadm_r.
 #
-ifdef(`direct_sysadm_daemon',`
-	gen_user(root, sysadm, sysadm_r staff_r ifdef(`enable_mls',`secadm_r auditadm_r') system_r, s0, s0 - mls_systemhigh, mcs_allcats)
-',`
-	gen_user(root, sysadm, sysadm_r staff_r ifdef(`enable_mls',`secadm_r auditadm_r'), s0, s0 - mls_systemhigh, mcs_allcats)
-')
+gen_user(root, user, unconfined_r sysadm_r staff_r ifdef(`enable_mls',`secadm_r auditadm_r') system_r, s0, s0 - mls_systemhigh, mcs_allcats)
diff --git a/support/Makefile.devel b/support/Makefile.devel
index b96e9b3..ff7340f 100644
--- a/support/Makefile.devel
+++ b/support/Makefile.devel
@@ -26,7 +26,6 @@ XMLLINT := $(BINDIR)/xmllint
 # set default build options if missing
 TYPE ?= standard
 DIRECT_INITRC ?= n
-POLY ?= n
 QUIET ?= y
 
 genxml := $(PYTHON) $(HEADERDIR)/support/segenxml.py
